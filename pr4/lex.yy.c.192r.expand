
;; Function yy_state_type yy_get_previous_state() (_ZL21yy_get_previous_statev, funcdef_no=87, decl_uid=4292, cgraph_uid=87, symbol_order=114) (unlikely executed)

yy_state_type yy_get_previous_state() ()
{
  bool yy_last_accepting_cpos_lsm.163;
  char * yy_last_accepting_cpos_lsm.162;
  bool yy_last_accepting_state_lsm.161;
  yy_state_type yy_last_accepting_state_lsm.160;
  YY_CHAR yy_c;
  char * yy_cp;
  yy_state_type yy_current_state;
  char * yy_c_buf_p.78_11;
  char _12;
  unsigned char _14;
  unsigned int _15;
  short int _19;
  short unsigned int _22;
  int _23;
  int _24;
  int _25;
  short int _26;
  int _27;
  short int _28;
  unsigned int _30;
  unsigned int _32;
  unsigned int _33;
  unsigned int _34;
  short unsigned int _35;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  yy_current_state_9 = yy_start;
  # DEBUG yy_current_state => yy_current_state_9
  yy_cp_10 = yytext;
  # DEBUG yy_cp => yy_cp_10
  yy_c_buf_p.78_11 = yy_c_buf_p;
  yy_last_accepting_state_lsm.160_62 = yy_last_accepting_state;
  yy_last_accepting_cpos_lsm.162_60 = yy_last_accepting_cpos;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                13
  # yy_current_state_1 = PHI <yy_current_state_9(2), yy_current_state_36(13)>
  # yy_cp_3 = PHI <yy_cp_10(2), yy_cp_37(13)>
  # yy_last_accepting_state_lsm.160_70 = PHI <yy_last_accepting_state_lsm.160_62(2), yy_last_accepting_state_lsm.160_69(13)>
  # yy_last_accepting_state_lsm.161_68 = PHI <0(2), yy_last_accepting_state_lsm.161_67(13)>
  # yy_last_accepting_cpos_lsm.162_66 = PHI <yy_last_accepting_cpos_lsm.162_60(2), yy_last_accepting_cpos_lsm.162_65(13)>
  # yy_last_accepting_cpos_lsm.163_64 = PHI <0(2), yy_last_accepting_cpos_lsm.163_63(13)>
  # DEBUG yy_cp => yy_cp_3
  # DEBUG yy_current_state => yy_current_state_1
  if (yy_cp_3 >= yy_c_buf_p.78_11)
    goto <bb 14>;
  else
    goto <bb 4>;
;;    succ:       14
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  _12 = MEM[base: yy_cp_3, offset: 0B];
  if (_12 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 1
;;    pred:       4
  _14 = (unsigned char) _12;
  _15 = (unsigned int) _14;
  yy_c_16 = yy_ec[_15];
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       5
;;                4
  # yy_c_5 = PHI <yy_c_16(5), 1(4)>
  # DEBUG yy_c => yy_c_5
  _19 = yy_accept[yy_current_state_1];
  if (_19 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7
;;                8

;;   basic block 7, loop depth 1
;;    pred:       6
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       7
;;                6
  # yy_last_accepting_state_lsm.160_69 = PHI <yy_current_state_1(7), yy_last_accepting_state_lsm.160_70(6)>
  # yy_last_accepting_state_lsm.161_67 = PHI <1(7), yy_last_accepting_state_lsm.161_68(6)>
  # yy_last_accepting_cpos_lsm.162_65 = PHI <yy_cp_3(7), yy_last_accepting_cpos_lsm.162_66(6)>
  # yy_last_accepting_cpos_lsm.163_63 = PHI <1(7), yy_last_accepting_cpos_lsm.163_64(6)>
  goto <bb 10>;
;;    succ:       10

;;   basic block 9, loop depth 2
;;    pred:       11
;;                12
  # yy_c_18 = PHI <yy_c_4(11), yy_c_31(12)>
;;    succ:       10

;;   basic block 10, loop depth 2
;;    pred:       8
;;                9
  # yy_current_state_2 = PHI <yy_current_state_1(8), yy_current_state_29(9)>
  # yy_c_4 = PHI <yy_c_5(8), yy_c_18(9)>
  # DEBUG yy_c => yy_c_4
  # DEBUG yy_current_state => yy_current_state_2
  _22 = yy_base[yy_current_state_2];
  _23 = (int) _22;
  _24 = (int) yy_c_4;
  _25 = _23 + _24;
  _26 = yy_chk[_25];
  _27 = (int) _26;
  if (yy_current_state_2 == _27)
    goto <bb 13>;
  else
    goto <bb 11>;
;;    succ:       13
;;                11

;;   basic block 11, loop depth 2
;;    pred:       10
  _28 = yy_def[yy_current_state_2];
  yy_current_state_29 = (yy_state_type) _28;
  # DEBUG yy_current_state => yy_current_state_29
  if (yy_current_state_29 > 101)
    goto <bb 12>;
  else
    goto <bb 9>;
;;    succ:       12
;;                9

;;   basic block 12, loop depth 2
;;    pred:       11
  _30 = (unsigned int) yy_c_4;
  yy_c_31 = yy_meta[_30];
  # DEBUG yy_c => yy_c_31
  goto <bb 9>;
;;    succ:       9

;;   basic block 13, loop depth 1
;;    pred:       10
  _32 = (unsigned int) _22;
  _33 = (unsigned int) yy_c_4;
  _34 = _32 + _33;
  _35 = yy_nxt[_34];
  yy_current_state_36 = (yy_state_type) _35;
  # DEBUG yy_current_state => yy_current_state_36
  yy_cp_37 = yy_cp_3 + 1;
  # DEBUG yy_cp => yy_cp_37
  goto <bb 3>;
;;    succ:       3

;;   basic block 14, loop depth 0
;;    pred:       3
  if (yy_last_accepting_state_lsm.161_68 != 0)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       16
;;                15

;;   basic block 15, loop depth 0
;;    pred:       14
  yy_last_accepting_state = yy_last_accepting_state_lsm.160_70;
;;    succ:       16

;;   basic block 16, loop depth 0
;;    pred:       15
;;                14
  if (yy_last_accepting_cpos_lsm.163_64 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       18
;;                17

;;   basic block 17, loop depth 0
;;    pred:       16
  yy_last_accepting_cpos = yy_last_accepting_cpos_lsm.162_66;
;;    succ:       18

;;   basic block 18, loop depth 0
;;    pred:       17
;;                16
  return yy_current_state_1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (yy_current_state_1 - 1 )
Partition 2 (yy_current_state_2 - 2 )
Partition 3 (yy_cp_3 - 3 )
Partition 4 (yy_c_4 - 4 )
Partition 5 (yy_c_5 - 5 )
Partition 9 (yy_current_state_9 - 9 )
Partition 10 (yy_cp_10 - 10 )
Partition 11 (yy_c_buf_p.78_11 - 11 )
Partition 12 (_12 - 12 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (yy_c_16 - 16 )
Partition 18 (yy_c_18 - 18 )
Partition 19 (_19 - 19 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (yy_current_state_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (yy_c_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (yy_current_state_36 - 36 )
Partition 37 (yy_cp_37 - 37 )
Partition 60 (yy_last_accepting_cpos_lsm.162_60 - 60 )
Partition 62 (yy_last_accepting_state_lsm.160_62 - 62 )
Partition 63 (yy_last_accepting_cpos_lsm.163_63 - 63 )
Partition 64 (yy_last_accepting_cpos_lsm.163_64 - 64 )
Partition 65 (yy_last_accepting_cpos_lsm.162_65 - 65 )
Partition 66 (yy_last_accepting_cpos_lsm.162_66 - 66 )
Partition 67 (yy_last_accepting_state_lsm.161_67 - 67 )
Partition 68 (yy_last_accepting_state_lsm.161_68 - 68 )
Partition 69 (yy_last_accepting_state_lsm.160_69 - 69 )
Partition 70 (yy_last_accepting_state_lsm.160_70 - 70 )


Partition map 

Partition 0 (yy_current_state_1 - 1 )
Partition 1 (yy_current_state_2 - 2 )
Partition 2 (yy_cp_3 - 3 )
Partition 3 (yy_c_4 - 4 )
Partition 4 (yy_c_5 - 5 )
Partition 5 (yy_current_state_9 - 9 )
Partition 6 (yy_cp_10 - 10 )
Partition 7 (yy_c_16 - 16 )
Partition 8 (yy_c_18 - 18 )
Partition 9 (yy_current_state_29 - 29 )
Partition 10 (yy_c_31 - 31 )
Partition 11 (yy_current_state_36 - 36 )
Partition 12 (yy_cp_37 - 37 )
Partition 13 (yy_last_accepting_cpos_lsm.162_60 - 60 )
Partition 14 (yy_last_accepting_state_lsm.160_62 - 62 )
Partition 15 (yy_last_accepting_cpos_lsm.163_63 - 63 )
Partition 16 (yy_last_accepting_cpos_lsm.163_64 - 64 )
Partition 17 (yy_last_accepting_cpos_lsm.162_65 - 65 )
Partition 18 (yy_last_accepting_cpos_lsm.162_66 - 66 )
Partition 19 (yy_last_accepting_state_lsm.161_67 - 67 )
Partition 20 (yy_last_accepting_state_lsm.161_68 - 68 )
Partition 21 (yy_last_accepting_state_lsm.160_69 - 69 )
Partition 22 (yy_last_accepting_state_lsm.160_70 - 70 )


Conflict graph:
15: 19
16: 20
19: 15
20: 16

After sorting:
Sorted Coalesce list:
(2) yy_c_4 <-> yy_c_18
(2) yy_last_accepting_cpos_lsm.163_63 <-> yy_last_accepting_cpos_lsm.163_64
(2) yy_last_accepting_cpos_lsm.162_65 <-> yy_last_accepting_cpos_lsm.162_66
(2) yy_last_accepting_state_lsm.161_67 <-> yy_last_accepting_state_lsm.161_68
(2) yy_last_accepting_state_lsm.160_69 <-> yy_last_accepting_state_lsm.160_70
(1) yy_current_state_1 <-> yy_current_state_2
(1) yy_current_state_2 <-> yy_current_state_29

Partition map 

Partition 0 (yy_current_state_1 - 1 )
Partition 1 (yy_current_state_2 - 2 )
Partition 2 (yy_cp_3 - 3 )
Partition 3 (yy_c_4 - 4 )
Partition 4 (yy_c_5 - 5 )
Partition 5 (yy_current_state_9 - 9 )
Partition 6 (yy_cp_10 - 10 )
Partition 7 (yy_c_16 - 16 )
Partition 8 (yy_c_18 - 18 )
Partition 9 (yy_current_state_29 - 29 )
Partition 10 (yy_c_31 - 31 )
Partition 11 (yy_current_state_36 - 36 )
Partition 12 (yy_cp_37 - 37 )
Partition 13 (yy_last_accepting_cpos_lsm.162_60 - 60 )
Partition 14 (yy_last_accepting_state_lsm.160_62 - 62 )
Partition 15 (yy_last_accepting_cpos_lsm.163_63 - 63 )
Partition 16 (yy_last_accepting_cpos_lsm.163_64 - 64 )
Partition 17 (yy_last_accepting_cpos_lsm.162_65 - 65 )
Partition 18 (yy_last_accepting_cpos_lsm.162_66 - 66 )
Partition 19 (yy_last_accepting_state_lsm.161_67 - 67 )
Partition 20 (yy_last_accepting_state_lsm.161_68 - 68 )
Partition 21 (yy_last_accepting_state_lsm.160_69 - 69 )
Partition 22 (yy_last_accepting_state_lsm.160_70 - 70 )

Coalesce list: (4)yy_c_4 & (18)yy_c_18 [map: 3, 8] : Success -> 3
Coalesce list: (63)yy_last_accepting_cpos_lsm.163_63 & (64)yy_last_accepting_cpos_lsm.163_64 [map: 15, 16] : Success -> 15
Coalesce list: (65)yy_last_accepting_cpos_lsm.162_65 & (66)yy_last_accepting_cpos_lsm.162_66 [map: 17, 18] : Success -> 17
Coalesce list: (67)yy_last_accepting_state_lsm.161_67 & (68)yy_last_accepting_state_lsm.161_68 [map: 19, 20] : Success -> 19
Coalesce list: (69)yy_last_accepting_state_lsm.160_69 & (70)yy_last_accepting_state_lsm.160_70 [map: 21, 22] : Success -> 21
Coalesce list: (1)yy_current_state_1 & (2)yy_current_state_2 [map: 0, 1] : Success -> 0
Coalesce list: (2)yy_current_state_1 & (29)yy_current_state_29 [map: 0, 9] : Success -> 0
Coalesce list: (4)yy_c_4 & (18)yy_c_4: Already Coalesced.
Coalesce list: (4)yy_c_4 & (5)yy_c_5 [map: 3, 4] : Success -> 3
Coalesce list: (18)yy_c_4 & (31)yy_c_31 [map: 3, 10] : Success -> 3
Coalesce list: (5)yy_c_4 & (16)yy_c_16 [map: 3, 7] : Success -> 3
Coalesce list: (64)yy_last_accepting_cpos_lsm.163_63 & (63)yy_last_accepting_cpos_lsm.163_63: Already Coalesced.
Coalesce list: (66)yy_last_accepting_cpos_lsm.162_65 & (65)yy_last_accepting_cpos_lsm.162_65: Already Coalesced.
Coalesce list: (66)yy_last_accepting_cpos_lsm.162_65 & (60)yy_last_accepting_cpos_lsm.162_60 [map: 17, 13] : Success -> 17
Coalesce list: (68)yy_last_accepting_state_lsm.161_67 & (67)yy_last_accepting_state_lsm.161_67: Already Coalesced.
Coalesce list: (70)yy_last_accepting_state_lsm.160_69 & (69)yy_last_accepting_state_lsm.160_69: Already Coalesced.
Coalesce list: (70)yy_last_accepting_state_lsm.160_69 & (62)yy_last_accepting_state_lsm.160_62 [map: 21, 14] : Success -> 21
Coalesce list: (3)yy_cp_3 & (37)yy_cp_37 [map: 2, 12] : Success -> 2
Coalesce list: (3)yy_cp_3 & (10)yy_cp_10 [map: 2, 6] : Success -> 2
Coalesce list: (1)yy_current_state_1 & (36)yy_current_state_36 [map: 0, 11] : Success -> 0
Coalesce list: (1)yy_current_state_1 & (9)yy_current_state_9 [map: 0, 5] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (yy_current_state_1 - 1 2 9 29 36 )
Partition 1 (yy_cp_3 - 3 10 37 )
Partition 2 (yy_c_4 - 4 5 16 18 31 )
Partition 3 (yy_c_buf_p.78_11 - 11 )
Partition 4 (_12 - 12 )
Partition 5 (_14 - 14 )
Partition 6 (_15 - 15 )
Partition 7 (_19 - 19 )
Partition 8 (_22 - 22 )
Partition 9 (_23 - 23 )
Partition 10 (_24 - 24 )
Partition 11 (_25 - 25 )
Partition 12 (_26 - 26 )
Partition 13 (_27 - 27 )
Partition 14 (_28 - 28 )
Partition 15 (_30 - 30 )
Partition 16 (_32 - 32 )
Partition 17 (_33 - 33 )
Partition 18 (_34 - 34 )
Partition 19 (_35 - 35 )
Partition 20 (yy_last_accepting_cpos_lsm.163_63 - 63 64 )
Partition 21 (yy_last_accepting_cpos_lsm.162_65 - 60 65 66 )
Partition 22 (yy_last_accepting_state_lsm.161_67 - 67 68 )
Partition 23 (yy_last_accepting_state_lsm.160_69 - 62 69 70 )


Replacing Expressions
_14 replace with --> _14 = (unsigned char) _12;

_15 replace with --> _15 = (unsigned int) _14;

_19 replace with --> _19 = yy_accept[yy_current_state_1];

_23 replace with --> _23 = (int) _22;

_24 replace with --> _24 = (int) yy_c_4;

_25 replace with --> _25 = _23 + _24;

_26 replace with --> _26 = yy_chk[_25];

_27 replace with --> _27 = (int) _26;

_32 replace with --> _32 = (unsigned int) _22;

_33 replace with --> _33 = (unsigned int) yy_c_4;

_34 replace with --> _34 = _32 + _33;

_35 replace with --> _35 = yy_nxt[_34];


yy_state_type yy_get_previous_state() ()
{
  bool yy_last_accepting_cpos_lsm.163;
  char * yy_last_accepting_cpos_lsm.162;
  bool yy_last_accepting_state_lsm.161;
  yy_state_type yy_last_accepting_state_lsm.160;
  YY_CHAR yy_c;
  char * yy_cp;
  yy_state_type yy_current_state;
  char * yy_c_buf_p.78_11;
  char _12;
  unsigned char _14;
  unsigned int _15;
  short int _19;
  short unsigned int _22;
  int _23;
  int _24;
  int _25;
  short int _26;
  int _27;
  short int _28;
  unsigned int _30;
  unsigned int _32;
  unsigned int _33;
  unsigned int _34;
  short unsigned int _35;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  yy_current_state_9 = yy_start;
  # DEBUG yy_current_state => yy_current_state_9
  yy_cp_10 = yytext;
  # DEBUG yy_cp => yy_cp_10
  yy_c_buf_p.78_11 = yy_c_buf_p;
  yy_last_accepting_state_lsm.160_62 = yy_last_accepting_state;
  yy_last_accepting_cpos_lsm.162_60 = yy_last_accepting_cpos;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                13
  # yy_current_state_1 = PHI <yy_current_state_9(2), yy_current_state_36(13)>
  # yy_cp_3 = PHI <yy_cp_10(2), yy_cp_37(13)>
  # yy_last_accepting_state_lsm.160_70 = PHI <yy_last_accepting_state_lsm.160_62(2), yy_last_accepting_state_lsm.160_69(13)>
  # yy_last_accepting_state_lsm.161_68 = PHI <0(2), yy_last_accepting_state_lsm.161_67(13)>
  # yy_last_accepting_cpos_lsm.162_66 = PHI <yy_last_accepting_cpos_lsm.162_60(2), yy_last_accepting_cpos_lsm.162_65(13)>
  # yy_last_accepting_cpos_lsm.163_64 = PHI <0(2), yy_last_accepting_cpos_lsm.163_63(13)>
  # DEBUG yy_cp => yy_cp_3
  # DEBUG yy_current_state => yy_current_state_1
  if (yy_cp_3 >= yy_c_buf_p.78_11)
    goto <bb 14>;
  else
    goto <bb 4>;
;;    succ:       14
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  _12 = MEM[base: yy_cp_3, offset: 0B];
  if (_12 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 1
;;    pred:       4
  _14 = (unsigned char) _12;
  _15 = (unsigned int) _14;
  yy_c_16 = yy_ec[_15];
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       5
;;                4
  # yy_c_5 = PHI <yy_c_16(5), 1(4)>
  # DEBUG yy_c => yy_c_5
  _19 = yy_accept[yy_current_state_1];
  if (_19 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7
;;                8

;;   basic block 7, loop depth 1
;;    pred:       6
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       7
;;                6
  # yy_last_accepting_state_lsm.160_69 = PHI <yy_current_state_1(7), yy_last_accepting_state_lsm.160_70(6)>
  # yy_last_accepting_state_lsm.161_67 = PHI <1(7), yy_last_accepting_state_lsm.161_68(6)>
  # yy_last_accepting_cpos_lsm.162_65 = PHI <yy_cp_3(7), yy_last_accepting_cpos_lsm.162_66(6)>
  # yy_last_accepting_cpos_lsm.163_63 = PHI <1(7), yy_last_accepting_cpos_lsm.163_64(6)>
  goto <bb 10>;
;;    succ:       10

;;   basic block 9, loop depth 2
;;    pred:       11
;;                12
  # yy_c_18 = PHI <yy_c_4(11), yy_c_31(12)>
;;    succ:       10

;;   basic block 10, loop depth 2
;;    pred:       8
;;                9
  # yy_current_state_2 = PHI <yy_current_state_1(8), yy_current_state_29(9)>
  # yy_c_4 = PHI <yy_c_5(8), yy_c_18(9)>
  # DEBUG yy_c => yy_c_4
  # DEBUG yy_current_state => yy_current_state_2
  _22 = yy_base[yy_current_state_2];
  _23 = (int) _22;
  _24 = (int) yy_c_4;
  _25 = _23 + _24;
  _26 = yy_chk[_25];
  _27 = (int) _26;
  if (yy_current_state_2 == _27)
    goto <bb 13>;
  else
    goto <bb 11>;
;;    succ:       13
;;                11

;;   basic block 11, loop depth 2
;;    pred:       10
  _28 = yy_def[yy_current_state_2];
  yy_current_state_29 = (yy_state_type) _28;
  # DEBUG yy_current_state => yy_current_state_29
  if (yy_current_state_29 > 101)
    goto <bb 12>;
  else
    goto <bb 9>;
;;    succ:       12
;;                9

;;   basic block 12, loop depth 2
;;    pred:       11
  _30 = (unsigned int) yy_c_4;
  yy_c_31 = yy_meta[_30];
  # DEBUG yy_c => yy_c_31
  goto <bb 9>;
;;    succ:       9

;;   basic block 13, loop depth 1
;;    pred:       10
  _32 = (unsigned int) _22;
  _33 = (unsigned int) yy_c_4;
  _34 = _32 + _33;
  _35 = yy_nxt[_34];
  yy_current_state_36 = (yy_state_type) _35;
  # DEBUG yy_current_state => yy_current_state_36
  yy_cp_37 = yy_cp_3 + 1;
  # DEBUG yy_cp => yy_cp_37
  goto <bb 3>;
;;    succ:       3

;;   basic block 14, loop depth 0
;;    pred:       3
  if (yy_last_accepting_state_lsm.161_68 != 0)
    goto <bb 15>;
  else
    goto <bb 16>;
;;    succ:       16
;;                15

;;   basic block 15, loop depth 0
;;    pred:       14
  yy_last_accepting_state = yy_last_accepting_state_lsm.160_70;
;;    succ:       16

;;   basic block 16, loop depth 0
;;    pred:       15
;;                14
  if (yy_last_accepting_cpos_lsm.163_64 != 0)
    goto <bb 17>;
  else
    goto <bb 18>;
;;    succ:       18
;;                17

;;   basic block 17, loop depth 0
;;    pred:       16
  yy_last_accepting_cpos = yy_last_accepting_cpos_lsm.162_66;
;;    succ:       18

;;   basic block 18, loop depth 0
;;    pred:       17
;;                16
  return yy_current_state_1;
;;    succ:       EXIT

}


Inserting a value copy on edge BB2->BB3 : PART.20 = 0
Inserting a value copy on edge BB2->BB3 : PART.22 = 0
Inserting a value copy on edge BB4->BB6 : PART.2 = 1
Inserting a partition copy on edge BB7->BB8 :PART.21 = PART.1
Inserting a partition copy on edge BB7->BB8 :PART.23 = PART.0
Inserting a value copy on edge BB7->BB8 : PART.20 = 1
Inserting a value copy on edge BB7->BB8 : PART.22 = 1

;; Generating RTL for gimple basic block 2

;; yy_current_state_9 = yy_start;

(insn 25 24 0 (set (reg/v:SI 100 [ yy_current_state ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) lex.yy.c:1413 -1
     (nil))

;; # DEBUG yy_current_state => yy_current_state_9

(debug_insn 26 25 0 (var_location:SI yy_current_state (const_int 0 [0])) lex.yy.c:1413 -1
     (nil))
;; yy_cp_10 = yytext;

(insn 27 26 0 (set (reg/v/f:DI 101 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1415 -1
     (nil))

;; # DEBUG yy_cp => yy_cp_10

(debug_insn 28 27 0 (var_location:DI yy_cp (const_int 0 [0])) lex.yy.c:1415 -1
     (nil))
;; _11 = yy_c_buf_p;

(insn 29 28 0 (set (reg/f:DI 103 [ D.6587 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) lex.yy.c:1415 -1
     (nil))

;; yy_last_accepting_state_lsm.160_62 = yy_last_accepting_state;

(insn 30 29 0 (set (reg:SI 123 [ yy_last_accepting_state_lsm.160 ])
        (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])) -1
     (nil))

;; yy_last_accepting_cpos_lsm.162_60 = yy_last_accepting_cpos;

(insn 31 30 0 (set (reg/f:DI 121 [ yy_last_accepting_cpos_lsm.162 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])) -1
     (nil))

;; Generating RTL for gimple basic block 3

;; # DEBUG yy_cp => yy_cp_3

(debug_insn 33 32 0 (var_location:DI yy_cp (const_int 0 [0])) -1
     (nil))
;; # DEBUG yy_current_state => yy_current_state_1

(debug_insn 34 33 0 (var_location:SI yy_current_state (const_int 0 [0])) -1
     (nil))
;; if (yy_cp_3 >= _11)

(insn 35 34 36 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 101 [ yy_cp ])
            (reg/f:DI 103 [ D.6587 ]))) lex.yy.c:1415 -1
     (nil))

(jump_insn 36 35 0 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1415 -1
     (int_list:REG_BR_PROB 900 (nil)))

;; Generating RTL for gimple basic block 4

;; _12 = MEM[base: yy_cp_3, offset: 0B];

(insn 38 37 0 (set (reg:QI 104 [ D.6588 ])
        (mem:QI (reg/v/f:DI 101 [ yy_cp ]) [0 MEM[base: yy_cp_3, offset: 0B]+0 S1 A8])) lex.yy.c:1417 -1
     (nil))

;; if (_12 != 0)

(insn 39 38 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 104 [ D.6588 ])
            (const_int 0 [0]))) lex.yy.c:1417 -1
     (nil))

(jump_insn 40 39 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1417 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 5
Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223

;; yy_c_16 = yy_ec[_15];

(insn 42 41 43 (set (reg/f:DI 125)
        (symbol_ref:DI ("_ZL5yy_ec") [flags 0x2]  <var_decl 0x7f88bc080b40 yy_ec>)) lex.yy.c:1417 -1
     (nil))

(insn 43 42 44 (set (reg:SI 126 [ D.6590 ])
        (zero_extend:SI (reg:QI 104 [ D.6588 ]))) lex.yy.c:1417 -1
     (nil))

(insn 44 43 45 (set (reg:DI 127)
        (zero_extend:DI (reg:SI 126 [ D.6590 ]))) lex.yy.c:1417 -1
     (nil))

(insn 45 44 0 (set (reg/v:QI 102 [ yy_c ])
        (mem/u/j:QI (plus:DI (reg/f:DI 125)
                (reg:DI 127)) [0 yy_ec S1 A8])) lex.yy.c:1417 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 46 45 47 3 "" [0 uses])

(note 47 46 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG yy_c => yy_c_5

(debug_insn 48 47 0 (var_location:QI yy_c (const_int 0 [0])) lex.yy.c:1417 -1
     (nil))Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; if (_19 != 0)

(insn 49 48 50 (set (reg/f:DI 128)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) lex.yy.c:1418 -1
     (nil))

(insn 50 49 51 (set (reg:DI 129)
        (sign_extend:DI (reg/v:SI 100 [ yy_current_state ]))) lex.yy.c:1418 -1
     (nil))

(insn 51 50 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/u:HI (plus:DI (mult:DI (reg:DI 129)
                        (const_int 2 [0x2]))
                    (reg/f:DI 128)) [3 yy_accept S2 A16])
            (const_int 0 [0]))) lex.yy.c:1418 -1
     (nil))

(jump_insn 52 51 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1418 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; 

(code_label 54 53 55 4 "" [0 uses])

(note 55 54 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; 

(code_label 59 58 60 5 "" [0 uses])

(note 60 59 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG yy_c => yy_c_4

(debug_insn 61 60 0 (var_location:QI yy_c (const_int 0 [0])) -1
     (nil))
;; # DEBUG yy_current_state => yy_current_state_2

(debug_insn 62 61 0 (var_location:SI yy_current_state (const_int 0 [0])) -1
     (nil))Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _22 = yy_base[yy_current_state_2];

(insn 63 62 64 (set (reg/f:DI 130)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) lex.yy.c:1423 -1
     (nil))

(insn 64 63 65 (set (reg:DI 131)
        (sign_extend:DI (reg/v:SI 100 [ yy_current_state ]))) lex.yy.c:1423 -1
     (nil))

(insn 65 64 0 (set (reg:HI 108 [ D.6592 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 131)
                    (const_int 2 [0x2]))
                (reg/f:DI 130)) [3 yy_base S2 A16])) lex.yy.c:1423 -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; if (yy_current_state_2 == _27)

(insn 66 65 67 (set (reg/f:DI 132)
        (symbol_ref:DI ("_ZL6yy_chk") [flags 0x2]  <var_decl 0x7f88bc0806c0 yy_chk>)) lex.yy.c:1423 -1
     (nil))

(insn 67 66 68 (set (reg:SI 133 [ D.6593 ])
        (zero_extend:SI (reg:HI 108 [ D.6592 ]))) lex.yy.c:1423 -1
     (nil))

(insn 68 67 69 (set (reg:SI 134 [ D.6593 ])
        (zero_extend:SI (reg/v:QI 102 [ yy_c ]))) lex.yy.c:1423 -1
     (nil))

(insn 69 68 70 (parallel [
            (set (reg:SI 135 [ D.6593 ])
                (plus:SI (reg:SI 133 [ D.6593 ])
                    (reg:SI 134 [ D.6593 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1423 -1
     (nil))

(insn 70 69 71 (set (reg:DI 136)
        (sign_extend:DI (reg:SI 135 [ D.6593 ]))) lex.yy.c:1423 -1
     (nil))

(insn 71 70 72 (set (reg:SI 137 [ D.6593 ])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 136)
                        (const_int 2 [0x2]))
                    (reg/f:DI 132)) [3 yy_chk S2 A16]))) lex.yy.c:1423 -1
     (nil))

(insn 72 71 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 100 [ yy_current_state ])
            (reg:SI 137 [ D.6593 ]))) lex.yy.c:1423 -1
     (nil))

(jump_insn 73 72 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1423 -1
     (int_list:REG_BR_PROB 900 (nil)))

;; Generating RTL for gimple basic block 11
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _28 = yy_def[yy_current_state_2];

(insn 75 74 76 (set (reg/f:DI 138)
        (symbol_ref:DI ("_ZL6yy_def") [flags 0x2]  <var_decl 0x7f88bc080090 yy_def>)) lex.yy.c:1425 -1
     (nil))

(insn 76 75 77 (set (reg:DI 139)
        (sign_extend:DI (reg/v:SI 100 [ yy_current_state ]))) lex.yy.c:1425 -1
     (nil))

(insn 77 76 0 (set (reg:HI 114 [ D.6591 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 139)
                    (const_int 2 [0x2]))
                (reg/f:DI 138)) [3 yy_def S2 A16])) lex.yy.c:1425 -1
     (nil))

;; yy_current_state_29 = (yy_state_type) _28;

(insn 78 77 0 (set (reg/v:SI 100 [ yy_current_state ])
        (sign_extend:SI (reg:HI 114 [ D.6591 ]))) lex.yy.c:1425 -1
     (nil))

;; # DEBUG yy_current_state => yy_current_state_29

(debug_insn 79 78 0 (var_location:SI yy_current_state (const_int 0 [0])) lex.yy.c:1425 -1
     (nil))
;; if (yy_current_state_29 > 101)

(insn 81 79 82 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 100 [ yy_current_state ])
            (const_int 101 [0x65]))) lex.yy.c:1426 -1
     (nil))

(jump_insn 82 81 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) lex.yy.c:1426 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 12

;; _30 = (unsigned int) yy_c_4;

(insn 84 83 0 (set (reg:SI 115 [ D.6590 ])
        (zero_extend:SI (reg/v:QI 102 [ yy_c ]))) lex.yy.c:1427 -1
     (nil))
Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223

;; yy_c_31 = yy_meta[_30];

(insn 85 84 86 (set (reg/f:DI 140)
        (symbol_ref:DI ("_ZL7yy_meta") [flags 0x2]  <var_decl 0x7f88bc080cf0 yy_meta>)) lex.yy.c:1427 -1
     (nil))

(insn 86 85 87 (set (reg:DI 141)
        (zero_extend:DI (reg:SI 115 [ D.6590 ]))) lex.yy.c:1427 -1
     (nil))

(insn 87 86 0 (set (reg/v:QI 102 [ yy_c ])
        (mem/u/j:QI (plus:DI (reg/f:DI 140)
                (reg:DI 141)) [0 yy_meta S1 A8])) lex.yy.c:1427 -1
     (nil))

;; # DEBUG yy_c => yy_c_31

(debug_insn 88 87 0 (var_location:QI yy_c (const_int 0 [0])) lex.yy.c:1427 -1
     (nil))
;; Generating RTL for gimple basic block 13

;; 

(code_label 91 90 92 6 "" [0 uses])

(note 92 91 0 NOTE_INSN_BASIC_BLOCK)
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; yy_current_state_36 = (yy_state_type) _35;

(insn 93 92 94 (set (reg/f:DI 142)
        (symbol_ref:DI ("_ZL6yy_nxt") [flags 0x2]  <var_decl 0x7f88bc0803f0 yy_nxt>)) lex.yy.c:1429 -1
     (nil))

(insn 94 93 95 (set (reg:SI 143 [ D.6590 ])
        (zero_extend:SI (reg:HI 108 [ D.6592 ]))) lex.yy.c:1429 -1
     (nil))

(insn 95 94 96 (set (reg:SI 144 [ D.6590 ])
        (zero_extend:SI (reg/v:QI 102 [ yy_c ]))) lex.yy.c:1429 -1
     (nil))

(insn 96 95 97 (parallel [
            (set (reg:SI 145 [ D.6590 ])
                (plus:SI (reg:SI 143 [ D.6590 ])
                    (reg:SI 144 [ D.6590 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1429 -1
     (nil))

(insn 97 96 98 (set (reg:DI 146)
        (zero_extend:DI (reg:SI 145 [ D.6590 ]))) lex.yy.c:1429 -1
     (nil))

(insn 98 97 0 (set (reg/v:SI 100 [ yy_current_state ])
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 146)
                        (const_int 2 [0x2]))
                    (reg/f:DI 142)) [3 yy_nxt S2 A16]))) lex.yy.c:1429 -1
     (nil))

;; # DEBUG yy_current_state => yy_current_state_36

(debug_insn 99 98 0 (var_location:SI yy_current_state (const_int 0 [0])) lex.yy.c:1429 -1
     (nil))
;; yy_cp_37 = yy_cp_3 + 1;

(insn 100 99 0 (parallel [
            (set (reg/v/f:DI 101 [ yy_cp ])
                (plus:DI (reg/v/f:DI 101 [ yy_cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1415 -1
     (nil))

;; # DEBUG yy_cp => yy_cp_37

(debug_insn 101 100 0 (var_location:DI yy_cp (const_int 0 [0])) lex.yy.c:1415 -1
     (nil))
;; Generating RTL for gimple basic block 14

;; 

(code_label 105 104 106 2 "" [0 uses])

(note 106 105 0 NOTE_INSN_BASIC_BLOCK)

;; if (yy_last_accepting_state_lsm.161_68 != 0)

(insn 107 106 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 122 [ yy_last_accepting_state_lsm.161 ])
            (const_int 0 [0]))) -1
     (nil))

(jump_insn 108 107 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (int_list:REG_BR_PROB 10000 (nil)))

;; Generating RTL for gimple basic block 15

;; yy_last_accepting_state = yy_last_accepting_state_lsm.160_70;

(insn 110 109 0 (set (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])
        (reg:SI 123 [ yy_last_accepting_state_lsm.160 ])) -1
     (nil))

;; Generating RTL for gimple basic block 16

;; 

(code_label 111 110 112 9 "" [0 uses])

(note 112 111 0 NOTE_INSN_BASIC_BLOCK)

;; if (yy_last_accepting_cpos_lsm.163_64 != 0)

(insn 113 112 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 120 [ yy_last_accepting_cpos_lsm.163 ])
            (const_int 0 [0]))) -1
     (nil))

(jump_insn 114 113 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (int_list:REG_BR_PROB 10000 (nil)))

;; Generating RTL for gimple basic block 17

;; yy_last_accepting_cpos = yy_last_accepting_cpos_lsm.162_66;

(insn 116 115 0 (set (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])
        (reg/f:DI 121 [ yy_last_accepting_cpos_lsm.162 ])) -1
     (nil))

;; Generating RTL for gimple basic block 18

;; 

(code_label 117 116 118 10 "" [0 uses])

(note 118 117 0 NOTE_INSN_BASIC_BLOCK)

;; return yy_current_state_1;

(insn 119 118 120 (set (reg:SI 124 [ <retval> ])
        (reg/v:SI 100 [ yy_current_state ])) lex.yy.c:1432 -1
     (nil))

(jump_insn 120 119 121 (set (pc)
        (label_ref 0)) lex.yy.c:1432 -1
     (nil))

(barrier 121 120 0)
Edge 4->6 redirected to 21


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 120.
Merging block 21 into block 20...
Merged blocks 20 and 21.
Merged 20 and 21 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 14 0 23 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 89, probably never executed
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 23 14 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 15 23 25 2 NOTE_INSN_FUNCTION_BEG)
(insn 25 15 26 2 (set (reg/v:SI 100 [ yy_current_state ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) lex.yy.c:1413 -1
     (nil))
(debug_insn 26 25 27 2 (var_location:SI yy_current_state (reg/v:SI 100 [ yy_current_state ])) lex.yy.c:1413 -1
     (nil))
(insn 27 26 28 2 (set (reg/v/f:DI 101 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1415 -1
     (nil))
(debug_insn 28 27 29 2 (var_location:DI yy_cp (reg/v/f:DI 101 [ yy_cp ])) lex.yy.c:1415 -1
     (nil))
(insn 29 28 30 2 (set (reg/f:DI 103 [ D.6587 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) lex.yy.c:1415 -1
     (nil))
(insn 30 29 31 2 (set (reg:SI 123 [ yy_last_accepting_state_lsm.160 ])
        (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])) -1
     (nil))
(insn 31 30 16 2 (set (reg/f:DI 121 [ yy_last_accepting_cpos_lsm.162 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])) -1
     (nil))
(insn 16 31 17 2 (set (reg:QI 120 [ yy_last_accepting_cpos_lsm.163 ])
        (const_int 0 [0])) lex.yy.c:1415 -1
     (nil))
(insn 17 16 102 2 (set (reg:QI 122 [ yy_last_accepting_state_lsm.161 ])
        (const_int 0 [0])) lex.yy.c:1415 -1
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)

;; basic block 4, loop depth 1, count 0, freq 989, probably never executed
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [100.0%]  (FALLTHRU)
;;              15 [100.0%]  (DFS_BACK)
(code_label 102 17 32 4 8 "" [1 uses])
(note 32 102 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 33 32 34 4 (var_location:DI yy_cp (reg/v/f:DI 101 [ yy_cp ])) -1
     (nil))
(debug_insn 34 33 35 4 (var_location:SI yy_current_state (reg/v:SI 100 [ yy_current_state ])) -1
     (nil))
(insn 35 34 36 4 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 101 [ yy_cp ])
            (reg/f:DI 103 [ D.6587 ]))) lex.yy.c:1415 -1
     (nil))
(jump_insn 36 35 37 4 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) lex.yy.c:1415 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 105)
;;  succ:       16 [9.0%] 
;;              5 [91.0%]  (FALLTHRU)

;; basic block 5, loop depth 1, count 0, freq 900, probably never executed
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [91.0%]  (FALLTHRU)
(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 5 (set (reg:QI 104 [ D.6588 ])
        (mem:QI (reg/v/f:DI 101 [ yy_cp ]) [0 MEM[base: yy_cp_3, offset: 0B]+0 S1 A8])) lex.yy.c:1417 -1
     (nil))
(insn 39 38 40 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 104 [ D.6588 ])
            (const_int 0 [0]))) lex.yy.c:1417 -1
     (nil))
(jump_insn 40 39 41 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 129)
            (pc))) lex.yy.c:1417 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 129)
;;  succ:       6 [50.0%]  (FALLTHRU)
;;              7 [50.0%] 

;; basic block 6, loop depth 1, count 0, freq 450, probably never executed
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [50.0%]  (FALLTHRU)
(note 41 40 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 6 (set (reg/f:DI 125)
        (symbol_ref:DI ("_ZL5yy_ec") [flags 0x2]  <var_decl 0x7f88bc080b40 yy_ec>)) lex.yy.c:1417 -1
     (nil))
(insn 43 42 44 6 (set (reg:SI 126 [ D.6590 ])
        (zero_extend:SI (reg:QI 104 [ D.6588 ]))) lex.yy.c:1417 -1
     (nil))
(insn 44 43 45 6 (set (reg:DI 127)
        (zero_extend:DI (reg:SI 126 [ D.6590 ]))) lex.yy.c:1417 -1
     (nil))
(insn 45 44 126 6 (set (reg/v:QI 102 [ yy_c ])
        (mem/u/j:QI (plus:DI (reg/f:DI 125)
                (reg:DI 127)) [0 yy_ec S1 A8])) lex.yy.c:1417 -1
     (nil))
(jump_insn 126 45 127 6 (set (pc)
        (label_ref 46)) -1
     (nil)
 -> 46)
;;  succ:       8 [100.0%] 

(barrier 127 126 129)
;; basic block 7, loop depth 1, count 0, freq 450, probably never executed
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 [50.0%] 
(code_label 129 127 128 7 11 "" [1 uses])
(note 128 129 18 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 18 128 46 7 (set (reg/v:QI 102 [ yy_c ])
        (const_int 1 [0x1])) lex.yy.c:1417 -1
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)

;; basic block 8, loop depth 1, count 0, freq 900, probably never executed
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [100.0%]  (FALLTHRU)
;;              6 [100.0%] 
(code_label 46 18 47 8 3 "" [1 uses])
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 48 47 49 8 (var_location:QI yy_c (reg/v:QI 102 [ yy_c ])) lex.yy.c:1417 -1
     (nil))
(insn 49 48 50 8 (set (reg/f:DI 128)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) lex.yy.c:1418 -1
     (nil))
(insn 50 49 51 8 (set (reg:DI 129)
        (sign_extend:DI (reg/v:SI 100 [ yy_current_state ]))) lex.yy.c:1418 -1
     (nil))
(insn 51 50 52 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/u:HI (plus:DI (mult:DI (reg:DI 129)
                        (const_int 2 [0x2]))
                    (reg/f:DI 128)) [3 yy_accept S2 A16])
            (const_int 0 [0]))) lex.yy.c:1418 -1
     (nil))
(jump_insn 52 51 53 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) lex.yy.c:1418 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 54)
;;  succ:       9 [50.0%]  (FALLTHRU)
;;              10 [50.0%] 

;; basic block 9, loop depth 1, count 0, freq 450, probably never executed
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 [50.0%]  (FALLTHRU)
(note 53 52 19 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 19 53 20 9 (set (reg/f:DI 121 [ yy_last_accepting_cpos_lsm.162 ])
        (reg/v/f:DI 101 [ yy_cp ])) lex.yy.c:1418 -1
     (nil))
(insn 20 19 21 9 (set (reg:SI 123 [ yy_last_accepting_state_lsm.160 ])
        (reg/v:SI 100 [ yy_current_state ])) lex.yy.c:1418 -1
     (nil))
(insn 21 20 22 9 (set (reg:QI 120 [ yy_last_accepting_cpos_lsm.163 ])
        (const_int 1 [0x1])) lex.yy.c:1418 -1
     (nil))
(insn 22 21 54 9 (set (reg:QI 122 [ yy_last_accepting_state_lsm.161 ])
        (const_int 1 [0x1])) lex.yy.c:1418 -1
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)

;; basic block 10, loop depth 1, count 0, freq 900, probably never executed
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              8 [50.0%] 
(code_label 54 22 55 10 4 "" [1 uses])
(note 55 54 56 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 56 55 57 10 (set (pc)
        (label_ref 59)) -1
     (nil)
 -> 59)
;;  succ:       12 [100.0%] 

(barrier 57 56 80)
;; basic block 11, loop depth 2, count 0, freq 9100, probably never executed
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 [50.0%] 
;;              14 [100.0%] 
(code_label 80 57 58 11 7 "" [2 uses])
(note 58 80 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;;  succ:       12 [100.0%]  (FALLTHRU,DFS_BACK)

;; basic block 12, loop depth 2, count 0, freq 10000, probably never executed
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 [100.0%] 
;;              11 [100.0%]  (FALLTHRU,DFS_BACK)
(code_label 59 58 60 12 5 "" [1 uses])
(note 60 59 61 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 61 60 62 12 (var_location:QI yy_c (reg/v:QI 102 [ yy_c ])) -1
     (nil))
(debug_insn 62 61 63 12 (var_location:SI yy_current_state (reg/v:SI 100 [ yy_current_state ])) -1
     (nil))
(insn 63 62 64 12 (set (reg/f:DI 130)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) lex.yy.c:1423 -1
     (nil))
(insn 64 63 65 12 (set (reg:DI 131)
        (sign_extend:DI (reg/v:SI 100 [ yy_current_state ]))) lex.yy.c:1423 -1
     (nil))
(insn 65 64 66 12 (set (reg:HI 108 [ D.6592 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 131)
                    (const_int 2 [0x2]))
                (reg/f:DI 130)) [3 yy_base S2 A16])) lex.yy.c:1423 -1
     (nil))
(insn 66 65 67 12 (set (reg/f:DI 132)
        (symbol_ref:DI ("_ZL6yy_chk") [flags 0x2]  <var_decl 0x7f88bc0806c0 yy_chk>)) lex.yy.c:1423 -1
     (nil))
(insn 67 66 68 12 (set (reg:SI 133 [ D.6593 ])
        (zero_extend:SI (reg:HI 108 [ D.6592 ]))) lex.yy.c:1423 -1
     (nil))
(insn 68 67 69 12 (set (reg:SI 134 [ D.6593 ])
        (zero_extend:SI (reg/v:QI 102 [ yy_c ]))) lex.yy.c:1423 -1
     (nil))
(insn 69 68 70 12 (parallel [
            (set (reg:SI 135 [ D.6593 ])
                (plus:SI (reg:SI 133 [ D.6593 ])
                    (reg:SI 134 [ D.6593 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1423 -1
     (nil))
(insn 70 69 71 12 (set (reg:DI 136)
        (sign_extend:DI (reg:SI 135 [ D.6593 ]))) lex.yy.c:1423 -1
     (nil))
(insn 71 70 72 12 (set (reg:SI 137 [ D.6593 ])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 136)
                        (const_int 2 [0x2]))
                    (reg/f:DI 132)) [3 yy_chk S2 A16]))) lex.yy.c:1423 -1
     (nil))
(insn 72 71 73 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 100 [ yy_current_state ])
            (reg:SI 137 [ D.6593 ]))) lex.yy.c:1423 -1
     (nil))
(jump_insn 73 72 74 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) lex.yy.c:1423 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 91)
;;  succ:       15 [9.0%] 
;;              13 [91.0%]  (FALLTHRU)

;; basic block 13, loop depth 2, count 0, freq 9100, probably never executed
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 [91.0%]  (FALLTHRU)
(note 74 73 75 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 13 (set (reg/f:DI 138)
        (symbol_ref:DI ("_ZL6yy_def") [flags 0x2]  <var_decl 0x7f88bc080090 yy_def>)) lex.yy.c:1425 -1
     (nil))
(insn 76 75 77 13 (set (reg:DI 139)
        (sign_extend:DI (reg/v:SI 100 [ yy_current_state ]))) lex.yy.c:1425 -1
     (nil))
(insn 77 76 78 13 (set (reg:HI 114 [ D.6591 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 139)
                    (const_int 2 [0x2]))
                (reg/f:DI 138)) [3 yy_def S2 A16])) lex.yy.c:1425 -1
     (nil))
(insn 78 77 79 13 (set (reg/v:SI 100 [ yy_current_state ])
        (sign_extend:SI (reg:HI 114 [ D.6591 ]))) lex.yy.c:1425 -1
     (nil))
(debug_insn 79 78 81 13 (var_location:SI yy_current_state (reg/v:SI 100 [ yy_current_state ])) lex.yy.c:1425 -1
     (nil))
(insn 81 79 82 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 100 [ yy_current_state ])
            (const_int 101 [0x65]))) lex.yy.c:1426 -1
     (nil))
(jump_insn 82 81 83 13 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) lex.yy.c:1426 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 80)
;;  succ:       14 [50.0%]  (FALLTHRU)
;;              11 [50.0%] 

;; basic block 14, loop depth 2, count 0, freq 4550, probably never executed
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 [50.0%]  (FALLTHRU)
(note 83 82 84 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 14 (set (reg:SI 115 [ D.6590 ])
        (zero_extend:SI (reg/v:QI 102 [ yy_c ]))) lex.yy.c:1427 -1
     (nil))
(insn 85 84 86 14 (set (reg/f:DI 140)
        (symbol_ref:DI ("_ZL7yy_meta") [flags 0x2]  <var_decl 0x7f88bc080cf0 yy_meta>)) lex.yy.c:1427 -1
     (nil))
(insn 86 85 87 14 (set (reg:DI 141)
        (zero_extend:DI (reg:SI 115 [ D.6590 ]))) lex.yy.c:1427 -1
     (nil))
(insn 87 86 88 14 (set (reg/v:QI 102 [ yy_c ])
        (mem/u/j:QI (plus:DI (reg/f:DI 140)
                (reg:DI 141)) [0 yy_meta S1 A8])) lex.yy.c:1427 -1
     (nil))
(debug_insn 88 87 89 14 (var_location:QI yy_c (reg/v:QI 102 [ yy_c ])) lex.yy.c:1427 -1
     (nil))
(jump_insn 89 88 90 14 (set (pc)
        (label_ref 80)) -1
     (nil)
 -> 80)
;;  succ:       11 [100.0%] 

(barrier 90 89 91)
;; basic block 15, loop depth 1, count 0, freq 900, probably never executed
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 [9.0%] 
(code_label 91 90 92 15 6 "" [1 uses])
(note 92 91 93 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 94 15 (set (reg/f:DI 142)
        (symbol_ref:DI ("_ZL6yy_nxt") [flags 0x2]  <var_decl 0x7f88bc0803f0 yy_nxt>)) lex.yy.c:1429 -1
     (nil))
(insn 94 93 95 15 (set (reg:SI 143 [ D.6590 ])
        (zero_extend:SI (reg:HI 108 [ D.6592 ]))) lex.yy.c:1429 -1
     (nil))
(insn 95 94 96 15 (set (reg:SI 144 [ D.6590 ])
        (zero_extend:SI (reg/v:QI 102 [ yy_c ]))) lex.yy.c:1429 -1
     (nil))
(insn 96 95 97 15 (parallel [
            (set (reg:SI 145 [ D.6590 ])
                (plus:SI (reg:SI 143 [ D.6590 ])
                    (reg:SI 144 [ D.6590 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1429 -1
     (nil))
(insn 97 96 98 15 (set (reg:DI 146)
        (zero_extend:DI (reg:SI 145 [ D.6590 ]))) lex.yy.c:1429 -1
     (nil))
(insn 98 97 99 15 (set (reg/v:SI 100 [ yy_current_state ])
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 146)
                        (const_int 2 [0x2]))
                    (reg/f:DI 142)) [3 yy_nxt S2 A16]))) lex.yy.c:1429 -1
     (nil))
(debug_insn 99 98 100 15 (var_location:SI yy_current_state (reg/v:SI 100 [ yy_current_state ])) lex.yy.c:1429 -1
     (nil))
(insn 100 99 101 15 (parallel [
            (set (reg/v/f:DI 101 [ yy_cp ])
                (plus:DI (reg/v/f:DI 101 [ yy_cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1415 -1
     (nil))
(debug_insn 101 100 103 15 (var_location:DI yy_cp (reg/v/f:DI 101 [ yy_cp ])) lex.yy.c:1415 -1
     (nil))
(jump_insn 103 101 104 15 (set (pc)
        (label_ref 102)) lex.yy.c:1415 -1
     (nil)
 -> 102)
;;  succ:       4 [100.0%]  (DFS_BACK)

(barrier 104 103 105)
;; basic block 16, loop depth 0, count 0, freq 89, probably never executed
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [9.0%] 
(code_label 105 104 106 16 2 "" [1 uses])
(note 106 105 107 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 122 [ yy_last_accepting_state_lsm.161 ])
            (const_int 0 [0]))) -1
     (nil))
(jump_insn 108 107 109 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 111)
;;  succ:       18 [100.0%] 
;;              17 (FALLTHRU)

;; basic block 17, loop depth 0, count 0, freq 0, probably never executed
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 (FALLTHRU)
(note 109 108 110 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 17 (set (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])
        (reg:SI 123 [ yy_last_accepting_state_lsm.160 ])) -1
     (nil))
;;  succ:       18 [100.0%]  (FALLTHRU)

;; basic block 18, loop depth 0, count 0, freq 0, probably never executed
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 [100.0%]  (FALLTHRU)
;;              16 [100.0%] 
(code_label 111 110 112 18 9 "" [1 uses])
(note 112 111 113 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 120 [ yy_last_accepting_cpos_lsm.163 ])
            (const_int 0 [0]))) -1
     (nil))
(jump_insn 114 113 115 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 117)
;;  succ:       20 [100.0%] 
;;              19 (FALLTHRU)

;; basic block 19, loop depth 0, count 0, freq 0, probably never executed
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 (FALLTHRU)
(note 115 114 116 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 19 (set (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])
        (reg/f:DI 121 [ yy_last_accepting_cpos_lsm.162 ])) -1
     (nil))
;;  succ:       20 [100.0%]  (FALLTHRU)

;; basic block 20, loop depth 0, count 0, freq 89, probably never executed
;;  prev block 19, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       19 [100.0%]  (FALLTHRU)
;;              18 [100.0%] 
(code_label 117 116 118 20 10 "" [1 uses])
(note 118 117 119 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 123 20 (set (reg:SI 124 [ <retval> ])
        (reg/v:SI 100 [ yy_current_state ])) lex.yy.c:1432 -1
     (nil))
(insn 123 119 124 20 (set (reg/i:SI 0 ax)
        (reg:SI 124 [ <retval> ])) lex.yy.c:1433 -1
     (nil))
(insn 124 123 0 20 (use (reg/i:SI 0 ax)) lex.yy.c:1433 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void yy_fatal_error(const char*) (_ZL14yy_fatal_errorPKc, funcdef_no=104, decl_uid=4297, cgraph_uid=104, symbol_order=131) (executed once)

void yy_fatal_error(const char*) (const char * msg)
{
  struct _IO_FILE * stderr.80_2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  stderr.80_2 = stderr;
  # DEBUG __stream => stderr.80_2
  # DEBUG __fmt => "%s\n"
  __fprintf_chk (stderr.80_2, 1, "%s\n", msg_3(D));
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  exit (2);
;;    succ:      

}



Partition map 

Partition 2 (stderr.80_2 - 2 )
Partition 3 (msg_3(D) - 3 )


Partition map 

Partition 0 (msg_3(D) - 3 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (msg_3(D) - 3 )

After Coalescing:

Partition map 

Partition 0 (stderr.80_2 - 2 )
Partition 1 (msg_3(D) - 3 )


Replacing Expressions
stderr.80_2 replace with --> stderr.80_2 = stderr;


void yy_fatal_error(const char*) (const char * msg)
{
  struct _IO_FILE * stderr.80_2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  stderr.80_2 = stderr;
  # DEBUG __stream => stderr.80_2
  # DEBUG __fmt => "%s\n"
  __fprintf_chk (stderr.80_2, 1, "%s\n", msg_3(D));
  # DEBUG __stream => NULL
  # DEBUG __fmt => NULL
  exit (2);
;;    succ:      

}



;; Generating RTL for gimple basic block 2

;; # DEBUG __stream => _2

(debug_insn 6 5 0 (var_location:DI __stream (const_int 0 [0])) lex.yy.c:1942 -1
     (nil))
;; # DEBUG __fmt => "%s\n"

(debug_insn 7 6 0 (var_location:DI __fmt (const_int 0 [0])) lex.yy.c:1942 -1
     (nil))
;; __fprintf_chk (_2, 1, "%s\n", msg_3(D));

(insn 8 7 9 (set (reg:DI 2 cx)
        (reg/v/f:DI 88 [ msg ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 -1
     (nil))

(insn 9 8 10 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f88bbed7240 *.LC1>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 -1
     (nil))

(insn 10 9 11 (set (reg:SI 4 si)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 -1
     (nil))

(insn 11 10 12 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x7f88bc3c9ea0 stderr>) [1 stderr+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 -1
     (nil))

(insn 12 11 13 (set (reg:QI 0 ax)
        (const_int 0 [0])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 -1
     (nil))

(call_insn 13 12 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f88bc333948 __fprintf_chk>) [0 __builtin___fprintf_chk S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f88bc333948 __fprintf_chk>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))

;; # DEBUG __stream => NULL

(debug_insn 14 13 0 (var_location:DI __stream (const_int 0 [0])) lex.yy.c:1942 -1
     (nil))
;; # DEBUG __fmt => NULL

(debug_insn 15 14 0 (var_location:DI __fmt (const_int 0 [0])) lex.yy.c:1942 -1
     (nil))
;; exit (2);

(insn 16 15 17 (set (reg:SI 5 di)
        (const_int 2 [0x2])) lex.yy.c:1943 -1
     (nil))

(call_insn 17 16 18 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f88bc31bca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) lex.yy.c:1943 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f88bc31bca8 exit>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(barrier 18 17 0)
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 88 [ msg ])
        (reg:DI 5 di [ msg ])) lex.yy.c:1941 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 6 3 7 2 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x7f88bc3c9ea0 stderr>) [1 stderr+0 S8 A64])) lex.yy.c:1942 -1
     (nil))
(debug_insn 7 6 8 2 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f88bbed7240 *.LC1>)) lex.yy.c:1942 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 88 [ msg ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f88bbed7240 *.LC1>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x7f88bc3c9ea0 stderr>) [1 stderr+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 -1
     (nil))
(insn 12 11 13 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f88bc333948 __fprintf_chk>) [0 __builtin___fprintf_chk S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f88bc333948 __fprintf_chk>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(debug_insn 14 13 15 2 (var_location:DI __stream (clobber (const_int 0 [0]))) lex.yy.c:1942 -1
     (nil))
(debug_insn 15 14 16 2 (var_location:DI __fmt (clobber (const_int 0 [0]))) lex.yy.c:1942 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 5 di)
        (const_int 2 [0x2])) lex.yy.c:1943 -1
     (nil))
(call_insn 17 16 18 2 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f88bc31bca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) lex.yy.c:1943 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f88bc31bca8 exit>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      

(barrier 18 17 0)

;; Function void yyensure_buffer_stack() (_ZL21yyensure_buffer_stackv, funcdef_no=100, decl_uid=4265, cgraph_uid=100, symbol_order=127)

void yyensure_buffer_stack() ()
{
  yy_size_t num_to_alloc;
  struct yy_buffer_state * * yy_buffer_stack.30_2;
  void * _3;
  long unsigned int yy_buffer_stack_max.32_5;
  long unsigned int _6;
  long unsigned int yy_buffer_stack_top.33_7;
  long unsigned int _9;
  long unsigned int _12;
  struct yy_buffer_state * * _13;
  void * _19;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  yy_buffer_stack.30_2 = yy_buffer_stack;
  if (yy_buffer_stack.30_2 == 0B)
    goto <bb 3>;
  else
    goto <bb 6>;
;;    succ:       3
;;                6

;;   basic block 3, loop depth 0
;;    pred:       2
  # DEBUG num_to_alloc => 1
  # DEBUG size => 8
  _19 = __builtin_calloc (8, 1);
  # DEBUG size => NULL
  yy_buffer_stack = _19;
  if (_19 == 0B)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
;;                7
  yy_fatal_error ("out of dynamic memory in yyensure_buffer_stack()");
;;    succ:      

;;   basic block 5, loop depth 0
;;    pred:       3
  # DEBUG __dest => _19
  # DEBUG __ch => 0
  # DEBUG __len => 8
  # DEBUG __dest => NULL
  # DEBUG __ch => NULL
  # DEBUG __len => NULL
  yy_buffer_stack_max = 1;
  yy_buffer_stack_top = 0;
  goto <bb 9>;
;;    succ:       9

;;   basic block 6, loop depth 0
;;    pred:       2
  yy_buffer_stack_max.32_5 = yy_buffer_stack_max;
  _6 = yy_buffer_stack_max.32_5 + 18446744073709551615;
  yy_buffer_stack_top.33_7 = yy_buffer_stack_top;
  if (_6 <= yy_buffer_stack_top.33_7)
    goto <bb 7>;
  else
    goto <bb 9>;
;;    succ:       7
;;                9

;;   basic block 7, loop depth 0
;;    pred:       6
  # DEBUG grow_size => 8
  num_to_alloc_8 = yy_buffer_stack_max.32_5 + 8;
  # DEBUG num_to_alloc => num_to_alloc_8
  _9 = num_to_alloc_8 * 8;
  # DEBUG ptr => yy_buffer_stack.30_2
  # DEBUG size => _9
  _3 = realloc (yy_buffer_stack.30_2, _9);
  # DEBUG ptr => NULL
  # DEBUG size => NULL
  yy_buffer_stack = _3;
  if (_3 == 0B)
    goto <bb 4>;
  else
    goto <bb 8>;
;;    succ:       4
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  _12 = _9 + 18446744073709551552;
  _13 = _3 + _12;
  # DEBUG __dest => _13
  # DEBUG __ch => 0
  # DEBUG __len => 64
  __builtin_memset (_13, 0, 64);
  # DEBUG __dest => NULL
  # DEBUG __ch => NULL
  # DEBUG __len => NULL
  yy_buffer_stack_max = num_to_alloc_8;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       5
;;                6
;;                8
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (yy_buffer_stack.30_2 - 2 )
Partition 3 (_3 - 3 )
Partition 5 (yy_buffer_stack_max.32_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (yy_buffer_stack_top.33_7 - 7 )
Partition 8 (num_to_alloc_8 - 8 )
Partition 9 (_9 - 9 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 19 (_19 - 19 )

After Coalescing:

Partition map 

Partition 0 (yy_buffer_stack.30_2 - 2 )
Partition 1 (_3 - 3 )
Partition 2 (yy_buffer_stack_max.32_5 - 5 )
Partition 3 (_6 - 6 )
Partition 4 (yy_buffer_stack_top.33_7 - 7 )
Partition 5 (num_to_alloc_8 - 8 )
Partition 6 (_9 - 9 )
Partition 7 (_12 - 12 )
Partition 8 (_13 - 13 )
Partition 9 (_19 - 19 )


Replacing Expressions
_6 replace with --> _6 = yy_buffer_stack_max.32_5 + 18446744073709551615;

yy_buffer_stack_top.33_7 replace with --> yy_buffer_stack_top.33_7 = yy_buffer_stack_top;

_12 replace with --> _12 = _9 + 18446744073709551552;

_13 replace with --> _13 = _3 + _12;


void yyensure_buffer_stack() ()
{
  yy_size_t num_to_alloc;
  struct yy_buffer_state * * yy_buffer_stack.30_2;
  void * _3;
  long unsigned int yy_buffer_stack_max.32_5;
  long unsigned int _6;
  long unsigned int yy_buffer_stack_top.33_7;
  long unsigned int _9;
  long unsigned int _12;
  struct yy_buffer_state * * _13;
  void * _19;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  yy_buffer_stack.30_2 = yy_buffer_stack;
  if (yy_buffer_stack.30_2 == 0B)
    goto <bb 3>;
  else
    goto <bb 6>;
;;    succ:       3
;;                6

;;   basic block 3, loop depth 0
;;    pred:       2
  # DEBUG num_to_alloc => 1
  # DEBUG size => 8
  _19 = __builtin_calloc (8, 1);
  # DEBUG size => NULL
  yy_buffer_stack = _19;
  if (_19 == 0B)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
;;                7
  yy_fatal_error ("out of dynamic memory in yyensure_buffer_stack()");
;;    succ:      

;;   basic block 5, loop depth 0
;;    pred:       3
  # DEBUG __dest => _19
  # DEBUG __ch => 0
  # DEBUG __len => 8
  # DEBUG __dest => NULL
  # DEBUG __ch => NULL
  # DEBUG __len => NULL
  yy_buffer_stack_max = 1;
  yy_buffer_stack_top = 0;
  goto <bb 9>;
;;    succ:       9

;;   basic block 6, loop depth 0
;;    pred:       2
  yy_buffer_stack_max.32_5 = yy_buffer_stack_max;
  _6 = yy_buffer_stack_max.32_5 + 18446744073709551615;
  yy_buffer_stack_top.33_7 = yy_buffer_stack_top;
  if (_6 <= yy_buffer_stack_top.33_7)
    goto <bb 7>;
  else
    goto <bb 9>;
;;    succ:       7
;;                9

;;   basic block 7, loop depth 0
;;    pred:       6
  # DEBUG grow_size => 8
  num_to_alloc_8 = yy_buffer_stack_max.32_5 + 8;
  # DEBUG num_to_alloc => num_to_alloc_8
  _9 = num_to_alloc_8 * 8;
  # DEBUG ptr => yy_buffer_stack.30_2
  # DEBUG size => _9
  _3 = realloc (yy_buffer_stack.30_2, _9);
  # DEBUG ptr => NULL
  # DEBUG size => NULL
  yy_buffer_stack = _3;
  if (_3 == 0B)
    goto <bb 4>;
  else
    goto <bb 8>;
;;    succ:       4
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  _12 = _9 + 18446744073709551552;
  _13 = _3 + _12;
  # DEBUG __dest => _13
  # DEBUG __ch => 0
  # DEBUG __len => 64
  __builtin_memset (_13, 0, 64);
  # DEBUG __dest => NULL
  # DEBUG __ch => NULL
  # DEBUG __len => NULL
  yy_buffer_stack_max = num_to_alloc_8;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       5
;;                6
;;                8
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _2 = yy_buffer_stack;

(insn 5 4 0 (set (reg/f:DI 87 [ D.6619 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1811 -1
     (nil))

;; if (_2 == 0B)

(insn 6 5 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.6619 ])
            (const_int 0 [0]))) lex.yy.c:1811 -1
     (nil))

(jump_insn 7 6 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1811 -1
     (int_list:REG_BR_PROB 9328 (nil)))

;; Generating RTL for gimple basic block 3

;; # DEBUG num_to_alloc => 1

(debug_insn 9 8 0 (var_location:DI num_to_alloc (const_int 0 [0])) lex.yy.c:1817 -1
     (nil))
;; # DEBUG size => 8

(debug_insn 10 9 0 (var_location:DI size (const_int 0 [0])) lex.yy.c:1819 -1
     (nil))
;; _19 = __builtin_calloc (8, 1);

(insn 11 10 12 (set (reg:DI 4 si)
        (const_int 1 [0x1])) lex.yy.c:2123 -1
     (nil))

(insn 12 11 13 (set (reg:DI 5 di)
        (const_int 8 [0x8])) lex.yy.c:2123 -1
     (nil))

(call_insn 13 12 14 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x7f88bc316438 __builtin_calloc>) [0 __builtin_calloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x7f88bc316438 __builtin_calloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 14 13 15 (set (reg/f:DI 97)
        (reg:DI 0 ax)) lex.yy.c:2123 -1
     (expr_list:REG_NOALIAS (reg/f:DI 97)
        (nil)))

(insn 15 14 0 (set (reg/f:DI 96 [ D.6620 ])
        (reg/f:DI 97)) lex.yy.c:2123 -1
     (nil))

;; # DEBUG size => NULL

(debug_insn 16 15 0 (var_location:DI size (const_int 0 [0])) lex.yy.c:1819 -1
     (nil))
;; yy_buffer_stack = _19;

(insn 17 16 0 (set (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (reg/f:DI 96 [ D.6620 ])) lex.yy.c:1820 -1
     (nil))

;; if (_19 == 0B)

(insn 18 17 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 96 [ D.6620 ])
            (const_int 0 [0]))) lex.yy.c:1821 -1
     (nil))

(jump_insn 19 18 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1821 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 4

;; yy_fatal_error ("out of dynamic memory in yyensure_buffer_stack()");

(insn 21 20 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f88bbee21b0 *.LC3>)) lex.yy.c:1822 -1
     (nil))

(call_insn 22 21 23 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1822 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 23 22 0)

;; Generating RTL for gimple basic block 5

;; 

(code_label 24 23 25 25 "" [0 uses])

(note 25 24 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG __dest => _19

(debug_insn 26 25 0 (var_location:DI __dest (const_int 0 [0])) lex.yy.c:1824 -1
     (nil))
;; # DEBUG __ch => 0

(debug_insn 27 26 0 (var_location:SI __ch (const_int 0 [0])) lex.yy.c:1824 -1
     (nil))
;; # DEBUG __len => 8

(debug_insn 28 27 0 (var_location:DI __len (const_int 0 [0])) lex.yy.c:1824 -1
     (nil))
;; # DEBUG __dest => NULL

(debug_insn 29 28 0 (var_location:DI __dest (const_int 0 [0])) lex.yy.c:1824 -1
     (nil))
;; # DEBUG __ch => NULL

(debug_insn 30 29 0 (var_location:SI __ch (const_int 0 [0])) lex.yy.c:1824 -1
     (nil))
;; # DEBUG __len => NULL

(debug_insn 31 30 0 (var_location:DI __len (const_int 0 [0])) lex.yy.c:1824 -1
     (nil))
;; yy_buffer_stack_max = 1;

(insn 32 31 0 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_max") [flags 0x2]  <var_decl 0x7f88bc0801b0 yy_buffer_stack_max>) [4 yy_buffer_stack_max+0 S8 A64])
        (const_int 1 [0x1])) lex.yy.c:1826 -1
     (nil))

;; yy_buffer_stack_top = 0;

(insn 33 32 0 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:1827 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 36 35 37 24 "" [0 uses])

(note 37 36 0 NOTE_INSN_BASIC_BLOCK)

;; _5 = yy_buffer_stack_max;

(insn 38 37 0 (set (reg:DI 89 [ D.6621 ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_max") [flags 0x2]  <var_decl 0x7f88bc0801b0 yy_buffer_stack_max>) [4 yy_buffer_stack_max+0 S8 A64])) lex.yy.c:1831 -1
     (nil))

;; if (_6 <= _7)

(insn 39 38 40 (parallel [
            (set (reg:DI 98 [ D.6621 ])
                (plus:DI (reg:DI 89 [ D.6621 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1831 -1
     (nil))

(insn 40 39 41 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 98 [ D.6621 ])
            (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64]))) lex.yy.c:1831 -1
     (nil))

(jump_insn 41 40 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1831 -1
     (int_list:REG_BR_PROB 6102 (nil)))

;; Generating RTL for gimple basic block 7

;; # DEBUG grow_size => 8

(debug_insn 43 42 0 (var_location:DI grow_size (const_int 0 [0])) lex.yy.c:1834 -1
     (nil))
;; num_to_alloc_8 = _5 + 8;

(insn 44 43 0 (parallel [
            (set (reg/v:DI 92 [ num_to_alloc ])
                (plus:DI (reg:DI 89 [ D.6621 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1836 -1
     (nil))

;; # DEBUG num_to_alloc => num_to_alloc_8

(debug_insn 45 44 0 (var_location:DI num_to_alloc (const_int 0 [0])) lex.yy.c:1836 -1
     (nil))
;; _9 = num_to_alloc_8 * 8;

(insn 46 45 0 (parallel [
            (set (reg:DI 93 [ D.6621 ])
                (ashift:DI (reg/v:DI 92 [ num_to_alloc ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1838 -1
     (nil))

;; # DEBUG ptr => _2

(debug_insn 47 46 0 (var_location:DI ptr (const_int 0 [0])) lex.yy.c:1838 -1
     (nil))
;; # DEBUG size => _9

(debug_insn 48 47 0 (var_location:DI size (const_int 0 [0])) lex.yy.c:1838 -1
     (nil))
;; _3 = realloc (_2, _9);

(insn 49 48 50 (set (reg:DI 4 si)
        (reg:DI 93 [ D.6621 ])) lex.yy.c:2136 -1
     (nil))

(insn 50 49 51 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.6619 ])) lex.yy.c:2136 -1
     (nil))

(call_insn 51 50 52 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2136 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 52 51 0 (set (reg/f:DI 88 [ D.6620 ])
        (reg:DI 0 ax)) lex.yy.c:2136 -1
     (nil))

;; # DEBUG ptr => NULL

(debug_insn 53 52 0 (var_location:DI ptr (const_int 0 [0])) lex.yy.c:1838 -1
     (nil))
;; # DEBUG size => NULL

(debug_insn 54 53 0 (var_location:DI size (const_int 0 [0])) lex.yy.c:1838 -1
     (nil))
;; yy_buffer_stack = _3;

(insn 55 54 0 (set (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (reg/f:DI 88 [ D.6620 ])) lex.yy.c:1840 -1
     (nil))

;; if (_3 == 0B)

(insn 57 55 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.6620 ])
            (const_int 0 [0]))) lex.yy.c:1841 -1
     (nil))

(jump_insn 58 57 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) lex.yy.c:1841 -1
     (int_list:REG_BR_PROB 4 (nil)))

;; Generating RTL for gimple basic block 8

;; # DEBUG __dest => _13

(debug_insn 60 59 0 (var_location:DI __dest (const_int 0 [0])) lex.yy.c:1845 -1
     (nil))
;; # DEBUG __ch => 0

(debug_insn 61 60 0 (var_location:SI __ch (const_int 0 [0])) lex.yy.c:1845 -1
     (nil))
;; # DEBUG __len => 64

(debug_insn 62 61 0 (var_location:DI __len (const_int 0 [0])) lex.yy.c:1845 -1
     (nil))
;; __builtin_memset (_13, 0, 64);

(insn 63 62 64 (parallel [
            (set (reg:DI 99 [ D.6621 ])
                (plus:DI (reg:DI 93 [ D.6621 ])
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/string3.h:90 -1
     (nil))

(insn 64 63 65 (parallel [
            (set (reg:DI 100 [ D.6619 ])
                (plus:DI (reg/f:DI 88 [ D.6620 ])
                    (reg:DI 99 [ D.6621 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/string3.h:90 -1
     (nil))

(insn 65 64 66 (set (reg/f:DI 101)
        (reg:DI 100 [ D.6619 ])) /usr/include/x86_64-linux-gnu/bits/string3.h:90 -1
     (nil))

(insn 66 65 67 (set (reg:DI 102)
        (const_int 0 [0])) /usr/include/x86_64-linux-gnu/bits/string3.h:90 -1
     (nil))

(insn 67 66 68 (set (reg:DI 103)
        (const_int 8 [0x8])) /usr/include/x86_64-linux-gnu/bits/string3.h:90 -1
     (nil))

(insn 68 67 0 (parallel [
            (set (reg:DI 103)
                (const_int 0 [0]))
            (set (reg/f:DI 101)
                (plus:DI (ashift:DI (reg:DI 103)
                        (const_int 3 [0x3]))
                    (reg/f:DI 101)))
            (set (mem:BLK (reg/f:DI 101) [0 MEM[(void *)_13]+0 S64 A64])
                (const_int 0 [0]))
            (use (reg:DI 102))
            (use (reg:DI 103))
        ]) /usr/include/x86_64-linux-gnu/bits/string3.h:90 -1
     (nil))

;; # DEBUG __dest => NULL

(debug_insn 69 68 0 (var_location:DI __dest (const_int 0 [0])) lex.yy.c:1845 -1
     (nil))
;; # DEBUG __ch => NULL

(debug_insn 70 69 0 (var_location:SI __ch (const_int 0 [0])) lex.yy.c:1845 -1
     (nil))
;; # DEBUG __len => NULL

(debug_insn 71 70 0 (var_location:DI __len (const_int 0 [0])) lex.yy.c:1845 -1
     (nil))
;; yy_buffer_stack_max = num_to_alloc_8;

(insn 72 71 0 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_max") [flags 0x2]  <var_decl 0x7f88bc0801b0 yy_buffer_stack_max>) [4 yy_buffer_stack_max+0 S8 A64])
        (reg/v:DI 92 [ num_to_alloc ])) lex.yy.c:1846 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 73 72 74 26 "" [0 uses])

(note 74 73 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Redirecting jump 34 from 10 to 11.
Edge 7->10 redirected to 11
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 87 [ D.6619 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1811 -1
     (nil))
(insn 6 5 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.6619 ])
            (const_int 0 [0]))) lex.yy.c:1811 -1
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) lex.yy.c:1811 -1
     (int_list:REG_BR_PROB 9328 (nil))
 -> 36)
;;  succ:       4 [6.7%]  (FALLTHRU)
;;              7 [93.3%] 

;; basic block 4, loop depth 0, count 0, freq 672, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [6.7%]  (FALLTHRU)
(note 8 7 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 9 8 10 4 (var_location:DI num_to_alloc (const_int 1 [0x1])) lex.yy.c:1817 -1
     (nil))
(debug_insn 10 9 11 4 (var_location:DI size (const_int 8 [0x8])) lex.yy.c:1819 -1
     (nil))
(insn 11 10 12 4 (set (reg:DI 4 si)
        (const_int 1 [0x1])) lex.yy.c:2123 -1
     (nil))
(insn 12 11 13 4 (set (reg:DI 5 di)
        (const_int 8 [0x8])) lex.yy.c:2123 -1
     (nil))
(call_insn 13 12 14 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x7f88bc316438 __builtin_calloc>) [0 __builtin_calloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x7f88bc316438 __builtin_calloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 13 15 4 (set (reg/f:DI 97)
        (reg:DI 0 ax)) lex.yy.c:2123 -1
     (expr_list:REG_NOALIAS (reg/f:DI 97)
        (nil)))
(insn 15 14 16 4 (set (reg/f:DI 96 [ D.6620 ])
        (reg/f:DI 97)) lex.yy.c:2123 -1
     (nil))
(debug_insn 16 15 17 4 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1819 -1
     (nil))
(insn 17 16 18 4 (set (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (reg/f:DI 96 [ D.6620 ])) lex.yy.c:1820 -1
     (nil))
(insn 18 17 19 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 96 [ D.6620 ])
            (const_int 0 [0]))) lex.yy.c:1821 -1
     (nil))
(jump_insn 19 18 56 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) lex.yy.c:1821 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 24)
;;  succ:       5 [0.0%]  (FALLTHRU)
;;              6 [100.0%] 

;; basic block 5, loop depth 0, count 0, freq 1
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [0.0%]  (FALLTHRU)
;;              8 [0.0%] 
(code_label 56 19 20 5 27 "" [1 uses])
(note 20 56 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f88bbee21b0 *.LC3>)) lex.yy.c:1822 -1
     (nil))
(call_insn 22 21 23 5 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1822 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 23 22 24)
;; basic block 6, loop depth 0, count 0, freq 672, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%] 
(code_label 24 23 25 6 25 "" [1 uses])
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 26 25 27 6 (var_location:DI __dest (reg/f:DI 96 [ D.6620 ])) lex.yy.c:1824 -1
     (nil))
(debug_insn 27 26 28 6 (var_location:SI __ch (const_int 0 [0])) lex.yy.c:1824 -1
     (nil))
(debug_insn 28 27 29 6 (var_location:DI __len (const_int 8 [0x8])) lex.yy.c:1824 -1
     (nil))
(debug_insn 29 28 30 6 (var_location:DI __dest (clobber (const_int 0 [0]))) lex.yy.c:1824 -1
     (nil))
(debug_insn 30 29 31 6 (var_location:SI __ch (clobber (const_int 0 [0]))) lex.yy.c:1824 -1
     (nil))
(debug_insn 31 30 32 6 (var_location:DI __len (clobber (const_int 0 [0]))) lex.yy.c:1824 -1
     (nil))
(insn 32 31 33 6 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_max") [flags 0x2]  <var_decl 0x7f88bc0801b0 yy_buffer_stack_max>) [4 yy_buffer_stack_max+0 S8 A64])
        (const_int 1 [0x1])) lex.yy.c:1826 -1
     (nil))
(insn 33 32 34 6 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:1827 -1
     (nil))
(jump_insn 34 33 35 6 (set (pc)
        (label_ref:DI 75)) lex.yy.c:1827 654 {jump}
     (nil)
 -> 75)
;;  succ:       11 [100.0%] 

(barrier 35 34 36)
;; basic block 7, loop depth 0, count 0, freq 9328, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [93.3%] 
(code_label 36 35 37 7 24 "" [1 uses])
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 7 (set (reg:DI 89 [ D.6621 ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_max") [flags 0x2]  <var_decl 0x7f88bc0801b0 yy_buffer_stack_max>) [4 yy_buffer_stack_max+0 S8 A64])) lex.yy.c:1831 -1
     (nil))
(insn 39 38 40 7 (parallel [
            (set (reg:DI 98 [ D.6621 ])
                (plus:DI (reg:DI 89 [ D.6621 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1831 -1
     (nil))
(insn 40 39 41 7 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 98 [ D.6621 ])
            (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64]))) lex.yy.c:1831 -1
     (nil))
(jump_insn 41 40 42 7 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 75)
            (pc))) lex.yy.c:1831 612 {*jcc_1}
     (int_list:REG_BR_PROB 6102 (nil))
 -> 75)
;;  succ:       8 [39.0%]  (FALLTHRU)
;;              11 [61.0%] 

;; basic block 8, loop depth 0, count 0, freq 3636, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [39.0%]  (FALLTHRU)
(note 42 41 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 43 42 44 8 (var_location:DI grow_size (const_int 8 [0x8])) lex.yy.c:1834 -1
     (nil))
(insn 44 43 45 8 (parallel [
            (set (reg/v:DI 92 [ num_to_alloc ])
                (plus:DI (reg:DI 89 [ D.6621 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1836 -1
     (nil))
(debug_insn 45 44 46 8 (var_location:DI num_to_alloc (reg/v:DI 92 [ num_to_alloc ])) lex.yy.c:1836 -1
     (nil))
(insn 46 45 47 8 (parallel [
            (set (reg:DI 93 [ D.6621 ])
                (ashift:DI (reg/v:DI 92 [ num_to_alloc ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1838 -1
     (nil))
(debug_insn 47 46 48 8 (var_location:DI ptr (reg/f:DI 87 [ D.6619 ])) lex.yy.c:1838 -1
     (nil))
(debug_insn 48 47 49 8 (var_location:DI size (reg:DI 93 [ D.6621 ])) lex.yy.c:1838 -1
     (nil))
(insn 49 48 50 8 (set (reg:DI 4 si)
        (reg:DI 93 [ D.6621 ])) lex.yy.c:2136 -1
     (nil))
(insn 50 49 51 8 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.6619 ])) lex.yy.c:2136 -1
     (nil))
(call_insn 51 50 52 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2136 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 52 51 53 8 (set (reg/f:DI 88 [ D.6620 ])
        (reg:DI 0 ax)) lex.yy.c:2136 -1
     (nil))
(debug_insn 53 52 54 8 (var_location:DI ptr (clobber (const_int 0 [0]))) lex.yy.c:1838 -1
     (nil))
(debug_insn 54 53 55 8 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1838 -1
     (nil))
(insn 55 54 57 8 (set (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (reg/f:DI 88 [ D.6620 ])) lex.yy.c:1840 -1
     (nil))
(insn 57 55 58 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.6620 ])
            (const_int 0 [0]))) lex.yy.c:1841 -1
     (nil))
(jump_insn 58 57 59 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 56)
            (pc))) lex.yy.c:1841 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 56)
;;  succ:       5 [0.0%] 
;;              9 [100.0%]  (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 3635, maybe hot
;;  prev block 8, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 [100.0%]  (FALLTHRU)
(note 59 58 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 60 59 61 9 (var_location:DI __dest (plus:DI (plus:DI (reg/f:DI 88 [ D.6620 ])
            (reg:DI 93 [ D.6621 ]))
        (const_int -64 [0xffffffffffffffc0]))) lex.yy.c:1845 -1
     (nil))
(debug_insn 61 60 62 9 (var_location:SI __ch (const_int 0 [0])) lex.yy.c:1845 -1
     (nil))
(debug_insn 62 61 63 9 (var_location:DI __len (const_int 64 [0x40])) lex.yy.c:1845 -1
     (nil))
(insn 63 62 64 9 (parallel [
            (set (reg:DI 99 [ D.6621 ])
                (plus:DI (reg:DI 93 [ D.6621 ])
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/string3.h:90 -1
     (nil))
(insn 64 63 65 9 (parallel [
            (set (reg:DI 100 [ D.6619 ])
                (plus:DI (reg/f:DI 88 [ D.6620 ])
                    (reg:DI 99 [ D.6621 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/string3.h:90 -1
     (nil))
(insn 65 64 66 9 (set (reg/f:DI 101)
        (reg:DI 100 [ D.6619 ])) /usr/include/x86_64-linux-gnu/bits/string3.h:90 -1
     (nil))
(insn 66 65 67 9 (set (reg:DI 102)
        (const_int 0 [0])) /usr/include/x86_64-linux-gnu/bits/string3.h:90 -1
     (nil))
(insn 67 66 68 9 (set (reg:DI 103)
        (const_int 8 [0x8])) /usr/include/x86_64-linux-gnu/bits/string3.h:90 -1
     (nil))
(insn 68 67 69 9 (parallel [
            (set (reg:DI 103)
                (const_int 0 [0]))
            (set (reg/f:DI 101)
                (plus:DI (ashift:DI (reg:DI 103)
                        (const_int 3 [0x3]))
                    (reg/f:DI 101)))
            (set (mem:BLK (reg/f:DI 101) [0 MEM[(void *)_13]+0 S64 A64])
                (const_int 0 [0]))
            (use (reg:DI 102))
            (use (reg:DI 103))
        ]) /usr/include/x86_64-linux-gnu/bits/string3.h:90 -1
     (nil))
(debug_insn 69 68 70 9 (var_location:DI __dest (clobber (const_int 0 [0]))) lex.yy.c:1845 -1
     (nil))
(debug_insn 70 69 71 9 (var_location:SI __ch (clobber (const_int 0 [0]))) lex.yy.c:1845 -1
     (nil))
(debug_insn 71 70 72 9 (var_location:DI __len (clobber (const_int 0 [0]))) lex.yy.c:1845 -1
     (nil))
(insn 72 71 75 9 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_max") [flags 0x2]  <var_decl 0x7f88bc0801b0 yy_buffer_stack_max>) [4 yy_buffer_stack_max+0 S8 A64])
        (reg/v:DI 92 [ num_to_alloc ])) lex.yy.c:1846 -1
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)

;; basic block 11, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              6 [100.0%] 
;;              7 [61.0%] 
(code_label 75 72 76 11 23 "" [2 uses])
(note 76 75 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void yy_switch_to_buffer(YY_BUFFER_STATE) (_Z19yy_switch_to_bufferP15yy_buffer_state, funcdef_no=92, decl_uid=4254, cgraph_uid=92, symbol_order=119)

void yy_switch_to_buffer(YY_BUFFER_STATE) (struct yy_buffer_state * new_buffer)
{
  long unsigned int pretmp_1;
  struct yy_buffer_state * * yy_buffer_stack.90_6;
  long unsigned int yy_buffer_stack_top.91_7;
  long unsigned int _8;
  struct yy_buffer_state * * _9;
  struct yy_buffer_state * iftmp.89_10;
  char * yy_c_buf_p.92_16;
  char yy_hold_char.93_17;
  struct yy_buffer_state * _19;
  struct yy_buffer_state * _21;
  int yy_n_chars.94_22;
  struct yy_buffer_state * * prephitmp_29;
  int yy_n_chars.37_30;
  char * yy_c_buf_p.38_31;
  struct yy_buffer_state * _32;
  struct FILE * yyin.40_33;
  char yy_hold_char.41_34;
  struct yy_buffer_state * * pretmp_44;
  long unsigned int pretmp_46;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  yyensure_buffer_stack ();
  yy_buffer_stack.90_6 = yy_buffer_stack;
  if (yy_buffer_stack.90_6 != 0B)
    goto <bb 3>;
  else
    goto <bb 8>;
;;    succ:       3
;;                8

;;   basic block 3, loop depth 0
;;    pred:       2
  yy_buffer_stack_top.91_7 = yy_buffer_stack_top;
  _8 = yy_buffer_stack_top.91_7 * 8;
  _9 = yy_buffer_stack.90_6 + _8;
  iftmp.89_10 = *_9;
  if (iftmp.89_10 == new_buffer_11(D))
    goto <bb 7>;
  else
    goto <bb 4>;
;;    succ:       7
;;                4

;;   basic block 4, loop depth 0
;;    pred:       3
  if (iftmp.89_10 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  yy_c_buf_p.92_16 = yy_c_buf_p;
  yy_hold_char.93_17 = yy_hold_char;
  *yy_c_buf_p.92_16 = yy_hold_char.93_17;
  _19 = *_9;
  _19->yy_buf_pos = yy_c_buf_p.92_16;
  _21 = *_9;
  yy_n_chars.94_22 = yy_n_chars;
  _21->yy_n_chars = yy_n_chars.94_22;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       9
;;                4
;;                5
  # prephitmp_29 = PHI <pretmp_44(9), _9(4), _9(5)>
  *prephitmp_29 = new_buffer_11(D);
  yy_n_chars.37_30 = new_buffer_11(D)->yy_n_chars;
  yy_n_chars = yy_n_chars.37_30;
  yy_c_buf_p.38_31 = new_buffer_11(D)->yy_buf_pos;
  yy_c_buf_p = yy_c_buf_p.38_31;
  yytext = yy_c_buf_p.38_31;
  _32 = *prephitmp_29;
  yyin.40_33 = _32->yy_input_file;
  yyin = yyin.40_33;
  yy_hold_char.41_34 = *yy_c_buf_p.38_31;
  yy_hold_char = yy_hold_char.41_34;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       8
;;                6
;;                3
  return;
;;    succ:       EXIT

;;   basic block 8, loop depth 0
;;    pred:       2
  if (new_buffer_11(D) == 0B)
    goto <bb 7>;
  else
    goto <bb 9>;
;;    succ:       7
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
  pretmp_46 = yy_buffer_stack_top;
  pretmp_1 = pretmp_46 * 8;
  pretmp_44 = (struct yy_buffer_state * *) pretmp_1;
  goto <bb 6>;
;;    succ:       6

}



Partition map 

Partition 1 (pretmp_1 - 1 )
Partition 6 (yy_buffer_stack.90_6 - 6 )
Partition 7 (yy_buffer_stack_top.91_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (iftmp.89_10 - 10 )
Partition 11 (new_buffer_11(D) - 11 )
Partition 16 (yy_c_buf_p.92_16 - 16 )
Partition 17 (yy_hold_char.93_17 - 17 )
Partition 19 (_19 - 19 )
Partition 21 (_21 - 21 )
Partition 22 (yy_n_chars.94_22 - 22 )
Partition 29 (prephitmp_29 - 29 )
Partition 30 (yy_n_chars.37_30 - 30 )
Partition 31 (yy_c_buf_p.38_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (yyin.40_33 - 33 )
Partition 34 (yy_hold_char.41_34 - 34 )
Partition 44 (pretmp_44 - 44 )
Partition 46 (pretmp_46 - 46 )


Partition map 

Partition 0 (_9 - 9 )
Partition 1 (new_buffer_11(D) - 11 )
Partition 2 (prephitmp_29 - 29 )
Partition 3 (pretmp_44 - 44 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(8784) _9 <-> prephitmp_29
(1348) prephitmp_29 <-> pretmp_44

Partition map 

Partition 0 (_9 - 9 )
Partition 1 (new_buffer_11(D) - 11 )
Partition 2 (prephitmp_29 - 29 )
Partition 3 (pretmp_44 - 44 )

Coalesce list: (9)_9 & (29)prephitmp_29 [map: 0, 2] : Success -> 0
Coalesce list: (29)_9 & (44)pretmp_44 [map: 0, 3] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (pretmp_1 - 1 )
Partition 1 (yy_buffer_stack.90_6 - 6 )
Partition 2 (yy_buffer_stack_top.91_7 - 7 )
Partition 3 (_8 - 8 )
Partition 4 (_9 - 9 29 44 )
Partition 5 (iftmp.89_10 - 10 )
Partition 6 (new_buffer_11(D) - 11 )
Partition 7 (yy_c_buf_p.92_16 - 16 )
Partition 8 (yy_hold_char.93_17 - 17 )
Partition 9 (_19 - 19 )
Partition 10 (_21 - 21 )
Partition 11 (yy_n_chars.94_22 - 22 )
Partition 12 (yy_n_chars.37_30 - 30 )
Partition 13 (yy_c_buf_p.38_31 - 31 )
Partition 14 (_32 - 32 )
Partition 15 (yyin.40_33 - 33 )
Partition 16 (yy_hold_char.41_34 - 34 )
Partition 17 (pretmp_46 - 46 )


Replacing Expressions
pretmp_1 replace with --> pretmp_1 = pretmp_46 * 8;

yy_buffer_stack_top.91_7 replace with --> yy_buffer_stack_top.91_7 = yy_buffer_stack_top;

_8 replace with --> _8 = yy_buffer_stack_top.91_7 * 8;

yy_hold_char.93_17 replace with --> yy_hold_char.93_17 = yy_hold_char;

_21 replace with --> _21 = *_9;

yy_n_chars.94_22 replace with --> yy_n_chars.94_22 = yy_n_chars;

yy_n_chars.37_30 replace with --> yy_n_chars.37_30 = new_buffer_11(D)->yy_n_chars;

_32 replace with --> _32 = *prephitmp_29;

yyin.40_33 replace with --> yyin.40_33 = _32->yy_input_file;

yy_hold_char.41_34 replace with --> yy_hold_char.41_34 = *yy_c_buf_p.38_31;

pretmp_46 replace with --> pretmp_46 = yy_buffer_stack_top;


void yy_switch_to_buffer(YY_BUFFER_STATE) (struct yy_buffer_state * new_buffer)
{
  long unsigned int pretmp_1;
  struct yy_buffer_state * * yy_buffer_stack.90_6;
  long unsigned int yy_buffer_stack_top.91_7;
  long unsigned int _8;
  struct yy_buffer_state * * _9;
  struct yy_buffer_state * iftmp.89_10;
  char * yy_c_buf_p.92_16;
  char yy_hold_char.93_17;
  struct yy_buffer_state * _19;
  struct yy_buffer_state * _21;
  int yy_n_chars.94_22;
  struct yy_buffer_state * * prephitmp_29;
  int yy_n_chars.37_30;
  char * yy_c_buf_p.38_31;
  struct yy_buffer_state * _32;
  struct FILE * yyin.40_33;
  char yy_hold_char.41_34;
  struct yy_buffer_state * * pretmp_44;
  long unsigned int pretmp_46;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  yyensure_buffer_stack ();
  yy_buffer_stack.90_6 = yy_buffer_stack;
  if (yy_buffer_stack.90_6 != 0B)
    goto <bb 3>;
  else
    goto <bb 8>;
;;    succ:       3
;;                8

;;   basic block 3, loop depth 0
;;    pred:       2
  yy_buffer_stack_top.91_7 = yy_buffer_stack_top;
  _8 = yy_buffer_stack_top.91_7 * 8;
  _9 = yy_buffer_stack.90_6 + _8;
  iftmp.89_10 = *_9;
  if (iftmp.89_10 == new_buffer_11(D))
    goto <bb 7>;
  else
    goto <bb 4>;
;;    succ:       7
;;                4

;;   basic block 4, loop depth 0
;;    pred:       3
  if (iftmp.89_10 != 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  yy_c_buf_p.92_16 = yy_c_buf_p;
  yy_hold_char.93_17 = yy_hold_char;
  *yy_c_buf_p.92_16 = yy_hold_char.93_17;
  _19 = *_9;
  _19->yy_buf_pos = yy_c_buf_p.92_16;
  _21 = *_9;
  yy_n_chars.94_22 = yy_n_chars;
  _21->yy_n_chars = yy_n_chars.94_22;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       9
;;                4
;;                5
  # prephitmp_29 = PHI <pretmp_44(9), _9(4), _9(5)>
  *prephitmp_29 = new_buffer_11(D);
  yy_n_chars.37_30 = new_buffer_11(D)->yy_n_chars;
  yy_n_chars = yy_n_chars.37_30;
  yy_c_buf_p.38_31 = new_buffer_11(D)->yy_buf_pos;
  yy_c_buf_p = yy_c_buf_p.38_31;
  yytext = yy_c_buf_p.38_31;
  _32 = *prephitmp_29;
  yyin.40_33 = _32->yy_input_file;
  yyin = yyin.40_33;
  yy_hold_char.41_34 = *yy_c_buf_p.38_31;
  yy_hold_char = yy_hold_char.41_34;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       8
;;                6
;;                3
  return;
;;    succ:       EXIT

;;   basic block 8, loop depth 0
;;    pred:       2
  if (new_buffer_11(D) == 0B)
    goto <bb 7>;
  else
    goto <bb 9>;
;;    succ:       7
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
  pretmp_46 = yy_buffer_stack_top;
  pretmp_1 = pretmp_46 * 8;
  pretmp_44 = (struct yy_buffer_state * *) pretmp_1;
  goto <bb 6>;
;;    succ:       6

}



;; Generating RTL for gimple basic block 2

;; yyensure_buffer_stack ();

(call_insn 6 5 0 (call (mem:QI (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>) [0 yyensure_buffer_stack S1 A8])
        (const_int 0 [0])) lex.yy.c:1617 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>)
        (nil))
    (nil))

;; _6 = yy_buffer_stack;

(insn 7 6 0 (set (reg/f:DI 88 [ D.6626 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1618 -1
     (nil))

;; if (_6 != 0B)

(insn 8 7 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.6626 ])
            (const_int 0 [0]))) lex.yy.c:1618 -1
     (nil))

(jump_insn 9 8 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1618 -1
     (int_list:REG_BR_PROB 1500 (nil)))

;; Generating RTL for gimple basic block 3

;; _9 = _6 + _8;

(insn 11 10 12 (set (reg:DI 106)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1618 -1
     (nil))

(insn 12 11 13 (parallel [
            (set (reg:DI 105 [ D.6625 ])
                (ashift:DI (reg:DI 106)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1618 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))

(insn 13 12 0 (parallel [
            (set (reg/f:DI 91 [ D.6626 ])
                (plus:DI (reg/f:DI 88 [ D.6626 ])
                    (reg:DI 105 [ D.6625 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1618 -1
     (nil))

;; _10 = *_9;

(insn 14 13 0 (set (reg/f:DI 92 [ D.6627 ])
        (mem/f:DI (reg/f:DI 91 [ D.6626 ]) [1 *_9+0 S8 A64])) lex.yy.c:1618 -1
     (nil))

;; if (_10 == new_buffer_11(D))

(insn 15 14 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.6627 ])
            (reg/v/f:DI 104 [ new_buffer ]))) lex.yy.c:1618 -1
     (nil))

(jump_insn 16 15 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1618 -1
     (int_list:REG_BR_PROB 1014 (nil)))

;; Generating RTL for gimple basic block 4

;; if (_10 != 0B)

(insn 18 17 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.6627 ])
            (const_int 0 [0]))) lex.yy.c:1621 -1
     (nil))

(jump_insn 19 18 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1621 -1
     (int_list:REG_BR_PROB 1500 (nil)))

;; Generating RTL for gimple basic block 5

;; _16 = yy_c_buf_p;

(insn 21 20 0 (set (reg/f:DI 93 [ D.6628 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) lex.yy.c:1624 -1
     (nil))

;; *_16 = _17;

(insn 22 21 23 (set (reg:QI 107)
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) lex.yy.c:1624 -1
     (nil))

(insn 23 22 0 (set (mem:QI (reg/f:DI 93 [ D.6628 ]) [0 *_16+0 S1 A8])
        (reg:QI 107)) lex.yy.c:1624 -1
     (nil))

;; _19 = *_9;

(insn 24 23 0 (set (reg/f:DI 95 [ D.6630 ])
        (mem/f:DI (reg/f:DI 91 [ D.6626 ]) [1 *_9+0 S8 A64])) lex.yy.c:1625 -1
     (nil))

;; _19->yy_buf_pos = _16;

(insn 25 24 0 (set (mem/f:DI (plus:DI (reg/f:DI 95 [ D.6630 ])
                (const_int 16 [0x10])) [1 _19->yy_buf_pos+0 S8 A64])
        (reg/f:DI 93 [ D.6628 ])) lex.yy.c:1625 -1
     (nil))

;; _21->yy_n_chars = _22;

(insn 26 25 27 (set (reg/f:DI 108)
        (mem/f:DI (reg/f:DI 91 [ D.6626 ]) [1 *_9+0 S8 A64])) lex.yy.c:1626 -1
     (nil))

(insn 27 26 28 (set (reg:SI 109)
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) lex.yy.c:1626 -1
     (nil))

(insn 28 27 0 (set (mem:SI (plus:DI (reg/f:DI 108)
                (const_int 32 [0x20])) [2 _21->yy_n_chars+0 S4 A64])
        (reg:SI 109)) lex.yy.c:1626 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 29 28 30 37 "" [0 uses])

(note 30 29 0 NOTE_INSN_BASIC_BLOCK)

;; *_29 = new_buffer_11(D);

(insn 31 30 0 (set (mem/f:DI (reg/f:DI 91 [ D.6626 ]) [1 *_29+0 S8 A64])
        (reg/v/f:DI 104 [ new_buffer ])) lex.yy.c:1629 -1
     (nil))

;; yy_n_chars = _30;

(insn 32 31 33 (set (reg:SI 110)
        (mem:SI (plus:DI (reg/v/f:DI 104 [ new_buffer ])
                (const_int 32 [0x20])) [2 new_buffer_11(D)->yy_n_chars+0 S4 A64])) lex.yy.c:1642 -1
     (nil))

(insn 33 32 0 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 110)) lex.yy.c:1642 -1
     (nil))

;; _31 = new_buffer_11(D)->yy_buf_pos;

(insn 34 33 0 (set (reg/f:DI 99 [ D.6628 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 104 [ new_buffer ])
                (const_int 16 [0x10])) [1 new_buffer_11(D)->yy_buf_pos+0 S8 A64])) lex.yy.c:1643 -1
     (nil))

;; yy_c_buf_p = _31;

(insn 35 34 0 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 99 [ D.6628 ])) lex.yy.c:1643 -1
     (nil))

;; yytext = _31;

(insn 36 35 0 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 99 [ D.6628 ])) lex.yy.c:1643 -1
     (nil))

;; yyin = _33;

(insn 37 36 38 (set (reg/f:DI 111)
        (mem/f:DI (reg/f:DI 91 [ D.6626 ]) [1 *_29+0 S8 A64])) lex.yy.c:1644 -1
     (nil))

(insn 38 37 39 (set (reg/f:DI 112)
        (mem/f:DI (reg/f:DI 111) [1 _32->yy_input_file+0 S8 A64])) lex.yy.c:1644 -1
     (nil))

(insn 39 38 0 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 112)) lex.yy.c:1644 -1
     (nil))

;; yy_hold_char = _34;

(insn 40 39 41 (set (reg:QI 113)
        (mem:QI (reg/f:DI 99 [ D.6628 ]) [0 *_31+0 S1 A8])) lex.yy.c:1645 -1
     (nil))

(insn 41 40 0 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 113)) lex.yy.c:1645 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 42 41 43 36 "" [0 uses])

(note 43 42 0 NOTE_INSN_BASIC_BLOCK)

;; return;

(jump_insn 44 43 45 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 45 44 0)

;; Generating RTL for gimple basic block 8

;; 

(code_label 46 45 47 35 "" [0 uses])

(note 47 46 0 NOTE_INSN_BASIC_BLOCK)

;; if (new_buffer_11(D) == 0B)

(insn 48 47 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 104 [ new_buffer ])
            (const_int 0 [0]))) lex.yy.c:1618 -1
     (nil))

(jump_insn 49 48 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) lex.yy.c:1618 -1
     (int_list:REG_BR_PROB 1014 (nil)))

;; Generating RTL for gimple basic block 9

;; _44 = (struct yy_buffer_state * *) _1;

(insn 51 50 52 (set (reg:DI 114)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) -1
     (nil))

(insn 52 51 0 (parallel [
            (set (reg/f:DI 91 [ D.6626 ])
                (ashift:DI (reg:DI 114)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 4->8 redirected to 11
Forwarding edge 7->8 to 11 failed.
Edge 9->8 redirected to 11


try_optimize_cfg iteration 2

Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.


try_optimize_cfg iteration 3



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 104 [ new_buffer ])
        (reg:DI 5 di [ new_buffer ])) lex.yy.c:1610 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 3 7 2 (call (mem:QI (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>) [0 yyensure_buffer_stack S1 A8])
        (const_int 0 [0])) lex.yy.c:1617 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>)
        (nil))
    (nil))
(insn 7 6 8 2 (set (reg/f:DI 88 [ D.6626 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1618 -1
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.6626 ])
            (const_int 0 [0]))) lex.yy.c:1618 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) lex.yy.c:1618 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 46)
;;  succ:       4 [85.0%]  (FALLTHRU)
;;              9 [15.0%] 

;; basic block 4, loop depth 0, count 0, freq 8500, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [85.0%]  (FALLTHRU)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg:DI 106)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1618 -1
     (nil))
(insn 12 11 13 4 (parallel [
            (set (reg:DI 105 [ D.6625 ])
                (ashift:DI (reg:DI 106)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1618 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 13 12 14 4 (parallel [
            (set (reg/f:DI 91 [ D.6626 ])
                (plus:DI (reg/f:DI 88 [ D.6626 ])
                    (reg:DI 105 [ D.6625 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1618 -1
     (nil))
(insn 14 13 15 4 (set (reg/f:DI 92 [ D.6627 ])
        (mem/f:DI (reg/f:DI 91 [ D.6626 ]) [1 *_9+0 S8 A64])) lex.yy.c:1618 -1
     (nil))
(insn 15 14 16 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.6627 ])
            (reg/v/f:DI 104 [ new_buffer ]))) lex.yy.c:1618 -1
     (nil))
(jump_insn 16 15 17 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 55)
            (pc))) lex.yy.c:1618 612 {*jcc_1}
     (int_list:REG_BR_PROB 1014 (nil))
 -> 55)
;;  succ:       11 [10.1%] 
;;              5 [89.9%]  (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 7638, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [89.9%]  (FALLTHRU)
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.6627 ])
            (const_int 0 [0]))) lex.yy.c:1621 -1
     (nil))
(jump_insn 19 18 20 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) lex.yy.c:1621 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 29)
;;  succ:       6 [85.0%]  (FALLTHRU)
;;              7 [15.0%] 

;; basic block 6, loop depth 0, count 0, freq 6492, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [85.0%]  (FALLTHRU)
(note 20 19 21 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 6 (set (reg/f:DI 93 [ D.6628 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) lex.yy.c:1624 -1
     (nil))
(insn 22 21 23 6 (set (reg:QI 107)
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) lex.yy.c:1624 -1
     (nil))
(insn 23 22 24 6 (set (mem:QI (reg/f:DI 93 [ D.6628 ]) [0 *_16+0 S1 A8])
        (reg:QI 107)) lex.yy.c:1624 -1
     (nil))
(insn 24 23 25 6 (set (reg/f:DI 95 [ D.6630 ])
        (mem/f:DI (reg/f:DI 91 [ D.6626 ]) [1 *_9+0 S8 A64])) lex.yy.c:1625 -1
     (nil))
(insn 25 24 26 6 (set (mem/f:DI (plus:DI (reg/f:DI 95 [ D.6630 ])
                (const_int 16 [0x10])) [1 _19->yy_buf_pos+0 S8 A64])
        (reg/f:DI 93 [ D.6628 ])) lex.yy.c:1625 -1
     (nil))
(insn 26 25 27 6 (set (reg/f:DI 108)
        (mem/f:DI (reg/f:DI 91 [ D.6626 ]) [1 *_9+0 S8 A64])) lex.yy.c:1626 -1
     (nil))
(insn 27 26 28 6 (set (reg:SI 109)
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) lex.yy.c:1626 -1
     (nil))
(insn 28 27 29 6 (set (mem:SI (plus:DI (reg/f:DI 108)
                (const_int 32 [0x20])) [2 _21->yy_n_chars+0 S4 A64])
        (reg:SI 109)) lex.yy.c:1626 -1
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 6, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 [100.0%] 
;;              5 [15.0%] 
;;              6 [100.0%]  (FALLTHRU)
(code_label 29 28 30 7 37 "" [2 uses])
(note 30 29 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 7 (set (mem/f:DI (reg/f:DI 91 [ D.6626 ]) [1 *_29+0 S8 A64])
        (reg/v/f:DI 104 [ new_buffer ])) lex.yy.c:1629 -1
     (nil))
(insn 32 31 33 7 (set (reg:SI 110)
        (mem:SI (plus:DI (reg/v/f:DI 104 [ new_buffer ])
                (const_int 32 [0x20])) [2 new_buffer_11(D)->yy_n_chars+0 S4 A64])) lex.yy.c:1642 -1
     (nil))
(insn 33 32 34 7 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 110)) lex.yy.c:1642 -1
     (nil))
(insn 34 33 35 7 (set (reg/f:DI 99 [ D.6628 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 104 [ new_buffer ])
                (const_int 16 [0x10])) [1 new_buffer_11(D)->yy_buf_pos+0 S8 A64])) lex.yy.c:1643 -1
     (nil))
(insn 35 34 36 7 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 99 [ D.6628 ])) lex.yy.c:1643 -1
     (nil))
(insn 36 35 37 7 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 99 [ D.6628 ])) lex.yy.c:1643 -1
     (nil))
(insn 37 36 38 7 (set (reg/f:DI 111)
        (mem/f:DI (reg/f:DI 91 [ D.6626 ]) [1 *_29+0 S8 A64])) lex.yy.c:1644 -1
     (nil))
(insn 38 37 39 7 (set (reg/f:DI 112)
        (mem/f:DI (reg/f:DI 111) [1 _32->yy_input_file+0 S8 A64])) lex.yy.c:1644 -1
     (nil))
(insn 39 38 40 7 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 112)) lex.yy.c:1644 -1
     (nil))
(insn 40 39 41 7 (set (reg:QI 113)
        (mem:QI (reg/f:DI 99 [ D.6628 ]) [0 *_31+0 S1 A8])) lex.yy.c:1645 -1
     (nil))
(insn 41 40 44 7 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 113)) lex.yy.c:1645 -1
     (nil))
(jump_insn 44 41 45 7 (set (pc)
        (label_ref 55)) -1
     (nil)
 -> 55)
;;  succ:       11 [100.0%] 

(barrier 45 44 46)
;; basic block 9, loop depth 0, count 0, freq 1500, maybe hot
;;  prev block 7, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [15.0%] 
(code_label 46 45 47 9 35 "" [1 uses])
(note 47 46 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 104 [ new_buffer ])
            (const_int 0 [0]))) lex.yy.c:1618 -1
     (nil))
(jump_insn 49 48 50 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 55)
            (pc))) lex.yy.c:1618 612 {*jcc_1}
     (int_list:REG_BR_PROB 1014 (nil))
 -> 55)
;;  succ:       11 [10.1%] 
;;              10 [89.9%]  (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 1348, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [89.9%]  (FALLTHRU)
(note 50 49 51 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 10 (set (reg:DI 114)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) -1
     (nil))
(insn 52 51 53 10 (parallel [
            (set (reg/f:DI 91 [ D.6626 ])
                (ashift:DI (reg:DI 114)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(jump_insn 53 52 54 10 (set (pc)
        (label_ref 29)) -1
     (nil)
 -> 29)
;;  succ:       7 [100.0%] 

(barrier 54 53 55)
;; basic block 11, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [100.0%] 
;;              4 [10.1%] 
;;              9 [10.1%] 
(code_label 55 54 56 11 34 "" [3 uses])
(note 56 55 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void yy_delete_buffer(YY_BUFFER_STATE) (_Z16yy_delete_bufferP15yy_buffer_state, funcdef_no=95, decl_uid=4259, cgraph_uid=95, symbol_order=122)

void yy_delete_buffer(YY_BUFFER_STATE) (struct yy_buffer_state * b)
{
  struct yy_buffer_state * * yy_buffer_stack.96_7;
  long unsigned int yy_buffer_stack_top.97_8;
  long unsigned int _9;
  struct yy_buffer_state * * _10;
  struct yy_buffer_state * iftmp.95_11;
  int _16;
  char * _17;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (b_5(D) == 0B)
    goto <bb 9>;
  else
    goto <bb 3>;
;;    succ:       9
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  yy_buffer_stack.96_7 = yy_buffer_stack;
  if (yy_buffer_stack.96_7 != 0B)
    goto <bb 4>;
  else
    goto <bb 6>;
;;    succ:       4
;;                6

;;   basic block 4, loop depth 0
;;    pred:       3
  yy_buffer_stack_top.97_8 = yy_buffer_stack_top;
  _9 = yy_buffer_stack_top.97_8 * 8;
  _10 = yy_buffer_stack.96_7 + _9;
  iftmp.95_11 = *_10;
  if (b_5(D) == iftmp.95_11)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  *_10 = 0B;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
;;                3
  _16 = b_5(D)->yy_is_our_buffer;
  if (_16 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  _17 = b_5(D)->yy_ch_buf;
  # DEBUG ptr => _17
  free (_17);
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       6
;;                7
  # DEBUG ptr => b_5(D)
  free (b_5(D)); [tail call]
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       2
;;                8
  return;
;;    succ:       EXIT

}



Partition map 

Partition 5 (b_5(D) - 5 )
Partition 7 (yy_buffer_stack.96_7 - 7 )
Partition 8 (yy_buffer_stack_top.97_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (iftmp.95_11 - 11 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )


Partition map 

Partition 0 (b_5(D) - 5 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (b_5(D) - 5 )

After Coalescing:

Partition map 

Partition 0 (b_5(D) - 5 )
Partition 1 (yy_buffer_stack.96_7 - 7 )
Partition 2 (yy_buffer_stack_top.97_8 - 8 )
Partition 3 (_9 - 9 )
Partition 4 (_10 - 10 )
Partition 5 (iftmp.95_11 - 11 )
Partition 6 (_16 - 16 )
Partition 7 (_17 - 17 )


Replacing Expressions
yy_buffer_stack_top.97_8 replace with --> yy_buffer_stack_top.97_8 = yy_buffer_stack_top;

_9 replace with --> _9 = yy_buffer_stack_top.97_8 * 8;

iftmp.95_11 replace with --> iftmp.95_11 = *_10;

_16 replace with --> _16 = b_5(D)->yy_is_our_buffer;

_17 replace with --> _17 = b_5(D)->yy_ch_buf;


void yy_delete_buffer(YY_BUFFER_STATE) (struct yy_buffer_state * b)
{
  struct yy_buffer_state * * yy_buffer_stack.96_7;
  long unsigned int yy_buffer_stack_top.97_8;
  long unsigned int _9;
  struct yy_buffer_state * * _10;
  struct yy_buffer_state * iftmp.95_11;
  int _16;
  char * _17;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (b_5(D) == 0B)
    goto <bb 9>;
  else
    goto <bb 3>;
;;    succ:       9
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  yy_buffer_stack.96_7 = yy_buffer_stack;
  if (yy_buffer_stack.96_7 != 0B)
    goto <bb 4>;
  else
    goto <bb 6>;
;;    succ:       4
;;                6

;;   basic block 4, loop depth 0
;;    pred:       3
  yy_buffer_stack_top.97_8 = yy_buffer_stack_top;
  _9 = yy_buffer_stack_top.97_8 * 8;
  _10 = yy_buffer_stack.96_7 + _9;
  iftmp.95_11 = *_10;
  if (b_5(D) == iftmp.95_11)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  *_10 = 0B;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
;;                3
  _16 = b_5(D)->yy_is_our_buffer;
  if (_16 != 0)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  _17 = b_5(D)->yy_ch_buf;
  # DEBUG ptr => _17
  free (_17);
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       6
;;                7
  # DEBUG ptr => b_5(D)
  free (b_5(D)); [tail call]
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       2
;;                8
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; if (b_5(D) == 0B)

(insn 6 5 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 94 [ b ])
            (const_int 0 [0]))) lex.yy.c:1685 -1
     (nil))

(jump_insn 7 6 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1685 -1
     (int_list:REG_BR_PROB 1014 (nil)))

;; Generating RTL for gimple basic block 3

;; _7 = yy_buffer_stack;

(insn 9 8 0 (set (reg/f:DI 87 [ D.6635 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1688 -1
     (nil))

;; if (_7 != 0B)

(insn 10 9 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.6635 ])
            (const_int 0 [0]))) lex.yy.c:1688 -1
     (nil))

(jump_insn 11 10 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1688 -1
     (int_list:REG_BR_PROB 1500 (nil)))

;; Generating RTL for gimple basic block 4

;; _10 = _7 + _9;

(insn 13 12 14 (set (reg:DI 96)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1688 -1
     (nil))

(insn 14 13 15 (parallel [
            (set (reg:DI 95 [ D.6636 ])
                (ashift:DI (reg:DI 96)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1688 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))

(insn 15 14 0 (parallel [
            (set (reg/f:DI 90 [ D.6635 ])
                (plus:DI (reg/f:DI 87 [ D.6635 ])
                    (reg:DI 95 [ D.6636 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1688 -1
     (nil))

;; if (b_5(D) == _11)

(insn 16 15 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 94 [ b ])
            (mem/f:DI (reg/f:DI 90 [ D.6635 ]) [1 *_10+0 S8 A64]))) lex.yy.c:1688 -1
     (nil))

(jump_insn 17 16 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1688 -1
     (int_list:REG_BR_PROB 8235 (nil)))

;; Generating RTL for gimple basic block 5

;; *_10 = 0B;

(insn 19 18 0 (set (mem/f:DI (reg/f:DI 90 [ D.6635 ]) [1 *_10+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:1689 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 20 19 21 47 "" [0 uses])

(note 21 20 0 NOTE_INSN_BASIC_BLOCK)

;; if (_16 != 0)

(insn 22 21 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 94 [ b ])
                    (const_int 36 [0x24])) [2 b_5(D)->yy_is_our_buffer+0 S4 A32])
            (const_int 0 [0]))) lex.yy.c:1691 -1
     (nil))

(jump_insn 23 22 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1691 -1
     (int_list:REG_BR_PROB 7100 (nil)))

;; Generating RTL for gimple basic block 7

;; # DEBUG ptr => _17

(debug_insn 25 24 0 (var_location:DI ptr (const_int 0 [0])) lex.yy.c:1692 -1
     (nil))
;; free (_17);

(insn 26 25 27 (set (reg:DI 97)
        (mem/f:DI (plus:DI (reg/v/f:DI 94 [ b ])
                (const_int 8 [0x8])) [1 b_5(D)->yy_ch_buf+0 S8 A64])) lex.yy.c:2141 -1
     (nil))

(insn 27 26 28 (set (reg:DI 5 di)
        (reg:DI 97)) lex.yy.c:2141 -1
     (nil))

(call_insn 28 27 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) lex.yy.c:2141 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 8

;; 

(code_label 29 28 30 48 "" [0 uses])

(note 30 29 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG ptr => b_5(D)

(debug_insn 31 30 0 (var_location:DI ptr (const_int 0 [0])) -1
     (nil))
;; free (b_5(D)); [tail call]

(insn 32 31 33 8 (set (reg:DI 5 di)
        (reg/v/f:DI 94 [ b ])) lex.yy.c:2141 -1
     (nil))

(call_insn/j 33 32 34 8 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) lex.yy.c:2141 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 34 33 0)

;; Generating RTL for gimple basic block 9

;; 

(code_label 35 34 36 46 "" [0 uses])

(note 36 35 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->10 redirected to 11
deleting block 10


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 94 [ b ])
        (reg:DI 5 di [ b ])) lex.yy.c:1683 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 94 [ b ])
            (const_int 0 [0]))) lex.yy.c:1685 -1
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 37)
            (pc))) lex.yy.c:1685 612 {*jcc_1}
     (int_list:REG_BR_PROB 1014 (nil))
 -> 37)
;;  succ:       11 [10.1%] 
;;              4 [89.9%]  (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [89.9%]  (FALLTHRU)
(note 8 7 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 4 (set (reg/f:DI 87 [ D.6635 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1688 -1
     (nil))
(insn 10 9 11 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.6635 ])
            (const_int 0 [0]))) lex.yy.c:1688 -1
     (nil))
(jump_insn 11 10 12 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) lex.yy.c:1688 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 20)
;;  succ:       5 [85.0%]  (FALLTHRU)
;;              7 [15.0%] 

;; basic block 5, loop depth 0, count 0, freq 7638, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [85.0%]  (FALLTHRU)
(note 12 11 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 5 (set (reg:DI 96)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1688 -1
     (nil))
(insn 14 13 15 5 (parallel [
            (set (reg:DI 95 [ D.6636 ])
                (ashift:DI (reg:DI 96)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1688 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 15 14 16 5 (parallel [
            (set (reg/f:DI 90 [ D.6635 ])
                (plus:DI (reg/f:DI 87 [ D.6635 ])
                    (reg:DI 95 [ D.6636 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1688 -1
     (nil))
(insn 16 15 17 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 94 [ b ])
            (mem/f:DI (reg/f:DI 90 [ D.6635 ]) [1 *_10+0 S8 A64]))) lex.yy.c:1688 -1
     (nil))
(jump_insn 17 16 18 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) lex.yy.c:1688 -1
     (int_list:REG_BR_PROB 8235 (nil))
 -> 20)
;;  succ:       6 [17.6%]  (FALLTHRU)
;;              7 [82.3%] 

;; basic block 6, loop depth 0, count 0, freq 1348, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [17.6%]  (FALLTHRU)
(note 18 17 19 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 6 (set (mem/f:DI (reg/f:DI 90 [ D.6635 ]) [1 *_10+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:1689 -1
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [82.3%] 
;;              6 [100.0%]  (FALLTHRU)
;;              4 [15.0%] 
(code_label 20 19 21 7 47 "" [2 uses])
(note 21 20 22 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 94 [ b ])
                    (const_int 36 [0x24])) [2 b_5(D)->yy_is_our_buffer+0 S4 A32])
            (const_int 0 [0]))) lex.yy.c:1691 -1
     (nil))
(jump_insn 23 22 24 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) lex.yy.c:1691 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 29)
;;  succ:       8 [29.0%]  (FALLTHRU)
;;              9 [71.0%] 

;; basic block 8, loop depth 0, count 0, freq 2606, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [29.0%]  (FALLTHRU)
(note 24 23 25 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 25 24 26 8 (var_location:DI ptr (mem/f/j:DI (plus:DI (reg/v/f:DI 94 [ b ])
            (const_int 8 [0x8])) [0 b_5(D)->yy_ch_buf+0 S8 A64])) lex.yy.c:1692 -1
     (nil))
(insn 26 25 27 8 (set (reg:DI 97)
        (mem/f:DI (plus:DI (reg/v/f:DI 94 [ b ])
                (const_int 8 [0x8])) [1 b_5(D)->yy_ch_buf+0 S8 A64])) lex.yy.c:2141 -1
     (nil))
(insn 27 26 28 8 (set (reg:DI 5 di)
        (reg:DI 97)) lex.yy.c:2141 -1
     (nil))
(call_insn 28 27 29 8 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) lex.yy.c:2141 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       9 [100.0%]  (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 8, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [71.0%] 
;;              8 [100.0%]  (FALLTHRU)
(code_label 29 28 30 9 48 "" [1 uses])
(note 30 29 31 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 31 30 32 9 (var_location:DI ptr (reg/v/f:DI 94 [ b ])) -1
     (nil))
(insn 32 31 33 9 (set (reg:DI 5 di)
        (reg/v/f:DI 94 [ b ])) lex.yy.c:2141 -1
     (nil))
(call_insn/j 33 32 34 9 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) lex.yy.c:2141 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)

(barrier 34 33 37)
;; basic block 11, loop depth 0, count 0, freq 1014, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [10.1%] 
(code_label 37 34 38 11 45 "" [1 uses])
(note 38 37 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void yy_flush_buffer(YY_BUFFER_STATE) (_Z15yy_flush_bufferP15yy_buffer_state, funcdef_no=97, decl_uid=4261, cgraph_uid=97, symbol_order=124)

void yy_flush_buffer(YY_BUFFER_STATE) (struct yy_buffer_state * b)
{
  char * _6;
  char * _8;
  char * _10;
  struct yy_buffer_state * * yy_buffer_stack.99_14;
  long unsigned int yy_buffer_stack_top.100_15;
  long unsigned int _16;
  struct yy_buffer_state * * _17;
  struct yy_buffer_state * iftmp.98_18;
  int yy_n_chars.37_24;
  struct yy_buffer_state * _26;
  struct FILE * yyin.40_27;
  char yy_hold_char.41_28;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (b_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
;;                4
;;                5
  goto <bb 7>;
;;    succ:       7

;;   basic block 4, loop depth 0
;;    pred:       2
  b_3(D)->yy_n_chars = 0;
  _6 = b_3(D)->yy_ch_buf;
  *_6 = 0;
  _8 = b_3(D)->yy_ch_buf;
  MEM[(char *)_8 + 1B] = 0;
  _10 = b_3(D)->yy_ch_buf;
  b_3(D)->yy_buf_pos = _10;
  b_3(D)->yy_at_bol = 1;
  b_3(D)->yy_buffer_status = 0;
  yy_buffer_stack.99_14 = yy_buffer_stack;
  if (yy_buffer_stack.99_14 != 0B)
    goto <bb 5>;
  else
    goto <bb 3>;
;;    succ:       5
;;                3

;;   basic block 5, loop depth 0
;;    pred:       4
  yy_buffer_stack_top.100_15 = yy_buffer_stack_top;
  _16 = yy_buffer_stack_top.100_15 * 8;
  _17 = yy_buffer_stack.99_14 + _16;
  iftmp.98_18 = *_17;
  if (b_3(D) == iftmp.98_18)
    goto <bb 6>;
  else
    goto <bb 3>;
;;    succ:       6
;;                3

;;   basic block 6, loop depth 0
;;    pred:       5
  yy_n_chars.37_24 = b_3(D)->yy_n_chars;
  yy_n_chars = yy_n_chars.37_24;
  yy_c_buf_p = _10;
  yytext = _10;
  _26 = *_17;
  yyin.40_27 = _26->yy_input_file;
  yyin = yyin.40_27;
  yy_hold_char.41_28 = *_10;
  yy_hold_char = yy_hold_char.41_28;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       3
;;                6
  return;
;;    succ:       EXIT

}



Partition map 

Partition 3 (b_3(D) - 3 )
Partition 6 (_6 - 6 )
Partition 8 (_8 - 8 )
Partition 10 (_10 - 10 )
Partition 14 (yy_buffer_stack.99_14 - 14 )
Partition 15 (yy_buffer_stack_top.100_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (iftmp.98_18 - 18 )
Partition 24 (yy_n_chars.37_24 - 24 )
Partition 26 (_26 - 26 )
Partition 27 (yyin.40_27 - 27 )
Partition 28 (yy_hold_char.41_28 - 28 )


Partition map 

Partition 0 (b_3(D) - 3 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (b_3(D) - 3 )

After Coalescing:

Partition map 

Partition 0 (b_3(D) - 3 )
Partition 1 (_6 - 6 )
Partition 2 (_8 - 8 )
Partition 3 (_10 - 10 )
Partition 4 (yy_buffer_stack.99_14 - 14 )
Partition 5 (yy_buffer_stack_top.100_15 - 15 )
Partition 6 (_16 - 16 )
Partition 7 (_17 - 17 )
Partition 8 (iftmp.98_18 - 18 )
Partition 9 (yy_n_chars.37_24 - 24 )
Partition 10 (_26 - 26 )
Partition 11 (yyin.40_27 - 27 )
Partition 12 (yy_hold_char.41_28 - 28 )


Replacing Expressions
yy_buffer_stack_top.100_15 replace with --> yy_buffer_stack_top.100_15 = yy_buffer_stack_top;

_16 replace with --> _16 = yy_buffer_stack_top.100_15 * 8;

iftmp.98_18 replace with --> iftmp.98_18 = *_17;

yy_n_chars.37_24 replace with --> yy_n_chars.37_24 = b_3(D)->yy_n_chars;

_26 replace with --> _26 = *_17;

yyin.40_27 replace with --> yyin.40_27 = _26->yy_input_file;

yy_hold_char.41_28 replace with --> yy_hold_char.41_28 = *_10;


void yy_flush_buffer(YY_BUFFER_STATE) (struct yy_buffer_state * b)
{
  char * _6;
  char * _8;
  char * _10;
  struct yy_buffer_state * * yy_buffer_stack.99_14;
  long unsigned int yy_buffer_stack_top.100_15;
  long unsigned int _16;
  struct yy_buffer_state * * _17;
  struct yy_buffer_state * iftmp.98_18;
  int yy_n_chars.37_24;
  struct yy_buffer_state * _26;
  struct FILE * yyin.40_27;
  char yy_hold_char.41_28;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (b_3(D) == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
;;                4
;;                5
  goto <bb 7>;
;;    succ:       7

;;   basic block 4, loop depth 0
;;    pred:       2
  b_3(D)->yy_n_chars = 0;
  _6 = b_3(D)->yy_ch_buf;
  *_6 = 0;
  _8 = b_3(D)->yy_ch_buf;
  MEM[(char *)_8 + 1B] = 0;
  _10 = b_3(D)->yy_ch_buf;
  b_3(D)->yy_buf_pos = _10;
  b_3(D)->yy_at_bol = 1;
  b_3(D)->yy_buffer_status = 0;
  yy_buffer_stack.99_14 = yy_buffer_stack;
  if (yy_buffer_stack.99_14 != 0B)
    goto <bb 5>;
  else
    goto <bb 3>;
;;    succ:       5
;;                3

;;   basic block 5, loop depth 0
;;    pred:       4
  yy_buffer_stack_top.100_15 = yy_buffer_stack_top;
  _16 = yy_buffer_stack_top.100_15 * 8;
  _17 = yy_buffer_stack.99_14 + _16;
  iftmp.98_18 = *_17;
  if (b_3(D) == iftmp.98_18)
    goto <bb 6>;
  else
    goto <bb 3>;
;;    succ:       6
;;                3

;;   basic block 6, loop depth 0
;;    pred:       5
  yy_n_chars.37_24 = b_3(D)->yy_n_chars;
  yy_n_chars = yy_n_chars.37_24;
  yy_c_buf_p = _10;
  yytext = _10;
  _26 = *_17;
  yyin.40_27 = _26->yy_input_file;
  yyin = yyin.40_27;
  yy_hold_char.41_28 = *_10;
  yy_hold_char = yy_hold_char.41_28;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       3
;;                6
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; if (b_3(D) == 0B)

(insn 6 5 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 99 [ b ])
            (const_int 0 [0]))) lex.yy.c:1731 -1
     (nil))

(jump_insn 7 6 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1731 -1
     (int_list:REG_BR_PROB 8986 (nil)))

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; 

(code_label 11 10 12 57 "" [0 uses])

(note 12 11 0 NOTE_INSN_BASIC_BLOCK)

;; b_3(D)->yy_n_chars = 0;

(insn 13 12 0 (set (mem:SI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 32 [0x20])) [2 b_3(D)->yy_n_chars+0 S4 A64])
        (const_int 0 [0])) lex.yy.c:1734 -1
     (nil))

;; _6 = b_3(D)->yy_ch_buf;

(insn 14 13 0 (set (reg/f:DI 87 [ D.6642 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 8 [0x8])) [1 b_3(D)->yy_ch_buf+0 S8 A64])) lex.yy.c:1740 -1
     (nil))

;; *_6 = 0;

(insn 15 14 0 (set (mem:QI (reg/f:DI 87 [ D.6642 ]) [0 *_6+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1740 -1
     (nil))

;; _8 = b_3(D)->yy_ch_buf;

(insn 16 15 0 (set (reg/f:DI 88 [ D.6642 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 8 [0x8])) [1 b_3(D)->yy_ch_buf+0 S8 A64])) lex.yy.c:1741 -1
     (nil))

;; MEM[(char *)_8 + 1B] = 0;

(insn 17 16 0 (set (mem:QI (plus:DI (reg/f:DI 88 [ D.6642 ])
                (const_int 1 [0x1])) [0 MEM[(char *)_8 + 1B]+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1741 -1
     (nil))

;; _10 = b_3(D)->yy_ch_buf;

(insn 18 17 0 (set (reg/f:DI 89 [ D.6642 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 8 [0x8])) [1 b_3(D)->yy_ch_buf+0 S8 A64])) lex.yy.c:1743 -1
     (nil))

;; b_3(D)->yy_buf_pos = _10;

(insn 19 18 0 (set (mem/f:DI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 16 [0x10])) [1 b_3(D)->yy_buf_pos+0 S8 A64])
        (reg/f:DI 89 [ D.6642 ])) lex.yy.c:1743 -1
     (nil))

;; b_3(D)->yy_at_bol = 1;

(insn 20 19 0 (set (mem:SI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 44 [0x2c])) [2 b_3(D)->yy_at_bol+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:1745 -1
     (nil))

;; b_3(D)->yy_buffer_status = 0;

(insn 21 20 0 (set (mem:SI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 60 [0x3c])) [2 b_3(D)->yy_buffer_status+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1746 -1
     (nil))

;; _14 = yy_buffer_stack;

(insn 22 21 0 (set (reg/f:DI 90 [ D.6643 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1748 -1
     (nil))

;; if (_14 != 0B)

(insn 24 22 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.6643 ])
            (const_int 0 [0]))) lex.yy.c:1748 -1
     (nil))

(jump_insn 25 24 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) lex.yy.c:1748 -1
     (int_list:REG_BR_PROB 1500 (nil)))

;; Generating RTL for gimple basic block 5

;; _17 = _14 + _16;

(insn 27 26 28 (set (reg:DI 101)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1748 -1
     (nil))

(insn 28 27 29 (parallel [
            (set (reg:DI 100 [ D.6644 ])
                (ashift:DI (reg:DI 101)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1748 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))

(insn 29 28 0 (parallel [
            (set (reg/f:DI 93 [ D.6643 ])
                (plus:DI (reg/f:DI 90 [ D.6643 ])
                    (reg:DI 100 [ D.6644 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1748 -1
     (nil))

;; if (b_3(D) == _18)

(insn 30 29 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 99 [ b ])
            (mem/f:DI (reg/f:DI 93 [ D.6643 ]) [1 *_17+0 S8 A64]))) lex.yy.c:1748 -1
     (nil))

(jump_insn 31 30 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) lex.yy.c:1748 -1
     (int_list:REG_BR_PROB 7455 (nil)))

;; Generating RTL for gimple basic block 6

;; yy_n_chars = _24;

(insn 33 32 34 (set (reg:SI 102)
        (mem:SI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 32 [0x20])) [2 b_3(D)->yy_n_chars+0 S4 A64])) lex.yy.c:1642 -1
     (nil))

(insn 34 33 0 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 102)) lex.yy.c:1642 -1
     (nil))

;; yy_c_buf_p = _10;

(insn 35 34 0 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 89 [ D.6642 ])) lex.yy.c:1643 -1
     (nil))

;; yytext = _10;

(insn 36 35 0 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 89 [ D.6642 ])) lex.yy.c:1643 -1
     (nil))

;; yyin = _27;

(insn 37 36 38 (set (reg/f:DI 103)
        (mem/f:DI (reg/f:DI 93 [ D.6643 ]) [1 *_17+0 S8 A64])) lex.yy.c:1644 -1
     (nil))

(insn 38 37 39 (set (reg/f:DI 104)
        (mem/f:DI (reg/f:DI 103) [1 _26->yy_input_file+0 S8 A64])) lex.yy.c:1644 -1
     (nil))

(insn 39 38 0 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 104)) lex.yy.c:1644 -1
     (nil))

;; yy_hold_char = _28;

(insn 40 39 41 (set (reg:QI 105)
        (mem:QI (reg/f:DI 89 [ D.6642 ]) [0 *_10+0 S1 A8])) lex.yy.c:1645 -1
     (nil))

(insn 41 40 0 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 105)) lex.yy.c:1645 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 42 41 43 58 "" [0 uses])

(note 43 42 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 9 failed.
Forwarding edge 2->4 to 9 failed.
Redirecting jump 9 from 8 to 9.
Edge 5->4 redirected to 9
Edge 6->4 redirected to 9
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 9 failed.
Deleted label in block 4.


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 99 [ b ])
        (reg:DI 5 di [ b ])) lex.yy.c:1730 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 99 [ b ])
            (const_int 0 [0]))) lex.yy.c:1731 -1
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) lex.yy.c:1731 -1
     (int_list:REG_BR_PROB 8986 (nil))
 -> 11)
;;  succ:       4 [10.1%]  (FALLTHRU)
;;              5 [89.9%] 

;; basic block 4, loop depth 0, count 0, freq 1014, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [10.1%]  (FALLTHRU)
(note 8 7 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 9 8 10 4 (set (pc)
        (label_ref:DI 44)) 654 {jump}
     (nil)
 -> 44)
;;  succ:       9 [100.0%] 

(barrier 10 9 11)
;; basic block 5, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [89.9%] 
(code_label 11 10 12 5 57 "" [1 uses])
(note 12 11 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 5 (set (mem:SI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 32 [0x20])) [2 b_3(D)->yy_n_chars+0 S4 A64])
        (const_int 0 [0])) lex.yy.c:1734 -1
     (nil))
(insn 14 13 15 5 (set (reg/f:DI 87 [ D.6642 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 8 [0x8])) [1 b_3(D)->yy_ch_buf+0 S8 A64])) lex.yy.c:1740 -1
     (nil))
(insn 15 14 16 5 (set (mem:QI (reg/f:DI 87 [ D.6642 ]) [0 *_6+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1740 -1
     (nil))
(insn 16 15 17 5 (set (reg/f:DI 88 [ D.6642 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 8 [0x8])) [1 b_3(D)->yy_ch_buf+0 S8 A64])) lex.yy.c:1741 -1
     (nil))
(insn 17 16 18 5 (set (mem:QI (plus:DI (reg/f:DI 88 [ D.6642 ])
                (const_int 1 [0x1])) [0 MEM[(char *)_8 + 1B]+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1741 -1
     (nil))
(insn 18 17 19 5 (set (reg/f:DI 89 [ D.6642 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 8 [0x8])) [1 b_3(D)->yy_ch_buf+0 S8 A64])) lex.yy.c:1743 -1
     (nil))
(insn 19 18 20 5 (set (mem/f:DI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 16 [0x10])) [1 b_3(D)->yy_buf_pos+0 S8 A64])
        (reg/f:DI 89 [ D.6642 ])) lex.yy.c:1743 -1
     (nil))
(insn 20 19 21 5 (set (mem:SI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 44 [0x2c])) [2 b_3(D)->yy_at_bol+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:1745 -1
     (nil))
(insn 21 20 22 5 (set (mem:SI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 60 [0x3c])) [2 b_3(D)->yy_buffer_status+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1746 -1
     (nil))
(insn 22 21 24 5 (set (reg/f:DI 90 [ D.6643 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1748 -1
     (nil))
(insn 24 22 25 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.6643 ])
            (const_int 0 [0]))) lex.yy.c:1748 -1
     (nil))
(jump_insn 25 24 26 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 44)
            (pc))) lex.yy.c:1748 612 {*jcc_1}
     (int_list:REG_BR_PROB 1500 (nil))
 -> 44)
;;  succ:       6 [85.0%]  (FALLTHRU)
;;              9 [15.0%] 

;; basic block 6, loop depth 0, count 0, freq 7638, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 [85.0%]  (FALLTHRU)
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (reg:DI 101)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1748 -1
     (nil))
(insn 28 27 29 6 (parallel [
            (set (reg:DI 100 [ D.6644 ])
                (ashift:DI (reg:DI 101)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1748 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 29 28 30 6 (parallel [
            (set (reg/f:DI 93 [ D.6643 ])
                (plus:DI (reg/f:DI 90 [ D.6643 ])
                    (reg:DI 100 [ D.6644 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1748 -1
     (nil))
(insn 30 29 31 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 99 [ b ])
            (mem/f:DI (reg/f:DI 93 [ D.6643 ]) [1 *_17+0 S8 A64]))) lex.yy.c:1748 -1
     (nil))
(jump_insn 31 30 32 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 44)
            (pc))) lex.yy.c:1748 612 {*jcc_1}
     (int_list:REG_BR_PROB 7455 (nil))
 -> 44)
;;  succ:       7 [25.4%]  (FALLTHRU)
;;              9 [74.5%] 

;; basic block 7, loop depth 0, count 0, freq 1944, maybe hot
;;  prev block 6, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [25.4%]  (FALLTHRU)
(note 32 31 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 7 (set (reg:SI 102)
        (mem:SI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 32 [0x20])) [2 b_3(D)->yy_n_chars+0 S4 A64])) lex.yy.c:1642 -1
     (nil))
(insn 34 33 35 7 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 102)) lex.yy.c:1642 -1
     (nil))
(insn 35 34 36 7 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 89 [ D.6642 ])) lex.yy.c:1643 -1
     (nil))
(insn 36 35 37 7 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 89 [ D.6642 ])) lex.yy.c:1643 -1
     (nil))
(insn 37 36 38 7 (set (reg/f:DI 103)
        (mem/f:DI (reg/f:DI 93 [ D.6643 ]) [1 *_17+0 S8 A64])) lex.yy.c:1644 -1
     (nil))
(insn 38 37 39 7 (set (reg/f:DI 104)
        (mem/f:DI (reg/f:DI 103) [1 _26->yy_input_file+0 S8 A64])) lex.yy.c:1644 -1
     (nil))
(insn 39 38 40 7 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 104)) lex.yy.c:1644 -1
     (nil))
(insn 40 39 41 7 (set (reg:QI 105)
        (mem:QI (reg/f:DI 89 [ D.6642 ]) [0 *_10+0 S1 A8])) lex.yy.c:1645 -1
     (nil))
(insn 41 40 44 7 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 105)) lex.yy.c:1645 -1
     (nil))
;;  succ:       9 [100.0%]  (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [100.0%]  (FALLTHRU)
;;              4 [100.0%] 
;;              5 [15.0%] 
;;              6 [74.5%] 
(code_label 44 41 45 9 56 "" [3 uses])
(note 45 44 0 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void yy_init_buffer(YY_BUFFER_STATE, FILE*) (_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE, funcdef_no=96, decl_uid=4269, cgraph_uid=96, symbol_order=123)

void yy_init_buffer(YY_BUFFER_STATE, FILE*) (struct yy_buffer_state * b, struct FILE * file)
{
  int oerrno;
  bool _1;
  int iftmp.88_2;
  int * _5;
  struct yy_buffer_state * * yy_buffer_stack.86_13;
  long unsigned int yy_buffer_stack_top.87_14;
  long unsigned int _15;
  struct yy_buffer_state * * _16;
  struct yy_buffer_state * iftmp.85_17;
  int _21;
  int _23;
  int _30;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _5 = __errno_location ();
  oerrno_7 = *_5;
  # DEBUG oerrno => oerrno_7
  yy_flush_buffer (b_8(D));
  b_8(D)->yy_input_file = file_10(D);
  b_8(D)->yy_fill_buffer = 1;
  yy_buffer_stack.86_13 = yy_buffer_stack;
  if (yy_buffer_stack.86_13 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  yy_buffer_stack_top.87_14 = yy_buffer_stack_top;
  _15 = yy_buffer_stack_top.87_14 * 8;
  _16 = yy_buffer_stack.86_13 + _15;
  iftmp.85_17 = *_16;
  if (b_8(D) != iftmp.85_17)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
;;                2
  b_8(D)->yy_bs_lineno = 1;
  b_8(D)->yy_bs_column = 0;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  if (file_10(D) != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  _21 = fileno (file_10(D));
  _23 = isatty (_21);
  _1 = _23 > 0;
  _30 = (int) _1;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       6
;;                5
  # iftmp.88_2 = PHI <_30(6), 0(5)>
  b_8(D)->yy_is_interactive = iftmp.88_2;
  *_5 = oerrno_7;
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (iftmp.88_2 - 2 )
Partition 5 (_5 - 5 )
Partition 7 (oerrno_7 - 7 )
Partition 8 (b_8(D) - 8 )
Partition 10 (file_10(D) - 10 )
Partition 13 (yy_buffer_stack.86_13 - 13 )
Partition 14 (yy_buffer_stack_top.87_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (iftmp.85_17 - 17 )
Partition 21 (_21 - 21 )
Partition 23 (_23 - 23 )
Partition 30 (_30 - 30 )


Partition map 

Partition 0 (iftmp.88_2 - 2 )
Partition 1 (b_8(D) - 8 )
Partition 2 (file_10(D) - 10 )
Partition 3 (_30 - 30 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(7835) iftmp.88_2 <-> _30

Partition map 

Partition 0 (iftmp.88_2 - 2 )
Partition 1 (b_8(D) - 8 )
Partition 2 (file_10(D) - 10 )
Partition 3 (_30 - 30 )

Coalesce list: (2)iftmp.88_2 & (30)_30 [map: 0, 3] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (iftmp.88_2 - 2 30 )
Partition 2 (_5 - 5 )
Partition 3 (oerrno_7 - 7 )
Partition 4 (b_8(D) - 8 )
Partition 5 (file_10(D) - 10 )
Partition 6 (yy_buffer_stack.86_13 - 13 )
Partition 7 (yy_buffer_stack_top.87_14 - 14 )
Partition 8 (_15 - 15 )
Partition 9 (_16 - 16 )
Partition 10 (iftmp.85_17 - 17 )
Partition 11 (_21 - 21 )
Partition 12 (_23 - 23 )


Replacing Expressions
_1 replace with --> _1 = _23 > 0;

yy_buffer_stack_top.87_14 replace with --> yy_buffer_stack_top.87_14 = yy_buffer_stack_top;

_15 replace with --> _15 = yy_buffer_stack_top.87_14 * 8;

_16 replace with --> _16 = yy_buffer_stack.86_13 + _15;

iftmp.85_17 replace with --> iftmp.85_17 = *_16;


void yy_init_buffer(YY_BUFFER_STATE, FILE*) (struct yy_buffer_state * b, struct FILE * file)
{
  int oerrno;
  bool _1;
  int iftmp.88_2;
  int * _5;
  struct yy_buffer_state * * yy_buffer_stack.86_13;
  long unsigned int yy_buffer_stack_top.87_14;
  long unsigned int _15;
  struct yy_buffer_state * * _16;
  struct yy_buffer_state * iftmp.85_17;
  int _21;
  int _23;
  int _30;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _5 = __errno_location ();
  oerrno_7 = *_5;
  # DEBUG oerrno => oerrno_7
  yy_flush_buffer (b_8(D));
  b_8(D)->yy_input_file = file_10(D);
  b_8(D)->yy_fill_buffer = 1;
  yy_buffer_stack.86_13 = yy_buffer_stack;
  if (yy_buffer_stack.86_13 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  yy_buffer_stack_top.87_14 = yy_buffer_stack_top;
  _15 = yy_buffer_stack_top.87_14 * 8;
  _16 = yy_buffer_stack.86_13 + _15;
  iftmp.85_17 = *_16;
  if (b_8(D) != iftmp.85_17)
    goto <bb 4>;
  else
    goto <bb 5>;
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
;;                2
  b_8(D)->yy_bs_lineno = 1;
  b_8(D)->yy_bs_column = 0;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  if (file_10(D) != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  _21 = fileno (file_10(D));
  _23 = isatty (_21);
  _1 = _23 > 0;
  _30 = (int) _1;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       6
;;                5
  # iftmp.88_2 = PHI <_30(6), 0(5)>
  b_8(D)->yy_is_interactive = iftmp.88_2;
  *_5 = oerrno_7;
  return;
;;    succ:       EXIT

}


Inserting a value copy on edge BB5->BB7 : PART.1 = 0

;; Generating RTL for gimple basic block 2

;; _5 = __errno_location ();

(call_insn/u 8 7 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f88bbffbca8 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) lex.yy.c:1704 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f88bbffbca8 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))

(insn 9 8 0 (set (reg/f:DI 89 [ D.6654 ])
        (reg:DI 0 ax)) lex.yy.c:1704 -1
     (nil))

;; oerrno_7 = *_5;

(insn 10 9 0 (set (reg/v:SI 90 [ oerrno ])
        (mem:SI (reg/f:DI 89 [ D.6654 ]) [2 *_5+0 S4 A32])) lex.yy.c:1704 -1
     (nil))

;; # DEBUG oerrno => oerrno_7

(debug_insn 11 10 0 (var_location:SI oerrno (const_int 0 [0])) lex.yy.c:1704 -1
     (nil))
;; yy_flush_buffer (b_8(D));

(insn 12 11 13 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ b ])) lex.yy.c:1706 -1
     (nil))

(call_insn 13 12 0 (call (mem:QI (symbol_ref:DI ("_Z15yy_flush_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c510 yy_flush_buffer>) [0 yy_flush_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:1706 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z15yy_flush_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c510 yy_flush_buffer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; b_8(D)->yy_input_file = file_10(D);

(insn 14 13 0 (set (mem/f:DI (reg/v/f:DI 98 [ b ]) [1 b_8(D)->yy_input_file+0 S8 A64])
        (reg/v/f:DI 99 [ file ])) lex.yy.c:1708 -1
     (nil))

;; b_8(D)->yy_fill_buffer = 1;

(insn 15 14 0 (set (mem:SI (plus:DI (reg/v/f:DI 98 [ b ])
                (const_int 56 [0x38])) [2 b_8(D)->yy_fill_buffer+0 S4 A64])
        (const_int 1 [0x1])) lex.yy.c:1709 -1
     (nil))

;; _13 = yy_buffer_stack;

(insn 16 15 0 (set (reg/f:DI 91 [ D.6655 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1715 -1
     (nil))

;; if (_13 != 0B)

(insn 17 16 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.6655 ])
            (const_int 0 [0]))) lex.yy.c:1715 -1
     (nil))

(jump_insn 18 17 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1715 -1
     (int_list:REG_BR_PROB 1500 (nil)))

;; Generating RTL for gimple basic block 3

;; if (b_8(D) != _17)

(insn 20 19 21 (set (reg:DI 100)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1715 -1
     (nil))

(insn 21 20 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 98 [ b ])
            (mem/f:DI (plus:DI (mult:DI (reg:DI 100)
                        (const_int 8 [0x8]))
                    (reg/f:DI 91 [ D.6655 ])) [1 *_16+0 S8 A64]))) lex.yy.c:1715 -1
     (nil))

(jump_insn 22 21 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1715 -1
     (int_list:REG_BR_PROB 1765 (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 23 22 24 65 "" [0 uses])

(note 24 23 0 NOTE_INSN_BASIC_BLOCK)

;; b_8(D)->yy_bs_lineno = 1;

(insn 25 24 0 (set (mem:SI (plus:DI (reg/v/f:DI 98 [ b ])
                (const_int 48 [0x30])) [2 b_8(D)->yy_bs_lineno+0 S4 A64])
        (const_int 1 [0x1])) lex.yy.c:1716 -1
     (nil))

;; b_8(D)->yy_bs_column = 0;

(insn 26 25 0 (set (mem:SI (plus:DI (reg/v/f:DI 98 [ b ])
                (const_int 52 [0x34])) [2 b_8(D)->yy_bs_column+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1717 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 27 26 28 66 "" [0 uses])

(note 28 27 0 NOTE_INSN_BASIC_BLOCK)

;; if (file_10(D) != 0B)

(insn 29 28 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 99 [ file ])
            (const_int 0 [0]))) lex.yy.c:1720 -1
     (nil))

(jump_insn 30 29 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1720 -1
     (int_list:REG_BR_PROB 2165 (nil)))

;; Generating RTL for gimple basic block 6

;; _21 = fileno (file_10(D));

(insn 32 31 33 (set (reg:DI 5 di)
        (reg/v/f:DI 99 [ file ])) lex.yy.c:1720 -1
     (nil))

(call_insn 33 32 34 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fileno") [flags 0x41]  <function_decl 0x7f88bbf95af8 fileno>) [0 fileno S1 A8])
            (const_int 0 [0]))) lex.yy.c:1720 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fileno") [flags 0x41]  <function_decl 0x7f88bbf95af8 fileno>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 34 33 0 (set (reg:SI 96 [ D.6653 ])
        (reg:SI 0 ax)) lex.yy.c:1720 -1
     (nil))

;; _23 = isatty (_21);

(insn 35 34 36 (set (reg:SI 5 di)
        (reg:SI 96 [ D.6653 ])) lex.yy.c:1720 -1
     (nil))

(call_insn 36 35 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isatty") [flags 0x41]  <function_decl 0x7f88bc0d7e58 isatty>) [0 isatty S1 A8])
            (const_int 0 [0]))) lex.yy.c:1720 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("isatty") [flags 0x41]  <function_decl 0x7f88bc0d7e58 isatty>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

(insn 37 36 0 (set (reg:SI 97 [ D.6653 ])
        (reg:SI 0 ax)) lex.yy.c:1720 -1
     (nil))

;; _30 = (int) _1;

(insn 38 37 39 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 97 [ D.6653 ])
            (const_int 0 [0]))) lex.yy.c:1720 -1
     (nil))

(insn 39 38 40 (set (reg:QI 102)
        (gt:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) lex.yy.c:1720 -1
     (nil))

(insn 40 39 41 (set (reg:SI 101 [ D.6652 ])
        (zero_extend:SI (reg:QI 102))) lex.yy.c:1720 -1
     (nil))

(insn 41 40 0 (set (reg:SI 88 [ D.6653 ])
        (reg:SI 101 [ D.6652 ])) lex.yy.c:1720 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 42 41 43 67 "" [0 uses])

(note 43 42 0 NOTE_INSN_BASIC_BLOCK)

;; b_8(D)->yy_is_interactive = _2;

(insn 44 43 0 (set (mem:SI (plus:DI (reg/v/f:DI 98 [ b ])
                (const_int 40 [0x28])) [2 b_8(D)->yy_is_interactive+0 S4 A64])
        (reg:SI 88 [ D.6653 ])) lex.yy.c:1720 -1
     (nil))

;; *_5 = oerrno_7;

(insn 45 44 0 (set (mem:SI (reg/f:DI 89 [ D.6654 ]) [2 *_5+0 S4 A32])
        (reg/v:SI 90 [ oerrno ])) lex.yy.c:1722 -1
     (nil))
Edge 5->7 redirected to 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 98 [ b ])
        (reg:DI 5 di [ b ])) lex.yy.c:1703 -1
     (nil))
(insn 3 2 4 2 (set (reg/v/f:DI 99 [ file ])
        (reg:DI 4 si [ file ])) lex.yy.c:1703 -1
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(call_insn/u 8 4 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f88bbffbca8 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) lex.yy.c:1704 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f88bbffbca8 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 9 8 10 2 (set (reg/f:DI 89 [ D.6654 ])
        (reg:DI 0 ax)) lex.yy.c:1704 -1
     (nil))
(insn 10 9 11 2 (set (reg/v:SI 90 [ oerrno ])
        (mem:SI (reg/f:DI 89 [ D.6654 ]) [2 *_5+0 S4 A32])) lex.yy.c:1704 -1
     (nil))
(debug_insn 11 10 12 2 (var_location:SI oerrno (reg/v:SI 90 [ oerrno ])) lex.yy.c:1704 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ b ])) lex.yy.c:1706 -1
     (nil))
(call_insn 13 12 14 2 (call (mem:QI (symbol_ref:DI ("_Z15yy_flush_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c510 yy_flush_buffer>) [0 yy_flush_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:1706 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z15yy_flush_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c510 yy_flush_buffer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 14 13 15 2 (set (mem/f:DI (reg/v/f:DI 98 [ b ]) [1 b_8(D)->yy_input_file+0 S8 A64])
        (reg/v/f:DI 99 [ file ])) lex.yy.c:1708 -1
     (nil))
(insn 15 14 16 2 (set (mem:SI (plus:DI (reg/v/f:DI 98 [ b ])
                (const_int 56 [0x38])) [2 b_8(D)->yy_fill_buffer+0 S4 A64])
        (const_int 1 [0x1])) lex.yy.c:1709 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 91 [ D.6655 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1715 -1
     (nil))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.6655 ])
            (const_int 0 [0]))) lex.yy.c:1715 -1
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 23)
            (pc))) lex.yy.c:1715 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 23)
;;  succ:       4 [85.0%]  (FALLTHRU)
;;              5 [15.0%] 

;; basic block 4, loop depth 0, count 0, freq 8500, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [85.0%]  (FALLTHRU)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 4 (set (reg:DI 100)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1715 -1
     (nil))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 98 [ b ])
            (mem/f:DI (plus:DI (mult:DI (reg:DI 100)
                        (const_int 8 [0x8]))
                    (reg/f:DI 91 [ D.6655 ])) [1 *_16+0 S8 A64]))) lex.yy.c:1715 -1
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) lex.yy.c:1715 -1
     (int_list:REG_BR_PROB 1765 (nil))
 -> 27)
;;  succ:       5 [82.3%]  (FALLTHRU)
;;              6 [17.6%] 

;; basic block 5, loop depth 0, count 0, freq 8500, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [82.3%]  (FALLTHRU)
;;              2 [15.0%] 
(code_label 23 22 24 5 65 "" [1 uses])
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (mem:SI (plus:DI (reg/v/f:DI 98 [ b ])
                (const_int 48 [0x30])) [2 b_8(D)->yy_bs_lineno+0 S4 A64])
        (const_int 1 [0x1])) lex.yy.c:1716 -1
     (nil))
(insn 26 25 27 5 (set (mem:SI (plus:DI (reg/v/f:DI 98 [ b ])
                (const_int 52 [0x34])) [2 b_8(D)->yy_bs_column+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1717 -1
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [17.6%] 
;;              5 [100.0%]  (FALLTHRU)
(code_label 27 26 28 6 66 "" [1 uses])
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 99 [ file ])
            (const_int 0 [0]))) lex.yy.c:1720 -1
     (nil))
(jump_insn 30 29 31 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 51)
            (pc))) lex.yy.c:1720 612 {*jcc_1}
     (int_list:REG_BR_PROB 2165 (nil))
 -> 51)
;;  succ:       7 [78.3%]  (FALLTHRU)
;;              8 [21.6%] 

;; basic block 7, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [78.3%]  (FALLTHRU)
(note 31 30 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 7 (set (reg:DI 5 di)
        (reg/v/f:DI 99 [ file ])) lex.yy.c:1720 -1
     (nil))
(call_insn 33 32 34 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fileno") [flags 0x41]  <function_decl 0x7f88bbf95af8 fileno>) [0 fileno S1 A8])
            (const_int 0 [0]))) lex.yy.c:1720 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fileno") [flags 0x41]  <function_decl 0x7f88bbf95af8 fileno>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 34 33 35 7 (set (reg:SI 96 [ D.6653 ])
        (reg:SI 0 ax)) lex.yy.c:1720 -1
     (nil))
(insn 35 34 36 7 (set (reg:SI 5 di)
        (reg:SI 96 [ D.6653 ])) lex.yy.c:1720 -1
     (nil))
(call_insn 36 35 37 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isatty") [flags 0x41]  <function_decl 0x7f88bc0d7e58 isatty>) [0 isatty S1 A8])
            (const_int 0 [0]))) lex.yy.c:1720 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("isatty") [flags 0x41]  <function_decl 0x7f88bc0d7e58 isatty>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 37 36 38 7 (set (reg:SI 97 [ D.6653 ])
        (reg:SI 0 ax)) lex.yy.c:1720 -1
     (nil))
(insn 38 37 39 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 97 [ D.6653 ])
            (const_int 0 [0]))) lex.yy.c:1720 -1
     (nil))
(insn 39 38 40 7 (set (reg:QI 102)
        (gt:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) lex.yy.c:1720 -1
     (nil))
(insn 40 39 41 7 (set (reg:SI 101 [ D.6652 ])
        (zero_extend:SI (reg:QI 102))) lex.yy.c:1720 -1
     (nil))
(insn 41 40 48 7 (set (reg:SI 88 [ D.6653 ])
        (reg:SI 101 [ D.6652 ])) lex.yy.c:1720 -1
     (nil))
(jump_insn 48 41 49 7 (set (pc)
        (label_ref 42)) -1
     (nil)
 -> 42)
;;  succ:       9 [100.0%] 

(barrier 49 48 51)
;; basic block 8, loop depth 0, count 0, freq 2165, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 [21.6%] 
(code_label 51 49 50 8 68 "" [1 uses])
(note 50 51 5 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 5 50 42 8 (set (reg:SI 88 [ D.6653 ])
        (const_int 0 [0])) lex.yy.c:1720 -1
     (nil))
;;  succ:       9 [100.0%]  (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 [100.0%]  (FALLTHRU)
;;              7 [100.0%] 
(code_label 42 5 43 9 67 "" [1 uses])
(note 43 42 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 9 (set (mem:SI (plus:DI (reg/v/f:DI 98 [ b ])
                (const_int 40 [0x28])) [2 b_8(D)->yy_is_interactive+0 S4 A64])
        (reg:SI 88 [ D.6653 ])) lex.yy.c:1720 -1
     (nil))
(insn 45 44 0 9 (set (mem:SI (reg/f:DI 89 [ D.6654 ]) [2 *_5+0 S4 A32])
        (reg/v:SI 90 [ oerrno ])) lex.yy.c:1722 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function yy_buffer_state* yy_create_buffer(FILE*, int) (_Z16yy_create_bufferP8_IO_FILEi, funcdef_no=94, decl_uid=4257, cgraph_uid=94, symbol_order=121)

yy_buffer_state* yy_create_buffer(FILE*, int) (struct FILE * file, int size)
{
  void * _2;
  long unsigned int _4;
  long unsigned int _6;
  void * _14;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  # DEBUG size => 64
  _14 = malloc (64);
  # DEBUG size => NULL
  # DEBUG b => NULL
  if (_14 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
;;                4
  yy_fatal_error ("out of dynamic memory in yy_create_buffer()");
;;    succ:      

;;   basic block 4, loop depth 0
;;    pred:       2
  _4 = (long unsigned int) size_3(D);
  MEM[(struct yy_buffer_state *)_14].yy_buf_size = _4;
  _6 = _4 + 2;
  # DEBUG size => _6
  _2 = malloc (_6);
  # DEBUG size => NULL
  MEM[(struct yy_buffer_state *)_14].yy_ch_buf = _2;
  if (_2 == 0B)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  MEM[(struct yy_buffer_state *)_14].yy_is_our_buffer = 1;
  yy_init_buffer (_14, file_10(D));
  return _14;
;;    succ:       EXIT

}



Partition map 

Partition 2 (_2 - 2 )
Partition 3 (size_3(D) - 3 )
Partition 4 (_4 - 4 )
Partition 6 (_6 - 6 )
Partition 10 (file_10(D) - 10 )
Partition 14 (_14 - 14 )


Partition map 

Partition 0 (size_3(D) - 3 )
Partition 1 (file_10(D) - 10 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (size_3(D) - 3 )
Partition 1 (file_10(D) - 10 )

After Coalescing:

Partition map 

Partition 0 (_2 - 2 )
Partition 1 (size_3(D) - 3 )
Partition 2 (_4 - 4 )
Partition 3 (_6 - 6 )
Partition 4 (file_10(D) - 10 )
Partition 5 (_14 - 14 )


Replacing Expressions
_6 replace with --> _6 = _4 + 2;


yy_buffer_state* yy_create_buffer(FILE*, int) (struct FILE * file, int size)
{
  void * _2;
  long unsigned int _4;
  long unsigned int _6;
  void * _14;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  # DEBUG size => 64
  _14 = malloc (64);
  # DEBUG size => NULL
  # DEBUG b => NULL
  if (_14 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
;;                4
  yy_fatal_error ("out of dynamic memory in yy_create_buffer()");
;;    succ:      

;;   basic block 4, loop depth 0
;;    pred:       2
  _4 = (long unsigned int) size_3(D);
  MEM[(struct yy_buffer_state *)_14].yy_buf_size = _4;
  _6 = _4 + 2;
  # DEBUG size => _6
  _2 = malloc (_6);
  # DEBUG size => NULL
  MEM[(struct yy_buffer_state *)_14].yy_ch_buf = _2;
  if (_2 == 0B)
    goto <bb 3>;
  else
    goto <bb 5>;
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  MEM[(struct yy_buffer_state *)_14].yy_is_our_buffer = 1;
  yy_init_buffer (_14, file_10(D));
  return _14;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; # DEBUG size => 64

(debug_insn 7 6 0 (var_location:DI size (const_int 0 [0])) -1
     (nil))
;; _14 = malloc (64);

(insn 8 7 9 (set (reg:DI 5 di)
        (const_int 64 [0x40])) lex.yy.c:2123 -1
     (nil))

(call_insn 9 8 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 10 9 11 (set (reg/f:DI 94)
        (reg:DI 0 ax)) lex.yy.c:2123 -1
     (expr_list:REG_NOALIAS (reg/f:DI 94)
        (nil)))

(insn 11 10 0 (set (reg/f:DI 90 [ D.6664 ])
        (reg/f:DI 94)) lex.yy.c:2123 -1
     (nil))

;; # DEBUG size => NULL

(debug_insn 12 11 0 (var_location:DI size (const_int 0 [0])) lex.yy.c:1658 -1
     (nil))
;; # DEBUG b => NULL

(debug_insn 13 12 0 (var_location:DI b (const_int 0 [0])) lex.yy.c:1658 -1
     (nil))
;; if (_14 == 0B)

(insn 14 13 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.6664 ])
            (const_int 0 [0]))) lex.yy.c:1659 -1
     (nil))

(jump_insn 15 14 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1659 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 3

;; yy_fatal_error ("out of dynamic memory in yy_create_buffer()");

(insn 17 16 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f88bbf1aa20 *.LC9>)) lex.yy.c:1660 -1
     (nil))

(call_insn 18 17 19 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1660 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 19 18 0)

;; Generating RTL for gimple basic block 4

;; 

(code_label 20 19 21 75 "" [0 uses])

(note 21 20 0 NOTE_INSN_BASIC_BLOCK)

;; _4 = (long unsigned int) size_3(D);

(insn 22 21 0 (set (reg:DI 88 [ D.6665 ])
        (sign_extend:DI (reg/v:SI 93 [ size ]))) lex.yy.c:1662 -1
     (nil))

;; MEM[(struct yy_buffer_state *)_14].yy_buf_size = _4;

(insn 23 22 0 (set (mem:DI (plus:DI (reg/f:DI 90 [ D.6664 ])
                (const_int 24 [0x18])) [4 MEM[(struct yy_buffer_state *)_14].yy_buf_size+0 S8 A64])
        (reg:DI 88 [ D.6665 ])) lex.yy.c:1662 -1
     (nil))

;; # DEBUG size => _6

(debug_insn 24 23 0 (var_location:DI size (const_int 0 [0])) lex.yy.c:1667 -1
     (nil))
;; _2 = malloc (_6);

(insn 25 24 26 (parallel [
            (set (reg:DI 95 [ D.6665 ])
                (plus:DI (reg:DI 88 [ D.6665 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2123 -1
     (nil))

(insn 26 25 27 (set (reg:DI 5 di)
        (reg:DI 95 [ D.6665 ])) lex.yy.c:2123 -1
     (nil))

(call_insn 27 26 28 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 28 27 29 (set (reg/f:DI 96)
        (reg:DI 0 ax)) lex.yy.c:2123 -1
     (expr_list:REG_NOALIAS (reg/f:DI 96)
        (nil)))

(insn 29 28 0 (set (reg/f:DI 87 [ D.6664 ])
        (reg/f:DI 96)) lex.yy.c:2123 -1
     (nil))

;; # DEBUG size => NULL

(debug_insn 30 29 0 (var_location:DI size (const_int 0 [0])) lex.yy.c:1667 -1
     (nil))
;; MEM[(struct yy_buffer_state *)_14].yy_ch_buf = _2;

(insn 31 30 0 (set (mem/f:DI (plus:DI (reg/f:DI 90 [ D.6664 ])
                (const_int 8 [0x8])) [1 MEM[(struct yy_buffer_state *)_14].yy_ch_buf+0 S8 A64])
        (reg/f:DI 87 [ D.6664 ])) lex.yy.c:1667 -1
     (nil))

;; if (_2 == 0B)

(insn 33 31 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.6664 ])
            (const_int 0 [0]))) lex.yy.c:1668 -1
     (nil))

(jump_insn 34 33 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) lex.yy.c:1668 -1
     (int_list:REG_BR_PROB 4 (nil)))

;; Generating RTL for gimple basic block 5

;; MEM[(struct yy_buffer_state *)_14].yy_is_our_buffer = 1;

(insn 36 35 0 (set (mem:SI (plus:DI (reg/f:DI 90 [ D.6664 ])
                (const_int 36 [0x24])) [2 MEM[(struct yy_buffer_state *)_14].yy_is_our_buffer+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:1671 -1
     (nil))

;; yy_init_buffer (_14, file_10(D));

(insn 37 36 38 (set (reg:DI 4 si)
        (reg/v/f:DI 92 [ file ])) lex.yy.c:1673 -1
     (nil))

(insn 38 37 39 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.6664 ])) lex.yy.c:1673 -1
     (nil))

(call_insn 39 38 0 (call (mem:QI (symbol_ref:DI ("_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c948 yy_init_buffer>) [0 yy_init_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:1673 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c948 yy_init_buffer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

;; return _14;

(insn 40 39 41 (set (reg:DI 91 [ <retval> ])
        (reg/f:DI 90 [ D.6664 ])) lex.yy.c:1675 -1
     (nil))

(jump_insn 41 40 42 (set (pc)
        (label_ref 0)) lex.yy.c:1675 -1
     (nil))

(barrier 42 41 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 41.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 92 [ file ])
        (reg:DI 5 di [ file ])) lex.yy.c:1655 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:SI 93 [ size ])
        (reg:SI 4 si [ size ])) lex.yy.c:1655 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 8 2 (var_location:DI size (const_int 64 [0x40])) -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (const_int 64 [0x40])) lex.yy.c:2123 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 94)
        (reg:DI 0 ax)) lex.yy.c:2123 -1
     (expr_list:REG_NOALIAS (reg/f:DI 94)
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 90 [ D.6664 ])
        (reg/f:DI 94)) lex.yy.c:2123 -1
     (nil))
(debug_insn 12 11 13 2 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1658 -1
     (nil))
(debug_insn 13 12 14 2 (var_location:DI b (clobber (const_int 0 [0]))) lex.yy.c:1658 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.6664 ])
            (const_int 0 [0]))) lex.yy.c:1659 -1
     (nil))
(jump_insn 15 14 32 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) lex.yy.c:1659 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 20)
;;  succ:       4 [0.0%]  (FALLTHRU)
;;              5 [100.0%] 

;; basic block 4, loop depth 0, count 0, freq 8
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [0.0%]  (FALLTHRU)
;;              5 [0.0%] 
(code_label 32 15 16 4 76 "" [1 uses])
(note 16 32 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f88bbf1aa20 *.LC9>)) lex.yy.c:1660 -1
     (nil))
(call_insn 18 17 19 4 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1660 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 19 18 20)
;; basic block 5, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [100.0%] 
(code_label 20 19 21 5 75 "" [1 uses])
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg:DI 88 [ D.6665 ])
        (sign_extend:DI (reg/v:SI 93 [ size ]))) lex.yy.c:1662 -1
     (nil))
(insn 23 22 24 5 (set (mem:DI (plus:DI (reg/f:DI 90 [ D.6664 ])
                (const_int 24 [0x18])) [4 MEM[(struct yy_buffer_state *)_14].yy_buf_size+0 S8 A64])
        (reg:DI 88 [ D.6665 ])) lex.yy.c:1662 -1
     (nil))
(debug_insn 24 23 25 5 (var_location:DI size (plus:DI (reg:DI 88 [ D.6665 ])
        (const_int 2 [0x2]))) lex.yy.c:1667 -1
     (nil))
(insn 25 24 26 5 (parallel [
            (set (reg:DI 95 [ D.6665 ])
                (plus:DI (reg:DI 88 [ D.6665 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2123 -1
     (nil))
(insn 26 25 27 5 (set (reg:DI 5 di)
        (reg:DI 95 [ D.6665 ])) lex.yy.c:2123 -1
     (nil))
(call_insn 27 26 28 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 28 27 29 5 (set (reg/f:DI 96)
        (reg:DI 0 ax)) lex.yy.c:2123 -1
     (expr_list:REG_NOALIAS (reg/f:DI 96)
        (nil)))
(insn 29 28 30 5 (set (reg/f:DI 87 [ D.6664 ])
        (reg/f:DI 96)) lex.yy.c:2123 -1
     (nil))
(debug_insn 30 29 31 5 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1667 -1
     (nil))
(insn 31 30 33 5 (set (mem/f:DI (plus:DI (reg/f:DI 90 [ D.6664 ])
                (const_int 8 [0x8])) [1 MEM[(struct yy_buffer_state *)_14].yy_ch_buf+0 S8 A64])
        (reg/f:DI 87 [ D.6664 ])) lex.yy.c:1667 -1
     (nil))
(insn 33 31 34 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.6664 ])
            (const_int 0 [0]))) lex.yy.c:1668 -1
     (nil))
(jump_insn 34 33 35 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 32)
            (pc))) lex.yy.c:1668 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 32)
;;  succ:       4 [0.0%] 
;;              6 [100.0%]  (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 9992, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [100.0%]  (FALLTHRU)
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 6 (set (mem:SI (plus:DI (reg/f:DI 90 [ D.6664 ])
                (const_int 36 [0x24])) [2 MEM[(struct yy_buffer_state *)_14].yy_is_our_buffer+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:1671 -1
     (nil))
(insn 37 36 38 6 (set (reg:DI 4 si)
        (reg/v/f:DI 92 [ file ])) lex.yy.c:1673 -1
     (nil))
(insn 38 37 39 6 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.6664 ])) lex.yy.c:1673 -1
     (nil))
(call_insn 39 38 40 6 (call (mem:QI (symbol_ref:DI ("_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c948 yy_init_buffer>) [0 yy_init_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:1673 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c948 yy_init_buffer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 40 39 44 6 (set (reg:DI 91 [ <retval> ])
        (reg/f:DI 90 [ D.6664 ])) lex.yy.c:1675 -1
     (nil))
(insn 44 40 45 6 (set (reg/i:DI 0 ax)
        (reg:DI 91 [ <retval> ])) lex.yy.c:1676 -1
     (nil))
(insn 45 44 0 6 (use (reg/i:DI 0 ax)) lex.yy.c:1676 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void yyrestart(FILE*) (_Z9yyrestartP8_IO_FILE, funcdef_no=91, decl_uid=4252, cgraph_uid=91, symbol_order=118)

void yyrestart(FILE*) (struct FILE * input_file)
{
  struct yy_buffer_state * iftmp.84_1;
  struct yy_buffer_state * * yy_buffer_stack.81_4;
  long unsigned int yy_buffer_stack_top.82_5;
  long unsigned int _6;
  struct yy_buffer_state * * _7;
  struct yy_buffer_state * _8;
  struct yy_buffer_state * * yy_buffer_stack.81_10;
  long unsigned int yy_buffer_stack_top.82_11;
  long unsigned int _12;
  struct yy_buffer_state * * _13;
  struct FILE * yyin.83_14;
  struct yy_buffer_state * _16;
  struct yy_buffer_state * * yy_buffer_stack.81_18;
  struct yy_buffer_state * * yy_buffer_stack.35_26;
  long unsigned int yy_buffer_stack_top.36_27;
  long unsigned int _28;
  struct yy_buffer_state * * _29;
  struct yy_buffer_state * _30;
  int yy_n_chars.37_31;
  char * yy_c_buf_p.38_32;
  struct yy_buffer_state * _33;
  struct FILE * yyin.40_34;
  char yy_hold_char.41_35;
  long unsigned int pretmp_46;
  long unsigned int pretmp_48;
  struct yy_buffer_state * * pretmp_50;
  struct yy_buffer_state * pretmp_52;
  struct yy_buffer_state * prephitmp_53;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  yy_buffer_stack.81_4 = yy_buffer_stack;
  if (yy_buffer_stack.81_4 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  yy_buffer_stack_top.82_5 = yy_buffer_stack_top;
  _6 = yy_buffer_stack_top.82_5 * 8;
  _7 = yy_buffer_stack.81_4 + _6;
  _8 = *_7;
  if (_8 == 0B)
    goto <bb 4>;
  else
    goto <bb 6>;
;;    succ:       4
;;                6

;;   basic block 4, loop depth 0
;;    pred:       3
;;                2
  yyensure_buffer_stack ();
  yy_buffer_stack.81_10 = yy_buffer_stack;
  yy_buffer_stack_top.82_11 = yy_buffer_stack_top;
  _12 = yy_buffer_stack_top.82_11 * 8;
  _13 = yy_buffer_stack.81_10 + _12;
  yyin.83_14 = yyin;
  _16 = yy_create_buffer (yyin.83_14, 16384);
  *_13 = _16;
  yy_buffer_stack.81_18 = yy_buffer_stack;
  if (yy_buffer_stack.81_18 != 0B)
    goto <bb 5>;
  else
    goto <bb 7>;
;;    succ:       5
;;                7

;;   basic block 5, loop depth 0
;;    pred:       4
  pretmp_46 = yy_buffer_stack_top;
  pretmp_48 = pretmp_46 * 8;
  pretmp_50 = yy_buffer_stack.81_18 + pretmp_48;
  pretmp_52 = *pretmp_50;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
;;                3
  # prephitmp_53 = PHI <pretmp_52(5), _8(3)>
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       6
;;                4
  # iftmp.84_1 = PHI <prephitmp_53(6), 0B(4)>
  yy_init_buffer (iftmp.84_1, input_file_23(D));
  yy_buffer_stack.35_26 = yy_buffer_stack;
  yy_buffer_stack_top.36_27 = yy_buffer_stack_top;
  _28 = yy_buffer_stack_top.36_27 * 8;
  _29 = yy_buffer_stack.35_26 + _28;
  _30 = *_29;
  yy_n_chars.37_31 = _30->yy_n_chars;
  yy_n_chars = yy_n_chars.37_31;
  yy_c_buf_p.38_32 = _30->yy_buf_pos;
  yy_c_buf_p = yy_c_buf_p.38_32;
  yytext = yy_c_buf_p.38_32;
  _33 = *_29;
  yyin.40_34 = _33->yy_input_file;
  yyin = yyin.40_34;
  yy_hold_char.41_35 = *yy_c_buf_p.38_32;
  yy_hold_char = yy_hold_char.41_35;
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (iftmp.84_1 - 1 )
Partition 4 (yy_buffer_stack.81_4 - 4 )
Partition 5 (yy_buffer_stack_top.82_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 10 (yy_buffer_stack.81_10 - 10 )
Partition 11 (yy_buffer_stack_top.82_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (yyin.83_14 - 14 )
Partition 16 (_16 - 16 )
Partition 18 (yy_buffer_stack.81_18 - 18 )
Partition 23 (input_file_23(D) - 23 )
Partition 26 (yy_buffer_stack.35_26 - 26 )
Partition 27 (yy_buffer_stack_top.36_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (yy_n_chars.37_31 - 31 )
Partition 32 (yy_c_buf_p.38_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (yyin.40_34 - 34 )
Partition 35 (yy_hold_char.41_35 - 35 )
Partition 46 (pretmp_46 - 46 )
Partition 48 (pretmp_48 - 48 )
Partition 50 (pretmp_50 - 50 )
Partition 52 (pretmp_52 - 52 )
Partition 53 (prephitmp_53 - 53 )


Partition map 

Partition 0 (iftmp.84_1 - 1 )
Partition 1 (_8 - 8 )
Partition 2 (input_file_23(D) - 23 )
Partition 3 (pretmp_52 - 52 )
Partition 4 (prephitmp_53 - 53 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(15858) _8 <-> prephitmp_53
(8986) iftmp.84_1 <-> prephitmp_53
(1057) pretmp_52 <-> prephitmp_53

Partition map 

Partition 0 (iftmp.84_1 - 1 )
Partition 1 (_8 - 8 )
Partition 2 (input_file_23(D) - 23 )
Partition 3 (pretmp_52 - 52 )
Partition 4 (prephitmp_53 - 53 )

Coalesce list: (8)_8 & (53)prephitmp_53 [map: 1, 4] : Success -> 1
Coalesce list: (1)iftmp.84_1 & (53)_8 [map: 0, 1] : Success -> 1
Coalesce list: (52)pretmp_52 & (53)_8 [map: 3, 1] : Success -> 1
After Coalescing:

Partition map 

Partition 0 (yy_buffer_stack.81_4 - 4 )
Partition 1 (yy_buffer_stack_top.82_5 - 5 )
Partition 2 (_6 - 6 )
Partition 3 (_7 - 7 )
Partition 4 (_8 - 1 8 52 53 )
Partition 5 (yy_buffer_stack.81_10 - 10 )
Partition 6 (yy_buffer_stack_top.82_11 - 11 )
Partition 7 (_12 - 12 )
Partition 8 (_13 - 13 )
Partition 9 (yyin.83_14 - 14 )
Partition 10 (_16 - 16 )
Partition 11 (yy_buffer_stack.81_18 - 18 )
Partition 12 (input_file_23(D) - 23 )
Partition 13 (yy_buffer_stack.35_26 - 26 )
Partition 14 (yy_buffer_stack_top.36_27 - 27 )
Partition 15 (_28 - 28 )
Partition 16 (_29 - 29 )
Partition 17 (_30 - 30 )
Partition 18 (yy_n_chars.37_31 - 31 )
Partition 19 (yy_c_buf_p.38_32 - 32 )
Partition 20 (_33 - 33 )
Partition 21 (yyin.40_34 - 34 )
Partition 22 (yy_hold_char.41_35 - 35 )
Partition 23 (pretmp_46 - 46 )
Partition 24 (pretmp_48 - 48 )
Partition 25 (pretmp_50 - 50 )


Replacing Expressions
yy_buffer_stack_top.82_5 replace with --> yy_buffer_stack_top.82_5 = yy_buffer_stack_top;

_6 replace with --> _6 = yy_buffer_stack_top.82_5 * 8;

_7 replace with --> _7 = yy_buffer_stack.81_4 + _6;

yy_buffer_stack.81_10 replace with --> yy_buffer_stack.81_10 = yy_buffer_stack;

yy_buffer_stack_top.82_11 replace with --> yy_buffer_stack_top.82_11 = yy_buffer_stack_top;

_12 replace with --> _12 = yy_buffer_stack_top.82_11 * 8;

yyin.83_14 replace with --> yyin.83_14 = yyin;

yy_buffer_stack.35_26 replace with --> yy_buffer_stack.35_26 = yy_buffer_stack;

yy_buffer_stack_top.36_27 replace with --> yy_buffer_stack_top.36_27 = yy_buffer_stack_top;

_28 replace with --> _28 = yy_buffer_stack_top.36_27 * 8;

yy_n_chars.37_31 replace with --> yy_n_chars.37_31 = _30->yy_n_chars;

_33 replace with --> _33 = *_29;

yyin.40_34 replace with --> yyin.40_34 = _33->yy_input_file;

yy_hold_char.41_35 replace with --> yy_hold_char.41_35 = *yy_c_buf_p.38_32;

pretmp_46 replace with --> pretmp_46 = yy_buffer_stack_top;

pretmp_48 replace with --> pretmp_48 = pretmp_46 * 8;

pretmp_50 replace with --> pretmp_50 = yy_buffer_stack.81_18 + pretmp_48;


void yyrestart(FILE*) (struct FILE * input_file)
{
  struct yy_buffer_state * iftmp.84_1;
  struct yy_buffer_state * * yy_buffer_stack.81_4;
  long unsigned int yy_buffer_stack_top.82_5;
  long unsigned int _6;
  struct yy_buffer_state * * _7;
  struct yy_buffer_state * _8;
  struct yy_buffer_state * * yy_buffer_stack.81_10;
  long unsigned int yy_buffer_stack_top.82_11;
  long unsigned int _12;
  struct yy_buffer_state * * _13;
  struct FILE * yyin.83_14;
  struct yy_buffer_state * _16;
  struct yy_buffer_state * * yy_buffer_stack.81_18;
  struct yy_buffer_state * * yy_buffer_stack.35_26;
  long unsigned int yy_buffer_stack_top.36_27;
  long unsigned int _28;
  struct yy_buffer_state * * _29;
  struct yy_buffer_state * _30;
  int yy_n_chars.37_31;
  char * yy_c_buf_p.38_32;
  struct yy_buffer_state * _33;
  struct FILE * yyin.40_34;
  char yy_hold_char.41_35;
  long unsigned int pretmp_46;
  long unsigned int pretmp_48;
  struct yy_buffer_state * * pretmp_50;
  struct yy_buffer_state * pretmp_52;
  struct yy_buffer_state * prephitmp_53;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  yy_buffer_stack.81_4 = yy_buffer_stack;
  if (yy_buffer_stack.81_4 == 0B)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  yy_buffer_stack_top.82_5 = yy_buffer_stack_top;
  _6 = yy_buffer_stack_top.82_5 * 8;
  _7 = yy_buffer_stack.81_4 + _6;
  _8 = *_7;
  if (_8 == 0B)
    goto <bb 4>;
  else
    goto <bb 6>;
;;    succ:       4
;;                6

;;   basic block 4, loop depth 0
;;    pred:       3
;;                2
  yyensure_buffer_stack ();
  yy_buffer_stack.81_10 = yy_buffer_stack;
  yy_buffer_stack_top.82_11 = yy_buffer_stack_top;
  _12 = yy_buffer_stack_top.82_11 * 8;
  _13 = yy_buffer_stack.81_10 + _12;
  yyin.83_14 = yyin;
  _16 = yy_create_buffer (yyin.83_14, 16384);
  *_13 = _16;
  yy_buffer_stack.81_18 = yy_buffer_stack;
  if (yy_buffer_stack.81_18 != 0B)
    goto <bb 5>;
  else
    goto <bb 7>;
;;    succ:       5
;;                7

;;   basic block 5, loop depth 0
;;    pred:       4
  pretmp_46 = yy_buffer_stack_top;
  pretmp_48 = pretmp_46 * 8;
  pretmp_50 = yy_buffer_stack.81_18 + pretmp_48;
  pretmp_52 = *pretmp_50;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
;;                3
  # prephitmp_53 = PHI <pretmp_52(5), _8(3)>
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       6
;;                4
  # iftmp.84_1 = PHI <prephitmp_53(6), 0B(4)>
  yy_init_buffer (iftmp.84_1, input_file_23(D));
  yy_buffer_stack.35_26 = yy_buffer_stack;
  yy_buffer_stack_top.36_27 = yy_buffer_stack_top;
  _28 = yy_buffer_stack_top.36_27 * 8;
  _29 = yy_buffer_stack.35_26 + _28;
  _30 = *_29;
  yy_n_chars.37_31 = _30->yy_n_chars;
  yy_n_chars = yy_n_chars.37_31;
  yy_c_buf_p.38_32 = _30->yy_buf_pos;
  yy_c_buf_p = yy_c_buf_p.38_32;
  yytext = yy_c_buf_p.38_32;
  _33 = *_29;
  yyin.40_34 = _33->yy_input_file;
  yyin = yyin.40_34;
  yy_hold_char.41_35 = *yy_c_buf_p.38_32;
  yy_hold_char = yy_hold_char.41_35;
  return;
;;    succ:       EXIT

}


Inserting a value copy on edge BB4->BB7 : PART.4 = 0B

;; Generating RTL for gimple basic block 2

;; _4 = yy_buffer_stack;

(insn 7 6 0 (set (reg/f:DI 87 [ D.6669 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1595 -1
     (nil))

;; if (_4 == 0B)

(insn 8 7 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.6669 ])
            (const_int 0 [0]))) lex.yy.c:1595 -1
     (nil))

(jump_insn 9 8 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1595 -1
     (int_list:REG_BR_PROB 672 (nil)))

;; Generating RTL for gimple basic block 3

;; _8 = *_7;

(insn 11 10 12 (set (reg:DI 113)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1595 -1
     (nil))

(insn 12 11 0 (set (reg/f:DI 91 [ D.6671 ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 113)
                    (const_int 8 [0x8]))
                (reg/f:DI 87 [ D.6669 ])) [1 *_7+0 S8 A64])) lex.yy.c:1595 -1
     (nil))

;; if (_8 == 0B)

(insn 13 12 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.6671 ])
            (const_int 0 [0]))) lex.yy.c:1595 -1
     (nil))

(jump_insn 14 13 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1595 -1
     (int_list:REG_BR_PROB 8500 (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 15 14 16 82 "" [0 uses])

(note 16 15 0 NOTE_INSN_BASIC_BLOCK)

;; yyensure_buffer_stack ();

(call_insn 17 16 0 (call (mem:QI (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>) [0 yyensure_buffer_stack S1 A8])
        (const_int 0 [0])) lex.yy.c:1596 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>)
        (nil))
    (nil))

;; _13 = _10 + _12;

(insn 18 17 19 (set (reg:DI 115)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1597 -1
     (nil))

(insn 19 18 20 (parallel [
            (set (reg:DI 114 [ D.6670 ])
                (ashift:DI (reg:DI 115)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1597 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))

(insn 20 19 21 (set (reg/f:DI 116)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1597 -1
     (nil))

(insn 21 20 0 (parallel [
            (set (reg/f:DI 95 [ D.6669 ])
                (plus:DI (reg:DI 114 [ D.6670 ])
                    (reg/f:DI 116)))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1597 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
            (reg:DI 114 [ D.6670 ]))
        (nil)))

;; _16 = yy_create_buffer (_14, 16384);

(insn 22 21 23 (set (reg:SI 4 si)
        (const_int 16384 [0x4000])) lex.yy.c:1598 -1
     (nil))

(insn 23 22 24 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1598 -1
     (nil))

(call_insn 24 23 25 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>) [0 yy_create_buffer S1 A8])
            (const_int 0 [0]))) lex.yy.c:1598 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 25 24 0 (set (reg/f:DI 97 [ D.6671 ])
        (reg:DI 0 ax)) lex.yy.c:1598 -1
     (nil))

;; *_13 = _16;

(insn 26 25 0 (set (mem/f:DI (reg/f:DI 95 [ D.6669 ]) [1 *_13+0 S8 A64])
        (reg/f:DI 97 [ D.6671 ])) lex.yy.c:1598 -1
     (nil))

;; _18 = yy_buffer_stack;

(insn 27 26 0 (set (reg/f:DI 98 [ D.6669 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1601 -1
     (nil))

;; if (_18 != 0B)

(insn 28 27 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 98 [ D.6669 ])
            (const_int 0 [0]))) lex.yy.c:1601 -1
     (nil))

(jump_insn 29 28 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1601 -1
     (int_list:REG_BR_PROB 4896 (nil)))

;; Generating RTL for gimple basic block 5

;; _52 = *_50;

(insn 31 30 32 (set (reg:DI 117)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) -1
     (nil))

(insn 32 31 0 (set (reg/f:DI 91 [ D.6671 ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 117)
                    (const_int 8 [0x8]))
                (reg/f:DI 98 [ D.6669 ])) [1 *_50+0 S8 A64])) -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 33 32 34 83 "" [0 uses])

(note 34 33 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 7

;; 

(code_label 35 34 36 84 "" [0 uses])

(note 36 35 0 NOTE_INSN_BASIC_BLOCK)

;; yy_init_buffer (_1, input_file_23(D));

(insn 37 36 38 (set (reg:DI 4 si)
        (reg/v/f:DI 112 [ input_file ])) lex.yy.c:1601 -1
     (nil))

(insn 38 37 39 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.6671 ])) lex.yy.c:1601 -1
     (nil))

(call_insn 39 38 0 (call (mem:QI (symbol_ref:DI ("_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c948 yy_init_buffer>) [0 yy_init_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:1601 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c948 yy_init_buffer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

;; _29 = _26 + _28;

(insn 40 39 41 (set (reg:DI 119)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1642 -1
     (nil))

(insn 41 40 42 (parallel [
            (set (reg:DI 118 [ D.6670 ])
                (ashift:DI (reg:DI 119)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1642 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))

(insn 42 41 43 (set (reg/f:DI 120)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1642 -1
     (nil))

(insn 43 42 0 (parallel [
            (set (reg/f:DI 102 [ D.6669 ])
                (plus:DI (reg:DI 118 [ D.6670 ])
                    (reg/f:DI 120)))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1642 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
            (reg:DI 118 [ D.6670 ]))
        (nil)))

;; _30 = *_29;

(insn 44 43 0 (set (reg/f:DI 103 [ D.6671 ])
        (mem/f:DI (reg/f:DI 102 [ D.6669 ]) [1 *_29+0 S8 A64])) lex.yy.c:1642 -1
     (nil))

;; yy_n_chars = _31;

(insn 45 44 46 (set (reg:SI 121)
        (mem:SI (plus:DI (reg/f:DI 103 [ D.6671 ])
                (const_int 32 [0x20])) [2 _30->yy_n_chars+0 S4 A64])) lex.yy.c:1642 -1
     (nil))

(insn 46 45 0 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 121)) lex.yy.c:1642 -1
     (nil))

;; _32 = _30->yy_buf_pos;

(insn 47 46 0 (set (reg/f:DI 105 [ D.6674 ])
        (mem/f:DI (plus:DI (reg/f:DI 103 [ D.6671 ])
                (const_int 16 [0x10])) [1 _30->yy_buf_pos+0 S8 A64])) lex.yy.c:1643 -1
     (nil))

;; yy_c_buf_p = _32;

(insn 48 47 0 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 105 [ D.6674 ])) lex.yy.c:1643 -1
     (nil))

;; yytext = _32;

(insn 49 48 0 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 105 [ D.6674 ])) lex.yy.c:1643 -1
     (nil))

;; yyin = _34;

(insn 50 49 51 (set (reg/f:DI 122)
        (mem/f:DI (reg/f:DI 102 [ D.6669 ]) [1 *_29+0 S8 A64])) lex.yy.c:1644 -1
     (nil))

(insn 51 50 52 (set (reg/f:DI 123)
        (mem/f:DI (reg/f:DI 122) [1 _33->yy_input_file+0 S8 A64])) lex.yy.c:1644 -1
     (nil))

(insn 52 51 0 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 123)) lex.yy.c:1644 -1
     (nil))

;; yy_hold_char = _35;

(insn 53 52 54 (set (reg:QI 124)
        (mem:QI (reg/f:DI 105 [ D.6674 ]) [0 *_32+0 S1 A8])) lex.yy.c:1645 -1
     (nil))

(insn 54 53 0 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 124)) lex.yy.c:1645 -1
     (nil))
Edge 4->7 redirected to 10


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 4->7 redirected to 9
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 112 [ input_file ])
        (reg:DI 5 di [ input_file ])) lex.yy.c:1593 -1
     (nil))
(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 3 8 2 (set (reg/f:DI 87 [ D.6669 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1595 -1
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.6669 ])
            (const_int 0 [0]))) lex.yy.c:1595 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 15)
            (pc))) lex.yy.c:1595 -1
     (int_list:REG_BR_PROB 672 (nil))
 -> 15)
;;  succ:       5 [6.7%] 
;;              4 [93.3%]  (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 9328, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [93.3%]  (FALLTHRU)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg:DI 113)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1595 -1
     (nil))
(insn 12 11 13 4 (set (reg/f:DI 91 [ D.6671 ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 113)
                    (const_int 8 [0x8]))
                (reg/f:DI 87 [ D.6669 ])) [1 *_7+0 S8 A64])) lex.yy.c:1595 -1
     (nil))
(insn 13 12 14 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.6671 ])
            (const_int 0 [0]))) lex.yy.c:1595 -1
     (nil))
(jump_insn 14 13 15 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 35)
            (pc))) lex.yy.c:1595 612 {*jcc_1}
     (int_list:REG_BR_PROB 8500 (nil))
 -> 35)
;;  succ:       5 [15.0%]  (FALLTHRU)
;;              9 [85.0%] 

;; basic block 5, loop depth 0, count 0, freq 2071, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [15.0%]  (FALLTHRU)
;;              2 [6.7%] 
(code_label 15 14 16 5 82 "" [1 uses])
(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(call_insn 17 16 18 5 (call (mem:QI (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>) [0 yyensure_buffer_stack S1 A8])
        (const_int 0 [0])) lex.yy.c:1596 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>)
        (nil))
    (nil))
(insn 18 17 19 5 (set (reg:DI 115)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1597 -1
     (nil))
(insn 19 18 20 5 (parallel [
            (set (reg:DI 114 [ D.6670 ])
                (ashift:DI (reg:DI 115)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1597 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 20 19 21 5 (set (reg/f:DI 116)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1597 -1
     (nil))
(insn 21 20 22 5 (parallel [
            (set (reg/f:DI 95 [ D.6669 ])
                (plus:DI (reg:DI 114 [ D.6670 ])
                    (reg/f:DI 116)))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1597 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
            (reg:DI 114 [ D.6670 ]))
        (nil)))
(insn 22 21 23 5 (set (reg:SI 4 si)
        (const_int 16384 [0x4000])) lex.yy.c:1598 -1
     (nil))
(insn 23 22 24 5 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1598 -1
     (nil))
(call_insn 24 23 25 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>) [0 yy_create_buffer S1 A8])
            (const_int 0 [0]))) lex.yy.c:1598 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 25 24 26 5 (set (reg/f:DI 97 [ D.6671 ])
        (reg:DI 0 ax)) lex.yy.c:1598 -1
     (nil))
(insn 26 25 27 5 (set (mem/f:DI (reg/f:DI 95 [ D.6669 ]) [1 *_13+0 S8 A64])
        (reg/f:DI 97 [ D.6671 ])) lex.yy.c:1598 -1
     (nil))
(insn 27 26 28 5 (set (reg/f:DI 98 [ D.6669 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1601 -1
     (nil))
(insn 28 27 29 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 98 [ D.6669 ])
            (const_int 0 [0]))) lex.yy.c:1601 -1
     (nil))
(jump_insn 29 28 30 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 60)
            (pc))) lex.yy.c:1601 612 {*jcc_1}
     (int_list:REG_BR_PROB 4896 (nil))
 -> 60)
;;  succ:       6 [51.0%]  (FALLTHRU)
;;              8 [49.0%] 

;; basic block 6, loop depth 0, count 0, freq 1057, maybe hot
;;  prev block 5, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [51.0%]  (FALLTHRU)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg:DI 117)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) -1
     (nil))
(insn 32 31 57 6 (set (reg/f:DI 91 [ D.6671 ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 117)
                    (const_int 8 [0x8]))
                (reg/f:DI 98 [ D.6669 ])) [1 *_50+0 S8 A64])) -1
     (nil))
(jump_insn 57 32 58 6 (set (pc)
        (label_ref 35)) -1
     (nil)
 -> 35)
;;  succ:       9 [100.0%] 

(barrier 58 57 60)
;; basic block 8, loop depth 0, count 0, freq 1014, maybe hot
;;  prev block 6, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 [49.0%] 
(code_label 60 58 59 8 85 "" [1 uses])
(note 59 60 4 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 4 59 35 8 (set (reg/f:DI 91 [ D.6671 ])
        (const_int 0 [0])) lex.yy.c:1601 -1
     (nil))
;;  succ:       9 [100.0%]  (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 [100.0%]  (FALLTHRU)
;;              6 [100.0%] 
;;              4 [85.0%] 
(code_label 35 4 36 9 84 "" [2 uses])
(note 36 35 37 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 9 (set (reg:DI 4 si)
        (reg/v/f:DI 112 [ input_file ])) lex.yy.c:1601 -1
     (nil))
(insn 38 37 39 9 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.6671 ])) lex.yy.c:1601 -1
     (nil))
(call_insn 39 38 40 9 (call (mem:QI (symbol_ref:DI ("_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c948 yy_init_buffer>) [0 yy_init_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:1601 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c948 yy_init_buffer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 40 39 41 9 (set (reg:DI 119)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1642 -1
     (nil))
(insn 41 40 42 9 (parallel [
            (set (reg:DI 118 [ D.6670 ])
                (ashift:DI (reg:DI 119)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1642 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 42 41 43 9 (set (reg/f:DI 120)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1642 -1
     (nil))
(insn 43 42 44 9 (parallel [
            (set (reg/f:DI 102 [ D.6669 ])
                (plus:DI (reg:DI 118 [ D.6670 ])
                    (reg/f:DI 120)))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1642 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
            (reg:DI 118 [ D.6670 ]))
        (nil)))
(insn 44 43 45 9 (set (reg/f:DI 103 [ D.6671 ])
        (mem/f:DI (reg/f:DI 102 [ D.6669 ]) [1 *_29+0 S8 A64])) lex.yy.c:1642 -1
     (nil))
(insn 45 44 46 9 (set (reg:SI 121)
        (mem:SI (plus:DI (reg/f:DI 103 [ D.6671 ])
                (const_int 32 [0x20])) [2 _30->yy_n_chars+0 S4 A64])) lex.yy.c:1642 -1
     (nil))
(insn 46 45 47 9 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 121)) lex.yy.c:1642 -1
     (nil))
(insn 47 46 48 9 (set (reg/f:DI 105 [ D.6674 ])
        (mem/f:DI (plus:DI (reg/f:DI 103 [ D.6671 ])
                (const_int 16 [0x10])) [1 _30->yy_buf_pos+0 S8 A64])) lex.yy.c:1643 -1
     (nil))
(insn 48 47 49 9 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 105 [ D.6674 ])) lex.yy.c:1643 -1
     (nil))
(insn 49 48 50 9 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 105 [ D.6674 ])) lex.yy.c:1643 -1
     (nil))
(insn 50 49 51 9 (set (reg/f:DI 122)
        (mem/f:DI (reg/f:DI 102 [ D.6669 ]) [1 *_29+0 S8 A64])) lex.yy.c:1644 -1
     (nil))
(insn 51 50 52 9 (set (reg/f:DI 123)
        (mem/f:DI (reg/f:DI 122) [1 _33->yy_input_file+0 S8 A64])) lex.yy.c:1644 -1
     (nil))
(insn 52 51 53 9 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 123)) lex.yy.c:1644 -1
     (nil))
(insn 53 52 54 9 (set (reg:QI 124)
        (mem:QI (reg/f:DI 105 [ D.6674 ]) [0 *_32+0 S1 A8])) lex.yy.c:1645 -1
     (nil))
(insn 54 53 0 9 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 124)) lex.yy.c:1645 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void yypush_buffer_state(YY_BUFFER_STATE) (_Z19yypush_buffer_stateP15yy_buffer_state, funcdef_no=98, decl_uid=4263, cgraph_uid=98, symbol_order=125)

void yypush_buffer_state(YY_BUFFER_STATE) (struct yy_buffer_state * new_buffer)
{
  struct yy_buffer_state * * yy_buffer_stack.101_7;
  long unsigned int yy_buffer_stack_top.102_8;
  long unsigned int _9;
  struct yy_buffer_state * * _10;
  struct yy_buffer_state * _11;
  char * yy_c_buf_p.103_12;
  char yy_hold_char.104_13;
  struct yy_buffer_state * _15;
  struct yy_buffer_state * _17;
  int yy_n_chars.105_18;
  long unsigned int pretmp_20;
  struct yy_buffer_state * * pretmp_22;
  long unsigned int yy_buffer_stack_top.106_24;
  int yy_n_chars.37_32;
  char * yy_c_buf_p.38_33;
  struct yy_buffer_state * _34;
  struct FILE * yyin.40_35;
  char yy_hold_char.41_36;
  struct yy_buffer_state * * prephitmp_41;
  long unsigned int pretmp_42;
  long unsigned int pretmp_45;
  struct yy_buffer_state * * pretmp_47;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (new_buffer_4(D) == 0B)
    goto <bb 8>;
  else
    goto <bb 3>;
;;    succ:       8
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  yyensure_buffer_stack ();
  yy_buffer_stack.101_7 = yy_buffer_stack;
  if (yy_buffer_stack.101_7 != 0B)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5
;;                4

;;   basic block 4, loop depth 0
;;    pred:       3
  pretmp_42 = yy_buffer_stack_top;
  pretmp_45 = pretmp_42 * 8;
  pretmp_22 = (struct yy_buffer_state * *) pretmp_45;
  goto <bb 7>;
;;    succ:       7

;;   basic block 5, loop depth 0
;;    pred:       3
  yy_buffer_stack_top.102_8 = yy_buffer_stack_top;
  _9 = yy_buffer_stack_top.102_8 * 8;
  _10 = yy_buffer_stack.101_7 + _9;
  _11 = *_10;
  if (_11 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  yy_c_buf_p.103_12 = yy_c_buf_p;
  yy_hold_char.104_13 = yy_hold_char;
  *yy_c_buf_p.103_12 = yy_hold_char.104_13;
  _15 = *_10;
  _15->yy_buf_pos = yy_c_buf_p.103_12;
  _17 = *_10;
  yy_n_chars.105_18 = yy_n_chars;
  _17->yy_n_chars = yy_n_chars.105_18;
  yy_buffer_stack_top.106_24 = yy_buffer_stack_top.102_8 + 1;
  yy_buffer_stack_top = yy_buffer_stack_top.106_24;
  pretmp_20 = _9 + 8;
  pretmp_47 = yy_buffer_stack.101_7 + pretmp_20;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       4
;;                5
;;                6
  # prephitmp_41 = PHI <pretmp_22(4), _10(5), pretmp_47(6)>
  *prephitmp_41 = new_buffer_4(D);
  yy_n_chars.37_32 = new_buffer_4(D)->yy_n_chars;
  yy_n_chars = yy_n_chars.37_32;
  yy_c_buf_p.38_33 = new_buffer_4(D)->yy_buf_pos;
  yy_c_buf_p = yy_c_buf_p.38_33;
  yytext = yy_c_buf_p.38_33;
  _34 = *prephitmp_41;
  yyin.40_35 = _34->yy_input_file;
  yyin = yyin.40_35;
  yy_hold_char.41_36 = *yy_c_buf_p.38_33;
  yy_hold_char = yy_hold_char.41_36;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       2
;;                7
  return;
;;    succ:       EXIT

}



Partition map 

Partition 4 (new_buffer_4(D) - 4 )
Partition 7 (yy_buffer_stack.101_7 - 7 )
Partition 8 (yy_buffer_stack_top.102_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (yy_c_buf_p.103_12 - 12 )
Partition 13 (yy_hold_char.104_13 - 13 )
Partition 15 (_15 - 15 )
Partition 17 (_17 - 17 )
Partition 18 (yy_n_chars.105_18 - 18 )
Partition 20 (pretmp_20 - 20 )
Partition 22 (pretmp_22 - 22 )
Partition 24 (yy_buffer_stack_top.106_24 - 24 )
Partition 32 (yy_n_chars.37_32 - 32 )
Partition 33 (yy_c_buf_p.38_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (yyin.40_35 - 35 )
Partition 36 (yy_hold_char.41_36 - 36 )
Partition 41 (prephitmp_41 - 41 )
Partition 42 (pretmp_42 - 42 )
Partition 45 (pretmp_45 - 45 )
Partition 47 (pretmp_47 - 47 )


Partition map 

Partition 0 (new_buffer_4(D) - 4 )
Partition 1 (_10 - 10 )
Partition 2 (pretmp_22 - 22 )
Partition 3 (prephitmp_41 - 41 )
Partition 4 (pretmp_47 - 47 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(5662) prephitmp_41 <-> pretmp_47
(1998) _10 <-> prephitmp_41
(1175) pretmp_22 <-> prephitmp_41

Partition map 

Partition 0 (new_buffer_4(D) - 4 )
Partition 1 (_10 - 10 )
Partition 2 (pretmp_22 - 22 )
Partition 3 (prephitmp_41 - 41 )
Partition 4 (pretmp_47 - 47 )

Coalesce list: (41)prephitmp_41 & (47)pretmp_47 [map: 3, 4] : Success -> 3
Coalesce list: (10)_10 & (41)prephitmp_41 [map: 1, 3] : Success -> 3
Coalesce list: (22)pretmp_22 & (41)prephitmp_41 [map: 2, 3] : Success -> 3
After Coalescing:

Partition map 

Partition 0 (new_buffer_4(D) - 4 )
Partition 1 (yy_buffer_stack.101_7 - 7 )
Partition 2 (yy_buffer_stack_top.102_8 - 8 )
Partition 3 (_9 - 9 )
Partition 4 (_11 - 11 )
Partition 5 (yy_c_buf_p.103_12 - 12 )
Partition 6 (yy_hold_char.104_13 - 13 )
Partition 7 (_15 - 15 )
Partition 8 (_17 - 17 )
Partition 9 (yy_n_chars.105_18 - 18 )
Partition 10 (pretmp_20 - 20 )
Partition 11 (yy_buffer_stack_top.106_24 - 24 )
Partition 12 (yy_n_chars.37_32 - 32 )
Partition 13 (yy_c_buf_p.38_33 - 33 )
Partition 14 (_34 - 34 )
Partition 15 (yyin.40_35 - 35 )
Partition 16 (yy_hold_char.41_36 - 36 )
Partition 17 (prephitmp_41 - 10 22 41 47 )
Partition 18 (pretmp_42 - 42 )
Partition 19 (pretmp_45 - 45 )


Replacing Expressions
_11 replace with --> _11 = *_10;

yy_hold_char.104_13 replace with --> yy_hold_char.104_13 = yy_hold_char;

_17 replace with --> _17 = *_10;

yy_n_chars.105_18 replace with --> yy_n_chars.105_18 = yy_n_chars;

pretmp_20 replace with --> pretmp_20 = _9 + 8;

yy_buffer_stack_top.106_24 replace with --> yy_buffer_stack_top.106_24 = yy_buffer_stack_top.102_8 + 1;

yy_n_chars.37_32 replace with --> yy_n_chars.37_32 = new_buffer_4(D)->yy_n_chars;

_34 replace with --> _34 = *prephitmp_41;

yyin.40_35 replace with --> yyin.40_35 = _34->yy_input_file;

yy_hold_char.41_36 replace with --> yy_hold_char.41_36 = *yy_c_buf_p.38_33;

pretmp_42 replace with --> pretmp_42 = yy_buffer_stack_top;

pretmp_45 replace with --> pretmp_45 = pretmp_42 * 8;


void yypush_buffer_state(YY_BUFFER_STATE) (struct yy_buffer_state * new_buffer)
{
  struct yy_buffer_state * * yy_buffer_stack.101_7;
  long unsigned int yy_buffer_stack_top.102_8;
  long unsigned int _9;
  struct yy_buffer_state * * _10;
  struct yy_buffer_state * _11;
  char * yy_c_buf_p.103_12;
  char yy_hold_char.104_13;
  struct yy_buffer_state * _15;
  struct yy_buffer_state * _17;
  int yy_n_chars.105_18;
  long unsigned int pretmp_20;
  struct yy_buffer_state * * pretmp_22;
  long unsigned int yy_buffer_stack_top.106_24;
  int yy_n_chars.37_32;
  char * yy_c_buf_p.38_33;
  struct yy_buffer_state * _34;
  struct FILE * yyin.40_35;
  char yy_hold_char.41_36;
  struct yy_buffer_state * * prephitmp_41;
  long unsigned int pretmp_42;
  long unsigned int pretmp_45;
  struct yy_buffer_state * * pretmp_47;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (new_buffer_4(D) == 0B)
    goto <bb 8>;
  else
    goto <bb 3>;
;;    succ:       8
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  yyensure_buffer_stack ();
  yy_buffer_stack.101_7 = yy_buffer_stack;
  if (yy_buffer_stack.101_7 != 0B)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5
;;                4

;;   basic block 4, loop depth 0
;;    pred:       3
  pretmp_42 = yy_buffer_stack_top;
  pretmp_45 = pretmp_42 * 8;
  pretmp_22 = (struct yy_buffer_state * *) pretmp_45;
  goto <bb 7>;
;;    succ:       7

;;   basic block 5, loop depth 0
;;    pred:       3
  yy_buffer_stack_top.102_8 = yy_buffer_stack_top;
  _9 = yy_buffer_stack_top.102_8 * 8;
  _10 = yy_buffer_stack.101_7 + _9;
  _11 = *_10;
  if (_11 != 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  yy_c_buf_p.103_12 = yy_c_buf_p;
  yy_hold_char.104_13 = yy_hold_char;
  *yy_c_buf_p.103_12 = yy_hold_char.104_13;
  _15 = *_10;
  _15->yy_buf_pos = yy_c_buf_p.103_12;
  _17 = *_10;
  yy_n_chars.105_18 = yy_n_chars;
  _17->yy_n_chars = yy_n_chars.105_18;
  yy_buffer_stack_top.106_24 = yy_buffer_stack_top.102_8 + 1;
  yy_buffer_stack_top = yy_buffer_stack_top.106_24;
  pretmp_20 = _9 + 8;
  pretmp_47 = yy_buffer_stack.101_7 + pretmp_20;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       4
;;                5
;;                6
  # prephitmp_41 = PHI <pretmp_22(4), _10(5), pretmp_47(6)>
  *prephitmp_41 = new_buffer_4(D);
  yy_n_chars.37_32 = new_buffer_4(D)->yy_n_chars;
  yy_n_chars = yy_n_chars.37_32;
  yy_c_buf_p.38_33 = new_buffer_4(D)->yy_buf_pos;
  yy_c_buf_p = yy_c_buf_p.38_33;
  yytext = yy_c_buf_p.38_33;
  _34 = *prephitmp_41;
  yyin.40_35 = _34->yy_input_file;
  yyin = yyin.40_35;
  yy_hold_char.41_36 = *yy_c_buf_p.38_33;
  yy_hold_char = yy_hold_char.41_36;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       2
;;                7
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; if (new_buffer_4(D) == 0B)

(insn 6 5 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 106 [ new_buffer ])
            (const_int 0 [0]))) lex.yy.c:1760 -1
     (nil))

(jump_insn 7 6 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1760 -1
     (int_list:REG_BR_PROB 2164 (nil)))

;; Generating RTL for gimple basic block 3

;; yyensure_buffer_stack ();

(call_insn 9 8 0 (call (mem:QI (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>) [0 yyensure_buffer_stack S1 A8])
        (const_int 0 [0])) lex.yy.c:1763 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>)
        (nil))
    (nil))

;; _7 = yy_buffer_stack;

(insn 10 9 0 (set (reg/f:DI 87 [ D.6678 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1766 -1
     (nil))

;; if (_7 != 0B)

(insn 11 10 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.6678 ])
            (const_int 0 [0]))) lex.yy.c:1766 -1
     (nil))

(jump_insn 12 11 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1766 -1
     (int_list:REG_BR_PROB 8500 (nil)))

;; Generating RTL for gimple basic block 4

;; _22 = (struct yy_buffer_state * *) _45;

(insn 14 13 15 (set (reg:DI 107)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) -1
     (nil))

(insn 15 14 0 (parallel [
            (set (reg/f:DI 103 [ D.6678 ])
                (ashift:DI (reg:DI 107)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))

;; Generating RTL for gimple basic block 5

;; 

(code_label 18 17 19 93 "" [0 uses])

(note 19 18 0 NOTE_INSN_BASIC_BLOCK)

;; _8 = yy_buffer_stack_top;

(insn 20 19 0 (set (reg:DI 88 [ D.6679 ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1766 -1
     (nil))

;; _9 = _8 * 8;

(insn 21 20 0 (parallel [
            (set (reg:DI 89 [ D.6679 ])
                (ashift:DI (reg:DI 88 [ D.6679 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1766 -1
     (nil))

;; _10 = _7 + _9;

(insn 22 21 0 (parallel [
            (set (reg/f:DI 103 [ D.6678 ])
                (plus:DI (reg/f:DI 87 [ D.6678 ])
                    (reg:DI 89 [ D.6679 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1766 -1
     (nil))

;; if (_11 != 0B)

(insn 23 22 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 103 [ D.6678 ]) [1 *_10+0 S8 A64])
            (const_int 0 [0]))) lex.yy.c:1766 -1
     (nil))

(jump_insn 24 23 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1766 -1
     (int_list:REG_BR_PROB 1500 (nil)))

;; Generating RTL for gimple basic block 6

;; _12 = yy_c_buf_p;

(insn 26 25 0 (set (reg/f:DI 91 [ D.6681 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) lex.yy.c:1769 -1
     (nil))

;; *_12 = _13;

(insn 27 26 28 (set (reg:QI 108)
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) lex.yy.c:1769 -1
     (nil))

(insn 28 27 0 (set (mem:QI (reg/f:DI 91 [ D.6681 ]) [0 *_12+0 S1 A8])
        (reg:QI 108)) lex.yy.c:1769 -1
     (nil))

;; _15 = *_10;

(insn 29 28 0 (set (reg/f:DI 93 [ D.6680 ])
        (mem/f:DI (reg/f:DI 103 [ D.6678 ]) [1 *_10+0 S8 A64])) lex.yy.c:1770 -1
     (nil))

;; _15->yy_buf_pos = _12;

(insn 30 29 0 (set (mem/f:DI (plus:DI (reg/f:DI 93 [ D.6680 ])
                (const_int 16 [0x10])) [1 _15->yy_buf_pos+0 S8 A64])
        (reg/f:DI 91 [ D.6681 ])) lex.yy.c:1770 -1
     (nil))

;; _17->yy_n_chars = _18;

(insn 31 30 32 (set (reg/f:DI 109)
        (mem/f:DI (reg/f:DI 103 [ D.6678 ]) [1 *_10+0 S8 A64])) lex.yy.c:1771 -1
     (nil))

(insn 32 31 33 (set (reg:SI 110)
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) lex.yy.c:1771 -1
     (nil))

(insn 33 32 0 (set (mem:SI (plus:DI (reg/f:DI 109)
                (const_int 32 [0x20])) [2 _17->yy_n_chars+0 S4 A64])
        (reg:SI 110)) lex.yy.c:1771 -1
     (nil))

;; yy_buffer_stack_top = _24;

(insn 34 33 35 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg:DI 88 [ D.6679 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1776 -1
     (nil))

(insn 35 34 0 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (reg:DI 111)) lex.yy.c:1776 -1
     (nil))

;; _47 = _7 + _20;

(insn 36 35 37 (parallel [
            (set (reg:DI 112 [ D.6679 ])
                (plus:DI (reg:DI 89 [ D.6679 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 37 36 0 (parallel [
            (set (reg/f:DI 103 [ D.6678 ])
                (plus:DI (reg/f:DI 87 [ D.6678 ])
                    (reg:DI 112 [ D.6679 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 38 37 39 94 "" [0 uses])

(note 39 38 0 NOTE_INSN_BASIC_BLOCK)

;; *_41 = new_buffer_4(D);

(insn 40 39 0 (set (mem/f:DI (reg/f:DI 103 [ D.6678 ]) [1 *_41+0 S8 A64])
        (reg/v/f:DI 106 [ new_buffer ])) lex.yy.c:1777 -1
     (nil))

;; yy_n_chars = _32;

(insn 41 40 42 (set (reg:SI 113)
        (mem:SI (plus:DI (reg/v/f:DI 106 [ new_buffer ])
                (const_int 32 [0x20])) [2 new_buffer_4(D)->yy_n_chars+0 S4 A64])) lex.yy.c:1642 -1
     (nil))

(insn 42 41 0 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 113)) lex.yy.c:1642 -1
     (nil))

;; _33 = new_buffer_4(D)->yy_buf_pos;

(insn 43 42 0 (set (reg/f:DI 99 [ D.6681 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 106 [ new_buffer ])
                (const_int 16 [0x10])) [1 new_buffer_4(D)->yy_buf_pos+0 S8 A64])) lex.yy.c:1643 -1
     (nil))

;; yy_c_buf_p = _33;

(insn 44 43 0 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 99 [ D.6681 ])) lex.yy.c:1643 -1
     (nil))

;; yytext = _33;

(insn 45 44 0 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 99 [ D.6681 ])) lex.yy.c:1643 -1
     (nil))

;; yyin = _35;

(insn 46 45 47 (set (reg/f:DI 114)
        (mem/f:DI (reg/f:DI 103 [ D.6678 ]) [1 *_41+0 S8 A64])) lex.yy.c:1644 -1
     (nil))

(insn 47 46 48 (set (reg/f:DI 115)
        (mem/f:DI (reg/f:DI 114) [1 _34->yy_input_file+0 S8 A64])) lex.yy.c:1644 -1
     (nil))

(insn 48 47 0 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 115)) lex.yy.c:1644 -1
     (nil))

;; yy_hold_char = _36;

(insn 49 48 50 (set (reg:QI 116)
        (mem:QI (reg/f:DI 99 [ D.6681 ]) [0 *_33+0 S1 A8])) lex.yy.c:1645 -1
     (nil))

(insn 50 49 0 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 116)) lex.yy.c:1645 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 51 50 52 92 "" [0 uses])

(note 52 51 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->9 redirected to 10
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 106 [ new_buffer ])
        (reg:DI 5 di [ new_buffer ])) lex.yy.c:1759 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 106 [ new_buffer ])
            (const_int 0 [0]))) lex.yy.c:1760 -1
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 53)
            (pc))) lex.yy.c:1760 612 {*jcc_1}
     (int_list:REG_BR_PROB 2164 (nil))
 -> 53)
;;  succ:       10 [21.6%] 
;;              4 [78.4%]  (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 7836, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [78.4%]  (FALLTHRU)
(note 8 7 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 9 8 10 4 (call (mem:QI (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>) [0 yyensure_buffer_stack S1 A8])
        (const_int 0 [0])) lex.yy.c:1763 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>)
        (nil))
    (nil))
(insn 10 9 11 4 (set (reg/f:DI 87 [ D.6678 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1766 -1
     (nil))
(insn 11 10 12 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.6678 ])
            (const_int 0 [0]))) lex.yy.c:1766 -1
     (nil))
(jump_insn 12 11 13 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) lex.yy.c:1766 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 18)
;;  succ:       6 [85.0%] 
;;              5 [15.0%]  (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 1175, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [15.0%]  (FALLTHRU)
(note 13 12 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 5 (set (reg:DI 107)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) -1
     (nil))
(insn 15 14 16 5 (parallel [
            (set (reg/f:DI 103 [ D.6678 ])
                (ashift:DI (reg:DI 107)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(jump_insn 16 15 17 5 (set (pc)
        (label_ref 38)) -1
     (nil)
 -> 38)
;;  succ:       8 [100.0%] 

(barrier 17 16 18)
;; basic block 6, loop depth 0, count 0, freq 6661, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [85.0%] 
(code_label 18 17 19 6 93 "" [1 uses])
(note 19 18 20 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 6 (set (reg:DI 88 [ D.6679 ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1766 -1
     (nil))
(insn 21 20 22 6 (parallel [
            (set (reg:DI 89 [ D.6679 ])
                (ashift:DI (reg:DI 88 [ D.6679 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1766 -1
     (nil))
(insn 22 21 23 6 (parallel [
            (set (reg/f:DI 103 [ D.6678 ])
                (plus:DI (reg/f:DI 87 [ D.6678 ])
                    (reg:DI 89 [ D.6679 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1766 -1
     (nil))
(insn 23 22 24 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 103 [ D.6678 ]) [1 *_10+0 S8 A64])
            (const_int 0 [0]))) lex.yy.c:1766 -1
     (nil))
(jump_insn 24 23 25 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) lex.yy.c:1766 -1
     (int_list:REG_BR_PROB 1500 (nil))
 -> 38)
;;  succ:       7 [85.0%]  (FALLTHRU)
;;              8 [15.0%] 

;; basic block 7, loop depth 0, count 0, freq 5662, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [85.0%]  (FALLTHRU)
(note 25 24 26 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 7 (set (reg/f:DI 91 [ D.6681 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) lex.yy.c:1769 -1
     (nil))
(insn 27 26 28 7 (set (reg:QI 108)
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) lex.yy.c:1769 -1
     (nil))
(insn 28 27 29 7 (set (mem:QI (reg/f:DI 91 [ D.6681 ]) [0 *_12+0 S1 A8])
        (reg:QI 108)) lex.yy.c:1769 -1
     (nil))
(insn 29 28 30 7 (set (reg/f:DI 93 [ D.6680 ])
        (mem/f:DI (reg/f:DI 103 [ D.6678 ]) [1 *_10+0 S8 A64])) lex.yy.c:1770 -1
     (nil))
(insn 30 29 31 7 (set (mem/f:DI (plus:DI (reg/f:DI 93 [ D.6680 ])
                (const_int 16 [0x10])) [1 _15->yy_buf_pos+0 S8 A64])
        (reg/f:DI 91 [ D.6681 ])) lex.yy.c:1770 -1
     (nil))
(insn 31 30 32 7 (set (reg/f:DI 109)
        (mem/f:DI (reg/f:DI 103 [ D.6678 ]) [1 *_10+0 S8 A64])) lex.yy.c:1771 -1
     (nil))
(insn 32 31 33 7 (set (reg:SI 110)
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) lex.yy.c:1771 -1
     (nil))
(insn 33 32 34 7 (set (mem:SI (plus:DI (reg/f:DI 109)
                (const_int 32 [0x20])) [2 _17->yy_n_chars+0 S4 A64])
        (reg:SI 110)) lex.yy.c:1771 -1
     (nil))
(insn 34 33 35 7 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg:DI 88 [ D.6679 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1776 -1
     (nil))
(insn 35 34 36 7 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (reg:DI 111)) lex.yy.c:1776 -1
     (nil))
(insn 36 35 37 7 (parallel [
            (set (reg:DI 112 [ D.6679 ])
                (plus:DI (reg:DI 89 [ D.6679 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 37 36 38 7 (parallel [
            (set (reg/f:DI 103 [ D.6678 ])
                (plus:DI (reg/f:DI 87 [ D.6678 ])
                    (reg:DI 112 [ D.6679 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
;;  succ:       8 [100.0%]  (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 7836, maybe hot
;;  prev block 7, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [100.0%] 
;;              6 [15.0%] 
;;              7 [100.0%]  (FALLTHRU)
(code_label 38 37 39 8 94 "" [2 uses])
(note 39 38 40 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 8 (set (mem/f:DI (reg/f:DI 103 [ D.6678 ]) [1 *_41+0 S8 A64])
        (reg/v/f:DI 106 [ new_buffer ])) lex.yy.c:1777 -1
     (nil))
(insn 41 40 42 8 (set (reg:SI 113)
        (mem:SI (plus:DI (reg/v/f:DI 106 [ new_buffer ])
                (const_int 32 [0x20])) [2 new_buffer_4(D)->yy_n_chars+0 S4 A64])) lex.yy.c:1642 -1
     (nil))
(insn 42 41 43 8 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 113)) lex.yy.c:1642 -1
     (nil))
(insn 43 42 44 8 (set (reg/f:DI 99 [ D.6681 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 106 [ new_buffer ])
                (const_int 16 [0x10])) [1 new_buffer_4(D)->yy_buf_pos+0 S8 A64])) lex.yy.c:1643 -1
     (nil))
(insn 44 43 45 8 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 99 [ D.6681 ])) lex.yy.c:1643 -1
     (nil))
(insn 45 44 46 8 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 99 [ D.6681 ])) lex.yy.c:1643 -1
     (nil))
(insn 46 45 47 8 (set (reg/f:DI 114)
        (mem/f:DI (reg/f:DI 103 [ D.6678 ]) [1 *_41+0 S8 A64])) lex.yy.c:1644 -1
     (nil))
(insn 47 46 48 8 (set (reg/f:DI 115)
        (mem/f:DI (reg/f:DI 114) [1 _34->yy_input_file+0 S8 A64])) lex.yy.c:1644 -1
     (nil))
(insn 48 47 49 8 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 115)) lex.yy.c:1644 -1
     (nil))
(insn 49 48 50 8 (set (reg:QI 116)
        (mem:QI (reg/f:DI 99 [ D.6681 ]) [0 *_33+0 S1 A8])) lex.yy.c:1645 -1
     (nil))
(insn 50 49 53 8 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 116)) lex.yy.c:1645 -1
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)

;; basic block 10, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 [100.0%]  (FALLTHRU)
;;              2 [21.6%] 
(code_label 53 50 54 10 91 "" [1 uses])
(note 54 53 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void yypop_buffer_state() (_Z18yypop_buffer_statev, funcdef_no=99, decl_uid=4264, cgraph_uid=99, symbol_order=126)

void yypop_buffer_state() ()
{
  struct yy_buffer_state * * pretmp_1;
  struct yy_buffer_state * * yy_buffer_stack.107_5;
  long unsigned int yy_buffer_stack_top.108_6;
  long unsigned int _7;
  struct yy_buffer_state * * _8;
  struct yy_buffer_state * _9;
  long unsigned int pretmp_15;
  long unsigned int yy_buffer_stack_top.110_16;
  struct yy_buffer_state * pretmp_23;
  int yy_n_chars.37_24;
  char * yy_c_buf_p.38_25;
  struct yy_buffer_state * _26;
  struct FILE * yyin.40_27;
  char yy_hold_char.41_28;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  yy_buffer_stack.107_5 = yy_buffer_stack;
  if (yy_buffer_stack.107_5 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
;;                4
;;                5
;;                8
  goto <bb 7>;
;;    succ:       7

;;   basic block 4, loop depth 0
;;    pred:       2
  yy_buffer_stack_top.108_6 = yy_buffer_stack_top;
  _7 = yy_buffer_stack_top.108_6 * 8;
  _8 = yy_buffer_stack.107_5 + _7;
  _9 = *_8;
  if (_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 8>;
;;    succ:       3
;;                8

;;   basic block 5, loop depth 0
;;    pred:       8
  yy_buffer_stack_top.110_16 = yy_buffer_stack_top.108_6 + 18446744073709551615;
  yy_buffer_stack_top = yy_buffer_stack_top.110_16;
  pretmp_15 = yy_buffer_stack_top.110_16 * 8;
  pretmp_1 = yy_buffer_stack.107_5 + pretmp_15;
  pretmp_23 = *pretmp_1;
  if (pretmp_23 != 0B)
    goto <bb 6>;
  else
    goto <bb 3>;
;;    succ:       6
;;                3

;;   basic block 6, loop depth 0
;;    pred:       5
  yy_n_chars.37_24 = pretmp_23->yy_n_chars;
  yy_n_chars = yy_n_chars.37_24;
  yy_c_buf_p.38_25 = pretmp_23->yy_buf_pos;
  yy_c_buf_p = yy_c_buf_p.38_25;
  yytext = yy_c_buf_p.38_25;
  _26 = *pretmp_1;
  yyin.40_27 = _26->yy_input_file;
  yyin = yyin.40_27;
  yy_hold_char.41_28 = *yy_c_buf_p.38_25;
  yy_hold_char = yy_hold_char.41_28;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       6
;;                3
  return;
;;    succ:       EXIT

;;   basic block 8, loop depth 0
;;    pred:       4
  yy_delete_buffer (_9);
  *_8 = 0B;
  if (yy_buffer_stack_top.108_6 != 0)
    goto <bb 5>;
  else
    goto <bb 3>;
;;    succ:       5
;;                3

}



Partition map 

Partition 1 (pretmp_1 - 1 )
Partition 5 (yy_buffer_stack.107_5 - 5 )
Partition 6 (yy_buffer_stack_top.108_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 15 (pretmp_15 - 15 )
Partition 16 (yy_buffer_stack_top.110_16 - 16 )
Partition 23 (pretmp_23 - 23 )
Partition 24 (yy_n_chars.37_24 - 24 )
Partition 25 (yy_c_buf_p.38_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (yyin.40_27 - 27 )
Partition 28 (yy_hold_char.41_28 - 28 )

After Coalescing:

Partition map 

Partition 0 (pretmp_1 - 1 )
Partition 1 (yy_buffer_stack.107_5 - 5 )
Partition 2 (yy_buffer_stack_top.108_6 - 6 )
Partition 3 (_7 - 7 )
Partition 4 (_8 - 8 )
Partition 5 (_9 - 9 )
Partition 6 (pretmp_15 - 15 )
Partition 7 (yy_buffer_stack_top.110_16 - 16 )
Partition 8 (pretmp_23 - 23 )
Partition 9 (yy_n_chars.37_24 - 24 )
Partition 10 (yy_c_buf_p.38_25 - 25 )
Partition 11 (_26 - 26 )
Partition 12 (yyin.40_27 - 27 )
Partition 13 (yy_hold_char.41_28 - 28 )


Replacing Expressions
_7 replace with --> _7 = yy_buffer_stack_top.108_6 * 8;

pretmp_15 replace with --> pretmp_15 = yy_buffer_stack_top.110_16 * 8;

yy_n_chars.37_24 replace with --> yy_n_chars.37_24 = pretmp_23->yy_n_chars;

_26 replace with --> _26 = *pretmp_1;

yyin.40_27 replace with --> yyin.40_27 = _26->yy_input_file;

yy_hold_char.41_28 replace with --> yy_hold_char.41_28 = *yy_c_buf_p.38_25;


void yypop_buffer_state() ()
{
  struct yy_buffer_state * * pretmp_1;
  struct yy_buffer_state * * yy_buffer_stack.107_5;
  long unsigned int yy_buffer_stack_top.108_6;
  long unsigned int _7;
  struct yy_buffer_state * * _8;
  struct yy_buffer_state * _9;
  long unsigned int pretmp_15;
  long unsigned int yy_buffer_stack_top.110_16;
  struct yy_buffer_state * pretmp_23;
  int yy_n_chars.37_24;
  char * yy_c_buf_p.38_25;
  struct yy_buffer_state * _26;
  struct FILE * yyin.40_27;
  char yy_hold_char.41_28;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  yy_buffer_stack.107_5 = yy_buffer_stack;
  if (yy_buffer_stack.107_5 == 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
;;                4
;;                5
;;                8
  goto <bb 7>;
;;    succ:       7

;;   basic block 4, loop depth 0
;;    pred:       2
  yy_buffer_stack_top.108_6 = yy_buffer_stack_top;
  _7 = yy_buffer_stack_top.108_6 * 8;
  _8 = yy_buffer_stack.107_5 + _7;
  _9 = *_8;
  if (_9 == 0B)
    goto <bb 3>;
  else
    goto <bb 8>;
;;    succ:       3
;;                8

;;   basic block 5, loop depth 0
;;    pred:       8
  yy_buffer_stack_top.110_16 = yy_buffer_stack_top.108_6 + 18446744073709551615;
  yy_buffer_stack_top = yy_buffer_stack_top.110_16;
  pretmp_15 = yy_buffer_stack_top.110_16 * 8;
  pretmp_1 = yy_buffer_stack.107_5 + pretmp_15;
  pretmp_23 = *pretmp_1;
  if (pretmp_23 != 0B)
    goto <bb 6>;
  else
    goto <bb 3>;
;;    succ:       6
;;                3

;;   basic block 6, loop depth 0
;;    pred:       5
  yy_n_chars.37_24 = pretmp_23->yy_n_chars;
  yy_n_chars = yy_n_chars.37_24;
  yy_c_buf_p.38_25 = pretmp_23->yy_buf_pos;
  yy_c_buf_p = yy_c_buf_p.38_25;
  yytext = yy_c_buf_p.38_25;
  _26 = *pretmp_1;
  yyin.40_27 = _26->yy_input_file;
  yyin = yyin.40_27;
  yy_hold_char.41_28 = *yy_c_buf_p.38_25;
  yy_hold_char = yy_hold_char.41_28;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       6
;;                3
  return;
;;    succ:       EXIT

;;   basic block 8, loop depth 0
;;    pred:       4
  yy_delete_buffer (_9);
  *_8 = 0B;
  if (yy_buffer_stack_top.108_6 != 0)
    goto <bb 5>;
  else
    goto <bb 3>;
;;    succ:       5
;;                3

}



;; Generating RTL for gimple basic block 2

;; _5 = yy_buffer_stack;

(insn 5 4 0 (set (reg/f:DI 88 [ D.6687 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1790 -1
     (nil))

;; if (_5 == 0B)

(insn 6 5 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.6687 ])
            (const_int 0 [0]))) lex.yy.c:1790 -1
     (nil))

(jump_insn 7 6 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1790 -1
     (int_list:REG_BR_PROB 8986 (nil)))

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; 

(code_label 11 10 12 102 "" [0 uses])

(note 12 11 0 NOTE_INSN_BASIC_BLOCK)

;; _6 = yy_buffer_stack_top;

(insn 13 12 0 (set (reg:DI 89 [ D.6688 ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1790 -1
     (nil))

;; _8 = _5 + _7;

(insn 14 13 15 (parallel [
            (set (reg:DI 101 [ D.6688 ])
                (ashift:DI (reg:DI 89 [ D.6688 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1790 -1
     (nil))

(insn 15 14 0 (parallel [
            (set (reg/f:DI 91 [ D.6687 ])
                (plus:DI (reg/f:DI 88 [ D.6687 ])
                    (reg:DI 101 [ D.6688 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1790 -1
     (nil))

;; _9 = *_8;

(insn 16 15 0 (set (reg/f:DI 92 [ D.6689 ])
        (mem/f:DI (reg/f:DI 91 [ D.6687 ]) [1 *_8+0 S8 A64])) lex.yy.c:1790 -1
     (nil))

;; if (_9 == 0B)

(insn 18 16 19 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.6689 ])
            (const_int 0 [0]))) lex.yy.c:1790 -1
     (nil))

(jump_insn 19 18 22 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) lex.yy.c:1790 -1
     (int_list:REG_BR_PROB 1014 (nil)))

(note 22 19 20 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(jump_insn 20 22 21 10 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 21 20 0)

;; Generating RTL for gimple basic block 5

;; _16 = _6 + 18446744073709551615;

(insn 24 23 0 (parallel [
            (set (reg:DI 94 [ D.6688 ])
                (plus:DI (reg:DI 89 [ D.6688 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1796 -1
     (nil))

;; yy_buffer_stack_top = _16;

(insn 25 24 0 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (reg:DI 94 [ D.6688 ])) lex.yy.c:1796 -1
     (nil))

;; _1 = _5 + _15;

(insn 26 25 27 (parallel [
            (set (reg:DI 102 [ D.6688 ])
                (ashift:DI (reg:DI 94 [ D.6688 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

(insn 27 26 0 (parallel [
            (set (reg/f:DI 87 [ D.6687 ])
                (plus:DI (reg/f:DI 88 [ D.6687 ])
                    (reg:DI 102 [ D.6688 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; _23 = *_1;

(insn 28 27 0 (set (reg/f:DI 95 [ D.6689 ])
        (mem/f:DI (reg/f:DI 87 [ D.6687 ]) [1 *_1+0 S8 A64])) -1
     (nil))

;; if (_23 != 0B)

(insn 29 28 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 95 [ D.6689 ])
            (const_int 0 [0]))) lex.yy.c:1798 -1
     (nil))

(jump_insn 30 29 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) lex.yy.c:1798 -1
     (int_list:REG_BR_PROB 0 (nil)))

;; Generating RTL for gimple basic block 6

;; yy_n_chars = _24;

(insn 32 31 33 (set (reg:SI 103)
        (mem:SI (plus:DI (reg/f:DI 95 [ D.6689 ])
                (const_int 32 [0x20])) [2 _23->yy_n_chars+0 S4 A64])) lex.yy.c:1642 -1
     (nil))

(insn 33 32 0 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 103)) lex.yy.c:1642 -1
     (nil))

;; _25 = _23->yy_buf_pos;

(insn 34 33 0 (set (reg/f:DI 97 [ D.6691 ])
        (mem/f:DI (plus:DI (reg/f:DI 95 [ D.6689 ])
                (const_int 16 [0x10])) [1 _23->yy_buf_pos+0 S8 A64])) lex.yy.c:1643 -1
     (nil))

;; yy_c_buf_p = _25;

(insn 35 34 0 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 97 [ D.6691 ])) lex.yy.c:1643 -1
     (nil))

;; yytext = _25;

(insn 36 35 0 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 97 [ D.6691 ])) lex.yy.c:1643 -1
     (nil))

;; yyin = _27;

(insn 37 36 38 (set (reg/f:DI 104)
        (mem/f:DI (reg/f:DI 87 [ D.6687 ]) [1 *_1+0 S8 A64])) lex.yy.c:1644 -1
     (nil))

(insn 38 37 39 (set (reg/f:DI 105)
        (mem/f:DI (reg/f:DI 104) [1 _26->yy_input_file+0 S8 A64])) lex.yy.c:1644 -1
     (nil))

(insn 39 38 0 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 105)) lex.yy.c:1644 -1
     (nil))

;; yy_hold_char = _28;

(insn 40 39 41 (set (reg:QI 106)
        (mem:QI (reg/f:DI 97 [ D.6691 ]) [0 *_25+0 S1 A8])) lex.yy.c:1645 -1
     (nil))

(insn 41 40 0 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 106)) lex.yy.c:1645 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 42 41 43 103 "" [0 uses])

(note 43 42 0 NOTE_INSN_BASIC_BLOCK)

;; return;

(jump_insn 44 43 45 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 45 44 0)

;; Generating RTL for gimple basic block 8

;; 

(code_label 46 45 47 105 "" [0 uses])

(note 47 46 0 NOTE_INSN_BASIC_BLOCK)

;; yy_delete_buffer (_9);

(insn 48 47 49 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.6689 ])) lex.yy.c:1793 -1
     (nil))

(call_insn 49 48 0 (call (mem:QI (symbol_ref:DI ("_Z16yy_delete_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c438 yy_delete_buffer>) [0 yy_delete_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:1793 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_delete_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c438 yy_delete_buffer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; *_8 = 0B;

(insn 50 49 0 (set (mem/f:DI (reg/f:DI 91 [ D.6687 ]) [1 *_8+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:1794 -1
     (nil))

;; if (_6 != 0)

(insn 52 50 53 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 89 [ D.6688 ])
            (const_int 0 [0]))) lex.yy.c:1795 -1
     (nil))

(jump_insn 53 52 56 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) lex.yy.c:1795 -1
     (int_list:REG_BR_PROB 5000 (nil)))

(note 56 53 54 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(jump_insn 54 56 55 11 (set (pc)
        (label_ref 17)) lex.yy.c:1795 -1
     (nil))

(barrier 55 54 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 12 failed.
Forwarding edge 2->4 to 12 failed.
Redirecting jump 9 from 9 to 12.
Edge 5->4 redirected to 12
Forwarding edge 5->6 to 10 failed.
Forwarding edge 5->6 to 10 failed.
Edge 7->4 redirected to 12
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Forwarding edge 10->11 to 12 failed.
Removing jump 54.


try_optimize_cfg iteration 2

Forwarding edge 2->4 to 12 failed.
Deleted label in block 4.
Forwarding edge 5->6 to 10 failed.
Forwarding edge 10->11 to 12 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 88 [ D.6687 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1790 -1
     (nil))
(insn 6 5 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.6687 ])
            (const_int 0 [0]))) lex.yy.c:1790 -1
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 11)
            (pc))) lex.yy.c:1790 -1
     (int_list:REG_BR_PROB 8986 (nil))
 -> 11)
;;  succ:       4 [10.1%]  (FALLTHRU)
;;              5 [89.9%] 

;; basic block 4, loop depth 0, count 0, freq 0
;; Invalid sum of incoming frequencies 1014, should be 0
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [10.1%]  (FALLTHRU)
(note 8 7 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 9 8 10 4 (set (pc)
        (label_ref:DI 57)) 654 {jump}
     (nil)
 -> 57)
;;  succ:       12 [100.0%] 

(barrier 10 9 11)
;; basic block 5, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [89.9%] 
(code_label 11 10 12 5 102 "" [1 uses])
(note 12 11 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 5 (set (reg:DI 89 [ D.6688 ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1790 -1
     (nil))
(insn 14 13 15 5 (parallel [
            (set (reg:DI 101 [ D.6688 ])
                (ashift:DI (reg:DI 89 [ D.6688 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1790 -1
     (nil))
(insn 15 14 16 5 (parallel [
            (set (reg/f:DI 91 [ D.6687 ])
                (plus:DI (reg/f:DI 88 [ D.6687 ])
                    (reg:DI 101 [ D.6688 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1790 -1
     (nil))
(insn 16 15 18 5 (set (reg/f:DI 92 [ D.6689 ])
        (mem/f:DI (reg/f:DI 91 [ D.6687 ]) [1 *_8+0 S8 A64])) lex.yy.c:1790 -1
     (nil))
(insn 18 16 19 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.6689 ])
            (const_int 0 [0]))) lex.yy.c:1790 -1
     (nil))
(jump_insn 19 18 22 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 57)
            (pc))) lex.yy.c:1790 612 {*jcc_1}
     (int_list:REG_BR_PROB 1014 (nil))
 -> 57)
;;  succ:       12 [10.1%] 
;;              6 [89.9%]  (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 8075, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [89.9%]  (FALLTHRU)
(note 22 19 20 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 20 22 21 6 (set (pc)
        (label_ref 46)) -1
     (nil)
 -> 46)
;;  succ:       10 [100.0%] 

(barrier 21 20 51)
;; basic block 7, loop depth 0, count 0, freq 4037, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 [50.0%] 
(code_label 51 21 23 7 106 "" [1 uses])
(note 23 51 24 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 7 (parallel [
            (set (reg:DI 94 [ D.6688 ])
                (plus:DI (reg:DI 89 [ D.6688 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1796 -1
     (nil))
(insn 25 24 26 7 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (reg:DI 94 [ D.6688 ])) lex.yy.c:1796 -1
     (nil))
(insn 26 25 27 7 (parallel [
            (set (reg:DI 102 [ D.6688 ])
                (ashift:DI (reg:DI 94 [ D.6688 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 27 26 28 7 (parallel [
            (set (reg/f:DI 87 [ D.6687 ])
                (plus:DI (reg/f:DI 88 [ D.6687 ])
                    (reg:DI 102 [ D.6688 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 28 27 29 7 (set (reg/f:DI 95 [ D.6689 ])
        (mem/f:DI (reg/f:DI 87 [ D.6687 ]) [1 *_1+0 S8 A64])) -1
     (nil))
(insn 29 28 30 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 95 [ D.6689 ])
            (const_int 0 [0]))) lex.yy.c:1798 -1
     (nil))
(jump_insn 30 29 31 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 57)
            (pc))) lex.yy.c:1798 612 {*jcc_1}
     (int_list:REG_BR_PROB 0 (nil))
 -> 57)
;;  succ:       8 [100.0%]  (FALLTHRU)
;;              12

;; basic block 8, loop depth 0, count 0, freq 6520, maybe hot
;; Invalid sum of incoming frequencies 4037, should be 6520
;;  prev block 7, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [100.0%]  (FALLTHRU)
(note 31 30 32 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 8 (set (reg:SI 103)
        (mem:SI (plus:DI (reg/f:DI 95 [ D.6689 ])
                (const_int 32 [0x20])) [2 _23->yy_n_chars+0 S4 A64])) lex.yy.c:1642 -1
     (nil))
(insn 33 32 34 8 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 103)) lex.yy.c:1642 -1
     (nil))
(insn 34 33 35 8 (set (reg/f:DI 97 [ D.6691 ])
        (mem/f:DI (plus:DI (reg/f:DI 95 [ D.6689 ])
                (const_int 16 [0x10])) [1 _23->yy_buf_pos+0 S8 A64])) lex.yy.c:1643 -1
     (nil))
(insn 35 34 36 8 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 97 [ D.6691 ])) lex.yy.c:1643 -1
     (nil))
(insn 36 35 37 8 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 97 [ D.6691 ])) lex.yy.c:1643 -1
     (nil))
(insn 37 36 38 8 (set (reg/f:DI 104)
        (mem/f:DI (reg/f:DI 87 [ D.6687 ]) [1 *_1+0 S8 A64])) lex.yy.c:1644 -1
     (nil))
(insn 38 37 39 8 (set (reg/f:DI 105)
        (mem/f:DI (reg/f:DI 104) [1 _26->yy_input_file+0 S8 A64])) lex.yy.c:1644 -1
     (nil))
(insn 39 38 40 8 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 105)) lex.yy.c:1644 -1
     (nil))
(insn 40 39 41 8 (set (reg:QI 106)
        (mem:QI (reg/f:DI 97 [ D.6691 ]) [0 *_25+0 S1 A8])) lex.yy.c:1645 -1
     (nil))
(insn 41 40 44 8 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 106)) lex.yy.c:1645 -1
     (nil))
(jump_insn 44 41 45 8 (set (pc)
        (label_ref 57)) -1
     (nil)
 -> 57)
;;  succ:       12 [100.0%] 

(barrier 45 44 46)
;; basic block 10, loop depth 0, count 0, freq 8075, maybe hot
;;  prev block 8, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [100.0%] 
(code_label 46 45 47 10 105 "" [1 uses])
(note 47 46 48 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 10 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.6689 ])) lex.yy.c:1793 -1
     (nil))
(call_insn 49 48 50 10 (call (mem:QI (symbol_ref:DI ("_Z16yy_delete_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c438 yy_delete_buffer>) [0 yy_delete_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:1793 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_delete_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c438 yy_delete_buffer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 50 49 52 10 (set (mem/f:DI (reg/f:DI 91 [ D.6687 ]) [1 *_8+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:1794 -1
     (nil))
(insn 52 50 53 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 89 [ D.6688 ])
            (const_int 0 [0]))) lex.yy.c:1795 -1
     (nil))
(jump_insn 53 52 56 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) lex.yy.c:1795 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 51)
;;  succ:       7 [50.0%] 
;;              11 [50.0%]  (FALLTHRU)

;; basic block 11, loop depth 0, count 0, freq 4038, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 [50.0%]  (FALLTHRU)
(note 56 53 57 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;;  succ:       12 [100.0%]  (FALLTHRU)

;; basic block 12, loop depth 0, count 0, freq 10000, maybe hot
;; Invalid sum of incoming frequencies 11469, should be 10000
;;  prev block 11, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 [100.0%] 
;;              4 [100.0%] 
;;              5 [10.1%] 
;;              7
;;              11 [100.0%]  (FALLTHRU)
(code_label 57 56 58 12 101 "" [4 uses])
(note 58 57 0 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function int yylex() (_Z5yylexv, funcdef_no=85, decl_uid=5394, cgraph_uid=85, symbol_order=112)

int yylex() ()
{
  unsigned long ivtmp.210;
  bool yy_last_accepting_state_lsm.194;
  yy_state_type yy_last_accepting_state_lsm.193;
  bool yy_last_accepting_cpos_lsm.192;
  char * yy_last_accepting_cpos_lsm.191;
  char * dest;
  char * source;
  yy_size_t number_to_move;
  yy_size_t i;
  int ret_val;
  yy_size_t num_to_read;
  int yy_c_buf_p_offset;
  yy_size_t new_size;
  int c;
  size_t n;
  int new_size;
  char c;
  int yy_amount_of_matched_text;
  YY_CHAR yy_c;
  int yy_act;
  char * yy_cp;
  yy_state_type yy_current_state;
  int _13;
  int yy_init.0_28;
  int yy_start.1_30;
  struct FILE * yyin.2_32;
  struct _IO_FILE * stdin.3_33;
  struct FILE * yyout.4_35;
  struct _IO_FILE * stdout.5_36;
  struct yy_buffer_state * * yy_buffer_stack.6_38;
  long unsigned int yy_buffer_stack_top.7_40;
  long unsigned int _41;
  struct yy_buffer_state * * _42;
  struct yy_buffer_state * _43;
  struct yy_buffer_state * * yy_buffer_stack.6_45;
  long unsigned int yy_buffer_stack_top.7_46;
  long unsigned int _47;
  struct yy_buffer_state * * _48;
  struct FILE * yyin.2_49;
  struct yy_buffer_state * _51;
  char * yytext.49_53;
  unsigned char _60;
  unsigned int _61;
  int _67;
  int _68;
  int _69;
  short int _70;
  int _71;
  short int _72;
  unsigned int _74;
  unsigned int _77;
  unsigned int _78;
  unsigned int _79;
  short unsigned int _80;
  short unsigned int _83;
  short int _88;
  long int yy_cp.9_91;
  long int yy_bp.10_92;
  long int _93;
  long unsigned int yyleng.11_94;
  char yy_hold_char.12_96;
  int _100;
  char _104;
  int yylineno.15_105;
  int yylineno.16_106;
  char * yytext.14_111;
  struct FILE * _113;
  struct yy_buffer_state * _117;
  struct FILE * yyout.4_121;
  long unsigned int yyleng.13_122;
  char * yytext.14_123;
  int line_num.17_128;
  int line_num.18_129;
  char * yytext.14_132;
  long int yytext.21_133;
  long int _134;
  int _135;
  char yy_hold_char.8_137;
  struct yy_buffer_state * * yy_buffer_stack.6_139;
  long unsigned int yy_buffer_stack_top.7_140;
  long unsigned int _141;
  struct yy_buffer_state * * _142;
  struct yy_buffer_state * _143;
  int _144;
  int yy_n_chars.22_150;
  struct FILE * yyin.2_156;
  struct yy_buffer_state * _162;
  sizetype _170;
  char * yy_c_buf_p.29_171;
  char * yy_c_buf_p.24_172;
  sizetype _177;
  int yy_start.1_201;
  int _202;
  int _203;
  char * yytext.14_205;
  sizetype _206;
  char yy_hold_char.8_216;
  struct yy_buffer_state * * yy_buffer_stack.6_221;
  long unsigned int yy_buffer_stack_top.7_222;
  long unsigned int _223;
  struct yy_buffer_state * * _224;
  struct yy_buffer_state * _225;
  char * yytext.46_226;
  char * yytext.47_228;
  char * yytext.48_230;
  long unsigned int yyleng.52_232;
  char * yytext.51_234;
  char * yytext.14_238;
  char _239;
  int _240;
  int yy_n_chars.37_247;
  char * yy_c_buf_p.38_248;
  struct yy_buffer_state * _249;
  struct FILE * yyin.40_250;
  char yy_hold_char.41_251;
  const char * _252;
  char c.50_253;
  unsigned int _254;
  short int _255;
  short unsigned int _257;
  int _258;
  int _259;
  short int _260;
  int _261;
  short int _262;
  unsigned int _264;
  unsigned int _265;
  short unsigned int _266;
  char * yytext.42_281;
  struct Symbol * _282;
  char * yytext.42_283;
  struct Symbol * _284;
  int localvar.43_285;
  int localvar.45_286;
  int _288;
  unsigned int _289;
  short unsigned int _290;
  unsigned int _291;
  unsigned int _293;
  long unsigned int _295;
  void * _296;
  char * yytext.53_297;
  const char * _298;
  sizetype _300;
  char * _301;
  int _302;
  sizetype _310;
  char * _311;
  int _313;
  long int yy_c_buf_p.59_314;
  long int yytext.61_315;
  long int _316;
  long int yy_c_buf_p.59_317;
  long int yytext.61_318;
  long int _319;
  long unsigned int _320;
  void * _324;
  char _327;
  int _330;
  long unsigned int _331;
  long int yy_c_buf_p.59_341;
  char * _342;
  long int _343;
  long int _344;
  int _346;
  long unsigned int _347;
  long unsigned int _349;
  long unsigned int _350;
  long unsigned int _352;
  void * _353;
  sizetype _355;
  char * yy_c_buf_p.64_356;
  struct yy_buffer_state * _361;
  long unsigned int _362;
  long unsigned int _363;
  int _370;
  long unsigned int _372;
  struct FILE * yyin.67_373;
  struct yy_buffer_state * * yy_buffer_stack.55_376;
  long unsigned int yy_buffer_stack_top.56_377;
  long unsigned int _378;
  struct yy_buffer_state * * _379;
  struct yy_buffer_state * _380;
  char * yytext.77_381;
  char * _383;
  char _385;
  struct yy_buffer_state * * yy_buffer_stack.55_387;
  long unsigned int yy_buffer_stack_top.56_388;
  long unsigned int _389;
  struct yy_buffer_state * * _390;
  struct yy_buffer_state * _391;
  char * yytext.77_392;
  sizetype _394;
  char * _395;
  struct FILE * yyin.67_397;
  int _398;
  int _399;
  int yy_n_chars.71_401;
  int * _402;
  struct FILE * yyin.67_403;
  char * yytext.77_409;
  char * _410;
  long unsigned int _417;
  int yy_n_chars.74_419;
  struct FILE * yyin.67_420;
  int _421;
  int _423;
  struct FILE * yyin.67_424;
  struct yy_buffer_state * _429;
  struct FILE * yyin.67_432;
  struct yy_buffer_state * * yy_buffer_stack.55_433;
  long unsigned int yy_buffer_stack_top.56_434;
  long unsigned int _435;
  struct yy_buffer_state * * _436;
  struct yy_buffer_state * _437;
  unsigned int _438;
  unsigned int yy_n_chars.75_440;
  unsigned int _441;
  int yy_n_chars.76_442;
  long unsigned int _443;
  long unsigned int _449;
  int _450;
  unsigned int _451;
  unsigned int _452;
  long unsigned int _454;
  char * yytext.77_455;
  void * _456;
  struct yy_buffer_state * _457;
  char * yytext.77_458;
  char * _461;
  struct yy_buffer_state * _462;
  char * yytext.77_463;
  sizetype _464;
  char * _465;
  struct yy_buffer_state * _466;
  char * yytext.77_467;
  long unsigned int yyleng.13_471;
  short int _562;
  short unsigned int _565;
  int _574;
  long unsigned int _876;
  struct yy_buffer_state * prephitmp_883;
  char * prephitmp_885;
  char * pretmp_907;
  char * prephitmp_908;
  char pretmp_909;
  char prephitmp_910;
  char * pretmp_911;
  char * prephitmp_912;
  char pretmp_913;
  char prephitmp_914;
  char * pretmp_915;
  char pretmp_917;
  char prephitmp_918;
  char pretmp_919;
  char prephitmp_920;
  char pretmp_921;
  char prephitmp_922;
  short unsigned int prephitmp_924;
  short unsigned int pretmp_925;
  short unsigned int prephitmp_926;
  struct yy_buffer_state * prephitmp_927;
  int pretmp_928;
  int prephitmp_929;
  struct yy_buffer_state * pretmp_934;
  char * pretmp_936;
  char * pretmp_940;
  char * prephitmp_942;
  struct yy_buffer_state * pretmp_943;
  struct yy_buffer_state * prephitmp_944;
  int pretmp_945;
  int pretmp_946;
  int prephitmp_947;
  struct yy_buffer_state * * pretmp_948;
  long unsigned int pretmp_950;
  unsigned long _951;
  long unsigned int pretmp_952;
  char * _953;
  struct yy_buffer_state * * pretmp_954;
  struct yy_buffer_state * * prephitmp_955;
  struct yy_buffer_state * pretmp_956;
  struct yy_buffer_state * prephitmp_957;
  char * pretmp_959;
  char * prephitmp_960;
  struct yy_buffer_state * prephitmp_961;
  int prephitmp_963;
  struct yy_buffer_state * * pretmp_964;
  long unsigned int pretmp_966;
  long unsigned int pretmp_968;
  struct yy_buffer_state * * pretmp_969;
  struct yy_buffer_state * pretmp_970;
  struct yy_buffer_state * prephitmp_971;
  int pretmp_972;
  int prephitmp_973;
  struct yy_buffer_state * * pretmp_974;
  long unsigned int pretmp_976;
  long unsigned int pretmp_978;
  struct yy_buffer_state * * pretmp_980;
  struct yy_buffer_state * * prephitmp_981;
  struct yy_buffer_state * * prephitmp_985;
  struct yy_buffer_state * prephitmp_986;
  char * prephitmp_987;
  long unsigned int prephitmp_989;
  struct Symbol * prephitmp_991;
  short int pretmp_992;
  short int pretmp_993;
  short int prephitmp_994;
  int pretmp_999;
  int pretmp_1000;
  int pretmp_1001;
  int pretmp_1002;
  int prephitmp_1003;
  short int pretmp_1004;
  short int pretmp_1005;
  short int pretmp_1006;
  short int pretmp_1007;
  short int prephitmp_1008;
  short unsigned int pretmp_1009;
  short unsigned int pretmp_1010;
  short unsigned int pretmp_1011;
  short unsigned int pretmp_1012;
  short unsigned int prephitmp_1013;
  char * pretmp_1019;
  struct yy_buffer_state * * pretmp_1024;
  long unsigned int pretmp_1026;
  long unsigned int pretmp_1028;
  struct yy_buffer_state * * pretmp_1030;
  struct yy_buffer_state * * prephitmp_1031;
  struct yy_buffer_state * pretmp_1032;
  struct yy_buffer_state * prephitmp_1033;
  int pretmp_1034;
  int prephitmp_1035;
  short int pretmp_1036;
  short int prephitmp_1037;
  short unsigned int pretmp_1038;
  short unsigned int prephitmp_1039;
  int pretmp_1041;
  short int pretmp_1043;
  short int prephitmp_1044;
  short unsigned int pretmp_1045;
  short unsigned int prephitmp_1046;
  short int pretmp_1047;
  short int prephitmp_1048;
  short unsigned int pretmp_1049;
  short unsigned int prephitmp_1050;
  short int pretmp_1051;
  short int prephitmp_1052;
  short int pretmp_1054;
  short int prephitmp_1055;
  struct yy_buffer_state * * pretmp_1057;
  long unsigned int pretmp_1059;
  long unsigned int pretmp_1061;
  struct yy_buffer_state * * pretmp_1063;
  struct yy_buffer_state * * prephitmp_1064;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  yy_init.0_28 = yy_init;
  if (yy_init.0_28 == 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  pretmp_907 = yy_c_buf_p;
  pretmp_909 = yy_hold_char;
  goto <bb 14>;
;;    succ:       14

;;   basic block 4, loop depth 0
;;    pred:       2
  yy_init = 1;
  yy_start.1_30 = yy_start;
  if (yy_start.1_30 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  yy_start = 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  yyin.2_32 = yyin;
  if (yyin.2_32 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  stdin.3_33 = stdin;
  yyin = stdin.3_33;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       6
;;                7
  yyout.4_35 = yyout;
  if (yyout.4_35 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 0
;;    pred:       8
  stdout.5_36 = stdout;
  yyout = stdout.5_36;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       8
;;                9
  yy_buffer_stack.6_38 = yy_buffer_stack;
  if (yy_buffer_stack.6_38 == 0B)
    goto <bb 12>;
  else
    goto <bb 11>;
;;    succ:       12
;;                11

;;   basic block 11, loop depth 0
;;    pred:       10
  yy_buffer_stack_top.7_40 = yy_buffer_stack_top;
  _41 = yy_buffer_stack_top.7_40 * 8;
  _42 = yy_buffer_stack.6_38 + _41;
  _43 = *_42;
  if (_43 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12
;;                13

;;   basic block 12, loop depth 0
;;    pred:       11
;;                10
  yyensure_buffer_stack ();
  yy_buffer_stack.6_45 = yy_buffer_stack;
  yy_buffer_stack_top.7_46 = yy_buffer_stack_top;
  _47 = yy_buffer_stack_top.7_46 * 8;
  _48 = yy_buffer_stack.6_45 + _47;
  yyin.2_49 = yyin;
  _51 = yy_create_buffer (yyin.2_49, 16384);
  *_48 = _51;
  pretmp_1024 = yy_buffer_stack;
  pretmp_1026 = yy_buffer_stack_top;
  pretmp_1028 = pretmp_1026 * 8;
  pretmp_1030 = pretmp_1024 + pretmp_1028;
  pretmp_1032 = *pretmp_1030;
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       11
;;                12
  # prephitmp_1031 = PHI <_42(11), pretmp_1030(12)>
  # prephitmp_1033 = PHI <_43(11), pretmp_1032(12)>
  yy_n_chars.37_247 = prephitmp_1033->yy_n_chars;
  yy_n_chars = yy_n_chars.37_247;
  yy_c_buf_p.38_248 = prephitmp_1033->yy_buf_pos;
  yy_c_buf_p = yy_c_buf_p.38_248;
  yytext = yy_c_buf_p.38_248;
  _249 = *prephitmp_1031;
  yyin.40_250 = _249->yy_input_file;
  yyin = yyin.40_250;
  yy_hold_char.41_251 = *yy_c_buf_p.38_248;
  yy_hold_char = yy_hold_char.41_251;
;;    succ:       14

;;   basic block 14, loop depth 0
;;    pred:       13
;;                3
  # prephitmp_908 = PHI <yy_c_buf_p.38_248(13), pretmp_907(3)>
  # prephitmp_910 = PHI <yy_hold_char.41_251(13), pretmp_909(3)>
  pretmp_1034 = yy_start;
  pretmp_1036 = yy_accept[pretmp_1034];
  pretmp_1038 = yy_base[pretmp_1034];
  goto <bb 17>;
;;    succ:       17

;;   basic block 15, loop depth 1
;;    pred:       56
  pretmp_1001 = yy_start;
  pretmp_1006 = yy_accept[pretmp_1001];
  pretmp_1011 = yy_base[pretmp_1001];
;;    succ:       16

;;   basic block 16, loop depth 1
;;    pred:       50
;;                52
;;                51
;;                53
;;                97
;;                54
;;                15
;;                96
  # prephitmp_1003 = PHI <5(50), 1(52), pretmp_999(51), 3(53), pretmp_1000(97), 1(54), pretmp_1001(15), pretmp_1002(96)>
  # prephitmp_1008 = PHI <2(50), 0(52), pretmp_1004(51), 7(53), pretmp_1005(97), 0(54), pretmp_1006(15), pretmp_1007(96)>
  # prephitmp_1013 = PHI <40(50), 0(52), pretmp_1009(51), 37(53), pretmp_1010(97), 0(54), pretmp_1011(15), pretmp_1012(96)>
  pretmp_911 = yy_c_buf_p;
  pretmp_913 = yy_hold_char;
;;    succ:       17

;;   basic block 17, loop depth 1
;;    pred:       14
;;                16
  # prephitmp_912 = PHI <prephitmp_908(14), pretmp_911(16)>
  # prephitmp_914 = PHI <prephitmp_910(14), pretmp_913(16)>
  # prephitmp_1035 = PHI <pretmp_1034(14), prephitmp_1003(16)>
  # prephitmp_1037 = PHI <pretmp_1036(14), prephitmp_1008(16)>
  # prephitmp_1039 = PHI <pretmp_1038(14), prephitmp_1013(16)>
;;    succ:       18

;;   basic block 18, loop depth 2
;;    pred:       17
;;                48
  # yy_cp_916 = PHI <prephitmp_912(17), yy_cp_3(48)>
  # prephitmp_918 = PHI <prephitmp_914(17), pretmp_917(48)>
  # yy_current_state_1042 = PHI <prephitmp_1035(17), yy_current_state_893(48)>
  # prephitmp_1044 = PHI <prephitmp_1037(17), pretmp_1043(48)>
  # prephitmp_1046 = PHI <prephitmp_1039(17), pretmp_1045(48)>
  # DEBUG D#16 => yy_c_buf_p
  # DEBUG yy_cp => D#16
  *yy_cp_916 = prephitmp_918;
  # DEBUG yy_bp => D#16
  # DEBUG D#15 => yy_start
  # DEBUG yy_current_state => D#15
  goto <bb 20>;
;;    succ:       20

;;   basic block 19, loop depth 3
;;    pred:       151
;;                109
  # yy_current_state_57 = PHI <yy_current_state_181(151), yy_current_state_267(109)>
  # yy_cp_147 = PHI <yy_cp_178(151), yy_cp_214(109)>
  # yy_cp_146 = PHI <yy_cp_183(151), yy_cp_213(109)>
  pretmp_919 = *yy_cp_147;
  pretmp_1047 = yy_accept[yy_current_state_57];
  pretmp_1049 = yy_base[yy_current_state_57];
;;    succ:       20

;;   basic block 20, loop depth 3
;;    pred:       19
;;                18
  # yy_current_state_76 = PHI <yy_current_state_57(19), yy_current_state_1042(18)>
  # yy_cp_115 = PHI <yy_cp_147(19), yy_cp_916(18)>
  # yy_cp_118 = PHI <yy_cp_146(19), yy_cp_916(18)>
  # prephitmp_920 = PHI <pretmp_919(19), prephitmp_918(18)>
  # prephitmp_1048 = PHI <pretmp_1047(19), prephitmp_1044(18)>
  # prephitmp_1050 = PHI <pretmp_1049(19), prephitmp_1046(18)>
  yy_last_accepting_state_lsm.193_859 = yy_last_accepting_state;
  yy_last_accepting_cpos_lsm.191_857 = yy_last_accepting_cpos;
;;    succ:       21

;;   basic block 21, loop depth 4
;;    pred:       20
;;                29
  # yy_current_state_1 = PHI <yy_current_state_76(20), yy_current_state_81(29)>
  # yy_cp_4 = PHI <yy_cp_115(20), yy_cp_82(29)>
  # prephitmp_922 = PHI <prephitmp_920(20), pretmp_921(29)>
  # prephitmp_924 = PHI <prephitmp_1050(20), _83(29)>
  # prephitmp_1052 = PHI <prephitmp_1048(20), pretmp_1051(29)>
  # yy_last_accepting_cpos_lsm.191_867 = PHI <yy_last_accepting_cpos_lsm.191_857(20), yy_last_accepting_cpos_lsm.191_866(29)>
  # yy_last_accepting_cpos_lsm.192_865 = PHI <0(20), yy_last_accepting_cpos_lsm.192_864(29)>
  # yy_last_accepting_state_lsm.193_863 = PHI <yy_last_accepting_state_lsm.193_859(20), yy_last_accepting_state_lsm.193_862(29)>
  # yy_last_accepting_state_lsm.194_861 = PHI <0(20), yy_last_accepting_state_lsm.194_860(29)>
  # DEBUG yy_bp => yy_cp_118
  # DEBUG yy_cp => yy_cp_4
  # DEBUG yy_current_state => yy_current_state_1
  _60 = (unsigned char) prephitmp_922;
  _61 = (unsigned int) _60;
  yy_c_62 = yy_ec[_61];
  # DEBUG yy_c => yy_c_62
  if (prephitmp_1052 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;
;;    succ:       22
;;                23

;;   basic block 22, loop depth 4
;;    pred:       21
;;    succ:       23

;;   basic block 23, loop depth 4
;;    pred:       22
;;                21
  # yy_last_accepting_cpos_lsm.191_866 = PHI <yy_cp_4(22), yy_last_accepting_cpos_lsm.191_867(21)>
  # yy_last_accepting_cpos_lsm.192_864 = PHI <1(22), yy_last_accepting_cpos_lsm.192_865(21)>
  # yy_last_accepting_state_lsm.193_862 = PHI <yy_current_state_1(22), yy_last_accepting_state_lsm.193_863(21)>
  # yy_last_accepting_state_lsm.194_860 = PHI <1(22), yy_last_accepting_state_lsm.194_861(21)>
  goto <bb 25>;
;;    succ:       25

;;   basic block 24, loop depth 5
;;    pred:       26
;;                27
  # yy_c_152 = PHI <yy_c_11(26), yy_c_75(27)>
  pretmp_925 = yy_base[yy_current_state_73];
;;    succ:       25

;;   basic block 25, loop depth 5
;;    pred:       23
;;                24
  # yy_current_state_2 = PHI <yy_current_state_1(23), yy_current_state_73(24)>
  # yy_c_11 = PHI <yy_c_62(23), yy_c_152(24)>
  # prephitmp_926 = PHI <prephitmp_924(23), pretmp_925(24)>
  # DEBUG yy_c => yy_c_11
  # DEBUG yy_current_state => yy_current_state_2
  _67 = (int) prephitmp_926;
  _68 = (int) yy_c_11;
  _69 = _67 + _68;
  _70 = yy_chk[_69];
  _71 = (int) _70;
  if (yy_current_state_2 == _71)
    goto <bb 28>;
  else
    goto <bb 26>;
;;    succ:       28
;;                26

;;   basic block 26, loop depth 5
;;    pred:       25
  _72 = yy_def[yy_current_state_2];
  yy_current_state_73 = (yy_state_type) _72;
  # DEBUG yy_current_state => yy_current_state_73
  if (yy_current_state_73 > 101)
    goto <bb 27>;
  else
    goto <bb 24>;
;;    succ:       27
;;                24

;;   basic block 27, loop depth 5
;;    pred:       26
  _74 = (unsigned int) yy_c_11;
  yy_c_75 = yy_meta[_74];
  # DEBUG yy_c => yy_c_75
  goto <bb 24>;
;;    succ:       24

;;   basic block 28, loop depth 4
;;    pred:       25
  _77 = (unsigned int) prephitmp_926;
  _78 = (unsigned int) yy_c_11;
  _79 = _77 + _78;
  _80 = yy_nxt[_79];
  yy_current_state_81 = (yy_state_type) _80;
  # DEBUG yy_current_state => yy_current_state_81
  yy_cp_82 = yy_cp_4 + 1;
  # DEBUG yy_cp => yy_cp_82
  _83 = yy_base[yy_current_state_81];
  if (_83 == 190)
    goto <bb 30>;
  else
    goto <bb 29>;
;;    succ:       30
;;                29

;;   basic block 29, loop depth 4
;;    pred:       28
  pretmp_921 = MEM[base: yy_cp_82, offset: 0B];
  pretmp_1051 = yy_accept[yy_current_state_81];
  goto <bb 21>;
;;    succ:       21

;;   basic block 30, loop depth 3
;;    pred:       28
  if (yy_last_accepting_cpos_lsm.192_864 != 0)
    goto <bb 31>;
  else
    goto <bb 32>;
;;    succ:       32
;;                31

;;   basic block 31, loop depth 3
;;    pred:       30
  yy_last_accepting_cpos = yy_last_accepting_cpos_lsm.191_866;
;;    succ:       32

;;   basic block 32, loop depth 3
;;    pred:       31
;;                30
  if (yy_last_accepting_state_lsm.194_860 != 0)
    goto <bb 33>;
  else
    goto <bb 34>;
;;    succ:       34
;;                33

;;   basic block 33, loop depth 3
;;    pred:       32
  yy_last_accepting_state = yy_last_accepting_state_lsm.193_862;
;;    succ:       34

;;   basic block 34, loop depth 3
;;    pred:       33
;;                32
  pretmp_1054 = yy_accept[yy_current_state_81];
  goto <bb 36>;
;;    succ:       36

;;   basic block 35, loop depth 4
;;    pred:       108
;;                49
;;                152
;;                156
  # yy_cp_161 = PHI <yy_cp_207(108), yy_cp_218(49), yy_cp_941(152), yy_cp_207(156)>
  # yy_cp_155 = PHI <yy_cp_213(108), yy_cp_8(49), yy_cp_197(152), yy_cp_577(156)>
  # prephitmp_994 = PHI <_255(108), pretmp_992(49), pretmp_993(152), _255(156)>
;;    succ:       36

;;   basic block 36, loop depth 4
;;    pred:       34
;;                35
  # yy_cp_5 = PHI <yy_cp_82(34), yy_cp_161(35)>
  # yy_cp_8 = PHI <yy_cp_118(34), yy_cp_155(35)>
  # prephitmp_1055 = PHI <pretmp_1054(34), prephitmp_994(35)>
  # DEBUG yy_bp => yy_cp_8
  # DEBUG yy_cp => yy_cp_5
  # DEBUG yy_current_state => NULL
  yy_act_85 = (int) prephitmp_1055;
  # DEBUG yy_act => yy_act_85
  if (yy_act_85 == 0)
    goto <bb 37>;
  else
    goto <bb 38>;
;;    succ:       37
;;                38

;;   basic block 37, loop depth 4
;;    pred:       36
  yy_cp_86 = yy_last_accepting_cpos;
  # DEBUG yy_cp => yy_cp_86
  yy_current_state_87 = yy_last_accepting_state;
  # DEBUG yy_current_state => yy_current_state_87
  _88 = yy_accept[yy_current_state_87];
  yy_act_89 = (int) _88;
  # DEBUG yy_act => yy_act_89
;;    succ:       38

;;   basic block 38, loop depth 4
;;    pred:       36
;;                37
  # yy_cp_6 = PHI <yy_cp_5(36), yy_cp_86(37)>
  # yy_act_9 = PHI <yy_act_85(36), yy_act_89(37)>
  # DEBUG yy_act => yy_act_9
  # DEBUG yy_cp => yy_cp_6
  yytext = yy_cp_8;
  yy_cp.9_91 = (long int) yy_cp_6;
  yy_bp.10_92 = (long int) yy_cp_8;
  _93 = yy_cp.9_91 - yy_bp.10_92;
  yyleng.11_94 = (long unsigned int) _93;
  yyleng = yyleng.11_94;
  yy_hold_char.12_96 = *yy_cp_6;
  yy_hold_char = yy_hold_char.12_96;
  *yy_cp_6 = 0;
  yy_c_buf_p = yy_cp_6;
  if (yy_act_9 != 46)
    goto <bb 39>;
  else
    goto <bb 41>;
;;    succ:       39
;;                41

;;   basic block 39, loop depth 4
;;    pred:       38
  _100 = yy_rule_can_match_eol[yy_act_9];
  if (_100 != 0)
    goto <bb 40>;
  else
    goto <bb 41>;
;;    succ:       40
;;                41

;;   basic block 40, loop depth 4
;;    pred:       39
  # DEBUG yyl => 0
  yyleng.13_471 = yyleng;
  if (yyleng.13_471 == 0)
    goto <bb 41>;
  else
    goto <bb 42>;
;;    succ:       41
;;                42

;;   basic block 41, loop depth 4
;;    pred:       39
;;                45
;;                38
;;                40
  # yy_act_294 = PHI <yy_act_9(39), yy_act_9(45), yy_act_9(38), yy_act_9(40)>
  goto <bb 46>;
;;    succ:       46

;;   basic block 42, loop depth 4
;;    pred:       40
  pretmp_1019 = yytext;
  ivtmp.210_326 = (unsigned long) pretmp_1019;
  _953 = pretmp_1019 + yyleng.13_471;
  _951 = (unsigned long) _953;
;;    succ:       43

;;   basic block 43, loop depth 5
;;    pred:       42
;;                45
  # ivtmp.210_566 = PHI <ivtmp.210_326(42), ivtmp.210_564(45)>
  # DEBUG yyl => (yy_size_t) ivtmp.210_566 - (yy_size_t) pretmp_1019
  _324 = (void *) ivtmp.210_566;
  _104 = MEM[base: _324, offset: 0B];
  if (_104 == 10)
    goto <bb 44>;
  else
    goto <bb 45>;
;;    succ:       44
;;                45

;;   basic block 44, loop depth 5
;;    pred:       43
  yylineno.15_105 = yylineno;
  yylineno.16_106 = yylineno.15_105 + 1;
  yylineno = yylineno.16_106;
;;    succ:       45

;;   basic block 45, loop depth 5
;;    pred:       43
;;                44
  # DEBUG D#19 => ((yy_size_t) ivtmp.210_566 - (yy_size_t) pretmp_1019) + 1
  # DEBUG yyl => D#19
  # DEBUG yyl => D#19
  ivtmp.210_564 = ivtmp.210_566 + 1;
  if (ivtmp.210_564 == _951)
    goto <bb 41>;
  else
    goto <bb 43>;
;;    succ:       41
;;                43

;;   basic block 46, loop depth 5
;;    pred:       41
;;                150
  # yy_act_10 = PHI <yy_act_294(41), yy_act_204(150)>
  # DEBUG yy_act => yy_act_10
  switch (yy_act_10) <default: <L118>, case 0: <L45>, case 1: <L46>, case 2 ... 3: <L140>, case 4: <L49>, case 5: <L50>, case 6: <L51>, case 7: <L140>, case 8: <L53>, case 9 ... 10: <L140>, case 11: <L129>, case 12: <L130>, case 13: <L131>, case 14: <L132>, case 15: <L123>, case 16: <L124>, case 17: <L133>, case 18: <L141>, case 19: <L125>, case 20: <L146>, case 21: <L72>, case 22: <L73>, case 23: <L74>, case 24: <L75>, case 25: <L76>, case 26: <L77>, case 27: <L78>, case 28: <L79>, case 29: <L80>, case 30: <L81>, case 31: <L82>, case 32: <L83>, case 33: <L84>, case 34: <L85>, case 35: <L86>, case 36: <L87>, case 37: <L88>, case 38: <L89>, case 39: <L90>, case 40: <L91>, case 41: <L92>, case 42: <L93>, case 43: <L94>, case 44: <L95>, case 45: <L96>, case 46: <L100>, case 47 ... 49: <L54>>
;;    succ:       153
;;                49
;;                50
;;                48
;;                55
;;                51
;;                52
;;                53
;;                98
;;                54
;;                97
;;                96
;;                57
;;                60
;;                65
;;                67
;;                69
;;                70
;;                71
;;                154
;;                155
;;                47
;;                73
;;                74
;;                75
;;                76
;;                77
;;                78
;;                79
;;                80
;;                81
;;                82
;;                83
;;                84
;;                85
;;                86
;;                87
;;                88
;;                89
;;                90
;;                91
;;                92
;;                93
;;                94
;;                95

;;   basic block 47, loop depth 0
;;    pred:       46
<L146>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 48, loop depth 2
;;    pred:       46
<L140>:
  pretmp_915 = yy_c_buf_p;
  pretmp_917 = yy_hold_char;
  pretmp_1041 = yy_start;
  pretmp_1043 = yy_accept[pretmp_1041];
  pretmp_1045 = yy_base[pretmp_1041];
  yy_cp_3 = pretmp_915;
  yy_current_state_893 = pretmp_1041;
  goto <bb 18>;
;;    succ:       18

;;   basic block 49, loop depth 4
;;    pred:       46
<L45>:
  yy_hold_char.8_216 = yy_hold_char;
  *yy_cp_6 = yy_hold_char.8_216;
  yy_cp_218 = yy_last_accepting_cpos;
  # DEBUG yy_cp => yy_cp_218
  yy_current_state_219 = yy_last_accepting_state;
  # DEBUG yy_current_state => yy_current_state_219
  pretmp_992 = yy_accept[yy_current_state_219];
  goto <bb 35>;
;;    succ:       35

;;   basic block 50, loop depth 1
;;    pred:       46
<L46>:
  yy_start = 5;
  goto <bb 16>;
;;    succ:       16

;;   basic block 51, loop depth 1
;;    pred:       46
<L49>:
  line_num.17_128 = line_num;
  line_num.18_129 = line_num.17_128 + 1;
  line_num = line_num.18_129;
  pretmp_999 = yy_start;
  pretmp_1004 = yy_accept[pretmp_999];
  pretmp_1009 = yy_base[pretmp_999];
  goto <bb 16>;
;;    succ:       16

;;   basic block 52, loop depth 1
;;    pred:       46
<L50>:
  yy_start = 1;
  goto <bb 16>;
;;    succ:       16

;;   basic block 53, loop depth 1
;;    pred:       46
<L51>:
  yy_start = 3;
  goto <bb 16>;
;;    succ:       16

;;   basic block 54, loop depth 1
;;    pred:       46
<L53>:
  yytext.14_111 = yytext;
  _113 = fopen (yytext.14_111, "r");
  yyin = _113;
  _117 = yy_create_buffer (_113, 16384);
  yypush_buffer_state (_117);
  yy_start = 1;
  goto <bb 16>;
;;    succ:       16

;;   basic block 55, loop depth 1
;;    pred:       46
<L54>:
  yypop_buffer_state ();
  yy_buffer_stack.6_221 = yy_buffer_stack;
  if (yy_buffer_stack.6_221 == 0B)
    goto <bb 155> (<L125>);
  else
    goto <bb 56>;
;;    succ:       155
;;                56

;;   basic block 56, loop depth 1
;;    pred:       55
  yy_buffer_stack_top.7_222 = yy_buffer_stack_top;
  _223 = yy_buffer_stack_top.7_222 * 8;
  _224 = yy_buffer_stack.6_221 + _223;
  _225 = *_224;
  if (_225 == 0B)
    goto <bb 155> (<L125>);
  else
    goto <bb 15>;
;;    succ:       155
;;                15

;;   basic block 57, loop depth 0
;;    pred:       46
<L129>:
  yytext.42_281 = yytext;
  _282 = lookup (yytext.42_281);
  yylval.sym = _282;
  if (_282 == 0B)
    goto <bb 58>;
  else
    goto <bb 59>;
;;    succ:       58
;;                59

;;   basic block 58, loop depth 0
;;    pred:       57
  yytext.42_283 = yytext;
  _284 = insert (yytext.42_283, 258);
  yylval.sym = _284;
  localvar.43_285 = localvar;
  localvar.45_286 = localvar.43_285 + 1;
  localvar = localvar.45_286;
  _284->localvar = localvar.43_285;
;;    succ:       59

;;   basic block 59, loop depth 0
;;    pred:       57
;;                58
  # prephitmp_991 = PHI <_282(57), _284(58)>
  _288 = prephitmp_991->token;
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 60, loop depth 0
;;    pred:       46
<L130>:
  yytext.46_226 = yytext;
  sscanf (yytext.46_226, "%o", &yylval.num);
  _289 = yylval.num;
  if (_289 <= 127)
    goto <bb 61>;
  else
    goto <bb 62>;
;;    succ:       61
;;                62

;;   basic block 61, loop depth 0
;;    pred:       60
;;                65
;;                67
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 62, loop depth 0
;;    pred:       60
  if (_289 <= 32367)
    goto <bb 63>;
  else
    goto <bb 64>;
;;    succ:       63
;;                64

;;   basic block 63, loop depth 0
;;    pred:       62
;;                66
;;                68
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 64, loop depth 0
;;    pred:       62
;;                66
;;                68
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 65, loop depth 0
;;    pred:       46
<L131>:
  yytext.47_228 = yytext;
  sscanf (yytext.47_228, "%x", &yylval.num);
  _291 = yylval.num;
  if (_291 <= 127)
    goto <bb 61>;
  else
    goto <bb 66>;
;;    succ:       61
;;                66

;;   basic block 66, loop depth 0
;;    pred:       65
  if (_291 <= 32367)
    goto <bb 63>;
  else
    goto <bb 64>;
;;    succ:       63
;;                64

;;   basic block 67, loop depth 0
;;    pred:       46
<L132>:
  yytext.48_230 = yytext;
  sscanf (yytext.48_230, "%u", &yylval.num);
  _293 = yylval.num;
  if (_293 <= 127)
    goto <bb 61>;
  else
    goto <bb 68>;
;;    succ:       61
;;                68

;;   basic block 68, loop depth 0
;;    pred:       67
  if (_293 <= 32367)
    goto <bb 63>;
  else
    goto <bb 64>;
;;    succ:       63
;;                64

;;   basic block 69, loop depth 0
;;    pred:       46
<L123>:
  yytext.49_53 = yytext;
  _252 = yytext.49_53 + 1;
  sscanf (_252, "%c", &c);
  c.50_253 = c;
  _254 = (unsigned int) c.50_253;
  yylval.num = _254;
  c ={v} {CLOBBER};
  # DEBUG c => NULL
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 70, loop depth 0
;;    pred:       46
<L124>:
  yytext.51_234 = yytext;
  sscanf (yytext.51_234, "%g", &yylval.flt);
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 71, loop depth 0
;;    pred:       46
<L133>:
  yyleng.52_232 = yyleng;
  _295 = yyleng.52_232 + 18446744073709551615;
  _296 = malloc (_295);
  yylval.str = _296;
  if (_296 != 0B)
    goto <bb 72>;
  else
    goto <bb 155> (<L125>);
;;    succ:       72
;;                155

;;   basic block 72, loop depth 0
;;    pred:       71
  yytext.53_297 = yytext;
  _298 = yytext.53_297 + 1;
  # DEBUG __dest => _296
  # DEBUG __src => _298
  __builtin_strcpy (_296, _298);
  # DEBUG __dest => NULL
  # DEBUG __src => NULL
  _300 = yyleng.52_232 + 18446744073709551614;
  _301 = _296 + _300;
  *_301 = 0;
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 73, loop depth 0
;;    pred:       46
<L72>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 74, loop depth 0
;;    pred:       46
<L73>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 75, loop depth 0
;;    pred:       46
<L74>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 76, loop depth 0
;;    pred:       46
<L75>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 77, loop depth 0
;;    pred:       46
<L76>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 78, loop depth 0
;;    pred:       46
<L77>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 79, loop depth 0
;;    pred:       46
<L78>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 80, loop depth 0
;;    pred:       46
<L79>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 81, loop depth 0
;;    pred:       46
<L80>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 82, loop depth 0
;;    pred:       46
<L81>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 83, loop depth 0
;;    pred:       46
<L82>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 84, loop depth 0
;;    pred:       46
<L83>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 85, loop depth 0
;;    pred:       46
<L84>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 86, loop depth 0
;;    pred:       46
<L85>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 87, loop depth 0
;;    pred:       46
<L86>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 88, loop depth 0
;;    pred:       46
<L87>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 89, loop depth 0
;;    pred:       46
<L88>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 90, loop depth 0
;;    pred:       46
<L89>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 91, loop depth 0
;;    pred:       46
<L90>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 92, loop depth 0
;;    pred:       46
<L91>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 93, loop depth 0
;;    pred:       46
<L92>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 94, loop depth 0
;;    pred:       46
<L93>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 95, loop depth 0
;;    pred:       46
<L94>:
  yytext.14_238 = yytext;
  _239 = *yytext.14_238;
  _240 = (int) _239;
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 96, loop depth 1
;;    pred:       46
<L95>:
  yyerror ("Unknown character ignored");
  pretmp_1002 = yy_start;
  pretmp_1007 = yy_accept[pretmp_1002];
  pretmp_1012 = yy_base[pretmp_1002];
  goto <bb 16>;
;;    succ:       16

;;   basic block 97, loop depth 1
;;    pred:       46
<L96>:
  yyout.4_121 = yyout;
  yyleng.13_122 = yyleng;
  yytext.14_123 = yytext;
  fwrite (yytext.14_123, yyleng.13_122, 1, yyout.4_121);
  pretmp_1000 = yy_start;
  pretmp_1005 = yy_accept[pretmp_1000];
  pretmp_1010 = yy_base[pretmp_1000];
  goto <bb 16>;
;;    succ:       16

;;   basic block 98, loop depth 5
;;    pred:       46
<L100>:
  # DEBUG yy_act => 46
  yytext.14_132 = yytext;
  yytext.21_133 = (long int) yytext.14_132;
  _134 = yy_cp.9_91 - yytext.21_133;
  _135 = (int) _134;
  yy_amount_of_matched_text_136 = _135 + -1;
  # DEBUG yy_amount_of_matched_text => yy_amount_of_matched_text_136
  yy_hold_char.8_137 = yy_hold_char;
  *yy_cp_6 = yy_hold_char.8_137;
  yy_buffer_stack.6_139 = yy_buffer_stack;
  yy_buffer_stack_top.7_140 = yy_buffer_stack_top;
  _141 = yy_buffer_stack_top.7_140 * 8;
  _142 = yy_buffer_stack.6_139 + _141;
  _143 = *_142;
  _144 = _143->yy_buffer_status;
  if (_144 == 0)
    goto <bb 100>;
  else
    goto <bb 99>;
;;    succ:       100
;;                99

;;   basic block 99, loop depth 5
;;    pred:       98
  pretmp_928 = yy_n_chars;
  goto <bb 101>;
;;    succ:       101

;;   basic block 100, loop depth 5
;;    pred:       98
  yy_n_chars.22_150 = _143->yy_n_chars;
  yy_n_chars = yy_n_chars.22_150;
  yyin.2_156 = yyin;
  _143->yy_input_file = yyin.2_156;
  _162 = *_142;
  _162->yy_buffer_status = 1;
;;    succ:       101

;;   basic block 101, loop depth 5
;;    pred:       99
;;                100
  # prephitmp_927 = PHI <_143(99), _162(100)>
  # prephitmp_929 = PHI <pretmp_928(99), yy_n_chars.22_150(100)>
  dest_168 = prephitmp_927->yy_ch_buf;
  _170 = (sizetype) prephitmp_929;
  yy_c_buf_p.29_171 = dest_168 + _170;
  yy_c_buf_p.24_172 = yy_c_buf_p;
  if (yy_c_buf_p.29_171 >= yy_c_buf_p.24_172)
    goto <bb 102>;
  else
    goto <bb 110>;
;;    succ:       102
;;                110

;;   basic block 102, loop depth 4
;;    pred:       101
  yytext.14_205 = yytext;
  _206 = (sizetype) yy_amount_of_matched_text_136;
  yy_cp_207 = yytext.14_205 + _206;
  yy_c_buf_p = yy_cp_207;
  yy_current_state_210 = yy_get_previous_state ();
  # DEBUG yy_current_state => yy_current_state_210
  # DEBUG yy_current_state => yy_current_state_210
  # DEBUG yy_cp => yy_cp_207
  # DEBUG yy_c => 1
  _255 = yy_accept[yy_current_state_210];
  if (_255 != 0)
    goto <bb 103>;
  else
    goto <bb 104>;
;;    succ:       103
;;                104

;;   basic block 103, loop depth 4
;;    pred:       102
  yy_last_accepting_state = yy_current_state_210;
  yy_last_accepting_cpos = yy_cp_207;
;;    succ:       104

;;   basic block 104, loop depth 4
;;    pred:       102
;;                103
  # DEBUG yy_c => 1
  # DEBUG yy_current_state => yy_current_state_210
  _290 = yy_base[yy_current_state_210];
  _399 = (int) _290;
  _302 = _399 + 1;
  _562 = yy_chk[_302];
  _574 = (int) _562;
  if (yy_current_state_210 == _574)
    goto <bb 107>;
  else
    goto <bb 105>;
;;    succ:       107
;;                105

;;   basic block 105, loop depth 4
;;    pred:       104
  # yy_current_state_977 = PHI <yy_current_state_210(104)>
;;    succ:       106

;;   basic block 106, loop depth 5
;;    pred:       105
;;                106
  # yy_current_state_561 = PHI <yy_current_state_977(105), yy_current_state_263(106)>
  # DEBUG yy_c => 1
  # DEBUG yy_current_state => yy_current_state_561
  _262 = yy_def[yy_current_state_561];
  yy_current_state_263 = (yy_state_type) _262;
  # DEBUG yy_current_state => yy_current_state_263
  # DEBUG yy_c => 1
  # DEBUG yy_current_state => yy_current_state_263
  _257 = yy_base[yy_current_state_263];
  _258 = (int) _257;
  _259 = _258 + 1;
  _260 = yy_chk[_259];
  _261 = (int) _260;
  if (_261 == yy_current_state_263)
    goto <bb 107>;
  else
    goto <bb 106>;
;;    succ:       107
;;                106

;;   basic block 107, loop depth 4
;;    pred:       106
;;                104
  # _565 = PHI <_257(106), _290(104)>
  _264 = (unsigned int) _565;
  _265 = _264 + 1;
  _266 = yy_nxt[_265];
  yy_current_state_267 = (yy_state_type) _266;
  # DEBUG yy_current_state => yy_current_state_267
  # DEBUG D#1 => yy_current_state_267 == 101
  # DEBUG yy_is_jam => (int) D#1
  if (yy_current_state_267 != 101)
    goto <bb 108>;
  else
    goto <bb 156>;
;;    succ:       108
;;                156

;;   basic block 108, loop depth 4
;;    pred:       107
  # DEBUG yy_current_state => NULL
  # DEBUG yy_cp => NULL
  # DEBUG yy_next_state => NULL
  yy_cp_213 = yytext;
  # DEBUG yy_bp => yy_cp_213
  if (yy_current_state_267 != 0)
    goto <bb 109>;
  else
    goto <bb 35>;
;;    succ:       109
;;                35

;;   basic block 109, loop depth 3
;;    pred:       108
  yy_cp_214 = yy_cp_207 + 1;
  yy_c_buf_p = yy_cp_214;
  # DEBUG yy_cp => yy_cp_214
  # DEBUG yy_current_state => yy_current_state_267
  goto <bb 19>;
;;    succ:       19

;;   basic block 110, loop depth 5
;;    pred:       101
  # DEBUG dest => dest_168
  source_307 = yytext;
  # DEBUG source => source_307
  _310 = _170 + 1;
  _311 = dest_168 + _310;
  if (yy_c_buf_p.24_172 > _311)
    goto <bb 111>;
  else
    goto <bb 112>;
;;    succ:       111
;;                112

;;   basic block 111, loop depth 0
;;    pred:       110
  yy_fatal_error ("fatal flex scanner internal error--end of buffer missed");
;;    succ:      

;;   basic block 112, loop depth 5
;;    pred:       110
  _313 = prephitmp_927->yy_fill_buffer;
  if (_313 == 0)
    goto <bb 113>;
  else
    goto <bb 114>;
;;    succ:       113
;;                114

;;   basic block 113, loop depth 5
;;    pred:       112
  yy_c_buf_p.59_314 = (long int) yy_c_buf_p.24_172;
  yytext.61_315 = (long int) source_307;
  _316 = yy_c_buf_p.59_314 - yytext.61_315;
  if (_316 == 1)
    goto <bb 150> (<L108>);
  else
    goto <bb 152>;
;;    succ:       150
;;                152

;;   basic block 114, loop depth 5
;;    pred:       112
  yy_c_buf_p.59_317 = (long int) yy_c_buf_p.24_172;
  yytext.61_318 = (long int) source_307;
  _319 = yy_c_buf_p.59_317 - yytext.61_318;
  _320 = (long unsigned int) _319;
  number_to_move_321 = _320 + 18446744073709551615;
  # DEBUG number_to_move => number_to_move_321
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG source => source_307
  # DEBUG dest => dest_168
  if (number_to_move_321 == 0)
    goto <bb 117>;
  else
    goto <bb 115>;
;;    succ:       117
;;                115

;;   basic block 115, loop depth 6
;;    pred:       114
;;                115
  # i_563 = PHI <0(114), i_328(115)>
  # DEBUG i => i_563
  # DEBUG source => source_307 + (sizetype) i_563
  # DEBUG dest => dest_168 + (sizetype) i_563
  # DEBUG D#17 => dest_168 + ((sizetype) i_563 + 1)
  # DEBUG dest => D#17
  # DEBUG D#18 => source_307 + ((sizetype) i_563 + 1)
  # DEBUG source => D#18
  _327 = MEM[base: source_307, index: i_563, offset: 0B];
  MEM[base: dest_168, index: i_563, offset: 0B] = _327;
  i_328 = i_563 + 1;
  # DEBUG i => i_328
  # DEBUG i => i_328
  # DEBUG source => D#18
  # DEBUG dest => D#17
  if (number_to_move_321 == i_328)
    goto <bb 116>;
  else
    goto <bb 115>;
;;    succ:       116
;;                115

;;   basic block 116, loop depth 5
;;    pred:       115
  pretmp_943 = *_142;
;;    succ:       117

;;   basic block 117, loop depth 5
;;    pred:       116
;;                114
  # prephitmp_944 = PHI <pretmp_943(116), prephitmp_927(114)>
  _330 = prephitmp_944->yy_buffer_status;
  if (_330 == 2)
    goto <bb 118>;
  else
    goto <bb 119>;
;;    succ:       118
;;                119

;;   basic block 118, loop depth 5
;;    pred:       117
  yy_n_chars = 0;
  prephitmp_944->yy_n_chars = 0;
  goto <bb 141>;
;;    succ:       141

;;   basic block 119, loop depth 5
;;    pred:       117
  _331 = prephitmp_944->yy_buf_size;
  _363 = _331 + 18446744073709551615;
  num_to_read_333 = _363 - number_to_move_321;
  # DEBUG num_to_read => num_to_read_333
  # DEBUG num_to_read => num_to_read_333
  if (num_to_read_333 != 0)
    goto <bb 129>;
  else
    goto <bb 120>;
;;    succ:       129
;;                120

;;   basic block 120, loop depth 5
;;    pred:       119
  # prephitmp_883 = PHI <prephitmp_944(119)>
  # prephitmp_885 = PHI <yy_c_buf_p.24_172(119)>
;;    succ:       121

;;   basic block 121, loop depth 6
;;    pred:       120
;;                128
  # prephitmp_986 = PHI <prephitmp_883(120), _361(128)>
  # prephitmp_987 = PHI <prephitmp_885(120), yy_c_buf_p.64_356(128)>
  # DEBUG num_to_read => 0
  # DEBUG D#14 => yy_buffer_stack
  # DEBUG D#13 => yy_buffer_stack_top
  # DEBUG D#12 => D#13 * 8
  # DEBUG D#11 => D#14 + D#12
  # DEBUG D#10 => *D#11
  # DEBUG b => D#10
  yy_c_buf_p.59_341 = (long int) prephitmp_987;
  _342 = prephitmp_986->yy_ch_buf;
  _343 = (long int) _342;
  _344 = yy_c_buf_p.59_341 - _343;
  yy_c_buf_p_offset_345 = (int) _344;
  # DEBUG yy_c_buf_p_offset => yy_c_buf_p_offset_345
  _346 = prephitmp_986->yy_is_our_buffer;
  if (_346 != 0)
    goto <bb 122>;
  else
    goto <bb 126>;
;;    succ:       122
;;                126

;;   basic block 122, loop depth 6
;;    pred:       121
  _347 = prephitmp_986->yy_buf_size;
  new_size_348 = _347 * 2;
  # DEBUG new_size => new_size_348
  if (new_size_348 == 0)
    goto <bb 123>;
  else
    goto <bb 124>;
;;    succ:       123
;;                124

;;   basic block 123, loop depth 6
;;    pred:       122
  _349 = _347 >> 3;
  _350 = _347 + _349;
  prephitmp_986->yy_buf_size = _350;
  goto <bb 125>;
;;    succ:       125

;;   basic block 124, loop depth 6
;;    pred:       122
  prephitmp_986->yy_buf_size = new_size_348;
;;    succ:       125

;;   basic block 125, loop depth 6
;;    pred:       123
;;                124
  # prephitmp_989 = PHI <_350(123), new_size_348(124)>
  _352 = prephitmp_989 + 2;
  # DEBUG ptr => _342
  # DEBUG size => _352
  _353 = realloc (_342, _352);
  # DEBUG ptr => NULL
  # DEBUG size => NULL
  prephitmp_986->yy_ch_buf = _353;
  if (_353 == 0B)
    goto <bb 127>;
  else
    goto <bb 128>;
;;    succ:       127
;;                128

;;   basic block 126, loop depth 0
;;    pred:       121
  prephitmp_986->yy_ch_buf = 0B;
;;    succ:       127

;;   basic block 127, loop depth 0
;;    pred:       125
;;                126
  yy_fatal_error ("fatal error - scanner input buffer overflow");
;;    succ:      

;;   basic block 128, loop depth 6
;;    pred:       125
  _355 = (sizetype) yy_c_buf_p_offset_345;
  yy_c_buf_p.64_356 = _353 + _355;
  yy_c_buf_p = yy_c_buf_p.64_356;
  _361 = *_142;
  _362 = _361->yy_buf_size;
  _372 = _362 + 18446744073709551615;
  num_to_read_364 = _372 - number_to_move_321;
  # DEBUG num_to_read => num_to_read_364
  # DEBUG num_to_read => num_to_read_364
  if (num_to_read_364 != 0)
    goto <bb 129>;
  else
    goto <bb 121>;
;;    succ:       129
;;                121

;;   basic block 129, loop depth 5
;;    pred:       128
;;                119
  # num_to_read_560 = PHI <num_to_read_364(128), num_to_read_333(119)>
  # prephitmp_961 = PHI <_361(128), prephitmp_944(119)>
  num_to_read_507 = MIN_EXPR <num_to_read_560, 8192>;
  # DEBUG num_to_read => num_to_read_507
  _370 = prephitmp_961->yy_is_interactive;
  if (_370 != 0)
    goto <bb 130>;
  else
    goto <bb 135>;
;;    succ:       130
;;                135

;;   basic block 130, loop depth 5
;;    pred:       129
  # n_414 = PHI <0(129)>
;;    succ:       131

;;   basic block 131, loop depth 6
;;    pred:       130
;;                157
  # n_304 = PHI <n_414(130), n_386(157)>
  # DEBUG n => n_304
  # DEBUG c => 42
  yyin.67_373 = yyin;
  c_374 = _IO_getc (yyin.67_373);
  # DEBUG c => c_374
  if (c_374 != -1)
    goto <bb 132>;
  else
    goto <bb 162>;
;;    succ:       132
;;                162

;;   basic block 132, loop depth 6
;;    pred:       131
  if (c_374 != 10)
    goto <bb 157>;
  else
    goto <bb 161>;
;;    succ:       157
;;                161

;;   basic block 133, loop depth 0
;;    pred:       162
;;                160
  yy_fatal_error ("input in flex scanner failed");
;;    succ:      

;;   basic block 134, loop depth 5
;;    pred:       161
;;                158
  # n_559 = PHI <n_393(161), n_555(158)>
  # prephitmp_985 = PHI <_390(161), prephitmp_981(158)>
  yy_n_chars.71_401 = (int) n_559;
  yy_n_chars = yy_n_chars.71_401;
  goto <bb 140>;
;;    succ:       140

;;   basic block 135, loop depth 5
;;    pred:       129
  _402 = __errno_location ();
  *_402 = 0;
;;    succ:       136

;;   basic block 136, loop depth 6
;;    pred:       135
;;                139
  # prephitmp_971 = PHI <prephitmp_961(135), pretmp_970(139)>
  yyin.67_403 = yyin;
  yytext.77_409 = prephitmp_971->yy_ch_buf;
  _410 = yytext.77_409 + number_to_move_321;
  # DEBUG __ptr => _410
  # DEBUG __size => 1
  # DEBUG __n => num_to_read_507
  # DEBUG __stream => yyin.67_403
  _417 = __fread_alias (_410, 1, num_to_read_507, yyin.67_403);
  # DEBUG __ptr => NULL
  # DEBUG __size => NULL
  # DEBUG __n => NULL
  # DEBUG __stream => NULL
  yy_n_chars.74_419 = (int) _417;
  yy_n_chars = yy_n_chars.74_419;
  if (yy_n_chars.74_419 == 0)
    goto <bb 137>;
  else
    goto <bb 159>;
;;    succ:       137
;;                159

;;   basic block 137, loop depth 6
;;    pred:       136
  yyin.67_420 = yyin;
  _421 = ferror (yyin.67_420);
  if (_421 != 0)
    goto <bb 160>;
  else
    goto <bb 138>;
;;    succ:       160
;;                138

;;   basic block 138, loop depth 5
;;    pred:       137
  pretmp_972 = yy_n_chars;
  goto <bb 159>;
;;    succ:       159

;;   basic block 139, loop depth 6
;;    pred:       160
  *_402 = 0;
  yyin.67_424 = yyin;
  clearerr (yyin.67_424);
  pretmp_964 = yy_buffer_stack;
  pretmp_966 = yy_buffer_stack_top;
  pretmp_968 = pretmp_966 * 8;
  pretmp_969 = pretmp_964 + pretmp_968;
  pretmp_970 = *pretmp_969;
  goto <bb 136>;
;;    succ:       136

;;   basic block 140, loop depth 5
;;    pred:       134
;;                159
  # prephitmp_963 = PHI <yy_n_chars.71_401(134), prephitmp_973(159)>
  # prephitmp_1064 = PHI <prephitmp_985(134), pretmp_1063(159)>
  _429 = *prephitmp_1064;
  _429->yy_n_chars = prephitmp_963;
  if (prephitmp_963 == 0)
    goto <bb 141>;
  else
    goto <bb 144>;
;;    succ:       141
;;                144

;;   basic block 141, loop depth 5
;;    pred:       140
;;                118
  if (number_to_move_321 == 0)
    goto <bb 142>;
  else
    goto <bb 143>;
;;    succ:       142
;;                143

;;   basic block 142, loop depth 5
;;    pred:       141
  # DEBUG ret_val => 1
  yyin.67_432 = yyin;
  yyrestart (yyin.67_432);
  pretmp_945 = yy_n_chars;
  pretmp_948 = yy_buffer_stack;
  pretmp_950 = yy_buffer_stack_top;
  pretmp_952 = pretmp_950 * 8;
  pretmp_954 = pretmp_948 + pretmp_952;
  pretmp_956 = *pretmp_954;
  goto <bb 144>;
;;    succ:       144

;;   basic block 143, loop depth 5
;;    pred:       141
  # DEBUG ret_val => 2
  yy_buffer_stack.55_433 = yy_buffer_stack;
  yy_buffer_stack_top.56_434 = yy_buffer_stack_top;
  _435 = yy_buffer_stack_top.56_434 * 8;
  _436 = yy_buffer_stack.55_433 + _435;
  _437 = *_436;
  _437->yy_buffer_status = 2;
  pretmp_946 = yy_n_chars;
;;    succ:       144

;;   basic block 144, loop depth 5
;;    pred:       140
;;                142
;;                143
  # ret_val_472 = PHI <0(140), 1(142), 2(143)>
  # prephitmp_947 = PHI <prephitmp_963(140), pretmp_945(142), pretmp_946(143)>
  # prephitmp_955 = PHI <prephitmp_1064(140), pretmp_954(142), _436(143)>
  # prephitmp_957 = PHI <_429(140), pretmp_956(142), _437(143)>
  # DEBUG ret_val => ret_val_472
  _438 = (unsigned int) number_to_move_321;
  yy_n_chars.75_440 = (unsigned int) prephitmp_947;
  _441 = _438 + yy_n_chars.75_440;
  yy_n_chars.76_442 = (int) _441;
  _443 = (long unsigned int) yy_n_chars.76_442;
  _449 = prephitmp_957->yy_buf_size;
  if (_443 > _449)
    goto <bb 145>;
  else
    goto <bb 147>;
;;    succ:       145
;;                147

;;   basic block 145, loop depth 5
;;    pred:       144
  _450 = prephitmp_947 >> 1;
  _451 = (unsigned int) _450;
  _452 = _441 + _451;
  new_size_453 = (int) _452;
  # DEBUG new_size => new_size_453
  _454 = (long unsigned int) new_size_453;
  yytext.77_455 = prephitmp_957->yy_ch_buf;
  # DEBUG ptr => yytext.77_455
  # DEBUG size => _454
  _456 = realloc (yytext.77_455, _454);
  # DEBUG ptr => NULL
  # DEBUG size => NULL
  prephitmp_957->yy_ch_buf = _456;
  _457 = *prephitmp_955;
  yytext.77_458 = _457->yy_ch_buf;
  if (yytext.77_458 == 0B)
    goto <bb 146>;
  else
    goto <bb 148>;
;;    succ:       146
;;                148

;;   basic block 146, loop depth 0
;;    pred:       145
  yy_fatal_error ("out of dynamic memory in yy_get_next_buffer()");
;;    succ:      

;;   basic block 147, loop depth 5
;;    pred:       144
  pretmp_959 = prephitmp_957->yy_ch_buf;
;;    succ:       148

;;   basic block 148, loop depth 5
;;    pred:       147
;;                145
  # prephitmp_960 = PHI <pretmp_959(147), yytext.77_458(145)>
  yy_n_chars = yy_n_chars.76_442;
  _461 = prephitmp_960 + _443;
  *_461 = 0;
  _462 = *prephitmp_955;
  yytext.77_463 = _462->yy_ch_buf;
  _464 = _443 + 1;
  _465 = yytext.77_463 + _464;
  *_465 = 0;
  _466 = *prephitmp_955;
  yytext.77_467 = _466->yy_ch_buf;
  yytext = yytext.77_467;
  # DEBUG new_size => NULL
  # DEBUG n => NULL
  # DEBUG c => NULL
  # DEBUG new_size => NULL
  # DEBUG yy_c_buf_p_offset => NULL
  # DEBUG b => NULL
  # DEBUG num_to_read => NULL
  # DEBUG ret_val => NULL
  # DEBUG i => NULL
  # DEBUG number_to_move => NULL
  # DEBUG source => NULL
  # DEBUG dest => NULL
  switch (ret_val_472) <default: <L114>, case 1: <L108>, case 2: <L142>>
;;    succ:       149
;;                151
;;                150

;;   basic block 149, loop depth 4
;;    pred:       148
<L142>:
  pretmp_934 = *prephitmp_955;
  pretmp_936 = pretmp_934->yy_ch_buf;
  pretmp_940 = pretmp_936 + _443;
  goto <bb 152>;
;;    succ:       152

;;   basic block 150, loop depth 5
;;    pred:       148
;;                113
  # prephitmp_942 = PHI <yytext.77_467(148), source_307(113)>
<L108>:
  # DEBUG new_size => NULL
  # DEBUG n => NULL
  # DEBUG c => NULL
  # DEBUG new_size => NULL
  # DEBUG yy_c_buf_p_offset => NULL
  # DEBUG b => NULL
  # DEBUG num_to_read => NULL
  # DEBUG ret_val => NULL
  # DEBUG i => NULL
  # DEBUG number_to_move => NULL
  # DEBUG source => NULL
  # DEBUG dest => NULL
  yy_c_buf_p = prephitmp_942;
  yy_start.1_201 = yy_start;
  _202 = yy_start.1_201 + -1;
  _203 = _202 / 2;
  yy_act_204 = _203 + 47;
  # DEBUG yy_act => yy_act_204
  goto <bb 46>;
;;    succ:       46

;;   basic block 151, loop depth 3
;;    pred:       148
<L114>:
  _177 = (sizetype) yy_amount_of_matched_text_136;
  yy_cp_178 = yytext.77_467 + _177;
  yy_c_buf_p = yy_cp_178;
  yy_current_state_181 = yy_get_previous_state ();
  # DEBUG yy_current_state => yy_current_state_181
  # DEBUG yy_cp => yy_cp_178
  yy_cp_183 = yytext;
  # DEBUG yy_bp => yy_cp_183
  goto <bb 19>;
;;    succ:       19

;;   basic block 152, loop depth 4
;;    pred:       149
;;                113
  # yy_cp_941 = PHI <pretmp_940(149), yy_c_buf_p.29_171(113)>
  # DEBUG new_size => NULL
  # DEBUG n => NULL
  # DEBUG c => NULL
  # DEBUG new_size => NULL
  # DEBUG yy_c_buf_p_offset => NULL
  # DEBUG b => NULL
  # DEBUG num_to_read => NULL
  # DEBUG ret_val => NULL
  # DEBUG i => NULL
  # DEBUG number_to_move => NULL
  # DEBUG source => NULL
  # DEBUG dest => NULL
  # DEBUG D#9 => yy_buffer_stack
  # DEBUG D#8 => yy_buffer_stack_top
  # DEBUG D#7 => D#8 * 8
  # DEBUG D#6 => D#9 + D#7
  # DEBUG D#5 => *D#6
  # DEBUG D#4 => D#5->yy_ch_buf
  # DEBUG D#3 => yy_n_chars
  # DEBUG D#2 => (sizetype) D#3
  yy_c_buf_p = yy_cp_941;
  yy_current_state_195 = yy_get_previous_state ();
  # DEBUG yy_current_state => yy_current_state_195
  # DEBUG yy_cp => D#4 + D#2
  yy_cp_197 = yytext;
  # DEBUG yy_bp => yy_cp_197
  pretmp_993 = yy_accept[yy_current_state_195];
  goto <bb 35>;
;;    succ:       35

;;   basic block 153, loop depth 0
;;    pred:       46
<L118>:
  yy_fatal_error ("fatal flex scanner internal error--no action found");
;;    succ:      

;;   basic block 154, loop depth 0
;;    pred:       46
<L141>:
;;    succ:       155

;;   basic block 155, loop depth 0
;;    pred:       64
;;                59
;;                63
;;                61
;;                71
;;                69
;;                70
;;                72
;;                154
;;                46
;;                47
;;                73
;;                74
;;                75
;;                76
;;                77
;;                78
;;                79
;;                80
;;                81
;;                82
;;                83
;;                84
;;                85
;;                86
;;                87
;;                88
;;                89
;;                90
;;                91
;;                92
;;                93
;;                94
;;                95
;;                56
;;                55
  # _13 = PHI <261(64), _288(59), 260(63), 259(61), 263(71), 259(69), 262(70), 263(72), 276(154), 277(46), 278(47), 279(73), 280(74), 281(75), 282(76), 283(77), 284(78), 285(79), 286(80), 287(81), 288(82), 289(83), 290(84), 291(85), 292(86), 293(87), 294(88), 295(89), 296(90), 123(91), 125(92), 91(93), 93(94), _240(95), 0(56), 0(55)>
<L125>:
  return _13;
;;    succ:       EXIT

;;   basic block 156, loop depth 4
;;    pred:       107
  # DEBUG yy_current_state => NULL
  # DEBUG yy_cp => NULL
  # DEBUG yy_next_state => NULL
  yy_cp_577 = yytext;
  # DEBUG yy_bp => yy_cp_577
  goto <bb 35>;
;;    succ:       35

;;   basic block 157, loop depth 6
;;    pred:       132
  # DEBUG c => c_374
  # DEBUG c => c_374
  yy_buffer_stack.55_376 = yy_buffer_stack;
  yy_buffer_stack_top.56_377 = yy_buffer_stack_top;
  _378 = yy_buffer_stack_top.56_377 * 8;
  _379 = yy_buffer_stack.55_376 + _378;
  _380 = *_379;
  yytext.77_381 = _380->yy_ch_buf;
  _876 = n_304 + number_to_move_321;
  _383 = yytext.77_381 + _876;
  _385 = (char) c_374;
  *_383 = _385;
  n_386 = n_304 + 1;
  # DEBUG n => n_386
  # DEBUG n => n_386
  # DEBUG c => c_374
  if (n_386 < num_to_read_507)
    goto <bb 131>;
  else
    goto <bb 158>;
;;    succ:       131
;;                158

;;   basic block 158, loop depth 5
;;    pred:       163
;;                157
  # n_555 = PHI <n_304(163), n_386(157)>
  # prephitmp_981 = PHI <pretmp_980(163), _379(157)>
  goto <bb 134>;
;;    succ:       134

;;   basic block 159, loop depth 5
;;    pred:       138
;;                136
  # prephitmp_973 = PHI <pretmp_972(138), yy_n_chars.74_419(136)>
  pretmp_1057 = yy_buffer_stack;
  pretmp_1059 = yy_buffer_stack_top;
  pretmp_1061 = pretmp_1059 * 8;
  pretmp_1063 = pretmp_1057 + pretmp_1061;
  goto <bb 140>;
;;    succ:       140

;;   basic block 160, loop depth 6
;;    pred:       137
  _423 = *_402;
  if (_423 != 4)
    goto <bb 133>;
  else
    goto <bb 139>;
;;    succ:       133
;;                139

;;   basic block 161, loop depth 5
;;    pred:       132
  # DEBUG c => 10
  # DEBUG c => 10
  # DEBUG c => 10
  yy_buffer_stack.55_387 = yy_buffer_stack;
  yy_buffer_stack_top.56_388 = yy_buffer_stack_top;
  _389 = yy_buffer_stack_top.56_388 * 8;
  _390 = yy_buffer_stack.55_387 + _389;
  _391 = *_390;
  yytext.77_392 = _391->yy_ch_buf;
  n_393 = n_304 + 1;
  # DEBUG n => n_393
  _394 = n_304 + number_to_move_321;
  _395 = yytext.77_392 + _394;
  *_395 = 10;
  # DEBUG n => n_393
  goto <bb 134>;
;;    succ:       134

;;   basic block 162, loop depth 5
;;    pred:       131
  # DEBUG c => -1
  # DEBUG c => -1
  # DEBUG c => -1
  # DEBUG n => n_304
  yyin.67_397 = yyin;
  _398 = ferror (yyin.67_397);
  if (_398 != 0)
    goto <bb 133>;
  else
    goto <bb 163>;
;;    succ:       133
;;                163

;;   basic block 163, loop depth 5
;;    pred:       162
  pretmp_974 = yy_buffer_stack;
  pretmp_976 = yy_buffer_stack_top;
  pretmp_978 = pretmp_976 * 8;
  pretmp_980 = pretmp_974 + pretmp_978;
  goto <bb 158>;
;;    succ:       158

}



Partition map 

Partition 1 (yy_current_state_1 - 1 )
Partition 2 (yy_current_state_2 - 2 )
Partition 3 (yy_cp_3 - 3 )
Partition 4 (yy_cp_4 - 4 )
Partition 5 (yy_cp_5 - 5 )
Partition 6 (yy_cp_6 - 6 )
Partition 8 (yy_cp_8 - 8 )
Partition 9 (yy_act_9 - 9 )
Partition 10 (yy_act_10 - 10 )
Partition 11 (yy_c_11 - 11 )
Partition 13 (_13 - 13 )
Partition 28 (yy_init.0_28 - 28 )
Partition 30 (yy_start.1_30 - 30 )
Partition 32 (yyin.2_32 - 32 )
Partition 33 (stdin.3_33 - 33 )
Partition 35 (yyout.4_35 - 35 )
Partition 36 (stdout.5_36 - 36 )
Partition 38 (yy_buffer_stack.6_38 - 38 )
Partition 40 (yy_buffer_stack_top.7_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 45 (yy_buffer_stack.6_45 - 45 )
Partition 46 (yy_buffer_stack_top.7_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (yyin.2_49 - 49 )
Partition 51 (_51 - 51 )
Partition 53 (yytext.49_53 - 53 )
Partition 57 (yy_current_state_57 - 57 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (yy_c_62 - 62 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (_72 - 72 )
Partition 73 (yy_current_state_73 - 73 )
Partition 74 (_74 - 74 )
Partition 75 (yy_c_75 - 75 )
Partition 76 (yy_current_state_76 - 76 )
Partition 77 (_77 - 77 )
Partition 78 (_78 - 78 )
Partition 79 (_79 - 79 )
Partition 80 (_80 - 80 )
Partition 81 (yy_current_state_81 - 81 )
Partition 82 (yy_cp_82 - 82 )
Partition 83 (_83 - 83 )
Partition 85 (yy_act_85 - 85 )
Partition 86 (yy_cp_86 - 86 )
Partition 87 (yy_current_state_87 - 87 )
Partition 88 (_88 - 88 )
Partition 89 (yy_act_89 - 89 )
Partition 91 (yy_cp.9_91 - 91 )
Partition 92 (yy_bp.10_92 - 92 )
Partition 93 (_93 - 93 )
Partition 94 (yyleng.11_94 - 94 )
Partition 96 (yy_hold_char.12_96 - 96 )
Partition 100 (_100 - 100 )
Partition 104 (_104 - 104 )
Partition 105 (yylineno.15_105 - 105 )
Partition 106 (yylineno.16_106 - 106 )
Partition 111 (yytext.14_111 - 111 )
Partition 113 (_113 - 113 )
Partition 115 (yy_cp_115 - 115 )
Partition 117 (_117 - 117 )
Partition 118 (yy_cp_118 - 118 )
Partition 121 (yyout.4_121 - 121 )
Partition 122 (yyleng.13_122 - 122 )
Partition 123 (yytext.14_123 - 123 )
Partition 128 (line_num.17_128 - 128 )
Partition 129 (line_num.18_129 - 129 )
Partition 132 (yytext.14_132 - 132 )
Partition 133 (yytext.21_133 - 133 )
Partition 134 (_134 - 134 )
Partition 135 (_135 - 135 )
Partition 136 (yy_amount_of_matched_text_136 - 136 )
Partition 137 (yy_hold_char.8_137 - 137 )
Partition 139 (yy_buffer_stack.6_139 - 139 )
Partition 140 (yy_buffer_stack_top.7_140 - 140 )
Partition 141 (_141 - 141 )
Partition 142 (_142 - 142 )
Partition 143 (_143 - 143 )
Partition 144 (_144 - 144 )
Partition 146 (yy_cp_146 - 146 )
Partition 147 (yy_cp_147 - 147 )
Partition 150 (yy_n_chars.22_150 - 150 )
Partition 152 (yy_c_152 - 152 )
Partition 155 (yy_cp_155 - 155 )
Partition 156 (yyin.2_156 - 156 )
Partition 161 (yy_cp_161 - 161 )
Partition 162 (_162 - 162 )
Partition 168 (dest_168 - 168 )
Partition 170 (_170 - 170 )
Partition 171 (yy_c_buf_p.29_171 - 171 )
Partition 172 (yy_c_buf_p.24_172 - 172 )
Partition 177 (_177 - 177 )
Partition 178 (yy_cp_178 - 178 )
Partition 181 (yy_current_state_181 - 181 )
Partition 183 (yy_cp_183 - 183 )
Partition 195 (yy_current_state_195 - 195 )
Partition 197 (yy_cp_197 - 197 )
Partition 201 (yy_start.1_201 - 201 )
Partition 202 (_202 - 202 )
Partition 203 (_203 - 203 )
Partition 204 (yy_act_204 - 204 )
Partition 205 (yytext.14_205 - 205 )
Partition 206 (_206 - 206 )
Partition 207 (yy_cp_207 - 207 )
Partition 210 (yy_current_state_210 - 210 )
Partition 213 (yy_cp_213 - 213 )
Partition 214 (yy_cp_214 - 214 )
Partition 216 (yy_hold_char.8_216 - 216 )
Partition 218 (yy_cp_218 - 218 )
Partition 219 (yy_current_state_219 - 219 )
Partition 221 (yy_buffer_stack.6_221 - 221 )
Partition 222 (yy_buffer_stack_top.7_222 - 222 )
Partition 223 (_223 - 223 )
Partition 224 (_224 - 224 )
Partition 225 (_225 - 225 )
Partition 226 (yytext.46_226 - 226 )
Partition 228 (yytext.47_228 - 228 )
Partition 230 (yytext.48_230 - 230 )
Partition 232 (yyleng.52_232 - 232 )
Partition 234 (yytext.51_234 - 234 )
Partition 238 (yytext.14_238 - 238 )
Partition 239 (_239 - 239 )
Partition 240 (_240 - 240 )
Partition 247 (yy_n_chars.37_247 - 247 )
Partition 248 (yy_c_buf_p.38_248 - 248 )
Partition 249 (_249 - 249 )
Partition 250 (yyin.40_250 - 250 )
Partition 251 (yy_hold_char.41_251 - 251 )
Partition 252 (_252 - 252 )
Partition 253 (c.50_253 - 253 )
Partition 254 (_254 - 254 )
Partition 255 (_255 - 255 )
Partition 257 (_257 - 257 )
Partition 258 (_258 - 258 )
Partition 259 (_259 - 259 )
Partition 260 (_260 - 260 )
Partition 261 (_261 - 261 )
Partition 262 (_262 - 262 )
Partition 263 (yy_current_state_263 - 263 )
Partition 264 (_264 - 264 )
Partition 265 (_265 - 265 )
Partition 266 (_266 - 266 )
Partition 267 (yy_current_state_267 - 267 )
Partition 281 (yytext.42_281 - 281 )
Partition 282 (_282 - 282 )
Partition 283 (yytext.42_283 - 283 )
Partition 284 (_284 - 284 )
Partition 285 (localvar.43_285 - 285 )
Partition 286 (localvar.45_286 - 286 )
Partition 288 (_288 - 288 )
Partition 289 (_289 - 289 )
Partition 290 (_290 - 290 )
Partition 291 (_291 - 291 )
Partition 293 (_293 - 293 )
Partition 294 (yy_act_294 - 294 )
Partition 295 (_295 - 295 )
Partition 296 (_296 - 296 )
Partition 297 (yytext.53_297 - 297 )
Partition 298 (_298 - 298 )
Partition 300 (_300 - 300 )
Partition 301 (_301 - 301 )
Partition 302 (_302 - 302 )
Partition 304 (n_304 - 304 )
Partition 307 (source_307 - 307 )
Partition 310 (_310 - 310 )
Partition 311 (_311 - 311 )
Partition 313 (_313 - 313 )
Partition 314 (yy_c_buf_p.59_314 - 314 )
Partition 315 (yytext.61_315 - 315 )
Partition 316 (_316 - 316 )
Partition 317 (yy_c_buf_p.59_317 - 317 )
Partition 318 (yytext.61_318 - 318 )
Partition 319 (_319 - 319 )
Partition 320 (_320 - 320 )
Partition 321 (number_to_move_321 - 321 )
Partition 324 (_324 - 324 )
Partition 326 (ivtmp.210_326 - 326 )
Partition 327 (_327 - 327 )
Partition 328 (i_328 - 328 )
Partition 330 (_330 - 330 )
Partition 331 (_331 - 331 )
Partition 333 (num_to_read_333 - 333 )
Partition 341 (yy_c_buf_p.59_341 - 341 )
Partition 342 (_342 - 342 )
Partition 343 (_343 - 343 )
Partition 344 (_344 - 344 )
Partition 345 (yy_c_buf_p_offset_345 - 345 )
Partition 346 (_346 - 346 )
Partition 347 (_347 - 347 )
Partition 348 (new_size_348 - 348 )
Partition 349 (_349 - 349 )
Partition 350 (_350 - 350 )
Partition 352 (_352 - 352 )
Partition 353 (_353 - 353 )
Partition 355 (_355 - 355 )
Partition 356 (yy_c_buf_p.64_356 - 356 )
Partition 361 (_361 - 361 )
Partition 362 (_362 - 362 )
Partition 363 (_363 - 363 )
Partition 364 (num_to_read_364 - 364 )
Partition 370 (_370 - 370 )
Partition 372 (_372 - 372 )
Partition 373 (yyin.67_373 - 373 )
Partition 374 (c_374 - 374 )
Partition 376 (yy_buffer_stack.55_376 - 376 )
Partition 377 (yy_buffer_stack_top.56_377 - 377 )
Partition 378 (_378 - 378 )
Partition 379 (_379 - 379 )
Partition 380 (_380 - 380 )
Partition 381 (yytext.77_381 - 381 )
Partition 383 (_383 - 383 )
Partition 385 (_385 - 385 )
Partition 386 (n_386 - 386 )
Partition 387 (yy_buffer_stack.55_387 - 387 )
Partition 388 (yy_buffer_stack_top.56_388 - 388 )
Partition 389 (_389 - 389 )
Partition 390 (_390 - 390 )
Partition 391 (_391 - 391 )
Partition 392 (yytext.77_392 - 392 )
Partition 393 (n_393 - 393 )
Partition 394 (_394 - 394 )
Partition 395 (_395 - 395 )
Partition 397 (yyin.67_397 - 397 )
Partition 398 (_398 - 398 )
Partition 399 (_399 - 399 )
Partition 401 (yy_n_chars.71_401 - 401 )
Partition 402 (_402 - 402 )
Partition 403 (yyin.67_403 - 403 )
Partition 409 (yytext.77_409 - 409 )
Partition 410 (_410 - 410 )
Partition 414 (n_414 - 414 )
Partition 417 (_417 - 417 )
Partition 419 (yy_n_chars.74_419 - 419 )
Partition 420 (yyin.67_420 - 420 )
Partition 421 (_421 - 421 )
Partition 423 (_423 - 423 )
Partition 424 (yyin.67_424 - 424 )
Partition 429 (_429 - 429 )
Partition 432 (yyin.67_432 - 432 )
Partition 433 (yy_buffer_stack.55_433 - 433 )
Partition 434 (yy_buffer_stack_top.56_434 - 434 )
Partition 435 (_435 - 435 )
Partition 436 (_436 - 436 )
Partition 437 (_437 - 437 )
Partition 438 (_438 - 438 )
Partition 440 (yy_n_chars.75_440 - 440 )
Partition 441 (_441 - 441 )
Partition 442 (yy_n_chars.76_442 - 442 )
Partition 443 (_443 - 443 )
Partition 449 (_449 - 449 )
Partition 450 (_450 - 450 )
Partition 451 (_451 - 451 )
Partition 452 (_452 - 452 )
Partition 453 (new_size_453 - 453 )
Partition 454 (_454 - 454 )
Partition 455 (yytext.77_455 - 455 )
Partition 456 (_456 - 456 )
Partition 457 (_457 - 457 )
Partition 458 (yytext.77_458 - 458 )
Partition 461 (_461 - 461 )
Partition 462 (_462 - 462 )
Partition 463 (yytext.77_463 - 463 )
Partition 464 (_464 - 464 )
Partition 465 (_465 - 465 )
Partition 466 (_466 - 466 )
Partition 467 (yytext.77_467 - 467 )
Partition 471 (yyleng.13_471 - 471 )
Partition 472 (ret_val_472 - 472 )
Partition 507 (num_to_read_507 - 507 )
Partition 555 (n_555 - 555 )
Partition 559 (n_559 - 559 )
Partition 560 (num_to_read_560 - 560 )
Partition 561 (yy_current_state_561 - 561 )
Partition 562 (_562 - 562 )
Partition 563 (i_563 - 563 )
Partition 564 (ivtmp.210_564 - 564 )
Partition 565 (_565 - 565 )
Partition 566 (ivtmp.210_566 - 566 )
Partition 574 (_574 - 574 )
Partition 577 (yy_cp_577 - 577 )
Partition 857 (yy_last_accepting_cpos_lsm.191_857 - 857 )
Partition 859 (yy_last_accepting_state_lsm.193_859 - 859 )
Partition 860 (yy_last_accepting_state_lsm.194_860 - 860 )
Partition 861 (yy_last_accepting_state_lsm.194_861 - 861 )
Partition 862 (yy_last_accepting_state_lsm.193_862 - 862 )
Partition 863 (yy_last_accepting_state_lsm.193_863 - 863 )
Partition 864 (yy_last_accepting_cpos_lsm.192_864 - 864 )
Partition 865 (yy_last_accepting_cpos_lsm.192_865 - 865 )
Partition 866 (yy_last_accepting_cpos_lsm.191_866 - 866 )
Partition 867 (yy_last_accepting_cpos_lsm.191_867 - 867 )
Partition 876 (_876 - 876 )
Partition 883 (prephitmp_883 - 883 )
Partition 885 (prephitmp_885 - 885 )
Partition 893 (yy_current_state_893 - 893 )
Partition 907 (pretmp_907 - 907 )
Partition 908 (prephitmp_908 - 908 )
Partition 909 (pretmp_909 - 909 )
Partition 910 (prephitmp_910 - 910 )
Partition 911 (pretmp_911 - 911 )
Partition 912 (prephitmp_912 - 912 )
Partition 913 (pretmp_913 - 913 )
Partition 914 (prephitmp_914 - 914 )
Partition 915 (pretmp_915 - 915 )
Partition 916 (yy_cp_916 - 916 )
Partition 917 (pretmp_917 - 917 )
Partition 918 (prephitmp_918 - 918 )
Partition 919 (pretmp_919 - 919 )
Partition 920 (prephitmp_920 - 920 )
Partition 921 (pretmp_921 - 921 )
Partition 922 (prephitmp_922 - 922 )
Partition 924 (prephitmp_924 - 924 )
Partition 925 (pretmp_925 - 925 )
Partition 926 (prephitmp_926 - 926 )
Partition 927 (prephitmp_927 - 927 )
Partition 928 (pretmp_928 - 928 )
Partition 929 (prephitmp_929 - 929 )
Partition 934 (pretmp_934 - 934 )
Partition 936 (pretmp_936 - 936 )
Partition 940 (pretmp_940 - 940 )
Partition 941 (yy_cp_941 - 941 )
Partition 942 (prephitmp_942 - 942 )
Partition 943 (pretmp_943 - 943 )
Partition 944 (prephitmp_944 - 944 )
Partition 945 (pretmp_945 - 945 )
Partition 946 (pretmp_946 - 946 )
Partition 947 (prephitmp_947 - 947 )
Partition 948 (pretmp_948 - 948 )
Partition 950 (pretmp_950 - 950 )
Partition 951 (_951 - 951 )
Partition 952 (pretmp_952 - 952 )
Partition 953 (_953 - 953 )
Partition 954 (pretmp_954 - 954 )
Partition 955 (prephitmp_955 - 955 )
Partition 956 (pretmp_956 - 956 )
Partition 957 (prephitmp_957 - 957 )
Partition 959 (pretmp_959 - 959 )
Partition 960 (prephitmp_960 - 960 )
Partition 961 (prephitmp_961 - 961 )
Partition 963 (prephitmp_963 - 963 )
Partition 964 (pretmp_964 - 964 )
Partition 966 (pretmp_966 - 966 )
Partition 968 (pretmp_968 - 968 )
Partition 969 (pretmp_969 - 969 )
Partition 970 (pretmp_970 - 970 )
Partition 971 (prephitmp_971 - 971 )
Partition 972 (pretmp_972 - 972 )
Partition 973 (prephitmp_973 - 973 )
Partition 974 (pretmp_974 - 974 )
Partition 976 (pretmp_976 - 976 )
Partition 977 (yy_current_state_977 - 977 )
Partition 978 (pretmp_978 - 978 )
Partition 980 (pretmp_980 - 980 )
Partition 981 (prephitmp_981 - 981 )
Partition 985 (prephitmp_985 - 985 )
Partition 986 (prephitmp_986 - 986 )
Partition 987 (prephitmp_987 - 987 )
Partition 989 (prephitmp_989 - 989 )
Partition 991 (prephitmp_991 - 991 )
Partition 992 (pretmp_992 - 992 )
Partition 993 (pretmp_993 - 993 )
Partition 994 (prephitmp_994 - 994 )
Partition 999 (pretmp_999 - 999 )
Partition 1000 (pretmp_1000 - 1000 )
Partition 1001 (pretmp_1001 - 1001 )
Partition 1002 (pretmp_1002 - 1002 )
Partition 1003 (prephitmp_1003 - 1003 )
Partition 1004 (pretmp_1004 - 1004 )
Partition 1005 (pretmp_1005 - 1005 )
Partition 1006 (pretmp_1006 - 1006 )
Partition 1007 (pretmp_1007 - 1007 )
Partition 1008 (prephitmp_1008 - 1008 )
Partition 1009 (pretmp_1009 - 1009 )
Partition 1010 (pretmp_1010 - 1010 )
Partition 1011 (pretmp_1011 - 1011 )
Partition 1012 (pretmp_1012 - 1012 )
Partition 1013 (prephitmp_1013 - 1013 )
Partition 1019 (pretmp_1019 - 1019 )
Partition 1024 (pretmp_1024 - 1024 )
Partition 1026 (pretmp_1026 - 1026 )
Partition 1028 (pretmp_1028 - 1028 )
Partition 1030 (pretmp_1030 - 1030 )
Partition 1031 (prephitmp_1031 - 1031 )
Partition 1032 (pretmp_1032 - 1032 )
Partition 1033 (prephitmp_1033 - 1033 )
Partition 1034 (pretmp_1034 - 1034 )
Partition 1035 (prephitmp_1035 - 1035 )
Partition 1036 (pretmp_1036 - 1036 )
Partition 1037 (prephitmp_1037 - 1037 )
Partition 1038 (pretmp_1038 - 1038 )
Partition 1039 (prephitmp_1039 - 1039 )
Partition 1041 (pretmp_1041 - 1041 )
Partition 1042 (yy_current_state_1042 - 1042 )
Partition 1043 (pretmp_1043 - 1043 )
Partition 1044 (prephitmp_1044 - 1044 )
Partition 1045 (pretmp_1045 - 1045 )
Partition 1046 (prephitmp_1046 - 1046 )
Partition 1047 (pretmp_1047 - 1047 )
Partition 1048 (prephitmp_1048 - 1048 )
Partition 1049 (pretmp_1049 - 1049 )
Partition 1050 (prephitmp_1050 - 1050 )
Partition 1051 (pretmp_1051 - 1051 )
Partition 1052 (prephitmp_1052 - 1052 )
Partition 1054 (pretmp_1054 - 1054 )
Partition 1055 (prephitmp_1055 - 1055 )
Partition 1057 (pretmp_1057 - 1057 )
Partition 1059 (pretmp_1059 - 1059 )
Partition 1061 (pretmp_1061 - 1061 )
Partition 1063 (pretmp_1063 - 1063 )
Partition 1064 (prephitmp_1064 - 1064 )


Partition map 

Partition 0 (yy_current_state_1 - 1 )
Partition 1 (yy_current_state_2 - 2 )
Partition 2 (yy_cp_3 - 3 )
Partition 3 (yy_cp_4 - 4 )
Partition 4 (yy_cp_5 - 5 )
Partition 5 (yy_cp_6 - 6 )
Partition 6 (yy_cp_8 - 8 )
Partition 7 (yy_act_9 - 9 )
Partition 8 (yy_act_10 - 10 )
Partition 9 (yy_c_11 - 11 )
Partition 10 (_13 - 13 )
Partition 11 (_42 - 42 )
Partition 12 (_43 - 43 )
Partition 13 (yy_current_state_57 - 57 )
Partition 14 (yy_c_62 - 62 )
Partition 15 (yy_current_state_73 - 73 )
Partition 16 (yy_c_75 - 75 )
Partition 17 (yy_current_state_76 - 76 )
Partition 18 (yy_current_state_81 - 81 )
Partition 19 (yy_cp_82 - 82 )
Partition 20 (_83 - 83 )
Partition 21 (yy_act_85 - 85 )
Partition 22 (yy_cp_86 - 86 )
Partition 23 (yy_act_89 - 89 )
Partition 24 (yy_cp_115 - 115 )
Partition 25 (yy_cp_118 - 118 )
Partition 26 (_143 - 143 )
Partition 27 (yy_cp_146 - 146 )
Partition 28 (yy_cp_147 - 147 )
Partition 29 (yy_n_chars.22_150 - 150 )
Partition 30 (yy_c_152 - 152 )
Partition 31 (yy_cp_155 - 155 )
Partition 32 (yy_cp_161 - 161 )
Partition 33 (_162 - 162 )
Partition 34 (yy_c_buf_p.24_172 - 172 )
Partition 35 (yy_cp_178 - 178 )
Partition 36 (yy_current_state_181 - 181 )
Partition 37 (yy_cp_183 - 183 )
Partition 38 (yy_cp_197 - 197 )
Partition 39 (yy_act_204 - 204 )
Partition 40 (yy_cp_207 - 207 )
Partition 41 (yy_current_state_210 - 210 )
Partition 42 (yy_cp_213 - 213 )
Partition 43 (yy_cp_214 - 214 )
Partition 44 (yy_cp_218 - 218 )
Partition 45 (_240 - 240 )
Partition 46 (yy_c_buf_p.38_248 - 248 )
Partition 47 (yy_hold_char.41_251 - 251 )
Partition 48 (_255 - 255 )
Partition 49 (_257 - 257 )
Partition 50 (yy_current_state_263 - 263 )
Partition 51 (yy_current_state_267 - 267 )
Partition 52 (_282 - 282 )
Partition 53 (_284 - 284 )
Partition 54 (_288 - 288 )
Partition 55 (_290 - 290 )
Partition 56 (yy_act_294 - 294 )
Partition 57 (n_304 - 304 )
Partition 58 (ivtmp.210_326 - 326 )
Partition 59 (i_328 - 328 )
Partition 60 (num_to_read_333 - 333 )
Partition 61 (_350 - 350 )
Partition 62 (yy_c_buf_p.64_356 - 356 )
Partition 63 (_361 - 361 )
Partition 64 (num_to_read_364 - 364 )
Partition 65 (_379 - 379 )
Partition 66 (n_386 - 386 )
Partition 67 (_390 - 390 )
Partition 68 (n_393 - 393 )
Partition 69 (yy_n_chars.71_401 - 401 )
Partition 70 (n_414 - 414 )
Partition 71 (yy_n_chars.74_419 - 419 )
Partition 72 (_429 - 429 )
Partition 73 (_436 - 436 )
Partition 74 (_437 - 437 )
Partition 75 (yytext.77_458 - 458 )
Partition 76 (yytext.77_467 - 467 )
Partition 77 (n_555 - 555 )
Partition 78 (n_559 - 559 )
Partition 79 (num_to_read_560 - 560 )
Partition 80 (yy_current_state_561 - 561 )
Partition 81 (i_563 - 563 )
Partition 82 (ivtmp.210_564 - 564 )
Partition 83 (_565 - 565 )
Partition 84 (ivtmp.210_566 - 566 )
Partition 85 (yy_cp_577 - 577 )
Partition 86 (yy_last_accepting_cpos_lsm.191_857 - 857 )
Partition 87 (yy_last_accepting_state_lsm.193_859 - 859 )
Partition 88 (yy_last_accepting_state_lsm.194_860 - 860 )
Partition 89 (yy_last_accepting_state_lsm.194_861 - 861 )
Partition 90 (yy_last_accepting_state_lsm.193_862 - 862 )
Partition 91 (yy_last_accepting_state_lsm.193_863 - 863 )
Partition 92 (yy_last_accepting_cpos_lsm.192_864 - 864 )
Partition 93 (yy_last_accepting_cpos_lsm.192_865 - 865 )
Partition 94 (yy_last_accepting_cpos_lsm.191_866 - 866 )
Partition 95 (yy_last_accepting_cpos_lsm.191_867 - 867 )
Partition 96 (prephitmp_883 - 883 )
Partition 97 (prephitmp_885 - 885 )
Partition 98 (yy_current_state_893 - 893 )
Partition 99 (pretmp_907 - 907 )
Partition 100 (prephitmp_908 - 908 )
Partition 101 (pretmp_909 - 909 )
Partition 102 (prephitmp_910 - 910 )
Partition 103 (pretmp_911 - 911 )
Partition 104 (prephitmp_912 - 912 )
Partition 105 (pretmp_913 - 913 )
Partition 106 (prephitmp_914 - 914 )
Partition 107 (yy_cp_916 - 916 )
Partition 108 (pretmp_917 - 917 )
Partition 109 (prephitmp_918 - 918 )
Partition 110 (pretmp_919 - 919 )
Partition 111 (prephitmp_920 - 920 )
Partition 112 (pretmp_921 - 921 )
Partition 113 (prephitmp_922 - 922 )
Partition 114 (prephitmp_924 - 924 )
Partition 115 (pretmp_925 - 925 )
Partition 116 (prephitmp_926 - 926 )
Partition 117 (prephitmp_927 - 927 )
Partition 118 (pretmp_928 - 928 )
Partition 119 (prephitmp_929 - 929 )
Partition 120 (yy_cp_941 - 941 )
Partition 121 (prephitmp_942 - 942 )
Partition 122 (pretmp_943 - 943 )
Partition 123 (prephitmp_944 - 944 )
Partition 124 (pretmp_945 - 945 )
Partition 125 (pretmp_946 - 946 )
Partition 126 (prephitmp_947 - 947 )
Partition 127 (pretmp_954 - 954 )
Partition 128 (prephitmp_955 - 955 )
Partition 129 (pretmp_956 - 956 )
Partition 130 (prephitmp_957 - 957 )
Partition 131 (pretmp_959 - 959 )
Partition 132 (prephitmp_960 - 960 )
Partition 133 (prephitmp_961 - 961 )
Partition 134 (prephitmp_963 - 963 )
Partition 135 (pretmp_970 - 970 )
Partition 136 (prephitmp_971 - 971 )
Partition 137 (pretmp_972 - 972 )
Partition 138 (prephitmp_973 - 973 )
Partition 139 (yy_current_state_977 - 977 )
Partition 140 (pretmp_980 - 980 )
Partition 141 (prephitmp_981 - 981 )
Partition 142 (prephitmp_985 - 985 )
Partition 143 (prephitmp_986 - 986 )
Partition 144 (prephitmp_987 - 987 )
Partition 145 (prephitmp_989 - 989 )
Partition 146 (prephitmp_991 - 991 )
Partition 147 (pretmp_992 - 992 )
Partition 148 (pretmp_993 - 993 )
Partition 149 (prephitmp_994 - 994 )
Partition 150 (pretmp_999 - 999 )
Partition 151 (pretmp_1000 - 1000 )
Partition 152 (pretmp_1001 - 1001 )
Partition 153 (pretmp_1002 - 1002 )
Partition 154 (prephitmp_1003 - 1003 )
Partition 155 (pretmp_1004 - 1004 )
Partition 156 (pretmp_1005 - 1005 )
Partition 157 (pretmp_1006 - 1006 )
Partition 158 (pretmp_1007 - 1007 )
Partition 159 (prephitmp_1008 - 1008 )
Partition 160 (pretmp_1009 - 1009 )
Partition 161 (pretmp_1010 - 1010 )
Partition 162 (pretmp_1011 - 1011 )
Partition 163 (pretmp_1012 - 1012 )
Partition 164 (prephitmp_1013 - 1013 )
Partition 165 (pretmp_1030 - 1030 )
Partition 166 (prephitmp_1031 - 1031 )
Partition 167 (pretmp_1032 - 1032 )
Partition 168 (prephitmp_1033 - 1033 )
Partition 169 (pretmp_1034 - 1034 )
Partition 170 (prephitmp_1035 - 1035 )
Partition 171 (pretmp_1036 - 1036 )
Partition 172 (prephitmp_1037 - 1037 )
Partition 173 (pretmp_1038 - 1038 )
Partition 174 (prephitmp_1039 - 1039 )
Partition 175 (yy_current_state_1042 - 1042 )
Partition 176 (pretmp_1043 - 1043 )
Partition 177 (prephitmp_1044 - 1044 )
Partition 178 (pretmp_1045 - 1045 )
Partition 179 (prephitmp_1046 - 1046 )
Partition 180 (pretmp_1047 - 1047 )
Partition 181 (prephitmp_1048 - 1048 )
Partition 182 (pretmp_1049 - 1049 )
Partition 183 (prephitmp_1050 - 1050 )
Partition 184 (pretmp_1051 - 1051 )
Partition 185 (prephitmp_1052 - 1052 )
Partition 186 (pretmp_1054 - 1054 )
Partition 187 (prephitmp_1055 - 1055 )
Partition 188 (pretmp_1063 - 1063 )
Partition 189 (prephitmp_1064 - 1064 )


Conflict graph:
3: 25
4: 6
5: 6
6: 4, 5, 22, 44
19: 25
22: 6
24: 25
25: 3, 19, 24
27: 28
28: 27
31: 32
32: 31
35: 37
37: 35
38: 120
40: 42, 85
42: 40, 43
43: 42
44: 6
57: 68
68: 57
85: 40
88: 92
89: 93
92: 88
93: 89
120: 38

After sorting:
Sorted Coalesce list:
(18200) yy_c_11 <-> yy_c_152
(9100) yy_current_state_2 <-> yy_current_state_73
(9100) pretmp_925 <-> prephitmp_926
(4550) yy_c_75 <-> yy_c_152
(1719) yy_last_accepting_state_lsm.194_860 <-> yy_last_accepting_state_lsm.194_861
(1719) yy_last_accepting_state_lsm.193_862 <-> yy_last_accepting_state_lsm.193_863
(1719) yy_last_accepting_cpos_lsm.192_864 <-> yy_last_accepting_cpos_lsm.192_865
(1719) yy_last_accepting_cpos_lsm.191_866 <-> yy_last_accepting_cpos_lsm.191_867
(900) yy_current_state_1 <-> yy_current_state_2
(900) yy_c_11 <-> yy_c_62
(900) prephitmp_924 <-> prephitmp_926
(819) yy_current_state_1 <-> yy_current_state_81
(819) yy_cp_4 <-> yy_cp_82
(819) _83 <-> prephitmp_924
(819) pretmp_921 <-> prephitmp_922
(819) pretmp_1051 <-> prephitmp_1052
(552) ivtmp.210_564 <-> ivtmp.210_566
(166) yy_act_9 <-> yy_act_294
(84) yy_cp_5 <-> yy_cp_6
(84) yy_act_9 <-> yy_act_85
(83) yy_act_10 <-> yy_act_294
(81) yy_current_state_1 <-> yy_current_state_76
(81) yy_cp_4 <-> yy_cp_115
(81) yy_cp_5 <-> yy_cp_82
(81) yy_cp_8 <-> yy_cp_118
(81) yy_current_state_76 <-> yy_current_state_1042
(81) yy_cp_115 <-> yy_cp_916
(81) yy_cp_118 <-> yy_cp_916
(81) yy_last_accepting_cpos_lsm.191_857 <-> yy_last_accepting_cpos_lsm.191_867
(81) yy_last_accepting_state_lsm.193_859 <-> yy_last_accepting_state_lsm.193_863
(81) prephitmp_918 <-> prephitmp_920
(81) prephitmp_920 <-> prephitmp_922
(81) prephitmp_924 <-> prephitmp_1050
(81) prephitmp_1044 <-> prephitmp_1048
(81) prephitmp_1046 <-> prephitmp_1050
(81) prephitmp_1048 <-> prephitmp_1052
(81) pretmp_1054 <-> prephitmp_1055
(79) prephitmp_914 <-> prephitmp_918
(79) prephitmp_1037 <-> prephitmp_1044
(79) prephitmp_1039 <-> prephitmp_1046
(64) prephitmp_908 <-> prephitmp_912
(64) prephitmp_910 <-> prephitmp_914
(64) pretmp_1034 <-> prephitmp_1035
(64) pretmp_1036 <-> prephitmp_1037
(64) pretmp_1038 <-> prephitmp_1039
(52) _42 <-> prephitmp_1031
(52) _43 <-> prephitmp_1033
(42) yy_cp_6 <-> yy_cp_86
(42) yy_act_9 <-> yy_act_89
(32) yy_c_buf_p.38_248 <-> prephitmp_908
(32) yy_hold_char.41_251 <-> prephitmp_910
(32) pretmp_907 <-> prephitmp_908
(32) pretmp_909 <-> prephitmp_910
(27) ivtmp.210_326 <-> ivtmp.210_566
(26) yy_c_buf_p.64_356 <-> prephitmp_987
(26) _361 <-> prephitmp_986
(17) pretmp_911 <-> prephitmp_912
(17) pretmp_913 <-> prephitmp_914
(17) prephitmp_1003 <-> prephitmp_1035
(17) prephitmp_1008 <-> prephitmp_1037
(17) prephitmp_1013 <-> prephitmp_1039
(16) i_328 <-> i_563
(10) yy_n_chars.74_419 <-> prephitmp_973
(7) pretmp_970 <-> prephitmp_971
(7) pretmp_1030 <-> prephitmp_1031
(7) pretmp_1032 <-> prephitmp_1033
(6) n_304 <-> n_386
(6) prephitmp_963 <-> prephitmp_973
(6) pretmp_1063 <-> prephitmp_1064
(4) yy_cp_8 <-> yy_cp_155
(4) _282 <-> prephitmp_991
(3) yy_cp_161 <-> yy_cp_207
(3) _255 <-> prephitmp_994
(3) _350 <-> prephitmp_989
(2) yy_cp_3 <-> yy_cp_916
(2) yy_cp_5 <-> yy_cp_161
(2) _13 <-> _240
(2) _13 <-> _288
(2) yy_cp_155 <-> yy_cp_213
(2) yy_cp_161 <-> yy_cp_218
(2) _257 <-> _565
(2) yy_current_state_263 <-> yy_current_state_561
(2) _290 <-> _565
(2) num_to_read_333 <-> num_to_read_560
(2) _361 <-> prephitmp_961
(2) num_to_read_364 <-> num_to_read_560
(2) _379 <-> prephitmp_981
(2) n_386 <-> n_555
(2) _429 <-> prephitmp_957
(2) yytext.77_458 <-> prephitmp_960
(2) yytext.77_467 <-> prephitmp_942
(2) yy_current_state_893 <-> yy_current_state_1042
(2) pretmp_917 <-> prephitmp_918
(2) prephitmp_927 <-> prephitmp_944
(2) prephitmp_944 <-> prephitmp_961
(2) prephitmp_947 <-> prephitmp_963
(2) prephitmp_955 <-> prephitmp_1064
(2) pretmp_992 <-> prephitmp_994
(2) prephitmp_994 <-> prephitmp_1055
(2) pretmp_999 <-> prephitmp_1003
(2) pretmp_1000 <-> prephitmp_1003
(2) pretmp_1001 <-> prephitmp_1003
(2) pretmp_1002 <-> prephitmp_1003
(2) pretmp_1004 <-> prephitmp_1008
(2) pretmp_1005 <-> prephitmp_1008
(2) pretmp_1006 <-> prephitmp_1008
(2) pretmp_1007 <-> prephitmp_1008
(2) pretmp_1009 <-> prephitmp_1013
(2) pretmp_1010 <-> prephitmp_1013
(2) pretmp_1011 <-> prephitmp_1013
(2) pretmp_1012 <-> prephitmp_1013
(2) pretmp_1043 <-> prephitmp_1044
(2) pretmp_1045 <-> prephitmp_1046
(1) yy_current_state_57 <-> yy_current_state_76
(1) yy_current_state_57 <-> yy_current_state_267
(1) yy_cp_115 <-> yy_cp_147
(1) _143 <-> prephitmp_927
(1) yy_cp_146 <-> yy_cp_213
(1) yy_cp_147 <-> yy_cp_178
(1) yy_cp_147 <-> yy_cp_214
(1) yy_n_chars.22_150 <-> prephitmp_929
(1) yy_cp_161 <-> yy_cp_941
(1) _162 <-> prephitmp_927
(1) yy_c_buf_p.24_172 <-> prephitmp_885
(1) yy_current_state_210 <-> yy_current_state_977
(1) _284 <-> prephitmp_991
(1) n_304 <-> n_555
(1) _390 <-> prephitmp_985
(1) yy_n_chars.71_401 <-> prephitmp_963
(1) _436 <-> prephitmp_955
(1) _437 <-> prephitmp_957
(1) prephitmp_883 <-> prephitmp_944
(1) pretmp_954 <-> prephitmp_955
(1) prephitmp_961 <-> prephitmp_971

Partition map 

Partition 0 (yy_current_state_1 - 1 )
Partition 1 (yy_current_state_2 - 2 )
Partition 2 (yy_cp_3 - 3 )
Partition 3 (yy_cp_4 - 4 )
Partition 4 (yy_cp_5 - 5 )
Partition 5 (yy_cp_6 - 6 )
Partition 6 (yy_cp_8 - 8 )
Partition 7 (yy_act_9 - 9 )
Partition 8 (yy_act_10 - 10 )
Partition 9 (yy_c_11 - 11 )
Partition 10 (_13 - 13 )
Partition 11 (_42 - 42 )
Partition 12 (_43 - 43 )
Partition 13 (yy_current_state_57 - 57 )
Partition 14 (yy_c_62 - 62 )
Partition 15 (yy_current_state_73 - 73 )
Partition 16 (yy_c_75 - 75 )
Partition 17 (yy_current_state_76 - 76 )
Partition 18 (yy_current_state_81 - 81 )
Partition 19 (yy_cp_82 - 82 )
Partition 20 (_83 - 83 )
Partition 21 (yy_act_85 - 85 )
Partition 22 (yy_cp_86 - 86 )
Partition 23 (yy_act_89 - 89 )
Partition 24 (yy_cp_115 - 115 )
Partition 25 (yy_cp_118 - 118 )
Partition 26 (_143 - 143 )
Partition 27 (yy_cp_146 - 146 )
Partition 28 (yy_cp_147 - 147 )
Partition 29 (yy_n_chars.22_150 - 150 )
Partition 30 (yy_c_152 - 152 )
Partition 31 (yy_cp_155 - 155 )
Partition 32 (yy_cp_161 - 161 )
Partition 33 (_162 - 162 )
Partition 34 (yy_c_buf_p.24_172 - 172 )
Partition 35 (yy_cp_178 - 178 )
Partition 36 (yy_current_state_181 - 181 )
Partition 37 (yy_cp_183 - 183 )
Partition 38 (yy_cp_197 - 197 )
Partition 39 (yy_act_204 - 204 )
Partition 40 (yy_cp_207 - 207 )
Partition 41 (yy_current_state_210 - 210 )
Partition 42 (yy_cp_213 - 213 )
Partition 43 (yy_cp_214 - 214 )
Partition 44 (yy_cp_218 - 218 )
Partition 45 (_240 - 240 )
Partition 46 (yy_c_buf_p.38_248 - 248 )
Partition 47 (yy_hold_char.41_251 - 251 )
Partition 48 (_255 - 255 )
Partition 49 (_257 - 257 )
Partition 50 (yy_current_state_263 - 263 )
Partition 51 (yy_current_state_267 - 267 )
Partition 52 (_282 - 282 )
Partition 53 (_284 - 284 )
Partition 54 (_288 - 288 )
Partition 55 (_290 - 290 )
Partition 56 (yy_act_294 - 294 )
Partition 57 (n_304 - 304 )
Partition 58 (ivtmp.210_326 - 326 )
Partition 59 (i_328 - 328 )
Partition 60 (num_to_read_333 - 333 )
Partition 61 (_350 - 350 )
Partition 62 (yy_c_buf_p.64_356 - 356 )
Partition 63 (_361 - 361 )
Partition 64 (num_to_read_364 - 364 )
Partition 65 (_379 - 379 )
Partition 66 (n_386 - 386 )
Partition 67 (_390 - 390 )
Partition 68 (n_393 - 393 )
Partition 69 (yy_n_chars.71_401 - 401 )
Partition 70 (n_414 - 414 )
Partition 71 (yy_n_chars.74_419 - 419 )
Partition 72 (_429 - 429 )
Partition 73 (_436 - 436 )
Partition 74 (_437 - 437 )
Partition 75 (yytext.77_458 - 458 )
Partition 76 (yytext.77_467 - 467 )
Partition 77 (n_555 - 555 )
Partition 78 (n_559 - 559 )
Partition 79 (num_to_read_560 - 560 )
Partition 80 (yy_current_state_561 - 561 )
Partition 81 (i_563 - 563 )
Partition 82 (ivtmp.210_564 - 564 )
Partition 83 (_565 - 565 )
Partition 84 (ivtmp.210_566 - 566 )
Partition 85 (yy_cp_577 - 577 )
Partition 86 (yy_last_accepting_cpos_lsm.191_857 - 857 )
Partition 87 (yy_last_accepting_state_lsm.193_859 - 859 )
Partition 88 (yy_last_accepting_state_lsm.194_860 - 860 )
Partition 89 (yy_last_accepting_state_lsm.194_861 - 861 )
Partition 90 (yy_last_accepting_state_lsm.193_862 - 862 )
Partition 91 (yy_last_accepting_state_lsm.193_863 - 863 )
Partition 92 (yy_last_accepting_cpos_lsm.192_864 - 864 )
Partition 93 (yy_last_accepting_cpos_lsm.192_865 - 865 )
Partition 94 (yy_last_accepting_cpos_lsm.191_866 - 866 )
Partition 95 (yy_last_accepting_cpos_lsm.191_867 - 867 )
Partition 96 (prephitmp_883 - 883 )
Partition 97 (prephitmp_885 - 885 )
Partition 98 (yy_current_state_893 - 893 )
Partition 99 (pretmp_907 - 907 )
Partition 100 (prephitmp_908 - 908 )
Partition 101 (pretmp_909 - 909 )
Partition 102 (prephitmp_910 - 910 )
Partition 103 (pretmp_911 - 911 )
Partition 104 (prephitmp_912 - 912 )
Partition 105 (pretmp_913 - 913 )
Partition 106 (prephitmp_914 - 914 )
Partition 107 (yy_cp_916 - 916 )
Partition 108 (pretmp_917 - 917 )
Partition 109 (prephitmp_918 - 918 )
Partition 110 (pretmp_919 - 919 )
Partition 111 (prephitmp_920 - 920 )
Partition 112 (pretmp_921 - 921 )
Partition 113 (prephitmp_922 - 922 )
Partition 114 (prephitmp_924 - 924 )
Partition 115 (pretmp_925 - 925 )
Partition 116 (prephitmp_926 - 926 )
Partition 117 (prephitmp_927 - 927 )
Partition 118 (pretmp_928 - 928 )
Partition 119 (prephitmp_929 - 929 )
Partition 120 (yy_cp_941 - 941 )
Partition 121 (prephitmp_942 - 942 )
Partition 122 (pretmp_943 - 943 )
Partition 123 (prephitmp_944 - 944 )
Partition 124 (pretmp_945 - 945 )
Partition 125 (pretmp_946 - 946 )
Partition 126 (prephitmp_947 - 947 )
Partition 127 (pretmp_954 - 954 )
Partition 128 (prephitmp_955 - 955 )
Partition 129 (pretmp_956 - 956 )
Partition 130 (prephitmp_957 - 957 )
Partition 131 (pretmp_959 - 959 )
Partition 132 (prephitmp_960 - 960 )
Partition 133 (prephitmp_961 - 961 )
Partition 134 (prephitmp_963 - 963 )
Partition 135 (pretmp_970 - 970 )
Partition 136 (prephitmp_971 - 971 )
Partition 137 (pretmp_972 - 972 )
Partition 138 (prephitmp_973 - 973 )
Partition 139 (yy_current_state_977 - 977 )
Partition 140 (pretmp_980 - 980 )
Partition 141 (prephitmp_981 - 981 )
Partition 142 (prephitmp_985 - 985 )
Partition 143 (prephitmp_986 - 986 )
Partition 144 (prephitmp_987 - 987 )
Partition 145 (prephitmp_989 - 989 )
Partition 146 (prephitmp_991 - 991 )
Partition 147 (pretmp_992 - 992 )
Partition 148 (pretmp_993 - 993 )
Partition 149 (prephitmp_994 - 994 )
Partition 150 (pretmp_999 - 999 )
Partition 151 (pretmp_1000 - 1000 )
Partition 152 (pretmp_1001 - 1001 )
Partition 153 (pretmp_1002 - 1002 )
Partition 154 (prephitmp_1003 - 1003 )
Partition 155 (pretmp_1004 - 1004 )
Partition 156 (pretmp_1005 - 1005 )
Partition 157 (pretmp_1006 - 1006 )
Partition 158 (pretmp_1007 - 1007 )
Partition 159 (prephitmp_1008 - 1008 )
Partition 160 (pretmp_1009 - 1009 )
Partition 161 (pretmp_1010 - 1010 )
Partition 162 (pretmp_1011 - 1011 )
Partition 163 (pretmp_1012 - 1012 )
Partition 164 (prephitmp_1013 - 1013 )
Partition 165 (pretmp_1030 - 1030 )
Partition 166 (prephitmp_1031 - 1031 )
Partition 167 (pretmp_1032 - 1032 )
Partition 168 (prephitmp_1033 - 1033 )
Partition 169 (pretmp_1034 - 1034 )
Partition 170 (prephitmp_1035 - 1035 )
Partition 171 (pretmp_1036 - 1036 )
Partition 172 (prephitmp_1037 - 1037 )
Partition 173 (pretmp_1038 - 1038 )
Partition 174 (prephitmp_1039 - 1039 )
Partition 175 (yy_current_state_1042 - 1042 )
Partition 176 (pretmp_1043 - 1043 )
Partition 177 (prephitmp_1044 - 1044 )
Partition 178 (pretmp_1045 - 1045 )
Partition 179 (prephitmp_1046 - 1046 )
Partition 180 (pretmp_1047 - 1047 )
Partition 181 (prephitmp_1048 - 1048 )
Partition 182 (pretmp_1049 - 1049 )
Partition 183 (prephitmp_1050 - 1050 )
Partition 184 (pretmp_1051 - 1051 )
Partition 185 (prephitmp_1052 - 1052 )
Partition 186 (pretmp_1054 - 1054 )
Partition 187 (prephitmp_1055 - 1055 )
Partition 188 (pretmp_1063 - 1063 )
Partition 189 (prephitmp_1064 - 1064 )

Coalesce list: (11)yy_c_11 & (152)yy_c_152 [map: 9, 30] : Success -> 9
Coalesce list: (2)yy_current_state_2 & (73)yy_current_state_73 [map: 1, 15] : Success -> 1
Coalesce list: (925)pretmp_925 & (926)prephitmp_926 [map: 115, 116] : Success -> 115
Coalesce list: (75)yy_c_75 & (152)yy_c_11 [map: 16, 9] : Success -> 9
Coalesce list: (860)yy_last_accepting_state_lsm.194_860 & (861)yy_last_accepting_state_lsm.194_861 [map: 88, 89] : Success -> 88
Coalesce list: (862)yy_last_accepting_state_lsm.193_862 & (863)yy_last_accepting_state_lsm.193_863 [map: 90, 91] : Success -> 90
Coalesce list: (864)yy_last_accepting_cpos_lsm.192_864 & (865)yy_last_accepting_cpos_lsm.192_865 [map: 92, 93] : Success -> 92
Coalesce list: (866)yy_last_accepting_cpos_lsm.191_866 & (867)yy_last_accepting_cpos_lsm.191_867 [map: 94, 95] : Success -> 94
Coalesce list: (1)yy_current_state_1 & (2)yy_current_state_2 [map: 0, 1] : Success -> 1
Coalesce list: (11)yy_c_11 & (62)yy_c_62 [map: 9, 14] : Success -> 9
Coalesce list: (924)prephitmp_924 & (926)pretmp_925 [map: 114, 115] : Success -> 115
Coalesce list: (1)yy_current_state_2 & (81)yy_current_state_81 [map: 1, 18] : Success -> 1
Coalesce list: (4)yy_cp_4 & (82)yy_cp_82 [map: 3, 19] : Success -> 3
Coalesce list: (83)_83 & (924)pretmp_925 [map: 20, 115] : Success -> 115
Coalesce list: (921)pretmp_921 & (922)prephitmp_922 [map: 112, 113] : Success -> 112
Coalesce list: (1051)pretmp_1051 & (1052)prephitmp_1052 [map: 184, 185] : Success -> 184
Coalesce list: (564)ivtmp.210_564 & (566)ivtmp.210_566 [map: 82, 84] : Success -> 82
Coalesce list: (9)yy_act_9 & (294)yy_act_294 [map: 7, 56] : Success -> 7
Coalesce list: (5)yy_cp_5 & (6)yy_cp_6 [map: 4, 5] : Success -> 4
Coalesce list: (9)yy_act_9 & (85)yy_act_85 [map: 7, 21] : Success -> 7
Coalesce list: (10)yy_act_10 & (294)yy_act_9 [map: 8, 7] : Success -> 7
Coalesce list: (1)yy_current_state_2 & (76)yy_current_state_76 [map: 1, 17] : Success -> 1
Coalesce list: (4)yy_cp_4 & (115)yy_cp_115 [map: 3, 24] : Success -> 3
Coalesce list: (5)yy_cp_5 & (82)yy_cp_4 [map: 4, 3] : Success -> 3
Coalesce list: (8)yy_cp_8 & (118)yy_cp_118 [map: 6, 25] : Success -> 6
Coalesce list: (76)yy_current_state_2 & (1042)yy_current_state_1042 [map: 1, 175] : Success -> 1
Coalesce list: (115)yy_cp_4 & (916)yy_cp_916 [map: 3, 107] : Success -> 3
Coalesce list: (118)yy_cp_8 & (916)yy_cp_4 [map: 6, 3] : Fail due to conflict
Coalesce list: (857)yy_last_accepting_cpos_lsm.191_857 & (867)yy_last_accepting_cpos_lsm.191_866 [map: 86, 94] : Success -> 94
Coalesce list: (859)yy_last_accepting_state_lsm.193_859 & (863)yy_last_accepting_state_lsm.193_862 [map: 87, 90] : Success -> 90
Coalesce list: (918)prephitmp_918 & (920)prephitmp_920 [map: 109, 111] : Success -> 109
Coalesce list: (920)prephitmp_918 & (922)pretmp_921 [map: 109, 112] : Success -> 109
Coalesce list: (924)pretmp_925 & (1050)prephitmp_1050 [map: 115, 183] : Success -> 115
Coalesce list: (1044)prephitmp_1044 & (1048)prephitmp_1048 [map: 177, 181] : Success -> 177
Coalesce list: (1046)prephitmp_1046 & (1050)pretmp_925 [map: 179, 115] : Success -> 115
Coalesce list: (1048)prephitmp_1044 & (1052)pretmp_1051 [map: 177, 184] : Success -> 177
Coalesce list: (1054)pretmp_1054 & (1055)prephitmp_1055 [map: 186, 187] : Success -> 186
Coalesce list: (914)prephitmp_914 & (918)prephitmp_918 [map: 106, 109] : Success -> 109
Coalesce list: (1037)prephitmp_1037 & (1044)prephitmp_1044 [map: 172, 177] : Success -> 177
Coalesce list: (1039)prephitmp_1039 & (1046)pretmp_925 [map: 174, 115] : Success -> 115
Coalesce list: (908)prephitmp_908 & (912)prephitmp_912 [map: 100, 104] : Success -> 100
Coalesce list: (910)prephitmp_910 & (914)prephitmp_918 [map: 102, 109] : Success -> 109
Coalesce list: (1034)pretmp_1034 & (1035)prephitmp_1035 [map: 169, 170] : Success -> 169
Coalesce list: (1036)pretmp_1036 & (1037)prephitmp_1044 [map: 171, 177] : Success -> 177
Coalesce list: (1038)pretmp_1038 & (1039)pretmp_925 [map: 173, 115] : Success -> 115
Coalesce list: (42)_42 & (1031)prephitmp_1031 [map: 11, 166] : Success -> 11
Coalesce list: (43)_43 & (1033)prephitmp_1033 [map: 12, 168] : Success -> 12
Coalesce list: (6)yy_cp_4 & (86)yy_cp_86 [map: 3, 22] : Success -> 3
Coalesce list: (9)yy_act_9 & (89)yy_act_89 [map: 7, 23] : Success -> 7
Coalesce list: (248)yy_c_buf_p.38_248 & (908)prephitmp_908 [map: 46, 100] : Success -> 100
Coalesce list: (251)yy_hold_char.41_251 & (910)prephitmp_918 [map: 47, 109] : Success -> 109
Coalesce list: (907)pretmp_907 & (908)prephitmp_908 [map: 99, 100] : Success -> 100
Coalesce list: (909)pretmp_909 & (910)prephitmp_918 [map: 101, 109] : Success -> 109
Coalesce list: (326)ivtmp.210_326 & (566)ivtmp.210_564 [map: 58, 82] : Success -> 82
Coalesce list: (356)yy_c_buf_p.64_356 & (987)prephitmp_987 [map: 62, 144] : Success -> 62
Coalesce list: (361)_361 & (986)prephitmp_986 [map: 63, 143] : Success -> 63
Coalesce list: (911)pretmp_911 & (912)prephitmp_908 [map: 103, 100] : Success -> 100
Coalesce list: (913)pretmp_913 & (914)prephitmp_918 [map: 105, 109] : Success -> 109
Coalesce list: (1003)prephitmp_1003 & (1035)pretmp_1034 [map: 154, 169] : Success -> 169
Coalesce list: (1008)prephitmp_1008 & (1037)prephitmp_1044 [map: 159, 177] : Success -> 177
Coalesce list: (1013)prephitmp_1013 & (1039)pretmp_925 [map: 164, 115] : Success -> 115
Coalesce list: (328)i_328 & (563)i_563 [map: 59, 81] : Success -> 59
Coalesce list: (419)yy_n_chars.74_419 & (973)prephitmp_973 [map: 71, 138] : Success -> 71
Coalesce list: (970)pretmp_970 & (971)prephitmp_971 [map: 135, 136] : Success -> 135
Coalesce list: (1030)pretmp_1030 & (1031)_42 [map: 165, 11] : Success -> 11
Coalesce list: (1032)pretmp_1032 & (1033)_43 [map: 167, 12] : Success -> 12
Coalesce list: (304)n_304 & (386)n_386 [map: 57, 66] : Success -> 57
Coalesce list: (963)prephitmp_963 & (973)yy_n_chars.74_419 [map: 134, 71] : Success -> 71
Coalesce list: (1063)pretmp_1063 & (1064)prephitmp_1064 [map: 188, 189] : Success -> 188
Coalesce list: (8)yy_cp_8 & (155)yy_cp_155 [map: 6, 31] : Success -> 6
Coalesce list: (282)_282 & (991)prephitmp_991 [map: 52, 146] : Success -> 52
Coalesce list: (161)yy_cp_161 & (207)yy_cp_207 [map: 32, 40] : Success -> 32
Coalesce list: (255)_255 & (994)prephitmp_994 [map: 48, 149] : Success -> 48
Coalesce list: (350)_350 & (989)prephitmp_989 [map: 61, 145] : Success -> 61
Coalesce list: (3)yy_cp_3 & (916)yy_cp_4 [map: 2, 3] : Success -> 3
Coalesce list: (5)yy_cp_4 & (161)yy_cp_161 [map: 3, 32] : Success -> 3
Coalesce list: (13)_13 & (240)_240 [map: 10, 45] : Success -> 10
Coalesce list: (13)_13 & (288)_288 [map: 10, 54] : Success -> 10
Coalesce list: (155)yy_cp_8 & (213)yy_cp_213 [map: 6, 42] : Success -> 6
Coalesce list: (161)yy_cp_4 & (218)yy_cp_218 [map: 3, 44] : Success -> 3
Coalesce list: (257)_257 & (565)_565 [map: 49, 83] : Success -> 49
Coalesce list: (263)yy_current_state_263 & (561)yy_current_state_561 [map: 50, 80] : Success -> 50
Coalesce list: (290)_290 & (565)_257 [map: 55, 49] : Success -> 49
Coalesce list: (333)num_to_read_333 & (560)num_to_read_560 [map: 60, 79] : Success -> 60
Coalesce list: (361)_361 & (961)prephitmp_961 [map: 63, 133] : Success -> 63
Coalesce list: (364)num_to_read_364 & (560)num_to_read_333 [map: 64, 60] : Success -> 60
Coalesce list: (379)_379 & (981)prephitmp_981 [map: 65, 141] : Success -> 65
Coalesce list: (386)n_304 & (555)n_555 [map: 57, 77] : Success -> 57
Coalesce list: (429)_429 & (957)prephitmp_957 [map: 72, 130] : Success -> 72
Coalesce list: (458)yytext.77_458 & (960)prephitmp_960 [map: 75, 132] : Success -> 75
Coalesce list: (467)yytext.77_467 & (942)prephitmp_942 [map: 76, 121] : Success -> 76
Coalesce list: (893)yy_current_state_893 & (1042)yy_current_state_2 [map: 98, 1] : Success -> 1
Coalesce list: (917)pretmp_917 & (918)prephitmp_918 [map: 108, 109] : Success -> 109
Coalesce list: (927)prephitmp_927 & (944)prephitmp_944 [map: 117, 123] : Success -> 117
Coalesce list: (944)prephitmp_927 & (961)_361 [map: 117, 63] : Success -> 63
Coalesce list: (947)prephitmp_947 & (963)yy_n_chars.74_419 [map: 126, 71] : Success -> 71
Coalesce list: (955)prephitmp_955 & (1064)pretmp_1063 [map: 128, 188] : Success -> 188
Coalesce list: (992)pretmp_992 & (994)_255 [map: 147, 48] : Success -> 48
Coalesce list: (994)_255 & (1055)pretmp_1054 [map: 48, 186] : Success -> 48
Coalesce list: (999)pretmp_999 & (1003)pretmp_1034 [map: 150, 169] : Success -> 169
Coalesce list: (1000)pretmp_1000 & (1003)pretmp_1034 [map: 151, 169] : Success -> 169
Coalesce list: (1001)pretmp_1001 & (1003)pretmp_1034 [map: 152, 169] : Success -> 169
Coalesce list: (1002)pretmp_1002 & (1003)pretmp_1034 [map: 153, 169] : Success -> 169
Coalesce list: (1004)pretmp_1004 & (1008)prephitmp_1044 [map: 155, 177] : Success -> 177
Coalesce list: (1005)pretmp_1005 & (1008)prephitmp_1044 [map: 156, 177] : Success -> 177
Coalesce list: (1006)pretmp_1006 & (1008)prephitmp_1044 [map: 157, 177] : Success -> 177
Coalesce list: (1007)pretmp_1007 & (1008)prephitmp_1044 [map: 158, 177] : Success -> 177
Coalesce list: (1009)pretmp_1009 & (1013)pretmp_925 [map: 160, 115] : Success -> 115
Coalesce list: (1010)pretmp_1010 & (1013)pretmp_925 [map: 161, 115] : Success -> 115
Coalesce list: (1011)pretmp_1011 & (1013)pretmp_925 [map: 162, 115] : Success -> 115
Coalesce list: (1012)pretmp_1012 & (1013)pretmp_925 [map: 163, 115] : Success -> 115
Coalesce list: (1043)pretmp_1043 & (1044)prephitmp_1044 [map: 176, 177] : Success -> 177
Coalesce list: (1045)pretmp_1045 & (1046)pretmp_925 [map: 178, 115] : Success -> 115
Coalesce list: (57)yy_current_state_57 & (76)yy_current_state_2 [map: 13, 1] : Success -> 1
Coalesce list: (57)yy_current_state_2 & (267)yy_current_state_267 [map: 1, 51] : Success -> 1
Coalesce list: (115)yy_cp_4 & (147)yy_cp_147 [map: 3, 28] : Success -> 3
Coalesce list: (143)_143 & (927)_361 [map: 26, 63] : Success -> 63
Coalesce list: (146)yy_cp_146 & (213)yy_cp_8 [map: 27, 6] : Success -> 6
Coalesce list: (147)yy_cp_4 & (178)yy_cp_178 [map: 3, 35] : Success -> 3
Coalesce list: (147)yy_cp_4 & (214)yy_cp_214 [map: 3, 43] : Success -> 3
Coalesce list: (150)yy_n_chars.22_150 & (929)prephitmp_929 [map: 29, 119] : Success -> 29
Coalesce list: (161)yy_cp_4 & (941)yy_cp_941 [map: 3, 120] : Success -> 3
Coalesce list: (162)_162 & (927)_361 [map: 33, 63] : Success -> 63
Coalesce list: (172)yy_c_buf_p.24_172 & (885)prephitmp_885 [map: 34, 97] : Success -> 34
Coalesce list: (210)yy_current_state_210 & (977)yy_current_state_977 [map: 41, 139] : Success -> 41
Coalesce list: (284)_284 & (991)_282 [map: 53, 52] : Success -> 52
Coalesce list: (304)n_304 & (555)n_304: Already Coalesced.
Coalesce list: (390)_390 & (985)prephitmp_985 [map: 67, 142] : Success -> 67
Coalesce list: (401)yy_n_chars.71_401 & (963)yy_n_chars.74_419 [map: 69, 71] : Success -> 71
Coalesce list: (436)_436 & (955)pretmp_1063 [map: 73, 188] : Success -> 188
Coalesce list: (437)_437 & (957)_429 [map: 74, 72] : Success -> 72
Coalesce list: (883)prephitmp_883 & (944)_361 [map: 96, 63] : Success -> 63
Coalesce list: (954)pretmp_954 & (955)pretmp_1063 [map: 127, 188] : Success -> 188
Coalesce list: (961)_361 & (971)pretmp_970 [map: 63, 135] : Success -> 63
Coalesce list: (973)yy_n_chars.74_419 & (972)pretmp_972 [map: 71, 137] : Success -> 71
Coalesce list: (981)_379 & (980)pretmp_980 [map: 65, 140] : Success -> 65
Coalesce list: (960)yytext.77_458 & (959)pretmp_959 [map: 75, 131] : Success -> 75
Coalesce list: (957)_429 & (956)pretmp_956 [map: 72, 129] : Success -> 72
Coalesce list: (947)yy_n_chars.74_419 & (946)pretmp_946 [map: 71, 125] : Success -> 71
Coalesce list: (947)yy_n_chars.74_419 & (945)pretmp_945 [map: 71, 124] : Success -> 71
Coalesce list: (1064)pretmp_1063 & (985)_390 [map: 188, 67] : Success -> 188
Coalesce list: (985)pretmp_1063 & (981)_379 [map: 188, 65] : Success -> 188
Coalesce list: (559)n_559 & (555)n_304 [map: 78, 57] : Success -> 57
Coalesce list: (559)n_304 & (393)n_393 [map: 57, 68] : Fail due to conflict
Coalesce list: (304)n_304 & (414)n_414 [map: 57, 70] : Success -> 57
Coalesce list: (987)yy_c_buf_p.64_356 & (885)yy_c_buf_p.24_172 [map: 62, 34] : Success -> 62
Coalesce list: (986)_361 & (883)_361: Already Coalesced.
Coalesce list: (944)_361 & (943)pretmp_943 [map: 63, 122] : Success -> 63
Coalesce list: (561)yy_current_state_263 & (977)yy_current_state_210 [map: 50, 41] : Success -> 50
Coalesce list: (929)yy_n_chars.22_150 & (928)pretmp_928 [map: 29, 118] : Success -> 29
Coalesce list: (10)yy_act_9 & (204)yy_act_204 [map: 7, 39] : Success -> 7
Coalesce list: (994)_255 & (993)pretmp_993 [map: 48, 148] : Success -> 48
Coalesce list: (155)yy_cp_8 & (577)yy_cp_577 [map: 6, 85] : Success -> 6
Coalesce list: (155)yy_cp_8 & (197)yy_cp_197 [map: 6, 38] : Success -> 6
Coalesce list: (1050)pretmp_925 & (1049)pretmp_1049 [map: 115, 182] : Success -> 115
Coalesce list: (1048)prephitmp_1044 & (1047)pretmp_1047 [map: 177, 180] : Success -> 177
Coalesce list: (920)prephitmp_918 & (919)pretmp_919 [map: 109, 110] : Success -> 109
Coalesce list: (118)yy_cp_8 & (146)yy_cp_8: Already Coalesced.
Coalesce list: (146)yy_cp_8 & (183)yy_cp_183 [map: 6, 37] : Success -> 6
Coalesce list: (57)yy_current_state_2 & (181)yy_current_state_181 [map: 1, 36] : Success -> 1
After Coalescing:

Partition map 

Partition 0 (yy_current_state_2 - 1 2 57 73 76 81 181 267 893 1042 )
Partition 1 (yy_cp_4 - 3 4 5 6 82 86 115 147 161 178 207 214 218 916 941 )
Partition 2 (yy_cp_8 - 8 118 146 155 183 197 213 577 )
Partition 3 (yy_act_9 - 9 10 85 89 204 294 )
Partition 4 (yy_c_11 - 11 62 75 152 )
Partition 5 (_13 - 13 240 288 )
Partition 6 (yy_init.0_28 - 28 )
Partition 7 (yy_start.1_30 - 30 )
Partition 8 (yyin.2_32 - 32 )
Partition 9 (stdin.3_33 - 33 )
Partition 10 (yyout.4_35 - 35 )
Partition 11 (stdout.5_36 - 36 )
Partition 12 (yy_buffer_stack.6_38 - 38 )
Partition 13 (yy_buffer_stack_top.7_40 - 40 )
Partition 14 (_41 - 41 )
Partition 15 (_42 - 42 1030 1031 )
Partition 16 (_43 - 43 1032 1033 )
Partition 17 (yy_buffer_stack.6_45 - 45 )
Partition 18 (yy_buffer_stack_top.7_46 - 46 )
Partition 19 (_47 - 47 )
Partition 20 (_48 - 48 )
Partition 21 (yyin.2_49 - 49 )
Partition 22 (_51 - 51 )
Partition 23 (yytext.49_53 - 53 )
Partition 24 (_60 - 60 )
Partition 25 (_61 - 61 )
Partition 26 (_67 - 67 )
Partition 27 (_68 - 68 )
Partition 28 (_69 - 69 )
Partition 29 (_70 - 70 )
Partition 30 (_71 - 71 )
Partition 31 (_72 - 72 )
Partition 32 (_74 - 74 )
Partition 33 (_77 - 77 )
Partition 34 (_78 - 78 )
Partition 35 (_79 - 79 )
Partition 36 (_80 - 80 )
Partition 37 (yy_current_state_87 - 87 )
Partition 38 (_88 - 88 )
Partition 39 (yy_cp.9_91 - 91 )
Partition 40 (yy_bp.10_92 - 92 )
Partition 41 (_93 - 93 )
Partition 42 (yyleng.11_94 - 94 )
Partition 43 (yy_hold_char.12_96 - 96 )
Partition 44 (_100 - 100 )
Partition 45 (_104 - 104 )
Partition 46 (yylineno.15_105 - 105 )
Partition 47 (yylineno.16_106 - 106 )
Partition 48 (yytext.14_111 - 111 )
Partition 49 (_113 - 113 )
Partition 50 (_117 - 117 )
Partition 51 (yyout.4_121 - 121 )
Partition 52 (yyleng.13_122 - 122 )
Partition 53 (yytext.14_123 - 123 )
Partition 54 (line_num.17_128 - 128 )
Partition 55 (line_num.18_129 - 129 )
Partition 56 (yytext.14_132 - 132 )
Partition 57 (yytext.21_133 - 133 )
Partition 58 (_134 - 134 )
Partition 59 (_135 - 135 )
Partition 60 (yy_amount_of_matched_text_136 - 136 )
Partition 61 (yy_hold_char.8_137 - 137 )
Partition 62 (yy_buffer_stack.6_139 - 139 )
Partition 63 (yy_buffer_stack_top.7_140 - 140 )
Partition 64 (_141 - 141 )
Partition 65 (_142 - 142 )
Partition 66 (_144 - 144 )
Partition 67 (yy_n_chars.22_150 - 150 928 929 )
Partition 68 (yyin.2_156 - 156 )
Partition 69 (dest_168 - 168 )
Partition 70 (_170 - 170 )
Partition 71 (yy_c_buf_p.29_171 - 171 )
Partition 72 (_177 - 177 )
Partition 73 (yy_current_state_195 - 195 )
Partition 74 (yy_start.1_201 - 201 )
Partition 75 (_202 - 202 )
Partition 76 (_203 - 203 )
Partition 77 (yytext.14_205 - 205 )
Partition 78 (_206 - 206 )
Partition 79 (yy_hold_char.8_216 - 216 )
Partition 80 (yy_current_state_219 - 219 )
Partition 81 (yy_buffer_stack.6_221 - 221 )
Partition 82 (yy_buffer_stack_top.7_222 - 222 )
Partition 83 (_223 - 223 )
Partition 84 (_224 - 224 )
Partition 85 (_225 - 225 )
Partition 86 (yytext.46_226 - 226 )
Partition 87 (yytext.47_228 - 228 )
Partition 88 (yytext.48_230 - 230 )
Partition 89 (yyleng.52_232 - 232 )
Partition 90 (yytext.51_234 - 234 )
Partition 91 (yytext.14_238 - 238 )
Partition 92 (_239 - 239 )
Partition 93 (yy_n_chars.37_247 - 247 )
Partition 94 (_249 - 249 )
Partition 95 (yyin.40_250 - 250 )
Partition 96 (_252 - 252 )
Partition 97 (c.50_253 - 253 )
Partition 98 (_254 - 254 )
Partition 99 (_255 - 255 992 993 994 1054 1055 )
Partition 100 (_257 - 257 290 565 )
Partition 101 (_258 - 258 )
Partition 102 (_259 - 259 )
Partition 103 (_260 - 260 )
Partition 104 (_261 - 261 )
Partition 105 (_262 - 262 )
Partition 106 (yy_current_state_263 - 210 263 561 977 )
Partition 107 (_264 - 264 )
Partition 108 (_265 - 265 )
Partition 109 (_266 - 266 )
Partition 110 (yytext.42_281 - 281 )
Partition 111 (_282 - 282 284 991 )
Partition 112 (yytext.42_283 - 283 )
Partition 113 (localvar.43_285 - 285 )
Partition 114 (localvar.45_286 - 286 )
Partition 115 (_289 - 289 )
Partition 116 (_291 - 291 )
Partition 117 (_293 - 293 )
Partition 118 (_295 - 295 )
Partition 119 (_296 - 296 )
Partition 120 (yytext.53_297 - 297 )
Partition 121 (_298 - 298 )
Partition 122 (_300 - 300 )
Partition 123 (_301 - 301 )
Partition 124 (_302 - 302 )
Partition 125 (n_304 - 304 386 414 555 559 )
Partition 126 (source_307 - 307 )
Partition 127 (_310 - 310 )
Partition 128 (_311 - 311 )
Partition 129 (_313 - 313 )
Partition 130 (yy_c_buf_p.59_314 - 314 )
Partition 131 (yytext.61_315 - 315 )
Partition 132 (_316 - 316 )
Partition 133 (yy_c_buf_p.59_317 - 317 )
Partition 134 (yytext.61_318 - 318 )
Partition 135 (_319 - 319 )
Partition 136 (_320 - 320 )
Partition 137 (number_to_move_321 - 321 )
Partition 138 (_324 - 324 )
Partition 139 (_327 - 327 )
Partition 140 (i_328 - 328 563 )
Partition 141 (_330 - 330 )
Partition 142 (_331 - 331 )
Partition 143 (num_to_read_333 - 333 364 560 )
Partition 144 (yy_c_buf_p.59_341 - 341 )
Partition 145 (_342 - 342 )
Partition 146 (_343 - 343 )
Partition 147 (_344 - 344 )
Partition 148 (yy_c_buf_p_offset_345 - 345 )
Partition 149 (_346 - 346 )
Partition 150 (_347 - 347 )
Partition 151 (new_size_348 - 348 )
Partition 152 (_349 - 349 )
Partition 153 (_350 - 350 989 )
Partition 154 (_352 - 352 )
Partition 155 (_353 - 353 )
Partition 156 (_355 - 355 )
Partition 157 (yy_c_buf_p.64_356 - 172 356 885 987 )
Partition 158 (_361 - 143 162 361 883 927 943 944 961 970 971 986 )
Partition 159 (_362 - 362 )
Partition 160 (_363 - 363 )
Partition 161 (_370 - 370 )
Partition 162 (_372 - 372 )
Partition 163 (yyin.67_373 - 373 )
Partition 164 (c_374 - 374 )
Partition 165 (yy_buffer_stack.55_376 - 376 )
Partition 166 (yy_buffer_stack_top.56_377 - 377 )
Partition 167 (_378 - 378 )
Partition 168 (_380 - 380 )
Partition 169 (yytext.77_381 - 381 )
Partition 170 (_383 - 383 )
Partition 171 (_385 - 385 )
Partition 172 (yy_buffer_stack.55_387 - 387 )
Partition 173 (yy_buffer_stack_top.56_388 - 388 )
Partition 174 (_389 - 389 )
Partition 175 (_391 - 391 )
Partition 176 (yytext.77_392 - 392 )
Partition 177 (n_393 - 393 )
Partition 178 (_394 - 394 )
Partition 179 (_395 - 395 )
Partition 180 (yyin.67_397 - 397 )
Partition 181 (_398 - 398 )
Partition 182 (_399 - 399 )
Partition 183 (_402 - 402 )
Partition 184 (yyin.67_403 - 403 )
Partition 185 (yytext.77_409 - 409 )
Partition 186 (_410 - 410 )
Partition 187 (_417 - 417 )
Partition 188 (yy_n_chars.74_419 - 401 419 945 946 947 963 972 973 )
Partition 189 (yyin.67_420 - 420 )
Partition 190 (_421 - 421 )
Partition 191 (_423 - 423 )
Partition 192 (yyin.67_424 - 424 )
Partition 193 (_429 - 429 437 956 957 )
Partition 194 (yyin.67_432 - 432 )
Partition 195 (yy_buffer_stack.55_433 - 433 )
Partition 196 (yy_buffer_stack_top.56_434 - 434 )
Partition 197 (_435 - 435 )
Partition 198 (_438 - 438 )
Partition 199 (yy_n_chars.75_440 - 440 )
Partition 200 (_441 - 441 )
Partition 201 (yy_n_chars.76_442 - 442 )
Partition 202 (_443 - 443 )
Partition 203 (_449 - 449 )
Partition 204 (_450 - 450 )
Partition 205 (_451 - 451 )
Partition 206 (_452 - 452 )
Partition 207 (new_size_453 - 453 )
Partition 208 (_454 - 454 )
Partition 209 (yytext.77_455 - 455 )
Partition 210 (_456 - 456 )
Partition 211 (_457 - 457 )
Partition 212 (yytext.77_458 - 458 959 960 )
Partition 213 (_461 - 461 )
Partition 214 (_462 - 462 )
Partition 215 (yytext.77_463 - 463 )
Partition 216 (_464 - 464 )
Partition 217 (_465 - 465 )
Partition 218 (_466 - 466 )
Partition 219 (yytext.77_467 - 467 942 )
Partition 220 (yyleng.13_471 - 471 )
Partition 221 (ret_val_472 - 472 )
Partition 222 (num_to_read_507 - 507 )
Partition 223 (_562 - 562 )
Partition 224 (ivtmp.210_564 - 326 564 566 )
Partition 225 (_574 - 574 )
Partition 226 (yy_last_accepting_state_lsm.194_860 - 860 861 )
Partition 227 (yy_last_accepting_state_lsm.193_862 - 859 862 863 )
Partition 228 (yy_last_accepting_cpos_lsm.192_864 - 864 865 )
Partition 229 (yy_last_accepting_cpos_lsm.191_866 - 857 866 867 )
Partition 230 (_876 - 876 )
Partition 231 (prephitmp_908 - 248 907 908 911 912 )
Partition 232 (pretmp_915 - 915 )
Partition 233 (prephitmp_918 - 251 909 910 913 914 917 918 919 920 921 922 )
Partition 234 (pretmp_925 - 83 924 925 926 1009 1010 1011 1012 1013 1038 1039 1045 1046 1049 1050 )
Partition 235 (pretmp_934 - 934 )
Partition 236 (pretmp_936 - 936 )
Partition 237 (pretmp_940 - 940 )
Partition 238 (pretmp_948 - 948 )
Partition 239 (pretmp_950 - 950 )
Partition 240 (_951 - 951 )
Partition 241 (pretmp_952 - 952 )
Partition 242 (_953 - 953 )
Partition 243 (pretmp_964 - 964 )
Partition 244 (pretmp_966 - 966 )
Partition 245 (pretmp_968 - 968 )
Partition 246 (pretmp_969 - 969 )
Partition 247 (pretmp_974 - 974 )
Partition 248 (pretmp_976 - 976 )
Partition 249 (pretmp_978 - 978 )
Partition 250 (pretmp_1019 - 1019 )
Partition 251 (pretmp_1024 - 1024 )
Partition 252 (pretmp_1026 - 1026 )
Partition 253 (pretmp_1028 - 1028 )
Partition 254 (pretmp_1034 - 999 1000 1001 1002 1003 1034 1035 )
Partition 255 (pretmp_1041 - 1041 )
Partition 256 (prephitmp_1044 - 1004 1005 1006 1007 1008 1036 1037 1043 1044 1047 1048 1051 1052 )
Partition 257 (pretmp_1057 - 1057 )
Partition 258 (pretmp_1059 - 1059 )
Partition 259 (pretmp_1061 - 1061 )
Partition 260 (pretmp_1063 - 379 390 436 954 955 980 981 985 1063 1064 )


Replacing Expressions
yy_init.0_28 replace with --> yy_init.0_28 = yy_init;

yy_start.1_30 replace with --> yy_start.1_30 = yy_start;

yyin.2_32 replace with --> yyin.2_32 = yyin;

stdin.3_33 replace with --> stdin.3_33 = stdin;

yyout.4_35 replace with --> yyout.4_35 = yyout;

stdout.5_36 replace with --> stdout.5_36 = stdout;

yy_buffer_stack_top.7_40 replace with --> yy_buffer_stack_top.7_40 = yy_buffer_stack_top;

_41 replace with --> _41 = yy_buffer_stack_top.7_40 * 8;

yy_buffer_stack.6_45 replace with --> yy_buffer_stack.6_45 = yy_buffer_stack;

yy_buffer_stack_top.7_46 replace with --> yy_buffer_stack_top.7_46 = yy_buffer_stack_top;

_47 replace with --> _47 = yy_buffer_stack_top.7_46 * 8;

yyin.2_49 replace with --> yyin.2_49 = yyin;

yytext.49_53 replace with --> yytext.49_53 = yytext;

_60 replace with --> _60 = (unsigned char) prephitmp_922;

_61 replace with --> _61 = (unsigned int) _60;

_67 replace with --> _67 = (int) prephitmp_926;

_68 replace with --> _68 = (int) yy_c_11;

_69 replace with --> _69 = _67 + _68;

_70 replace with --> _70 = yy_chk[_69];

_71 replace with --> _71 = (int) _70;

_77 replace with --> _77 = (unsigned int) prephitmp_926;

_78 replace with --> _78 = (unsigned int) yy_c_11;

_79 replace with --> _79 = _77 + _78;

_80 replace with --> _80 = yy_nxt[_79];

yy_current_state_87 replace with --> yy_current_state_87 = yy_last_accepting_state;

_88 replace with --> _88 = yy_accept[yy_current_state_87];

yy_bp.10_92 replace with --> yy_bp.10_92 = (long int) yy_cp_8;

_93 replace with --> _93 = yy_cp.9_91 - yy_bp.10_92;

yyleng.11_94 replace with --> yyleng.11_94 = (long unsigned int) _93;

yy_hold_char.12_96 replace with --> yy_hold_char.12_96 = *yy_cp_6;

_100 replace with --> _100 = yy_rule_can_match_eol[yy_act_9];

_104 replace with --> _104 = MEM[base: _324, offset: 0B];

yylineno.15_105 replace with --> yylineno.15_105 = yylineno;

yylineno.16_106 replace with --> yylineno.16_106 = yylineno.15_105 + 1;

yytext.14_111 replace with --> yytext.14_111 = yytext;

yyout.4_121 replace with --> yyout.4_121 = yyout;

yyleng.13_122 replace with --> yyleng.13_122 = yyleng;

yytext.14_123 replace with --> yytext.14_123 = yytext;

line_num.17_128 replace with --> line_num.17_128 = line_num;

line_num.18_129 replace with --> line_num.18_129 = line_num.17_128 + 1;

yytext.14_132 replace with --> yytext.14_132 = yytext;

yytext.21_133 replace with --> yytext.21_133 = (long int) yytext.14_132;

_134 replace with --> _134 = yy_cp.9_91 - yytext.21_133;

_135 replace with --> _135 = (int) _134;

yy_hold_char.8_137 replace with --> yy_hold_char.8_137 = yy_hold_char;

yy_buffer_stack.6_139 replace with --> yy_buffer_stack.6_139 = yy_buffer_stack;

yy_buffer_stack_top.7_140 replace with --> yy_buffer_stack_top.7_140 = yy_buffer_stack_top;

_141 replace with --> _141 = yy_buffer_stack_top.7_140 * 8;

_144 replace with --> _144 = _143->yy_buffer_status;

yyin.2_156 replace with --> yyin.2_156 = yyin;

_177 replace with --> _177 = (sizetype) yy_amount_of_matched_text_136;

yy_start.1_201 replace with --> yy_start.1_201 = yy_start;

_202 replace with --> _202 = yy_start.1_201 + -1;

_203 replace with --> _203 = _202 / 2;

yytext.14_205 replace with --> yytext.14_205 = yytext;

_206 replace with --> _206 = (sizetype) yy_amount_of_matched_text_136;

yy_hold_char.8_216 replace with --> yy_hold_char.8_216 = yy_hold_char;

yy_current_state_219 replace with --> yy_current_state_219 = yy_last_accepting_state;

yy_buffer_stack_top.7_222 replace with --> yy_buffer_stack_top.7_222 = yy_buffer_stack_top;

_223 replace with --> _223 = yy_buffer_stack_top.7_222 * 8;

_224 replace with --> _224 = yy_buffer_stack.6_221 + _223;

_225 replace with --> _225 = *_224;

yytext.46_226 replace with --> yytext.46_226 = yytext;

yytext.47_228 replace with --> yytext.47_228 = yytext;

yytext.48_230 replace with --> yytext.48_230 = yytext;

yytext.51_234 replace with --> yytext.51_234 = yytext;

yytext.14_238 replace with --> yytext.14_238 = yytext;

_239 replace with --> _239 = *yytext.14_238;

yy_n_chars.37_247 replace with --> yy_n_chars.37_247 = prephitmp_1033->yy_n_chars;

_249 replace with --> _249 = *prephitmp_1031;

yyin.40_250 replace with --> yyin.40_250 = _249->yy_input_file;

_252 replace with --> _252 = yytext.49_53 + 1;

c.50_253 replace with --> c.50_253 = c;

_254 replace with --> _254 = (unsigned int) c.50_253;

_258 replace with --> _258 = (int) _257;

_259 replace with --> _259 = _258 + 1;

_260 replace with --> _260 = yy_chk[_259];

_261 replace with --> _261 = (int) _260;

_264 replace with --> _264 = (unsigned int) _565;

_265 replace with --> _265 = _264 + 1;

_266 replace with --> _266 = yy_nxt[_265];

yytext.42_281 replace with --> yytext.42_281 = yytext;

yytext.42_283 replace with --> yytext.42_283 = yytext;

localvar.45_286 replace with --> localvar.45_286 = localvar.43_285 + 1;

_295 replace with --> _295 = yyleng.52_232 + 18446744073709551615;

yytext.53_297 replace with --> yytext.53_297 = yytext;

_298 replace with --> _298 = yytext.53_297 + 1;

_300 replace with --> _300 = yyleng.52_232 + 18446744073709551614;

_301 replace with --> _301 = _296 + _300;

_302 replace with --> _302 = _399 + 1;

_310 replace with --> _310 = _170 + 1;

_311 replace with --> _311 = dest_168 + _310;

_313 replace with --> _313 = prephitmp_927->yy_fill_buffer;

yy_c_buf_p.59_314 replace with --> yy_c_buf_p.59_314 = (long int) yy_c_buf_p.24_172;

yytext.61_315 replace with --> yytext.61_315 = (long int) source_307;

_316 replace with --> _316 = yy_c_buf_p.59_314 - yytext.61_315;

yy_c_buf_p.59_317 replace with --> yy_c_buf_p.59_317 = (long int) yy_c_buf_p.24_172;

yytext.61_318 replace with --> yytext.61_318 = (long int) source_307;

_319 replace with --> _319 = yy_c_buf_p.59_317 - yytext.61_318;

_320 replace with --> _320 = (long unsigned int) _319;

_324 replace with --> _324 = (void *) ivtmp.210_566;

_330 replace with --> _330 = prephitmp_944->yy_buffer_status;

_331 replace with --> _331 = prephitmp_944->yy_buf_size;

yy_c_buf_p.59_341 replace with --> yy_c_buf_p.59_341 = (long int) prephitmp_987;

_343 replace with --> _343 = (long int) _342;

_344 replace with --> _344 = yy_c_buf_p.59_341 - _343;

_346 replace with --> _346 = prephitmp_986->yy_is_our_buffer;

_349 replace with --> _349 = _347 >> 3;

_352 replace with --> _352 = prephitmp_989 + 2;

_355 replace with --> _355 = (sizetype) yy_c_buf_p_offset_345;

_362 replace with --> _362 = _361->yy_buf_size;

_363 replace with --> _363 = _331 + 18446744073709551615;

_370 replace with --> _370 = prephitmp_961->yy_is_interactive;

_372 replace with --> _372 = _362 + 18446744073709551615;

yyin.67_373 replace with --> yyin.67_373 = yyin;

yy_buffer_stack.55_376 replace with --> yy_buffer_stack.55_376 = yy_buffer_stack;

yy_buffer_stack_top.56_377 replace with --> yy_buffer_stack_top.56_377 = yy_buffer_stack_top;

_378 replace with --> _378 = yy_buffer_stack_top.56_377 * 8;

_380 replace with --> _380 = *_379;

yytext.77_381 replace with --> yytext.77_381 = _380->yy_ch_buf;

_383 replace with --> _383 = yytext.77_381 + _876;

_385 replace with --> _385 = (char) c_374;

yy_buffer_stack.55_387 replace with --> yy_buffer_stack.55_387 = yy_buffer_stack;

yy_buffer_stack_top.56_388 replace with --> yy_buffer_stack_top.56_388 = yy_buffer_stack_top;

_389 replace with --> _389 = yy_buffer_stack_top.56_388 * 8;

_391 replace with --> _391 = *_390;

yytext.77_392 replace with --> yytext.77_392 = _391->yy_ch_buf;

_394 replace with --> _394 = n_304 + number_to_move_321;

_395 replace with --> _395 = yytext.77_392 + _394;

yyin.67_397 replace with --> yyin.67_397 = yyin;

_399 replace with --> _399 = (int) _290;

yyin.67_403 replace with --> yyin.67_403 = yyin;

yytext.77_409 replace with --> yytext.77_409 = prephitmp_971->yy_ch_buf;

_410 replace with --> _410 = yytext.77_409 + number_to_move_321;

yyin.67_420 replace with --> yyin.67_420 = yyin;

_423 replace with --> _423 = *_402;

yyin.67_424 replace with --> yyin.67_424 = yyin;

yyin.67_432 replace with --> yyin.67_432 = yyin;

yy_buffer_stack.55_433 replace with --> yy_buffer_stack.55_433 = yy_buffer_stack;

yy_buffer_stack_top.56_434 replace with --> yy_buffer_stack_top.56_434 = yy_buffer_stack_top;

_435 replace with --> _435 = yy_buffer_stack_top.56_434 * 8;

_438 replace with --> _438 = (unsigned int) number_to_move_321;

yy_n_chars.75_440 replace with --> yy_n_chars.75_440 = (unsigned int) prephitmp_947;

_449 replace with --> _449 = prephitmp_957->yy_buf_size;

_450 replace with --> _450 = prephitmp_947 >> 1;

_451 replace with --> _451 = (unsigned int) _450;

_452 replace with --> _452 = _441 + _451;

new_size_453 replace with --> new_size_453 = (int) _452;

_454 replace with --> _454 = (long unsigned int) new_size_453;

yytext.77_455 replace with --> yytext.77_455 = prephitmp_957->yy_ch_buf;

_457 replace with --> _457 = *prephitmp_955;

_461 replace with --> _461 = prephitmp_960 + _443;

_462 replace with --> _462 = *prephitmp_955;

yytext.77_463 replace with --> yytext.77_463 = _462->yy_ch_buf;

_464 replace with --> _464 = _443 + 1;

_465 replace with --> _465 = yytext.77_463 + _464;

_466 replace with --> _466 = *prephitmp_955;

_562 replace with --> _562 = yy_chk[_302];

_574 replace with --> _574 = (int) _562;

_876 replace with --> _876 = n_304 + number_to_move_321;

pretmp_915 replace with --> pretmp_915 = yy_c_buf_p;

pretmp_934 replace with --> pretmp_934 = *prephitmp_955;

pretmp_936 replace with --> pretmp_936 = pretmp_934->yy_ch_buf;

pretmp_948 replace with --> pretmp_948 = yy_buffer_stack;

pretmp_950 replace with --> pretmp_950 = yy_buffer_stack_top;

pretmp_952 replace with --> pretmp_952 = pretmp_950 * 8;

_953 replace with --> _953 = pretmp_1019 + yyleng.13_471;

pretmp_964 replace with --> pretmp_964 = yy_buffer_stack;

pretmp_966 replace with --> pretmp_966 = yy_buffer_stack_top;

pretmp_968 replace with --> pretmp_968 = pretmp_966 * 8;

pretmp_969 replace with --> pretmp_969 = pretmp_964 + pretmp_968;

pretmp_974 replace with --> pretmp_974 = yy_buffer_stack;

pretmp_976 replace with --> pretmp_976 = yy_buffer_stack_top;

pretmp_978 replace with --> pretmp_978 = pretmp_976 * 8;

pretmp_1024 replace with --> pretmp_1024 = yy_buffer_stack;

pretmp_1026 replace with --> pretmp_1026 = yy_buffer_stack_top;

pretmp_1028 replace with --> pretmp_1028 = pretmp_1026 * 8;

pretmp_1057 replace with --> pretmp_1057 = yy_buffer_stack;

pretmp_1059 replace with --> pretmp_1059 = yy_buffer_stack_top;

pretmp_1061 replace with --> pretmp_1061 = pretmp_1059 * 8;


int yylex() ()
{
  unsigned long ivtmp.210;
  bool yy_last_accepting_state_lsm.194;
  yy_state_type yy_last_accepting_state_lsm.193;
  bool yy_last_accepting_cpos_lsm.192;
  char * yy_last_accepting_cpos_lsm.191;
  char * dest;
  char * source;
  yy_size_t number_to_move;
  yy_size_t i;
  int ret_val;
  yy_size_t num_to_read;
  int yy_c_buf_p_offset;
  yy_size_t new_size;
  int c;
  size_t n;
  int new_size;
  char c;
  int yy_amount_of_matched_text;
  YY_CHAR yy_c;
  int yy_act;
  char * yy_cp;
  yy_state_type yy_current_state;
  int _13;
  int yy_init.0_28;
  int yy_start.1_30;
  struct FILE * yyin.2_32;
  struct _IO_FILE * stdin.3_33;
  struct FILE * yyout.4_35;
  struct _IO_FILE * stdout.5_36;
  struct yy_buffer_state * * yy_buffer_stack.6_38;
  long unsigned int yy_buffer_stack_top.7_40;
  long unsigned int _41;
  struct yy_buffer_state * * _42;
  struct yy_buffer_state * _43;
  struct yy_buffer_state * * yy_buffer_stack.6_45;
  long unsigned int yy_buffer_stack_top.7_46;
  long unsigned int _47;
  struct yy_buffer_state * * _48;
  struct FILE * yyin.2_49;
  struct yy_buffer_state * _51;
  char * yytext.49_53;
  unsigned char _60;
  unsigned int _61;
  int _67;
  int _68;
  int _69;
  short int _70;
  int _71;
  short int _72;
  unsigned int _74;
  unsigned int _77;
  unsigned int _78;
  unsigned int _79;
  short unsigned int _80;
  short unsigned int _83;
  short int _88;
  long int yy_cp.9_91;
  long int yy_bp.10_92;
  long int _93;
  long unsigned int yyleng.11_94;
  char yy_hold_char.12_96;
  int _100;
  char _104;
  int yylineno.15_105;
  int yylineno.16_106;
  char * yytext.14_111;
  struct FILE * _113;
  struct yy_buffer_state * _117;
  struct FILE * yyout.4_121;
  long unsigned int yyleng.13_122;
  char * yytext.14_123;
  int line_num.17_128;
  int line_num.18_129;
  char * yytext.14_132;
  long int yytext.21_133;
  long int _134;
  int _135;
  char yy_hold_char.8_137;
  struct yy_buffer_state * * yy_buffer_stack.6_139;
  long unsigned int yy_buffer_stack_top.7_140;
  long unsigned int _141;
  struct yy_buffer_state * * _142;
  struct yy_buffer_state * _143;
  int _144;
  int yy_n_chars.22_150;
  struct FILE * yyin.2_156;
  struct yy_buffer_state * _162;
  sizetype _170;
  char * yy_c_buf_p.29_171;
  char * yy_c_buf_p.24_172;
  sizetype _177;
  int yy_start.1_201;
  int _202;
  int _203;
  char * yytext.14_205;
  sizetype _206;
  char yy_hold_char.8_216;
  struct yy_buffer_state * * yy_buffer_stack.6_221;
  long unsigned int yy_buffer_stack_top.7_222;
  long unsigned int _223;
  struct yy_buffer_state * * _224;
  struct yy_buffer_state * _225;
  char * yytext.46_226;
  char * yytext.47_228;
  char * yytext.48_230;
  long unsigned int yyleng.52_232;
  char * yytext.51_234;
  char * yytext.14_238;
  char _239;
  int _240;
  int yy_n_chars.37_247;
  char * yy_c_buf_p.38_248;
  struct yy_buffer_state * _249;
  struct FILE * yyin.40_250;
  char yy_hold_char.41_251;
  const char * _252;
  char c.50_253;
  unsigned int _254;
  short int _255;
  short unsigned int _257;
  int _258;
  int _259;
  short int _260;
  int _261;
  short int _262;
  unsigned int _264;
  unsigned int _265;
  short unsigned int _266;
  char * yytext.42_281;
  struct Symbol * _282;
  char * yytext.42_283;
  struct Symbol * _284;
  int localvar.43_285;
  int localvar.45_286;
  int _288;
  unsigned int _289;
  short unsigned int _290;
  unsigned int _291;
  unsigned int _293;
  long unsigned int _295;
  void * _296;
  char * yytext.53_297;
  const char * _298;
  sizetype _300;
  char * _301;
  int _302;
  sizetype _310;
  char * _311;
  int _313;
  long int yy_c_buf_p.59_314;
  long int yytext.61_315;
  long int _316;
  long int yy_c_buf_p.59_317;
  long int yytext.61_318;
  long int _319;
  long unsigned int _320;
  void * _324;
  char _327;
  int _330;
  long unsigned int _331;
  long int yy_c_buf_p.59_341;
  char * _342;
  long int _343;
  long int _344;
  int _346;
  long unsigned int _347;
  long unsigned int _349;
  long unsigned int _350;
  long unsigned int _352;
  void * _353;
  sizetype _355;
  char * yy_c_buf_p.64_356;
  struct yy_buffer_state * _361;
  long unsigned int _362;
  long unsigned int _363;
  int _370;
  long unsigned int _372;
  struct FILE * yyin.67_373;
  struct yy_buffer_state * * yy_buffer_stack.55_376;
  long unsigned int yy_buffer_stack_top.56_377;
  long unsigned int _378;
  struct yy_buffer_state * * _379;
  struct yy_buffer_state * _380;
  char * yytext.77_381;
  char * _383;
  char _385;
  struct yy_buffer_state * * yy_buffer_stack.55_387;
  long unsigned int yy_buffer_stack_top.56_388;
  long unsigned int _389;
  struct yy_buffer_state * * _390;
  struct yy_buffer_state * _391;
  char * yytext.77_392;
  sizetype _394;
  char * _395;
  struct FILE * yyin.67_397;
  int _398;
  int _399;
  int yy_n_chars.71_401;
  int * _402;
  struct FILE * yyin.67_403;
  char * yytext.77_409;
  char * _410;
  long unsigned int _417;
  int yy_n_chars.74_419;
  struct FILE * yyin.67_420;
  int _421;
  int _423;
  struct FILE * yyin.67_424;
  struct yy_buffer_state * _429;
  struct FILE * yyin.67_432;
  struct yy_buffer_state * * yy_buffer_stack.55_433;
  long unsigned int yy_buffer_stack_top.56_434;
  long unsigned int _435;
  struct yy_buffer_state * * _436;
  struct yy_buffer_state * _437;
  unsigned int _438;
  unsigned int yy_n_chars.75_440;
  unsigned int _441;
  int yy_n_chars.76_442;
  long unsigned int _443;
  long unsigned int _449;
  int _450;
  unsigned int _451;
  unsigned int _452;
  long unsigned int _454;
  char * yytext.77_455;
  void * _456;
  struct yy_buffer_state * _457;
  char * yytext.77_458;
  char * _461;
  struct yy_buffer_state * _462;
  char * yytext.77_463;
  sizetype _464;
  char * _465;
  struct yy_buffer_state * _466;
  char * yytext.77_467;
  long unsigned int yyleng.13_471;
  short int _562;
  short unsigned int _565;
  int _574;
  long unsigned int _876;
  struct yy_buffer_state * prephitmp_883;
  char * prephitmp_885;
  char * pretmp_907;
  char * prephitmp_908;
  char pretmp_909;
  char prephitmp_910;
  char * pretmp_911;
  char * prephitmp_912;
  char pretmp_913;
  char prephitmp_914;
  char * pretmp_915;
  char pretmp_917;
  char prephitmp_918;
  char pretmp_919;
  char prephitmp_920;
  char pretmp_921;
  char prephitmp_922;
  short unsigned int prephitmp_924;
  short unsigned int pretmp_925;
  short unsigned int prephitmp_926;
  struct yy_buffer_state * prephitmp_927;
  int pretmp_928;
  int prephitmp_929;
  struct yy_buffer_state * pretmp_934;
  char * pretmp_936;
  char * pretmp_940;
  char * prephitmp_942;
  struct yy_buffer_state * pretmp_943;
  struct yy_buffer_state * prephitmp_944;
  int pretmp_945;
  int pretmp_946;
  int prephitmp_947;
  struct yy_buffer_state * * pretmp_948;
  long unsigned int pretmp_950;
  unsigned long _951;
  long unsigned int pretmp_952;
  char * _953;
  struct yy_buffer_state * * pretmp_954;
  struct yy_buffer_state * * prephitmp_955;
  struct yy_buffer_state * pretmp_956;
  struct yy_buffer_state * prephitmp_957;
  char * pretmp_959;
  char * prephitmp_960;
  struct yy_buffer_state * prephitmp_961;
  int prephitmp_963;
  struct yy_buffer_state * * pretmp_964;
  long unsigned int pretmp_966;
  long unsigned int pretmp_968;
  struct yy_buffer_state * * pretmp_969;
  struct yy_buffer_state * pretmp_970;
  struct yy_buffer_state * prephitmp_971;
  int pretmp_972;
  int prephitmp_973;
  struct yy_buffer_state * * pretmp_974;
  long unsigned int pretmp_976;
  long unsigned int pretmp_978;
  struct yy_buffer_state * * pretmp_980;
  struct yy_buffer_state * * prephitmp_981;
  struct yy_buffer_state * * prephitmp_985;
  struct yy_buffer_state * prephitmp_986;
  char * prephitmp_987;
  long unsigned int prephitmp_989;
  struct Symbol * prephitmp_991;
  short int pretmp_992;
  short int pretmp_993;
  short int prephitmp_994;
  int pretmp_999;
  int pretmp_1000;
  int pretmp_1001;
  int pretmp_1002;
  int prephitmp_1003;
  short int pretmp_1004;
  short int pretmp_1005;
  short int pretmp_1006;
  short int pretmp_1007;
  short int prephitmp_1008;
  short unsigned int pretmp_1009;
  short unsigned int pretmp_1010;
  short unsigned int pretmp_1011;
  short unsigned int pretmp_1012;
  short unsigned int prephitmp_1013;
  char * pretmp_1019;
  struct yy_buffer_state * * pretmp_1024;
  long unsigned int pretmp_1026;
  long unsigned int pretmp_1028;
  struct yy_buffer_state * * pretmp_1030;
  struct yy_buffer_state * * prephitmp_1031;
  struct yy_buffer_state * pretmp_1032;
  struct yy_buffer_state * prephitmp_1033;
  int pretmp_1034;
  int prephitmp_1035;
  short int pretmp_1036;
  short int prephitmp_1037;
  short unsigned int pretmp_1038;
  short unsigned int prephitmp_1039;
  int pretmp_1041;
  short int pretmp_1043;
  short int prephitmp_1044;
  short unsigned int pretmp_1045;
  short unsigned int prephitmp_1046;
  short int pretmp_1047;
  short int prephitmp_1048;
  short unsigned int pretmp_1049;
  short unsigned int prephitmp_1050;
  short int pretmp_1051;
  short int prephitmp_1052;
  short int pretmp_1054;
  short int prephitmp_1055;
  struct yy_buffer_state * * pretmp_1057;
  long unsigned int pretmp_1059;
  long unsigned int pretmp_1061;
  struct yy_buffer_state * * pretmp_1063;
  struct yy_buffer_state * * prephitmp_1064;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  yy_init.0_28 = yy_init;
  if (yy_init.0_28 == 0)
    goto <bb 4>;
  else
    goto <bb 3>;
;;    succ:       4
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  pretmp_907 = yy_c_buf_p;
  pretmp_909 = yy_hold_char;
  goto <bb 14>;
;;    succ:       14

;;   basic block 4, loop depth 0
;;    pred:       2
  yy_init = 1;
  yy_start.1_30 = yy_start;
  if (yy_start.1_30 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  yy_start = 1;
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       4
;;                5
  yyin.2_32 = yyin;
  if (yyin.2_32 == 0B)
    goto <bb 7>;
  else
    goto <bb 8>;
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  stdin.3_33 = stdin;
  yyin = stdin.3_33;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       6
;;                7
  yyout.4_35 = yyout;
  if (yyout.4_35 == 0B)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 0
;;    pred:       8
  stdout.5_36 = stdout;
  yyout = stdout.5_36;
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       8
;;                9
  yy_buffer_stack.6_38 = yy_buffer_stack;
  if (yy_buffer_stack.6_38 == 0B)
    goto <bb 12>;
  else
    goto <bb 11>;
;;    succ:       12
;;                11

;;   basic block 11, loop depth 0
;;    pred:       10
  yy_buffer_stack_top.7_40 = yy_buffer_stack_top;
  _41 = yy_buffer_stack_top.7_40 * 8;
  _42 = yy_buffer_stack.6_38 + _41;
  _43 = *_42;
  if (_43 == 0B)
    goto <bb 12>;
  else
    goto <bb 13>;
;;    succ:       12
;;                13

;;   basic block 12, loop depth 0
;;    pred:       11
;;                10
  yyensure_buffer_stack ();
  yy_buffer_stack.6_45 = yy_buffer_stack;
  yy_buffer_stack_top.7_46 = yy_buffer_stack_top;
  _47 = yy_buffer_stack_top.7_46 * 8;
  _48 = yy_buffer_stack.6_45 + _47;
  yyin.2_49 = yyin;
  _51 = yy_create_buffer (yyin.2_49, 16384);
  *_48 = _51;
  pretmp_1024 = yy_buffer_stack;
  pretmp_1026 = yy_buffer_stack_top;
  pretmp_1028 = pretmp_1026 * 8;
  pretmp_1030 = pretmp_1024 + pretmp_1028;
  pretmp_1032 = *pretmp_1030;
;;    succ:       13

;;   basic block 13, loop depth 0
;;    pred:       11
;;                12
  # prephitmp_1031 = PHI <_42(11), pretmp_1030(12)>
  # prephitmp_1033 = PHI <_43(11), pretmp_1032(12)>
  yy_n_chars.37_247 = prephitmp_1033->yy_n_chars;
  yy_n_chars = yy_n_chars.37_247;
  yy_c_buf_p.38_248 = prephitmp_1033->yy_buf_pos;
  yy_c_buf_p = yy_c_buf_p.38_248;
  yytext = yy_c_buf_p.38_248;
  _249 = *prephitmp_1031;
  yyin.40_250 = _249->yy_input_file;
  yyin = yyin.40_250;
  yy_hold_char.41_251 = *yy_c_buf_p.38_248;
  yy_hold_char = yy_hold_char.41_251;
;;    succ:       14

;;   basic block 14, loop depth 0
;;    pred:       13
;;                3
  # prephitmp_908 = PHI <yy_c_buf_p.38_248(13), pretmp_907(3)>
  # prephitmp_910 = PHI <yy_hold_char.41_251(13), pretmp_909(3)>
  pretmp_1034 = yy_start;
  pretmp_1036 = yy_accept[pretmp_1034];
  pretmp_1038 = yy_base[pretmp_1034];
  goto <bb 17>;
;;    succ:       17

;;   basic block 15, loop depth 1
;;    pred:       56
  pretmp_1001 = yy_start;
  pretmp_1006 = yy_accept[pretmp_1001];
  pretmp_1011 = yy_base[pretmp_1001];
;;    succ:       16

;;   basic block 16, loop depth 1
;;    pred:       50
;;                52
;;                51
;;                53
;;                97
;;                54
;;                15
;;                96
  # prephitmp_1003 = PHI <5(50), 1(52), pretmp_999(51), 3(53), pretmp_1000(97), 1(54), pretmp_1001(15), pretmp_1002(96)>
  # prephitmp_1008 = PHI <2(50), 0(52), pretmp_1004(51), 7(53), pretmp_1005(97), 0(54), pretmp_1006(15), pretmp_1007(96)>
  # prephitmp_1013 = PHI <40(50), 0(52), pretmp_1009(51), 37(53), pretmp_1010(97), 0(54), pretmp_1011(15), pretmp_1012(96)>
  pretmp_911 = yy_c_buf_p;
  pretmp_913 = yy_hold_char;
;;    succ:       17

;;   basic block 17, loop depth 1
;;    pred:       14
;;                16
  # prephitmp_912 = PHI <prephitmp_908(14), pretmp_911(16)>
  # prephitmp_914 = PHI <prephitmp_910(14), pretmp_913(16)>
  # prephitmp_1035 = PHI <pretmp_1034(14), prephitmp_1003(16)>
  # prephitmp_1037 = PHI <pretmp_1036(14), prephitmp_1008(16)>
  # prephitmp_1039 = PHI <pretmp_1038(14), prephitmp_1013(16)>
;;    succ:       18

;;   basic block 18, loop depth 2
;;    pred:       17
;;                48
  # yy_cp_916 = PHI <prephitmp_912(17), yy_cp_3(48)>
  # prephitmp_918 = PHI <prephitmp_914(17), pretmp_917(48)>
  # yy_current_state_1042 = PHI <prephitmp_1035(17), yy_current_state_893(48)>
  # prephitmp_1044 = PHI <prephitmp_1037(17), pretmp_1043(48)>
  # prephitmp_1046 = PHI <prephitmp_1039(17), pretmp_1045(48)>
  # DEBUG D#16 => yy_c_buf_p
  # DEBUG yy_cp => D#16
  *yy_cp_916 = prephitmp_918;
  # DEBUG yy_bp => D#16
  # DEBUG D#15 => yy_start
  # DEBUG yy_current_state => D#15
  goto <bb 20>;
;;    succ:       20

;;   basic block 19, loop depth 3
;;    pred:       151
;;                109
  # yy_current_state_57 = PHI <yy_current_state_181(151), yy_current_state_267(109)>
  # yy_cp_147 = PHI <yy_cp_178(151), yy_cp_214(109)>
  # yy_cp_146 = PHI <yy_cp_183(151), yy_cp_213(109)>
  pretmp_919 = *yy_cp_147;
  pretmp_1047 = yy_accept[yy_current_state_57];
  pretmp_1049 = yy_base[yy_current_state_57];
;;    succ:       20

;;   basic block 20, loop depth 3
;;    pred:       19
;;                18
  # yy_current_state_76 = PHI <yy_current_state_57(19), yy_current_state_1042(18)>
  # yy_cp_115 = PHI <yy_cp_147(19), yy_cp_916(18)>
  # yy_cp_118 = PHI <yy_cp_146(19), yy_cp_916(18)>
  # prephitmp_920 = PHI <pretmp_919(19), prephitmp_918(18)>
  # prephitmp_1048 = PHI <pretmp_1047(19), prephitmp_1044(18)>
  # prephitmp_1050 = PHI <pretmp_1049(19), prephitmp_1046(18)>
  yy_last_accepting_state_lsm.193_859 = yy_last_accepting_state;
  yy_last_accepting_cpos_lsm.191_857 = yy_last_accepting_cpos;
;;    succ:       21

;;   basic block 21, loop depth 4
;;    pred:       20
;;                29
  # yy_current_state_1 = PHI <yy_current_state_76(20), yy_current_state_81(29)>
  # yy_cp_4 = PHI <yy_cp_115(20), yy_cp_82(29)>
  # prephitmp_922 = PHI <prephitmp_920(20), pretmp_921(29)>
  # prephitmp_924 = PHI <prephitmp_1050(20), _83(29)>
  # prephitmp_1052 = PHI <prephitmp_1048(20), pretmp_1051(29)>
  # yy_last_accepting_cpos_lsm.191_867 = PHI <yy_last_accepting_cpos_lsm.191_857(20), yy_last_accepting_cpos_lsm.191_866(29)>
  # yy_last_accepting_cpos_lsm.192_865 = PHI <0(20), yy_last_accepting_cpos_lsm.192_864(29)>
  # yy_last_accepting_state_lsm.193_863 = PHI <yy_last_accepting_state_lsm.193_859(20), yy_last_accepting_state_lsm.193_862(29)>
  # yy_last_accepting_state_lsm.194_861 = PHI <0(20), yy_last_accepting_state_lsm.194_860(29)>
  # DEBUG yy_bp => yy_cp_118
  # DEBUG yy_cp => yy_cp_4
  # DEBUG yy_current_state => yy_current_state_1
  _60 = (unsigned char) prephitmp_922;
  _61 = (unsigned int) _60;
  yy_c_62 = yy_ec[_61];
  # DEBUG yy_c => yy_c_62
  if (prephitmp_1052 != 0)
    goto <bb 22>;
  else
    goto <bb 23>;
;;    succ:       22
;;                23

;;   basic block 22, loop depth 4
;;    pred:       21
;;    succ:       23

;;   basic block 23, loop depth 4
;;    pred:       22
;;                21
  # yy_last_accepting_cpos_lsm.191_866 = PHI <yy_cp_4(22), yy_last_accepting_cpos_lsm.191_867(21)>
  # yy_last_accepting_cpos_lsm.192_864 = PHI <1(22), yy_last_accepting_cpos_lsm.192_865(21)>
  # yy_last_accepting_state_lsm.193_862 = PHI <yy_current_state_1(22), yy_last_accepting_state_lsm.193_863(21)>
  # yy_last_accepting_state_lsm.194_860 = PHI <1(22), yy_last_accepting_state_lsm.194_861(21)>
  goto <bb 25>;
;;    succ:       25

;;   basic block 24, loop depth 5
;;    pred:       26
;;                27
  # yy_c_152 = PHI <yy_c_11(26), yy_c_75(27)>
  pretmp_925 = yy_base[yy_current_state_73];
;;    succ:       25

;;   basic block 25, loop depth 5
;;    pred:       23
;;                24
  # yy_current_state_2 = PHI <yy_current_state_1(23), yy_current_state_73(24)>
  # yy_c_11 = PHI <yy_c_62(23), yy_c_152(24)>
  # prephitmp_926 = PHI <prephitmp_924(23), pretmp_925(24)>
  # DEBUG yy_c => yy_c_11
  # DEBUG yy_current_state => yy_current_state_2
  _67 = (int) prephitmp_926;
  _68 = (int) yy_c_11;
  _69 = _67 + _68;
  _70 = yy_chk[_69];
  _71 = (int) _70;
  if (yy_current_state_2 == _71)
    goto <bb 28>;
  else
    goto <bb 26>;
;;    succ:       28
;;                26

;;   basic block 26, loop depth 5
;;    pred:       25
  _72 = yy_def[yy_current_state_2];
  yy_current_state_73 = (yy_state_type) _72;
  # DEBUG yy_current_state => yy_current_state_73
  if (yy_current_state_73 > 101)
    goto <bb 27>;
  else
    goto <bb 24>;
;;    succ:       27
;;                24

;;   basic block 27, loop depth 5
;;    pred:       26
  _74 = (unsigned int) yy_c_11;
  yy_c_75 = yy_meta[_74];
  # DEBUG yy_c => yy_c_75
  goto <bb 24>;
;;    succ:       24

;;   basic block 28, loop depth 4
;;    pred:       25
  _77 = (unsigned int) prephitmp_926;
  _78 = (unsigned int) yy_c_11;
  _79 = _77 + _78;
  _80 = yy_nxt[_79];
  yy_current_state_81 = (yy_state_type) _80;
  # DEBUG yy_current_state => yy_current_state_81
  yy_cp_82 = yy_cp_4 + 1;
  # DEBUG yy_cp => yy_cp_82
  _83 = yy_base[yy_current_state_81];
  if (_83 == 190)
    goto <bb 30>;
  else
    goto <bb 29>;
;;    succ:       30
;;                29

;;   basic block 29, loop depth 4
;;    pred:       28
  pretmp_921 = MEM[base: yy_cp_82, offset: 0B];
  pretmp_1051 = yy_accept[yy_current_state_81];
  goto <bb 21>;
;;    succ:       21

;;   basic block 30, loop depth 3
;;    pred:       28
  if (yy_last_accepting_cpos_lsm.192_864 != 0)
    goto <bb 31>;
  else
    goto <bb 32>;
;;    succ:       32
;;                31

;;   basic block 31, loop depth 3
;;    pred:       30
  yy_last_accepting_cpos = yy_last_accepting_cpos_lsm.191_866;
;;    succ:       32

;;   basic block 32, loop depth 3
;;    pred:       31
;;                30
  if (yy_last_accepting_state_lsm.194_860 != 0)
    goto <bb 33>;
  else
    goto <bb 34>;
;;    succ:       34
;;                33

;;   basic block 33, loop depth 3
;;    pred:       32
  yy_last_accepting_state = yy_last_accepting_state_lsm.193_862;
;;    succ:       34

;;   basic block 34, loop depth 3
;;    pred:       33
;;                32
  pretmp_1054 = yy_accept[yy_current_state_81];
  goto <bb 36>;
;;    succ:       36

;;   basic block 35, loop depth 4
;;    pred:       108
;;                49
;;                152
;;                156
  # yy_cp_161 = PHI <yy_cp_207(108), yy_cp_218(49), yy_cp_941(152), yy_cp_207(156)>
  # yy_cp_155 = PHI <yy_cp_213(108), yy_cp_8(49), yy_cp_197(152), yy_cp_577(156)>
  # prephitmp_994 = PHI <_255(108), pretmp_992(49), pretmp_993(152), _255(156)>
;;    succ:       36

;;   basic block 36, loop depth 4
;;    pred:       34
;;                35
  # yy_cp_5 = PHI <yy_cp_82(34), yy_cp_161(35)>
  # yy_cp_8 = PHI <yy_cp_118(34), yy_cp_155(35)>
  # prephitmp_1055 = PHI <pretmp_1054(34), prephitmp_994(35)>
  # DEBUG yy_bp => yy_cp_8
  # DEBUG yy_cp => yy_cp_5
  # DEBUG yy_current_state => NULL
  yy_act_85 = (int) prephitmp_1055;
  # DEBUG yy_act => yy_act_85
  if (yy_act_85 == 0)
    goto <bb 37>;
  else
    goto <bb 38>;
;;    succ:       37
;;                38

;;   basic block 37, loop depth 4
;;    pred:       36
  yy_cp_86 = yy_last_accepting_cpos;
  # DEBUG yy_cp => yy_cp_86
  yy_current_state_87 = yy_last_accepting_state;
  # DEBUG yy_current_state => yy_current_state_87
  _88 = yy_accept[yy_current_state_87];
  yy_act_89 = (int) _88;
  # DEBUG yy_act => yy_act_89
;;    succ:       38

;;   basic block 38, loop depth 4
;;    pred:       36
;;                37
  # yy_cp_6 = PHI <yy_cp_5(36), yy_cp_86(37)>
  # yy_act_9 = PHI <yy_act_85(36), yy_act_89(37)>
  # DEBUG yy_act => yy_act_9
  # DEBUG yy_cp => yy_cp_6
  yytext = yy_cp_8;
  yy_cp.9_91 = (long int) yy_cp_6;
  yy_bp.10_92 = (long int) yy_cp_8;
  _93 = yy_cp.9_91 - yy_bp.10_92;
  yyleng.11_94 = (long unsigned int) _93;
  yyleng = yyleng.11_94;
  yy_hold_char.12_96 = *yy_cp_6;
  yy_hold_char = yy_hold_char.12_96;
  *yy_cp_6 = 0;
  yy_c_buf_p = yy_cp_6;
  if (yy_act_9 != 46)
    goto <bb 39>;
  else
    goto <bb 41>;
;;    succ:       39
;;                41

;;   basic block 39, loop depth 4
;;    pred:       38
  _100 = yy_rule_can_match_eol[yy_act_9];
  if (_100 != 0)
    goto <bb 40>;
  else
    goto <bb 41>;
;;    succ:       40
;;                41

;;   basic block 40, loop depth 4
;;    pred:       39
  # DEBUG yyl => 0
  yyleng.13_471 = yyleng;
  if (yyleng.13_471 == 0)
    goto <bb 41>;
  else
    goto <bb 42>;
;;    succ:       41
;;                42

;;   basic block 41, loop depth 4
;;    pred:       39
;;                45
;;                38
;;                40
  # yy_act_294 = PHI <yy_act_9(39), yy_act_9(45), yy_act_9(38), yy_act_9(40)>
  goto <bb 46>;
;;    succ:       46

;;   basic block 42, loop depth 4
;;    pred:       40
  pretmp_1019 = yytext;
  ivtmp.210_326 = (unsigned long) pretmp_1019;
  _953 = pretmp_1019 + yyleng.13_471;
  _951 = (unsigned long) _953;
;;    succ:       43

;;   basic block 43, loop depth 5
;;    pred:       42
;;                45
  # ivtmp.210_566 = PHI <ivtmp.210_326(42), ivtmp.210_564(45)>
  # DEBUG yyl => (yy_size_t) ivtmp.210_566 - (yy_size_t) pretmp_1019
  _324 = (void *) ivtmp.210_566;
  _104 = MEM[base: _324, offset: 0B];
  if (_104 == 10)
    goto <bb 44>;
  else
    goto <bb 45>;
;;    succ:       44
;;                45

;;   basic block 44, loop depth 5
;;    pred:       43
  yylineno.15_105 = yylineno;
  yylineno.16_106 = yylineno.15_105 + 1;
  yylineno = yylineno.16_106;
;;    succ:       45

;;   basic block 45, loop depth 5
;;    pred:       43
;;                44
  # DEBUG D#19 => ((yy_size_t) ivtmp.210_566 - (yy_size_t) pretmp_1019) + 1
  # DEBUG yyl => D#19
  # DEBUG yyl => D#19
  ivtmp.210_564 = ivtmp.210_566 + 1;
  if (ivtmp.210_564 == _951)
    goto <bb 41>;
  else
    goto <bb 43>;
;;    succ:       41
;;                43

;;   basic block 46, loop depth 5
;;    pred:       41
;;                150
  # yy_act_10 = PHI <yy_act_294(41), yy_act_204(150)>
  # DEBUG yy_act => yy_act_10
  switch (yy_act_10) <default: <L118>, case 0: <L45>, case 1: <L46>, case 2 ... 3: <L140>, case 4: <L49>, case 5: <L50>, case 6: <L51>, case 7: <L140>, case 8: <L53>, case 9 ... 10: <L140>, case 11: <L129>, case 12: <L130>, case 13: <L131>, case 14: <L132>, case 15: <L123>, case 16: <L124>, case 17: <L133>, case 18: <L141>, case 19: <L125>, case 20: <L146>, case 21: <L72>, case 22: <L73>, case 23: <L74>, case 24: <L75>, case 25: <L76>, case 26: <L77>, case 27: <L78>, case 28: <L79>, case 29: <L80>, case 30: <L81>, case 31: <L82>, case 32: <L83>, case 33: <L84>, case 34: <L85>, case 35: <L86>, case 36: <L87>, case 37: <L88>, case 38: <L89>, case 39: <L90>, case 40: <L91>, case 41: <L92>, case 42: <L93>, case 43: <L94>, case 44: <L95>, case 45: <L96>, case 46: <L100>, case 47 ... 49: <L54>>
;;    succ:       153
;;                49
;;                50
;;                48
;;                55
;;                51
;;                52
;;                53
;;                98
;;                54
;;                97
;;                96
;;                57
;;                60
;;                65
;;                67
;;                69
;;                70
;;                71
;;                154
;;                155
;;                47
;;                73
;;                74
;;                75
;;                76
;;                77
;;                78
;;                79
;;                80
;;                81
;;                82
;;                83
;;                84
;;                85
;;                86
;;                87
;;                88
;;                89
;;                90
;;                91
;;                92
;;                93
;;                94
;;                95

;;   basic block 47, loop depth 0
;;    pred:       46
<L146>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 48, loop depth 2
;;    pred:       46
<L140>:
  pretmp_915 = yy_c_buf_p;
  pretmp_917 = yy_hold_char;
  pretmp_1041 = yy_start;
  pretmp_1043 = yy_accept[pretmp_1041];
  pretmp_1045 = yy_base[pretmp_1041];
  yy_cp_3 = pretmp_915;
  yy_current_state_893 = pretmp_1041;
  goto <bb 18>;
;;    succ:       18

;;   basic block 49, loop depth 4
;;    pred:       46
<L45>:
  yy_hold_char.8_216 = yy_hold_char;
  *yy_cp_6 = yy_hold_char.8_216;
  yy_cp_218 = yy_last_accepting_cpos;
  # DEBUG yy_cp => yy_cp_218
  yy_current_state_219 = yy_last_accepting_state;
  # DEBUG yy_current_state => yy_current_state_219
  pretmp_992 = yy_accept[yy_current_state_219];
  goto <bb 35>;
;;    succ:       35

;;   basic block 50, loop depth 1
;;    pred:       46
<L46>:
  yy_start = 5;
  goto <bb 16>;
;;    succ:       16

;;   basic block 51, loop depth 1
;;    pred:       46
<L49>:
  line_num.17_128 = line_num;
  line_num.18_129 = line_num.17_128 + 1;
  line_num = line_num.18_129;
  pretmp_999 = yy_start;
  pretmp_1004 = yy_accept[pretmp_999];
  pretmp_1009 = yy_base[pretmp_999];
  goto <bb 16>;
;;    succ:       16

;;   basic block 52, loop depth 1
;;    pred:       46
<L50>:
  yy_start = 1;
  goto <bb 16>;
;;    succ:       16

;;   basic block 53, loop depth 1
;;    pred:       46
<L51>:
  yy_start = 3;
  goto <bb 16>;
;;    succ:       16

;;   basic block 54, loop depth 1
;;    pred:       46
<L53>:
  yytext.14_111 = yytext;
  _113 = fopen (yytext.14_111, "r");
  yyin = _113;
  _117 = yy_create_buffer (_113, 16384);
  yypush_buffer_state (_117);
  yy_start = 1;
  goto <bb 16>;
;;    succ:       16

;;   basic block 55, loop depth 1
;;    pred:       46
<L54>:
  yypop_buffer_state ();
  yy_buffer_stack.6_221 = yy_buffer_stack;
  if (yy_buffer_stack.6_221 == 0B)
    goto <bb 155> (<L125>);
  else
    goto <bb 56>;
;;    succ:       155
;;                56

;;   basic block 56, loop depth 1
;;    pred:       55
  yy_buffer_stack_top.7_222 = yy_buffer_stack_top;
  _223 = yy_buffer_stack_top.7_222 * 8;
  _224 = yy_buffer_stack.6_221 + _223;
  _225 = *_224;
  if (_225 == 0B)
    goto <bb 155> (<L125>);
  else
    goto <bb 15>;
;;    succ:       155
;;                15

;;   basic block 57, loop depth 0
;;    pred:       46
<L129>:
  yytext.42_281 = yytext;
  _282 = lookup (yytext.42_281);
  yylval.sym = _282;
  if (_282 == 0B)
    goto <bb 58>;
  else
    goto <bb 59>;
;;    succ:       58
;;                59

;;   basic block 58, loop depth 0
;;    pred:       57
  yytext.42_283 = yytext;
  _284 = insert (yytext.42_283, 258);
  yylval.sym = _284;
  localvar.43_285 = localvar;
  localvar.45_286 = localvar.43_285 + 1;
  localvar = localvar.45_286;
  _284->localvar = localvar.43_285;
;;    succ:       59

;;   basic block 59, loop depth 0
;;    pred:       57
;;                58
  # prephitmp_991 = PHI <_282(57), _284(58)>
  _288 = prephitmp_991->token;
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 60, loop depth 0
;;    pred:       46
<L130>:
  yytext.46_226 = yytext;
  sscanf (yytext.46_226, "%o", &yylval.num);
  _289 = yylval.num;
  if (_289 <= 127)
    goto <bb 61>;
  else
    goto <bb 62>;
;;    succ:       61
;;                62

;;   basic block 61, loop depth 0
;;    pred:       60
;;                65
;;                67
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 62, loop depth 0
;;    pred:       60
  if (_289 <= 32367)
    goto <bb 63>;
  else
    goto <bb 64>;
;;    succ:       63
;;                64

;;   basic block 63, loop depth 0
;;    pred:       62
;;                66
;;                68
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 64, loop depth 0
;;    pred:       62
;;                66
;;                68
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 65, loop depth 0
;;    pred:       46
<L131>:
  yytext.47_228 = yytext;
  sscanf (yytext.47_228, "%x", &yylval.num);
  _291 = yylval.num;
  if (_291 <= 127)
    goto <bb 61>;
  else
    goto <bb 66>;
;;    succ:       61
;;                66

;;   basic block 66, loop depth 0
;;    pred:       65
  if (_291 <= 32367)
    goto <bb 63>;
  else
    goto <bb 64>;
;;    succ:       63
;;                64

;;   basic block 67, loop depth 0
;;    pred:       46
<L132>:
  yytext.48_230 = yytext;
  sscanf (yytext.48_230, "%u", &yylval.num);
  _293 = yylval.num;
  if (_293 <= 127)
    goto <bb 61>;
  else
    goto <bb 68>;
;;    succ:       61
;;                68

;;   basic block 68, loop depth 0
;;    pred:       67
  if (_293 <= 32367)
    goto <bb 63>;
  else
    goto <bb 64>;
;;    succ:       63
;;                64

;;   basic block 69, loop depth 0
;;    pred:       46
<L123>:
  yytext.49_53 = yytext;
  _252 = yytext.49_53 + 1;
  sscanf (_252, "%c", &c);
  c.50_253 = c;
  _254 = (unsigned int) c.50_253;
  yylval.num = _254;
  c ={v} {CLOBBER};
  # DEBUG c => NULL
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 70, loop depth 0
;;    pred:       46
<L124>:
  yytext.51_234 = yytext;
  sscanf (yytext.51_234, "%g", &yylval.flt);
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 71, loop depth 0
;;    pred:       46
<L133>:
  yyleng.52_232 = yyleng;
  _295 = yyleng.52_232 + 18446744073709551615;
  _296 = malloc (_295);
  yylval.str = _296;
  if (_296 != 0B)
    goto <bb 72>;
  else
    goto <bb 155> (<L125>);
;;    succ:       72
;;                155

;;   basic block 72, loop depth 0
;;    pred:       71
  yytext.53_297 = yytext;
  _298 = yytext.53_297 + 1;
  # DEBUG __dest => _296
  # DEBUG __src => _298
  __builtin_strcpy (_296, _298);
  # DEBUG __dest => NULL
  # DEBUG __src => NULL
  _300 = yyleng.52_232 + 18446744073709551614;
  _301 = _296 + _300;
  *_301 = 0;
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 73, loop depth 0
;;    pred:       46
<L72>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 74, loop depth 0
;;    pred:       46
<L73>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 75, loop depth 0
;;    pred:       46
<L74>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 76, loop depth 0
;;    pred:       46
<L75>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 77, loop depth 0
;;    pred:       46
<L76>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 78, loop depth 0
;;    pred:       46
<L77>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 79, loop depth 0
;;    pred:       46
<L78>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 80, loop depth 0
;;    pred:       46
<L79>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 81, loop depth 0
;;    pred:       46
<L80>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 82, loop depth 0
;;    pred:       46
<L81>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 83, loop depth 0
;;    pred:       46
<L82>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 84, loop depth 0
;;    pred:       46
<L83>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 85, loop depth 0
;;    pred:       46
<L84>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 86, loop depth 0
;;    pred:       46
<L85>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 87, loop depth 0
;;    pred:       46
<L86>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 88, loop depth 0
;;    pred:       46
<L87>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 89, loop depth 0
;;    pred:       46
<L88>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 90, loop depth 0
;;    pred:       46
<L89>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 91, loop depth 0
;;    pred:       46
<L90>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 92, loop depth 0
;;    pred:       46
<L91>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 93, loop depth 0
;;    pred:       46
<L92>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 94, loop depth 0
;;    pred:       46
<L93>:
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 95, loop depth 0
;;    pred:       46
<L94>:
  yytext.14_238 = yytext;
  _239 = *yytext.14_238;
  _240 = (int) _239;
  goto <bb 155> (<L125>);
;;    succ:       155

;;   basic block 96, loop depth 1
;;    pred:       46
<L95>:
  yyerror ("Unknown character ignored");
  pretmp_1002 = yy_start;
  pretmp_1007 = yy_accept[pretmp_1002];
  pretmp_1012 = yy_base[pretmp_1002];
  goto <bb 16>;
;;    succ:       16

;;   basic block 97, loop depth 1
;;    pred:       46
<L96>:
  yyout.4_121 = yyout;
  yyleng.13_122 = yyleng;
  yytext.14_123 = yytext;
  fwrite (yytext.14_123, yyleng.13_122, 1, yyout.4_121);
  pretmp_1000 = yy_start;
  pretmp_1005 = yy_accept[pretmp_1000];
  pretmp_1010 = yy_base[pretmp_1000];
  goto <bb 16>;
;;    succ:       16

;;   basic block 98, loop depth 5
;;    pred:       46
<L100>:
  # DEBUG yy_act => 46
  yytext.14_132 = yytext;
  yytext.21_133 = (long int) yytext.14_132;
  _134 = yy_cp.9_91 - yytext.21_133;
  _135 = (int) _134;
  yy_amount_of_matched_text_136 = _135 + -1;
  # DEBUG yy_amount_of_matched_text => yy_amount_of_matched_text_136
  yy_hold_char.8_137 = yy_hold_char;
  *yy_cp_6 = yy_hold_char.8_137;
  yy_buffer_stack.6_139 = yy_buffer_stack;
  yy_buffer_stack_top.7_140 = yy_buffer_stack_top;
  _141 = yy_buffer_stack_top.7_140 * 8;
  _142 = yy_buffer_stack.6_139 + _141;
  _143 = *_142;
  _144 = _143->yy_buffer_status;
  if (_144 == 0)
    goto <bb 100>;
  else
    goto <bb 99>;
;;    succ:       100
;;                99

;;   basic block 99, loop depth 5
;;    pred:       98
  pretmp_928 = yy_n_chars;
  goto <bb 101>;
;;    succ:       101

;;   basic block 100, loop depth 5
;;    pred:       98
  yy_n_chars.22_150 = _143->yy_n_chars;
  yy_n_chars = yy_n_chars.22_150;
  yyin.2_156 = yyin;
  _143->yy_input_file = yyin.2_156;
  _162 = *_142;
  _162->yy_buffer_status = 1;
;;    succ:       101

;;   basic block 101, loop depth 5
;;    pred:       99
;;                100
  # prephitmp_927 = PHI <_143(99), _162(100)>
  # prephitmp_929 = PHI <pretmp_928(99), yy_n_chars.22_150(100)>
  dest_168 = prephitmp_927->yy_ch_buf;
  _170 = (sizetype) prephitmp_929;
  yy_c_buf_p.29_171 = dest_168 + _170;
  yy_c_buf_p.24_172 = yy_c_buf_p;
  if (yy_c_buf_p.29_171 >= yy_c_buf_p.24_172)
    goto <bb 102>;
  else
    goto <bb 110>;
;;    succ:       102
;;                110

;;   basic block 102, loop depth 4
;;    pred:       101
  yytext.14_205 = yytext;
  _206 = (sizetype) yy_amount_of_matched_text_136;
  yy_cp_207 = yytext.14_205 + _206;
  yy_c_buf_p = yy_cp_207;
  yy_current_state_210 = yy_get_previous_state ();
  # DEBUG yy_current_state => yy_current_state_210
  # DEBUG yy_current_state => yy_current_state_210
  # DEBUG yy_cp => yy_cp_207
  # DEBUG yy_c => 1
  _255 = yy_accept[yy_current_state_210];
  if (_255 != 0)
    goto <bb 103>;
  else
    goto <bb 104>;
;;    succ:       103
;;                104

;;   basic block 103, loop depth 4
;;    pred:       102
  yy_last_accepting_state = yy_current_state_210;
  yy_last_accepting_cpos = yy_cp_207;
;;    succ:       104

;;   basic block 104, loop depth 4
;;    pred:       102
;;                103
  # DEBUG yy_c => 1
  # DEBUG yy_current_state => yy_current_state_210
  _290 = yy_base[yy_current_state_210];
  _399 = (int) _290;
  _302 = _399 + 1;
  _562 = yy_chk[_302];
  _574 = (int) _562;
  if (yy_current_state_210 == _574)
    goto <bb 107>;
  else
    goto <bb 105>;
;;    succ:       107
;;                105

;;   basic block 105, loop depth 4
;;    pred:       104
  # yy_current_state_977 = PHI <yy_current_state_210(104)>
;;    succ:       106

;;   basic block 106, loop depth 5
;;    pred:       105
;;                106
  # yy_current_state_561 = PHI <yy_current_state_977(105), yy_current_state_263(106)>
  # DEBUG yy_c => 1
  # DEBUG yy_current_state => yy_current_state_561
  _262 = yy_def[yy_current_state_561];
  yy_current_state_263 = (yy_state_type) _262;
  # DEBUG yy_current_state => yy_current_state_263
  # DEBUG yy_c => 1
  # DEBUG yy_current_state => yy_current_state_263
  _257 = yy_base[yy_current_state_263];
  _258 = (int) _257;
  _259 = _258 + 1;
  _260 = yy_chk[_259];
  _261 = (int) _260;
  if (_261 == yy_current_state_263)
    goto <bb 107>;
  else
    goto <bb 106>;
;;    succ:       107
;;                106

;;   basic block 107, loop depth 4
;;    pred:       106
;;                104
  # _565 = PHI <_257(106), _290(104)>
  _264 = (unsigned int) _565;
  _265 = _264 + 1;
  _266 = yy_nxt[_265];
  yy_current_state_267 = (yy_state_type) _266;
  # DEBUG yy_current_state => yy_current_state_267
  # DEBUG D#1 => yy_current_state_267 == 101
  # DEBUG yy_is_jam => (int) D#1
  if (yy_current_state_267 != 101)
    goto <bb 108>;
  else
    goto <bb 156>;
;;    succ:       108
;;                156

;;   basic block 108, loop depth 4
;;    pred:       107
  # DEBUG yy_current_state => NULL
  # DEBUG yy_cp => NULL
  # DEBUG yy_next_state => NULL
  yy_cp_213 = yytext;
  # DEBUG yy_bp => yy_cp_213
  if (yy_current_state_267 != 0)
    goto <bb 109>;
  else
    goto <bb 35>;
;;    succ:       109
;;                35

;;   basic block 109, loop depth 3
;;    pred:       108
  yy_cp_214 = yy_cp_207 + 1;
  yy_c_buf_p = yy_cp_214;
  # DEBUG yy_cp => yy_cp_214
  # DEBUG yy_current_state => yy_current_state_267
  goto <bb 19>;
;;    succ:       19

;;   basic block 110, loop depth 5
;;    pred:       101
  # DEBUG dest => dest_168
  source_307 = yytext;
  # DEBUG source => source_307
  _310 = _170 + 1;
  _311 = dest_168 + _310;
  if (yy_c_buf_p.24_172 > _311)
    goto <bb 111>;
  else
    goto <bb 112>;
;;    succ:       111
;;                112

;;   basic block 111, loop depth 0
;;    pred:       110
  yy_fatal_error ("fatal flex scanner internal error--end of buffer missed");
;;    succ:      

;;   basic block 112, loop depth 5
;;    pred:       110
  _313 = prephitmp_927->yy_fill_buffer;
  if (_313 == 0)
    goto <bb 113>;
  else
    goto <bb 114>;
;;    succ:       113
;;                114

;;   basic block 113, loop depth 5
;;    pred:       112
  yy_c_buf_p.59_314 = (long int) yy_c_buf_p.24_172;
  yytext.61_315 = (long int) source_307;
  _316 = yy_c_buf_p.59_314 - yytext.61_315;
  if (_316 == 1)
    goto <bb 150> (<L108>);
  else
    goto <bb 152>;
;;    succ:       150
;;                152

;;   basic block 114, loop depth 5
;;    pred:       112
  yy_c_buf_p.59_317 = (long int) yy_c_buf_p.24_172;
  yytext.61_318 = (long int) source_307;
  _319 = yy_c_buf_p.59_317 - yytext.61_318;
  _320 = (long unsigned int) _319;
  number_to_move_321 = _320 + 18446744073709551615;
  # DEBUG number_to_move => number_to_move_321
  # DEBUG i => 0
  # DEBUG i => 0
  # DEBUG source => source_307
  # DEBUG dest => dest_168
  if (number_to_move_321 == 0)
    goto <bb 117>;
  else
    goto <bb 115>;
;;    succ:       117
;;                115

;;   basic block 115, loop depth 6
;;    pred:       114
;;                115
  # i_563 = PHI <0(114), i_328(115)>
  # DEBUG i => i_563
  # DEBUG source => source_307 + (sizetype) i_563
  # DEBUG dest => dest_168 + (sizetype) i_563
  # DEBUG D#17 => dest_168 + ((sizetype) i_563 + 1)
  # DEBUG dest => D#17
  # DEBUG D#18 => source_307 + ((sizetype) i_563 + 1)
  # DEBUG source => D#18
  _327 = MEM[base: source_307, index: i_563, offset: 0B];
  MEM[base: dest_168, index: i_563, offset: 0B] = _327;
  i_328 = i_563 + 1;
  # DEBUG i => i_328
  # DEBUG i => i_328
  # DEBUG source => D#18
  # DEBUG dest => D#17
  if (number_to_move_321 == i_328)
    goto <bb 116>;
  else
    goto <bb 115>;
;;    succ:       116
;;                115

;;   basic block 116, loop depth 5
;;    pred:       115
  pretmp_943 = *_142;
;;    succ:       117

;;   basic block 117, loop depth 5
;;    pred:       116
;;                114
  # prephitmp_944 = PHI <pretmp_943(116), prephitmp_927(114)>
  _330 = prephitmp_944->yy_buffer_status;
  if (_330 == 2)
    goto <bb 118>;
  else
    goto <bb 119>;
;;    succ:       118
;;                119

;;   basic block 118, loop depth 5
;;    pred:       117
  yy_n_chars = 0;
  prephitmp_944->yy_n_chars = 0;
  goto <bb 141>;
;;    succ:       141

;;   basic block 119, loop depth 5
;;    pred:       117
  _331 = prephitmp_944->yy_buf_size;
  _363 = _331 + 18446744073709551615;
  num_to_read_333 = _363 - number_to_move_321;
  # DEBUG num_to_read => num_to_read_333
  # DEBUG num_to_read => num_to_read_333
  if (num_to_read_333 != 0)
    goto <bb 129>;
  else
    goto <bb 120>;
;;    succ:       129
;;                120

;;   basic block 120, loop depth 5
;;    pred:       119
  # prephitmp_883 = PHI <prephitmp_944(119)>
  # prephitmp_885 = PHI <yy_c_buf_p.24_172(119)>
;;    succ:       121

;;   basic block 121, loop depth 6
;;    pred:       120
;;                128
  # prephitmp_986 = PHI <prephitmp_883(120), _361(128)>
  # prephitmp_987 = PHI <prephitmp_885(120), yy_c_buf_p.64_356(128)>
  # DEBUG num_to_read => 0
  # DEBUG D#14 => yy_buffer_stack
  # DEBUG D#13 => yy_buffer_stack_top
  # DEBUG D#12 => D#13 * 8
  # DEBUG D#11 => D#14 + D#12
  # DEBUG D#10 => *D#11
  # DEBUG b => D#10
  yy_c_buf_p.59_341 = (long int) prephitmp_987;
  _342 = prephitmp_986->yy_ch_buf;
  _343 = (long int) _342;
  _344 = yy_c_buf_p.59_341 - _343;
  yy_c_buf_p_offset_345 = (int) _344;
  # DEBUG yy_c_buf_p_offset => yy_c_buf_p_offset_345
  _346 = prephitmp_986->yy_is_our_buffer;
  if (_346 != 0)
    goto <bb 122>;
  else
    goto <bb 126>;
;;    succ:       122
;;                126

;;   basic block 122, loop depth 6
;;    pred:       121
  _347 = prephitmp_986->yy_buf_size;
  new_size_348 = _347 * 2;
  # DEBUG new_size => new_size_348
  if (new_size_348 == 0)
    goto <bb 123>;
  else
    goto <bb 124>;
;;    succ:       123
;;                124

;;   basic block 123, loop depth 6
;;    pred:       122
  _349 = _347 >> 3;
  _350 = _347 + _349;
  prephitmp_986->yy_buf_size = _350;
  goto <bb 125>;
;;    succ:       125

;;   basic block 124, loop depth 6
;;    pred:       122
  prephitmp_986->yy_buf_size = new_size_348;
;;    succ:       125

;;   basic block 125, loop depth 6
;;    pred:       123
;;                124
  # prephitmp_989 = PHI <_350(123), new_size_348(124)>
  _352 = prephitmp_989 + 2;
  # DEBUG ptr => _342
  # DEBUG size => _352
  _353 = realloc (_342, _352);
  # DEBUG ptr => NULL
  # DEBUG size => NULL
  prephitmp_986->yy_ch_buf = _353;
  if (_353 == 0B)
    goto <bb 127>;
  else
    goto <bb 128>;
;;    succ:       127
;;                128

;;   basic block 126, loop depth 0
;;    pred:       121
  prephitmp_986->yy_ch_buf = 0B;
;;    succ:       127

;;   basic block 127, loop depth 0
;;    pred:       125
;;                126
  yy_fatal_error ("fatal error - scanner input buffer overflow");
;;    succ:      

;;   basic block 128, loop depth 6
;;    pred:       125
  _355 = (sizetype) yy_c_buf_p_offset_345;
  yy_c_buf_p.64_356 = _353 + _355;
  yy_c_buf_p = yy_c_buf_p.64_356;
  _361 = *_142;
  _362 = _361->yy_buf_size;
  _372 = _362 + 18446744073709551615;
  num_to_read_364 = _372 - number_to_move_321;
  # DEBUG num_to_read => num_to_read_364
  # DEBUG num_to_read => num_to_read_364
  if (num_to_read_364 != 0)
    goto <bb 129>;
  else
    goto <bb 121>;
;;    succ:       129
;;                121

;;   basic block 129, loop depth 5
;;    pred:       128
;;                119
  # num_to_read_560 = PHI <num_to_read_364(128), num_to_read_333(119)>
  # prephitmp_961 = PHI <_361(128), prephitmp_944(119)>
  num_to_read_507 = MIN_EXPR <num_to_read_560, 8192>;
  # DEBUG num_to_read => num_to_read_507
  _370 = prephitmp_961->yy_is_interactive;
  if (_370 != 0)
    goto <bb 130>;
  else
    goto <bb 135>;
;;    succ:       130
;;                135

;;   basic block 130, loop depth 5
;;    pred:       129
  # n_414 = PHI <0(129)>
;;    succ:       131

;;   basic block 131, loop depth 6
;;    pred:       130
;;                157
  # n_304 = PHI <n_414(130), n_386(157)>
  # DEBUG n => n_304
  # DEBUG c => 42
  yyin.67_373 = yyin;
  c_374 = _IO_getc (yyin.67_373);
  # DEBUG c => c_374
  if (c_374 != -1)
    goto <bb 132>;
  else
    goto <bb 162>;
;;    succ:       132
;;                162

;;   basic block 132, loop depth 6
;;    pred:       131
  if (c_374 != 10)
    goto <bb 157>;
  else
    goto <bb 161>;
;;    succ:       157
;;                161

;;   basic block 133, loop depth 0
;;    pred:       162
;;                160
  yy_fatal_error ("input in flex scanner failed");
;;    succ:      

;;   basic block 134, loop depth 5
;;    pred:       161
;;                158
  # n_559 = PHI <n_393(161), n_555(158)>
  # prephitmp_985 = PHI <_390(161), prephitmp_981(158)>
  yy_n_chars.71_401 = (int) n_559;
  yy_n_chars = yy_n_chars.71_401;
  goto <bb 140>;
;;    succ:       140

;;   basic block 135, loop depth 5
;;    pred:       129
  _402 = __errno_location ();
  *_402 = 0;
;;    succ:       136

;;   basic block 136, loop depth 6
;;    pred:       135
;;                139
  # prephitmp_971 = PHI <prephitmp_961(135), pretmp_970(139)>
  yyin.67_403 = yyin;
  yytext.77_409 = prephitmp_971->yy_ch_buf;
  _410 = yytext.77_409 + number_to_move_321;
  # DEBUG __ptr => _410
  # DEBUG __size => 1
  # DEBUG __n => num_to_read_507
  # DEBUG __stream => yyin.67_403
  _417 = __fread_alias (_410, 1, num_to_read_507, yyin.67_403);
  # DEBUG __ptr => NULL
  # DEBUG __size => NULL
  # DEBUG __n => NULL
  # DEBUG __stream => NULL
  yy_n_chars.74_419 = (int) _417;
  yy_n_chars = yy_n_chars.74_419;
  if (yy_n_chars.74_419 == 0)
    goto <bb 137>;
  else
    goto <bb 159>;
;;    succ:       137
;;                159

;;   basic block 137, loop depth 6
;;    pred:       136
  yyin.67_420 = yyin;
  _421 = ferror (yyin.67_420);
  if (_421 != 0)
    goto <bb 160>;
  else
    goto <bb 138>;
;;    succ:       160
;;                138

;;   basic block 138, loop depth 5
;;    pred:       137
  pretmp_972 = yy_n_chars;
  goto <bb 159>;
;;    succ:       159

;;   basic block 139, loop depth 6
;;    pred:       160
  *_402 = 0;
  yyin.67_424 = yyin;
  clearerr (yyin.67_424);
  pretmp_964 = yy_buffer_stack;
  pretmp_966 = yy_buffer_stack_top;
  pretmp_968 = pretmp_966 * 8;
  pretmp_969 = pretmp_964 + pretmp_968;
  pretmp_970 = *pretmp_969;
  goto <bb 136>;
;;    succ:       136

;;   basic block 140, loop depth 5
;;    pred:       134
;;                159
  # prephitmp_963 = PHI <yy_n_chars.71_401(134), prephitmp_973(159)>
  # prephitmp_1064 = PHI <prephitmp_985(134), pretmp_1063(159)>
  _429 = *prephitmp_1064;
  _429->yy_n_chars = prephitmp_963;
  if (prephitmp_963 == 0)
    goto <bb 141>;
  else
    goto <bb 144>;
;;    succ:       141
;;                144

;;   basic block 141, loop depth 5
;;    pred:       140
;;                118
  if (number_to_move_321 == 0)
    goto <bb 142>;
  else
    goto <bb 143>;
;;    succ:       142
;;                143

;;   basic block 142, loop depth 5
;;    pred:       141
  # DEBUG ret_val => 1
  yyin.67_432 = yyin;
  yyrestart (yyin.67_432);
  pretmp_945 = yy_n_chars;
  pretmp_948 = yy_buffer_stack;
  pretmp_950 = yy_buffer_stack_top;
  pretmp_952 = pretmp_950 * 8;
  pretmp_954 = pretmp_948 + pretmp_952;
  pretmp_956 = *pretmp_954;
  goto <bb 144>;
;;    succ:       144

;;   basic block 143, loop depth 5
;;    pred:       141
  # DEBUG ret_val => 2
  yy_buffer_stack.55_433 = yy_buffer_stack;
  yy_buffer_stack_top.56_434 = yy_buffer_stack_top;
  _435 = yy_buffer_stack_top.56_434 * 8;
  _436 = yy_buffer_stack.55_433 + _435;
  _437 = *_436;
  _437->yy_buffer_status = 2;
  pretmp_946 = yy_n_chars;
;;    succ:       144

;;   basic block 144, loop depth 5
;;    pred:       140
;;                142
;;                143
  # ret_val_472 = PHI <0(140), 1(142), 2(143)>
  # prephitmp_947 = PHI <prephitmp_963(140), pretmp_945(142), pretmp_946(143)>
  # prephitmp_955 = PHI <prephitmp_1064(140), pretmp_954(142), _436(143)>
  # prephitmp_957 = PHI <_429(140), pretmp_956(142), _437(143)>
  # DEBUG ret_val => ret_val_472
  _438 = (unsigned int) number_to_move_321;
  yy_n_chars.75_440 = (unsigned int) prephitmp_947;
  _441 = _438 + yy_n_chars.75_440;
  yy_n_chars.76_442 = (int) _441;
  _443 = (long unsigned int) yy_n_chars.76_442;
  _449 = prephitmp_957->yy_buf_size;
  if (_443 > _449)
    goto <bb 145>;
  else
    goto <bb 147>;
;;    succ:       145
;;                147

;;   basic block 145, loop depth 5
;;    pred:       144
  _450 = prephitmp_947 >> 1;
  _451 = (unsigned int) _450;
  _452 = _441 + _451;
  new_size_453 = (int) _452;
  # DEBUG new_size => new_size_453
  _454 = (long unsigned int) new_size_453;
  yytext.77_455 = prephitmp_957->yy_ch_buf;
  # DEBUG ptr => yytext.77_455
  # DEBUG size => _454
  _456 = realloc (yytext.77_455, _454);
  # DEBUG ptr => NULL
  # DEBUG size => NULL
  prephitmp_957->yy_ch_buf = _456;
  _457 = *prephitmp_955;
  yytext.77_458 = _457->yy_ch_buf;
  if (yytext.77_458 == 0B)
    goto <bb 146>;
  else
    goto <bb 148>;
;;    succ:       146
;;                148

;;   basic block 146, loop depth 0
;;    pred:       145
  yy_fatal_error ("out of dynamic memory in yy_get_next_buffer()");
;;    succ:      

;;   basic block 147, loop depth 5
;;    pred:       144
  pretmp_959 = prephitmp_957->yy_ch_buf;
;;    succ:       148

;;   basic block 148, loop depth 5
;;    pred:       147
;;                145
  # prephitmp_960 = PHI <pretmp_959(147), yytext.77_458(145)>
  yy_n_chars = yy_n_chars.76_442;
  _461 = prephitmp_960 + _443;
  *_461 = 0;
  _462 = *prephitmp_955;
  yytext.77_463 = _462->yy_ch_buf;
  _464 = _443 + 1;
  _465 = yytext.77_463 + _464;
  *_465 = 0;
  _466 = *prephitmp_955;
  yytext.77_467 = _466->yy_ch_buf;
  yytext = yytext.77_467;
  # DEBUG new_size => NULL
  # DEBUG n => NULL
  # DEBUG c => NULL
  # DEBUG new_size => NULL
  # DEBUG yy_c_buf_p_offset => NULL
  # DEBUG b => NULL
  # DEBUG num_to_read => NULL
  # DEBUG ret_val => NULL
  # DEBUG i => NULL
  # DEBUG number_to_move => NULL
  # DEBUG source => NULL
  # DEBUG dest => NULL
  switch (ret_val_472) <default: <L114>, case 1: <L108>, case 2: <L142>>
;;    succ:       149
;;                151
;;                150

;;   basic block 149, loop depth 4
;;    pred:       148
<L142>:
  pretmp_934 = *prephitmp_955;
  pretmp_936 = pretmp_934->yy_ch_buf;
  pretmp_940 = pretmp_936 + _443;
  goto <bb 152>;
;;    succ:       152

;;   basic block 150, loop depth 5
;;    pred:       148
;;                113
  # prephitmp_942 = PHI <yytext.77_467(148), source_307(113)>
<L108>:
  # DEBUG new_size => NULL
  # DEBUG n => NULL
  # DEBUG c => NULL
  # DEBUG new_size => NULL
  # DEBUG yy_c_buf_p_offset => NULL
  # DEBUG b => NULL
  # DEBUG num_to_read => NULL
  # DEBUG ret_val => NULL
  # DEBUG i => NULL
  # DEBUG number_to_move => NULL
  # DEBUG source => NULL
  # DEBUG dest => NULL
  yy_c_buf_p = prephitmp_942;
  yy_start.1_201 = yy_start;
  _202 = yy_start.1_201 + -1;
  _203 = _202 / 2;
  yy_act_204 = _203 + 47;
  # DEBUG yy_act => yy_act_204
  goto <bb 46>;
;;    succ:       46

;;   basic block 151, loop depth 3
;;    pred:       148
<L114>:
  _177 = (sizetype) yy_amount_of_matched_text_136;
  yy_cp_178 = yytext.77_467 + _177;
  yy_c_buf_p = yy_cp_178;
  yy_current_state_181 = yy_get_previous_state ();
  # DEBUG yy_current_state => yy_current_state_181
  # DEBUG yy_cp => yy_cp_178
  yy_cp_183 = yytext;
  # DEBUG yy_bp => yy_cp_183
  goto <bb 19>;
;;    succ:       19

;;   basic block 152, loop depth 4
;;    pred:       149
;;                113
  # yy_cp_941 = PHI <pretmp_940(149), yy_c_buf_p.29_171(113)>
  # DEBUG new_size => NULL
  # DEBUG n => NULL
  # DEBUG c => NULL
  # DEBUG new_size => NULL
  # DEBUG yy_c_buf_p_offset => NULL
  # DEBUG b => NULL
  # DEBUG num_to_read => NULL
  # DEBUG ret_val => NULL
  # DEBUG i => NULL
  # DEBUG number_to_move => NULL
  # DEBUG source => NULL
  # DEBUG dest => NULL
  # DEBUG D#9 => yy_buffer_stack
  # DEBUG D#8 => yy_buffer_stack_top
  # DEBUG D#7 => D#8 * 8
  # DEBUG D#6 => D#9 + D#7
  # DEBUG D#5 => *D#6
  # DEBUG D#4 => D#5->yy_ch_buf
  # DEBUG D#3 => yy_n_chars
  # DEBUG D#2 => (sizetype) D#3
  yy_c_buf_p = yy_cp_941;
  yy_current_state_195 = yy_get_previous_state ();
  # DEBUG yy_current_state => yy_current_state_195
  # DEBUG yy_cp => D#4 + D#2
  yy_cp_197 = yytext;
  # DEBUG yy_bp => yy_cp_197
  pretmp_993 = yy_accept[yy_current_state_195];
  goto <bb 35>;
;;    succ:       35

;;   basic block 153, loop depth 0
;;    pred:       46
<L118>:
  yy_fatal_error ("fatal flex scanner internal error--no action found");
;;    succ:      

;;   basic block 154, loop depth 0
;;    pred:       46
<L141>:
;;    succ:       155

;;   basic block 155, loop depth 0
;;    pred:       64
;;                59
;;                63
;;                61
;;                71
;;                69
;;                70
;;                72
;;                154
;;                46
;;                47
;;                73
;;                74
;;                75
;;                76
;;                77
;;                78
;;                79
;;                80
;;                81
;;                82
;;                83
;;                84
;;                85
;;                86
;;                87
;;                88
;;                89
;;                90
;;                91
;;                92
;;                93
;;                94
;;                95
;;                56
;;                55
  # _13 = PHI <261(64), _288(59), 260(63), 259(61), 263(71), 259(69), 262(70), 263(72), 276(154), 277(46), 278(47), 279(73), 280(74), 281(75), 282(76), 283(77), 284(78), 285(79), 286(80), 287(81), 288(82), 289(83), 290(84), 291(85), 292(86), 293(87), 294(88), 295(89), 296(90), 123(91), 125(92), 91(93), 93(94), _240(95), 0(56), 0(55)>
<L125>:
  return _13;
;;    succ:       EXIT

;;   basic block 156, loop depth 4
;;    pred:       107
  # DEBUG yy_current_state => NULL
  # DEBUG yy_cp => NULL
  # DEBUG yy_next_state => NULL
  yy_cp_577 = yytext;
  # DEBUG yy_bp => yy_cp_577
  goto <bb 35>;
;;    succ:       35

;;   basic block 157, loop depth 6
;;    pred:       132
  # DEBUG c => c_374
  # DEBUG c => c_374
  yy_buffer_stack.55_376 = yy_buffer_stack;
  yy_buffer_stack_top.56_377 = yy_buffer_stack_top;
  _378 = yy_buffer_stack_top.56_377 * 8;
  _379 = yy_buffer_stack.55_376 + _378;
  _380 = *_379;
  yytext.77_381 = _380->yy_ch_buf;
  _876 = n_304 + number_to_move_321;
  _383 = yytext.77_381 + _876;
  _385 = (char) c_374;
  *_383 = _385;
  n_386 = n_304 + 1;
  # DEBUG n => n_386
  # DEBUG n => n_386
  # DEBUG c => c_374
  if (n_386 < num_to_read_507)
    goto <bb 131>;
  else
    goto <bb 158>;
;;    succ:       131
;;                158

;;   basic block 158, loop depth 5
;;    pred:       163
;;                157
  # n_555 = PHI <n_304(163), n_386(157)>
  # prephitmp_981 = PHI <pretmp_980(163), _379(157)>
  goto <bb 134>;
;;    succ:       134

;;   basic block 159, loop depth 5
;;    pred:       138
;;                136
  # prephitmp_973 = PHI <pretmp_972(138), yy_n_chars.74_419(136)>
  pretmp_1057 = yy_buffer_stack;
  pretmp_1059 = yy_buffer_stack_top;
  pretmp_1061 = pretmp_1059 * 8;
  pretmp_1063 = pretmp_1057 + pretmp_1061;
  goto <bb 140>;
;;    succ:       140

;;   basic block 160, loop depth 6
;;    pred:       137
  _423 = *_402;
  if (_423 != 4)
    goto <bb 133>;
  else
    goto <bb 139>;
;;    succ:       133
;;                139

;;   basic block 161, loop depth 5
;;    pred:       132
  # DEBUG c => 10
  # DEBUG c => 10
  # DEBUG c => 10
  yy_buffer_stack.55_387 = yy_buffer_stack;
  yy_buffer_stack_top.56_388 = yy_buffer_stack_top;
  _389 = yy_buffer_stack_top.56_388 * 8;
  _390 = yy_buffer_stack.55_387 + _389;
  _391 = *_390;
  yytext.77_392 = _391->yy_ch_buf;
  n_393 = n_304 + 1;
  # DEBUG n => n_393
  _394 = n_304 + number_to_move_321;
  _395 = yytext.77_392 + _394;
  *_395 = 10;
  # DEBUG n => n_393
  goto <bb 134>;
;;    succ:       134

;;   basic block 162, loop depth 5
;;    pred:       131
  # DEBUG c => -1
  # DEBUG c => -1
  # DEBUG c => -1
  # DEBUG n => n_304
  yyin.67_397 = yyin;
  _398 = ferror (yyin.67_397);
  if (_398 != 0)
    goto <bb 133>;
  else
    goto <bb 163>;
;;    succ:       133
;;                163

;;   basic block 163, loop depth 5
;;    pred:       162
  pretmp_974 = yy_buffer_stack;
  pretmp_976 = yy_buffer_stack_top;
  pretmp_978 = pretmp_976 * 8;
  pretmp_980 = pretmp_974 + pretmp_978;
  goto <bb 158>;
;;    succ:       158

}


Partition 0: size 1 align 1
	c
Inserting a value copy on edge BB50->BB16 : PART.234 = 40
Inserting a value copy on edge BB50->BB16 : PART.256 = 2
Inserting a value copy on edge BB50->BB16 : PART.254 = 5
Inserting a value copy on edge BB52->BB16 : PART.234 = 0
Inserting a value copy on edge BB52->BB16 : PART.256 = 0
Inserting a value copy on edge BB52->BB16 : PART.254 = 1
Inserting a value copy on edge BB53->BB16 : PART.234 = 37
Inserting a value copy on edge BB53->BB16 : PART.256 = 7
Inserting a value copy on edge BB53->BB16 : PART.254 = 3
Inserting a value copy on edge BB54->BB16 : PART.234 = 0
Inserting a value copy on edge BB54->BB16 : PART.256 = 0
Inserting a value copy on edge BB54->BB16 : PART.254 = 1
Inserting a partition copy on edge BB17->BB18 :PART.0 = PART.254
Inserting a partition copy on edge BB17->BB18 :PART.1 = PART.231
Inserting a partition copy on edge BB18->BB20 :PART.2 = PART.1
Inserting a value copy on edge BB20->BB21 : PART.226 = 0
Inserting a value copy on edge BB20->BB21 : PART.228 = 0
Inserting a partition copy on edge BB22->BB23 :PART.227 = PART.0
Inserting a partition copy on edge BB22->BB23 :PART.229 = PART.1
Inserting a value copy on edge BB22->BB23 : PART.226 = 1
Inserting a value copy on edge BB22->BB23 : PART.228 = 1
Inserting a value copy on edge BB114->BB115 : PART.140 = 0
Inserting a partition copy on edge BB124->BB125 :PART.153 = PART.151
Inserting a value copy on edge BB129->BB130 : PART.125 = 0
Inserting a partition copy on edge BB161->BB134 :PART.125 = PART.177
Inserting a value copy on edge BB140->BB144 : PART.221 = 0
Inserting a value copy on edge BB142->BB144 : PART.221 = 1
Inserting a value copy on edge BB143->BB144 : PART.221 = 2
Inserting a partition copy on edge BB113->BB150 :PART.219 = PART.126
Inserting a partition copy on edge BB149->BB152 :PART.1 = PART.237
Inserting a partition copy on edge BB113->BB152 :PART.1 = PART.71
Inserting a value copy on edge BB64->BB155 : PART.5 = 261
Inserting a value copy on edge BB63->BB155 : PART.5 = 260
Inserting a value copy on edge BB61->BB155 : PART.5 = 259
Inserting a value copy on edge BB71->BB155 : PART.5 = 263
Inserting a value copy on edge BB69->BB155 : PART.5 = 259
Inserting a value copy on edge BB70->BB155 : PART.5 = 262
Inserting a value copy on edge BB72->BB155 : PART.5 = 263
Inserting a value copy on edge BB154->BB155 : PART.5 = 276
Inserting a value copy on edge BB46->BB155 : PART.5 = 277
Inserting a value copy on edge BB47->BB155 : PART.5 = 278
Inserting a value copy on edge BB73->BB155 : PART.5 = 279
Inserting a value copy on edge BB74->BB155 : PART.5 = 280
Inserting a value copy on edge BB75->BB155 : PART.5 = 281
Inserting a value copy on edge BB76->BB155 : PART.5 = 282
Inserting a value copy on edge BB77->BB155 : PART.5 = 283
Inserting a value copy on edge BB78->BB155 : PART.5 = 284
Inserting a value copy on edge BB79->BB155 : PART.5 = 285
Inserting a value copy on edge BB80->BB155 : PART.5 = 286
Inserting a value copy on edge BB81->BB155 : PART.5 = 287
Inserting a value copy on edge BB82->BB155 : PART.5 = 288
Inserting a value copy on edge BB83->BB155 : PART.5 = 289
Inserting a value copy on edge BB84->BB155 : PART.5 = 290
Inserting a value copy on edge BB85->BB155 : PART.5 = 291
Inserting a value copy on edge BB86->BB155 : PART.5 = 292
Inserting a value copy on edge BB87->BB155 : PART.5 = 293
Inserting a value copy on edge BB88->BB155 : PART.5 = 294
Inserting a value copy on edge BB89->BB155 : PART.5 = 295
Inserting a value copy on edge BB90->BB155 : PART.5 = 296
Inserting a value copy on edge BB91->BB155 : PART.5 = 123
Inserting a value copy on edge BB92->BB155 : PART.5 = 125
Inserting a value copy on edge BB93->BB155 : PART.5 = 91
Inserting a value copy on edge BB94->BB155 : PART.5 = 93
Inserting a value copy on edge BB56->BB155 : PART.5 = 0
Inserting a value copy on edge BB55->BB155 : PART.5 = 0

;; Generating RTL for gimple basic block 2

;; if (_28 == 0)

(insn 71 70 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("_ZL7yy_init") [flags 0x2]  <var_decl 0x7f88bc080510 yy_init>) [2 yy_init+0 S4 A32])
            (const_int 0 [0]))) lex.yy.c:792 -1
     (nil))

(jump_insn 72 71 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:792 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 3

;; _907 = yy_c_buf_p;

(insn 74 73 0 (set (reg/f:DI 318 [ D.6783 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) -1
     (nil))

;; _909 = yy_hold_char;

(insn 75 74 0 (set (reg:QI 320 [ D.6789 ])
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 78 77 79 116 "" [0 uses])

(note 79 78 0 NOTE_INSN_BASIC_BLOCK)

;; yy_init = 1;

(insn 80 79 0 (set (mem/c:SI (symbol_ref:DI ("_ZL7yy_init") [flags 0x2]  <var_decl 0x7f88bc080510 yy_init>) [2 yy_init+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:794 -1
     (nil))

;; if (_30 == 0)

(insn 81 80 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
            (const_int 0 [0]))) lex.yy.c:800 -1
     (nil))

(jump_insn 82 81 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:800 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 5

;; yy_start = 1;

(insn 84 83 0 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:801 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 85 84 86 118 "" [0 uses])

(note 86 85 0 NOTE_INSN_BASIC_BLOCK)

;; if (_32 == 0B)

(insn 87 86 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
            (const_int 0 [0]))) lex.yy.c:803 -1
     (nil))

(jump_insn 88 87 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:803 -1
     (int_list:REG_BR_PROB 8500 (nil)))

;; Generating RTL for gimple basic block 7

;; yyin = _33;

(insn 90 89 91 (set (reg/f:DI 349)
        (mem/f/c:DI (symbol_ref:DI ("stdin") [flags 0x40]  <var_decl 0x7f88bc3c9d80 stdin>) [1 stdin+0 S8 A64])) lex.yy.c:804 -1
     (nil))

(insn 91 90 0 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 349)) lex.yy.c:804 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 92 91 93 119 "" [0 uses])

(note 93 92 0 NOTE_INSN_BASIC_BLOCK)

;; if (_35 == 0B)

(insn 94 93 95 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])
            (const_int 0 [0]))) lex.yy.c:806 -1
     (nil))

(jump_insn 95 94 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:806 -1
     (int_list:REG_BR_PROB 8500 (nil)))

;; Generating RTL for gimple basic block 9

;; yyout = _36;

(insn 97 96 98 (set (reg/f:DI 350)
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f88bc3c9e10 stdout>) [1 stdout+0 S8 A64])) lex.yy.c:807 -1
     (nil))

(insn 98 97 0 (set (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])
        (reg/f:DI 350)) lex.yy.c:807 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 99 98 100 120 "" [0 uses])

(note 100 99 0 NOTE_INSN_BASIC_BLOCK)

;; _38 = yy_buffer_stack;

(insn 101 100 0 (set (reg/f:DI 99 [ D.6780 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:809 -1
     (nil))

;; if (_38 == 0B)

(insn 102 101 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 99 [ D.6780 ])
            (const_int 0 [0]))) lex.yy.c:809 -1
     (nil))

(jump_insn 103 102 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:809 -1
     (int_list:REG_BR_PROB 672 (nil)))

;; Generating RTL for gimple basic block 11

;; _42 = _38 + _41;

(insn 105 104 106 (set (reg:DI 352)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:809 -1
     (nil))

(insn 106 105 107 (parallel [
            (set (reg:DI 351 [ D.6781 ])
                (ashift:DI (reg:DI 352)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:809 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))

(insn 107 106 0 (parallel [
            (set (reg/f:DI 102 [ D.6780 ])
                (plus:DI (reg/f:DI 99 [ D.6780 ])
                    (reg:DI 351 [ D.6781 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:809 -1
     (nil))

;; _43 = *_42;

(insn 108 107 0 (set (reg/f:DI 103 [ D.6782 ])
        (mem/f:DI (reg/f:DI 102 [ D.6780 ]) [1 *_42+0 S8 A64])) lex.yy.c:809 -1
     (nil))

;; if (_43 == 0B)

(insn 109 108 110 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 103 [ D.6782 ])
            (const_int 0 [0]))) lex.yy.c:809 -1
     (nil))

(jump_insn 110 109 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:809 -1
     (int_list:REG_BR_PROB 8500 (nil)))

;; Generating RTL for gimple basic block 12

;; 

(code_label 111 110 112 121 "" [0 uses])

(note 112 111 0 NOTE_INSN_BASIC_BLOCK)

;; yyensure_buffer_stack ();

(call_insn 113 112 0 (call (mem:QI (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>) [0 yyensure_buffer_stack S1 A8])
        (const_int 0 [0])) lex.yy.c:810 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>)
        (nil))
    (nil))

;; _48 = _45 + _47;

(insn 114 113 115 (set (reg:DI 354)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:811 -1
     (nil))

(insn 115 114 116 (parallel [
            (set (reg:DI 353 [ D.6781 ])
                (ashift:DI (reg:DI 354)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:811 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))

(insn 116 115 117 (set (reg/f:DI 355)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:811 -1
     (nil))

(insn 117 116 0 (parallel [
            (set (reg/f:DI 107 [ D.6780 ])
                (plus:DI (reg:DI 353 [ D.6781 ])
                    (reg/f:DI 355)))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:811 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
            (reg:DI 353 [ D.6781 ]))
        (nil)))

;; _51 = yy_create_buffer (_49, 16384);

(insn 118 117 119 (set (reg:SI 4 si)
        (const_int 16384 [0x4000])) lex.yy.c:812 -1
     (nil))

(insn 119 118 120 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:812 -1
     (nil))

(call_insn 120 119 121 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>) [0 yy_create_buffer S1 A8])
            (const_int 0 [0]))) lex.yy.c:812 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 121 120 0 (set (reg/f:DI 109 [ D.6782 ])
        (reg:DI 0 ax)) lex.yy.c:812 -1
     (nil))

;; *_48 = _51;

(insn 122 121 0 (set (mem/f:DI (reg/f:DI 107 [ D.6780 ]) [1 *_48+0 S8 A64])
        (reg/f:DI 109 [ D.6782 ])) lex.yy.c:812 -1
     (nil))

;; _1030 = _1024 + _1028;

(insn 123 122 124 (set (reg:DI 357)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) -1
     (nil))

(insn 124 123 125 (parallel [
            (set (reg:DI 356 [ D.6781 ])
                (ashift:DI (reg:DI 357)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))

(insn 125 124 126 (set (reg/f:DI 358)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) -1
     (nil))

(insn 126 125 0 (parallel [
            (set (reg/f:DI 102 [ D.6780 ])
                (plus:DI (reg:DI 356 [ D.6781 ])
                    (reg/f:DI 358)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
            (reg:DI 356 [ D.6781 ]))
        (nil)))

;; _1032 = *_1030;

(insn 127 126 0 (set (reg/f:DI 103 [ D.6782 ])
        (mem/f:DI (reg/f:DI 102 [ D.6780 ]) [1 *_1030+0 S8 A64])) -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 128 127 129 122 "" [0 uses])

(note 129 128 0 NOTE_INSN_BASIC_BLOCK)

;; yy_n_chars = _247;

(insn 130 129 131 (set (reg:SI 359)
        (mem:SI (plus:DI (reg/f:DI 103 [ D.6782 ])
                (const_int 32 [0x20])) [2 _1033->yy_n_chars+0 S4 A64])) lex.yy.c:1642 -1
     (nil))

(insn 131 130 0 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 359)) lex.yy.c:1642 -1
     (nil))

;; _248 = _1033->yy_buf_pos;

(insn 132 131 0 (set (reg/f:DI 318 [ D.6783 ])
        (mem/f:DI (plus:DI (reg/f:DI 103 [ D.6782 ])
                (const_int 16 [0x10])) [1 _1033->yy_buf_pos+0 S8 A64])) lex.yy.c:1643 -1
     (nil))

;; yy_c_buf_p = _248;

(insn 133 132 0 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 318 [ D.6783 ])) lex.yy.c:1643 -1
     (nil))

;; yytext = _248;

(insn 134 133 0 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 318 [ D.6783 ])) lex.yy.c:1643 -1
     (nil))

;; yyin = _250;

(insn 135 134 136 (set (reg/f:DI 360)
        (mem/f:DI (reg/f:DI 102 [ D.6780 ]) [1 *_1031+0 S8 A64])) lex.yy.c:1644 -1
     (nil))

(insn 136 135 137 (set (reg/f:DI 361)
        (mem/f:DI (reg/f:DI 360) [1 _249->yy_input_file+0 S8 A64])) lex.yy.c:1644 -1
     (nil))

(insn 137 136 0 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 361)) lex.yy.c:1644 -1
     (nil))

;; _251 = *_248;

(insn 138 137 0 (set (reg:QI 320 [ D.6789 ])
        (mem:QI (reg/f:DI 318 [ D.6783 ]) [0 *_248+0 S1 A8])) lex.yy.c:1645 -1
     (nil))

;; yy_hold_char = _251;

(insn 139 138 0 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 320 [ D.6789 ])) lex.yy.c:1645 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; 

(code_label 140 139 141 117 "" [0 uses])

(note 141 140 0 NOTE_INSN_BASIC_BLOCK)

;; _1034 = yy_start;

(insn 142 141 0 (set (reg:SI 341 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _1036 = yy_accept[_1034];

(insn 143 142 144 (set (reg/f:DI 362)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) -1
     (nil))

(insn 144 143 145 (set (reg:DI 363)
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) -1
     (nil))

(insn 145 144 0 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 363)
                    (const_int 2 [0x2]))
                (reg/f:DI 362)) [3 yy_accept S2 A16])) -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _1038 = yy_base[_1034];

(insn 146 145 147 (set (reg/f:DI 364)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) -1
     (nil))

(insn 147 146 148 (set (reg:DI 365)
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) -1
     (nil))

(insn 148 147 0 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 365)
                    (const_int 2 [0x2]))
                (reg/f:DI 364)) [3 yy_base S2 A16])) -1
     (nil))

;; Generating RTL for gimple basic block 15

;; _1001 = yy_start;

(insn 152 151 0 (set (reg:SI 341 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _1006 = yy_accept[_1001];

(insn 153 152 154 (set (reg/f:DI 366)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) -1
     (nil))

(insn 154 153 155 (set (reg:DI 367)
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) -1
     (nil))

(insn 155 154 0 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 367)
                    (const_int 2 [0x2]))
                (reg/f:DI 366)) [3 yy_accept S2 A16])) -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _1011 = yy_base[_1001];

(insn 156 155 157 (set (reg/f:DI 368)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) -1
     (nil))

(insn 157 156 158 (set (reg:DI 369)
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) -1
     (nil))

(insn 158 157 0 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 369)
                    (const_int 2 [0x2]))
                (reg/f:DI 368)) [3 yy_base S2 A16])) -1
     (nil))

;; Generating RTL for gimple basic block 16

;; _911 = yy_c_buf_p;

(insn 160 159 0 (set (reg/f:DI 318 [ D.6783 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) -1
     (nil))

;; _913 = yy_hold_char;

(insn 161 160 0 (set (reg:QI 320 [ D.6789 ])
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) -1
     (nil))

;; Generating RTL for gimple basic block 17

;; 

(code_label 162 161 163 123 "" [0 uses])

(note 163 162 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 18

;; # DEBUG D#16 => yy_c_buf_p

(debug_insn 165 164 0 (var_location:DI D#16 (const_int 0 [0])) lex.yy.c:827 -1
     (nil))
;; # DEBUG yy_cp => D#16

(debug_insn 166 165 0 (var_location:DI yy_cp (const_int 0 [0])) lex.yy.c:827 -1
     (nil))
;; *yy_cp_916 = _918;

(insn 167 166 0 (set (mem:QI (reg/v/f:DI 88 [ yy_cp ]) [0 *yy_cp_916+0 S1 A8])
        (reg:QI 320 [ D.6789 ])) lex.yy.c:830 -1
     (nil))

;; # DEBUG yy_bp => D#16

(debug_insn 168 167 0 (var_location:DI yy_bp (const_int 0 [0])) lex.yy.c:835 -1
     (nil))
;; # DEBUG D#15 => yy_start

(debug_insn 169 168 0 (var_location:SI D#15 (const_int 0 [0])) lex.yy.c:837 -1
     (nil))
;; # DEBUG yy_current_state => D#15

(debug_insn 170 169 0 (var_location:SI yy_current_state (const_int 0 [0])) lex.yy.c:837 -1
     (nil))
;; Generating RTL for gimple basic block 19

;; _919 = *yy_cp_147;

(insn 174 173 0 (set (reg:QI 320 [ D.6789 ])
        (mem:QI (reg/v/f:DI 88 [ yy_cp ]) [0 *yy_cp_147+0 S1 A8])) -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _1047 = yy_accept[yy_current_state_57];

(insn 175 174 176 (set (reg/f:DI 370)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) -1
     (nil))

(insn 176 175 177 (set (reg:DI 371)
        (sign_extend:DI (reg/v:SI 87 [ yy_current_state ]))) -1
     (nil))

(insn 177 176 0 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 371)
                    (const_int 2 [0x2]))
                (reg/f:DI 370)) [3 yy_accept S2 A16])) -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _1049 = yy_base[yy_current_state_57];

(insn 178 177 179 (set (reg/f:DI 372)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) -1
     (nil))

(insn 179 178 180 (set (reg:DI 373)
        (sign_extend:DI (reg/v:SI 87 [ yy_current_state ]))) -1
     (nil))

(insn 180 179 0 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 373)
                    (const_int 2 [0x2]))
                (reg/f:DI 372)) [3 yy_base S2 A16])) -1
     (nil))

;; Generating RTL for gimple basic block 20

;; 

(code_label 181 180 182 124 "" [0 uses])

(note 182 181 0 NOTE_INSN_BASIC_BLOCK)

;; yy_last_accepting_state_lsm.193_859 = yy_last_accepting_state;

(insn 183 182 0 (set (reg:SI 314 [ yy_last_accepting_state_lsm.193 ])
        (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])) -1
     (nil))

;; yy_last_accepting_cpos_lsm.191_857 = yy_last_accepting_cpos;

(insn 184 183 0 (set (reg/f:DI 316 [ yy_last_accepting_cpos_lsm.191 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])) -1
     (nil))

;; Generating RTL for gimple basic block 21

;; # DEBUG yy_bp => yy_cp_118

(debug_insn 186 185 0 (var_location:DI yy_bp (const_int 0 [0])) -1
     (nil))
;; # DEBUG yy_cp => yy_cp_4

(debug_insn 187 186 0 (var_location:DI yy_cp (const_int 0 [0])) -1
     (nil))
;; # DEBUG yy_current_state => yy_current_state_1

(debug_insn 188 187 0 (var_location:SI yy_current_state (const_int 0 [0])) -1
     (nil))Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223

;; yy_c_62 = yy_ec[_61];

(insn 189 188 190 (set (reg/f:DI 374)
        (symbol_ref:DI ("_ZL5yy_ec") [flags 0x2]  <var_decl 0x7f88bc080b40 yy_ec>)) lex.yy.c:841 -1
     (nil))

(insn 190 189 191 (set (reg:SI 375 [ D.6785 ])
        (zero_extend:SI (reg:QI 320 [ D.6789 ]))) lex.yy.c:841 -1
     (nil))

(insn 191 190 192 (set (reg:DI 376)
        (zero_extend:DI (reg:SI 375 [ D.6785 ]))) lex.yy.c:841 -1
     (nil))

(insn 192 191 0 (set (reg/v:QI 91 [ yy_c ])
        (mem/u/j:QI (plus:DI (reg/f:DI 374)
                (reg:DI 376)) [0 yy_ec S1 A8])) lex.yy.c:841 -1
     (nil))

;; # DEBUG yy_c => yy_c_62

(debug_insn 193 192 0 (var_location:QI yy_c (const_int 0 [0])) lex.yy.c:841 -1
     (nil))
;; if (_1052 != 0)

(insn 194 193 195 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 343 [ D.6786 ])
            (const_int 0 [0]))) lex.yy.c:842 -1
     (nil))

(jump_insn 195 194 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:842 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 22

;; Generating RTL for gimple basic block 23

;; 

(code_label 197 196 198 125 "" [0 uses])

(note 198 197 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 24
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _925 = yy_base[yy_current_state_73];

(insn 202 201 203 (set (reg/f:DI 377)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) -1
     (nil))

(insn 203 202 204 (set (reg:DI 378)
        (sign_extend:DI (reg/v:SI 87 [ yy_current_state ]))) -1
     (nil))

(insn 204 203 0 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 378)
                    (const_int 2 [0x2]))
                (reg/f:DI 377)) [3 yy_base S2 A16])) -1
     (nil))

;; Generating RTL for gimple basic block 25

;; 

(code_label 205 204 206 126 "" [0 uses])

(note 206 205 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG yy_c => yy_c_11

(debug_insn 207 206 0 (var_location:QI yy_c (const_int 0 [0])) -1
     (nil))
;; # DEBUG yy_current_state => yy_current_state_2

(debug_insn 208 207 0 (var_location:SI yy_current_state (const_int 0 [0])) -1
     (nil))Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; if (yy_current_state_2 == _71)

(insn 209 208 210 (set (reg/f:DI 379)
        (symbol_ref:DI ("_ZL6yy_chk") [flags 0x2]  <var_decl 0x7f88bc0806c0 yy_chk>)) lex.yy.c:847 -1
     (nil))

(insn 210 209 211 (set (reg:SI 380 [ D.6777 ])
        (zero_extend:SI (reg:HI 321 [ D.6787 ]))) lex.yy.c:847 -1
     (nil))

(insn 211 210 212 (set (reg:SI 381 [ D.6777 ])
        (zero_extend:SI (reg/v:QI 91 [ yy_c ]))) lex.yy.c:847 -1
     (nil))

(insn 212 211 213 (parallel [
            (set (reg:SI 382 [ D.6777 ])
                (plus:SI (reg:SI 380 [ D.6777 ])
                    (reg:SI 381 [ D.6777 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:847 -1
     (nil))

(insn 213 212 214 (set (reg:DI 383)
        (sign_extend:DI (reg:SI 382 [ D.6777 ]))) lex.yy.c:847 -1
     (nil))

(insn 214 213 215 (set (reg:SI 384 [ D.6777 ])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 383)
                        (const_int 2 [0x2]))
                    (reg/f:DI 379)) [3 yy_chk S2 A16]))) lex.yy.c:847 -1
     (nil))

(insn 215 214 216 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ yy_current_state ])
            (reg:SI 384 [ D.6777 ]))) lex.yy.c:847 -1
     (nil))

(jump_insn 216 215 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:847 -1
     (int_list:REG_BR_PROB 900 (nil)))

;; Generating RTL for gimple basic block 26
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _72 = yy_def[yy_current_state_2];

(insn 218 217 219 (set (reg/f:DI 385)
        (symbol_ref:DI ("_ZL6yy_def") [flags 0x2]  <var_decl 0x7f88bc080090 yy_def>)) lex.yy.c:849 -1
     (nil))

(insn 219 218 220 (set (reg:DI 386)
        (sign_extend:DI (reg/v:SI 87 [ yy_current_state ]))) lex.yy.c:849 -1
     (nil))

(insn 220 219 0 (set (reg:HI 118 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 386)
                    (const_int 2 [0x2]))
                (reg/f:DI 385)) [3 yy_def S2 A16])) lex.yy.c:849 -1
     (nil))

;; yy_current_state_73 = (yy_state_type) _72;

(insn 221 220 0 (set (reg/v:SI 87 [ yy_current_state ])
        (sign_extend:SI (reg:HI 118 [ D.6786 ]))) lex.yy.c:849 -1
     (nil))

;; # DEBUG yy_current_state => yy_current_state_73

(debug_insn 222 221 0 (var_location:SI yy_current_state (const_int 0 [0])) lex.yy.c:849 -1
     (nil))
;; if (yy_current_state_73 > 101)

(insn 224 222 225 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 87 [ yy_current_state ])
            (const_int 101 [0x65]))) lex.yy.c:850 -1
     (nil))

(jump_insn 225 224 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 223)
            (pc))) lex.yy.c:850 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 27

;; _74 = (unsigned int) yy_c_11;

(insn 227 226 0 (set (reg:SI 119 [ D.6785 ])
        (zero_extend:SI (reg/v:QI 91 [ yy_c ]))) lex.yy.c:851 -1
     (nil))
Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:114, generic-match.c:6569
Applying pattern match.pd:49, generic-match.c:3223

;; yy_c_75 = yy_meta[_74];

(insn 228 227 229 (set (reg/f:DI 387)
        (symbol_ref:DI ("_ZL7yy_meta") [flags 0x2]  <var_decl 0x7f88bc080cf0 yy_meta>)) lex.yy.c:851 -1
     (nil))

(insn 229 228 230 (set (reg:DI 388)
        (zero_extend:DI (reg:SI 119 [ D.6785 ]))) lex.yy.c:851 -1
     (nil))

(insn 230 229 0 (set (reg/v:QI 91 [ yy_c ])
        (mem/u/j:QI (plus:DI (reg/f:DI 387)
                (reg:DI 388)) [0 yy_meta S1 A8])) lex.yy.c:851 -1
     (nil))

;; # DEBUG yy_c => yy_c_75

(debug_insn 231 230 0 (var_location:QI yy_c (const_int 0 [0])) lex.yy.c:851 -1
     (nil))
;; Generating RTL for gimple basic block 28

;; 

(code_label 234 233 235 127 "" [0 uses])

(note 235 234 0 NOTE_INSN_BASIC_BLOCK)
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; yy_current_state_81 = (yy_state_type) _80;

(insn 236 235 237 (set (reg/f:DI 389)
        (symbol_ref:DI ("_ZL6yy_nxt") [flags 0x2]  <var_decl 0x7f88bc0803f0 yy_nxt>)) lex.yy.c:853 -1
     (nil))

(insn 237 236 238 (set (reg:SI 390 [ D.6785 ])
        (zero_extend:SI (reg:HI 321 [ D.6787 ]))) lex.yy.c:853 -1
     (nil))

(insn 238 237 239 (set (reg:SI 391 [ D.6785 ])
        (zero_extend:SI (reg/v:QI 91 [ yy_c ]))) lex.yy.c:853 -1
     (nil))

(insn 239 238 240 (parallel [
            (set (reg:SI 392 [ D.6785 ])
                (plus:SI (reg:SI 390 [ D.6785 ])
                    (reg:SI 391 [ D.6785 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:853 -1
     (nil))

(insn 240 239 241 (set (reg:DI 393)
        (zero_extend:DI (reg:SI 392 [ D.6785 ]))) lex.yy.c:853 -1
     (nil))

(insn 241 240 0 (set (reg/v:SI 87 [ yy_current_state ])
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 393)
                        (const_int 2 [0x2]))
                    (reg/f:DI 389)) [3 yy_nxt S2 A16]))) lex.yy.c:853 -1
     (nil))

;; # DEBUG yy_current_state => yy_current_state_81

(debug_insn 242 241 0 (var_location:SI yy_current_state (const_int 0 [0])) lex.yy.c:853 -1
     (nil))
;; yy_cp_82 = yy_cp_4 + 1;

(insn 243 242 0 (parallel [
            (set (reg/v/f:DI 88 [ yy_cp ])
                (plus:DI (reg/v/f:DI 88 [ yy_cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:854 -1
     (nil))

;; # DEBUG yy_cp => yy_cp_82

(debug_insn 244 243 0 (var_location:DI yy_cp (const_int 0 [0])) lex.yy.c:854 -1
     (nil))Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _83 = yy_base[yy_current_state_81];

(insn 245 244 246 (set (reg/f:DI 394)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) lex.yy.c:856 -1
     (nil))

(insn 246 245 247 (set (reg:DI 395)
        (sign_extend:DI (reg/v:SI 87 [ yy_current_state ]))) lex.yy.c:856 -1
     (nil))

(insn 247 246 0 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 395)
                    (const_int 2 [0x2]))
                (reg/f:DI 394)) [3 yy_base S2 A16])) lex.yy.c:856 -1
     (nil))

;; if (_83 == 190)

(insn 248 247 249 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 321 [ D.6787 ])
            (const_int 190 [0xbe]))) lex.yy.c:856 -1
     (nil))

(jump_insn 249 248 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:856 -1
     (int_list:REG_BR_PROB 900 (nil)))

;; Generating RTL for gimple basic block 29

;; _921 = MEM[base: yy_cp_82, offset: 0B];

(insn 251 250 0 (set (reg:QI 320 [ D.6789 ])
        (mem:QI (reg/v/f:DI 88 [ yy_cp ]) [0 MEM[base: yy_cp_82, offset: 0B]+0 S1 A8])) -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _1051 = yy_accept[yy_current_state_81];

(insn 252 251 253 (set (reg/f:DI 396)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) -1
     (nil))

(insn 253 252 254 (set (reg:DI 397)
        (sign_extend:DI (reg/v:SI 87 [ yy_current_state ]))) -1
     (nil))

(insn 254 253 0 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 397)
                    (const_int 2 [0x2]))
                (reg/f:DI 396)) [3 yy_accept S2 A16])) -1
     (nil))

;; Generating RTL for gimple basic block 30

;; 

(code_label 258 257 259 129 "" [0 uses])

(note 259 258 0 NOTE_INSN_BASIC_BLOCK)

;; if (yy_last_accepting_cpos_lsm.192_864 != 0)

(insn 260 259 261 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 315 [ yy_last_accepting_cpos_lsm.192 ])
            (const_int 0 [0]))) -1
     (nil))

(jump_insn 261 260 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (int_list:REG_BR_PROB 10000 (nil)))

;; Generating RTL for gimple basic block 31

;; yy_last_accepting_cpos = yy_last_accepting_cpos_lsm.191_866;

(insn 263 262 0 (set (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])
        (reg/f:DI 316 [ yy_last_accepting_cpos_lsm.191 ])) -1
     (nil))

;; Generating RTL for gimple basic block 32

;; 

(code_label 264 263 265 131 "" [0 uses])

(note 265 264 0 NOTE_INSN_BASIC_BLOCK)

;; if (yy_last_accepting_state_lsm.194_860 != 0)

(insn 266 265 267 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 313 [ yy_last_accepting_state_lsm.194 ])
            (const_int 0 [0]))) -1
     (nil))

(jump_insn 267 266 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) -1
     (int_list:REG_BR_PROB 10000 (nil)))

;; Generating RTL for gimple basic block 33

;; yy_last_accepting_state = yy_last_accepting_state_lsm.193_862;

(insn 269 268 0 (set (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])
        (reg:SI 314 [ yy_last_accepting_state_lsm.193 ])) -1
     (nil))

;; Generating RTL for gimple basic block 34

;; 

(code_label 270 269 271 132 "" [0 uses])

(note 271 270 0 NOTE_INSN_BASIC_BLOCK)
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _1054 = yy_accept[yy_current_state_81];

(insn 272 271 273 (set (reg/f:DI 398)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) -1
     (nil))

(insn 273 272 274 (set (reg:DI 399)
        (sign_extend:DI (reg/v:SI 87 [ yy_current_state ]))) -1
     (nil))

(insn 274 273 0 (set (reg:HI 186 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 399)
                    (const_int 2 [0x2]))
                (reg/f:DI 398)) [3 yy_accept S2 A16])) -1
     (nil))

;; Generating RTL for gimple basic block 35

;; Generating RTL for gimple basic block 36

;; 

(code_label 278 277 279 133 "" [0 uses])

(note 279 278 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG yy_bp => yy_cp_8

(debug_insn 280 279 0 (var_location:DI yy_bp (const_int 0 [0])) -1
     (nil))
;; # DEBUG yy_cp => yy_cp_5

(debug_insn 281 280 0 (var_location:DI yy_cp (const_int 0 [0])) -1
     (nil))
;; # DEBUG yy_current_state => NULL

(debug_insn 282 281 0 (var_location:SI yy_current_state (const_int 0 [0])) -1
     (nil))
;; yy_act_85 = (int) _1055;

(insn 283 282 0 (set (reg/v:SI 90 [ yy_act ])
        (sign_extend:SI (reg:HI 186 [ D.6786 ]))) lex.yy.c:859 -1
     (nil))

;; # DEBUG yy_act => yy_act_85

(debug_insn 284 283 0 (var_location:SI yy_act (const_int 0 [0])) lex.yy.c:859 -1
     (nil))
;; if (yy_act_85 == 0)

(insn 285 284 286 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 90 [ yy_act ])
            (const_int 0 [0]))) lex.yy.c:860 -1
     (nil))

(jump_insn 286 285 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:860 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 37

;; yy_cp_86 = yy_last_accepting_cpos;

(insn 288 287 0 (set (reg/v/f:DI 88 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])) lex.yy.c:862 -1
     (nil))

;; # DEBUG yy_cp => yy_cp_86

(debug_insn 289 288 0 (var_location:DI yy_cp (const_int 0 [0])) lex.yy.c:862 -1
     (nil))
;; # DEBUG yy_current_state => yy_current_state_87

(debug_insn 290 289 0 (var_location:SI yy_current_state (const_int 0 [0])) lex.yy.c:863 -1
     (nil))Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; yy_act_89 = (int) _88;

(insn 291 290 292 (set (reg/f:DI 400)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) lex.yy.c:864 -1
     (nil))

(insn 292 291 293 (set (reg:SI 402)
        (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])) lex.yy.c:864 -1
     (nil))

(insn 293 292 294 (set (reg:DI 401)
        (sign_extend:DI (reg:SI 402))) lex.yy.c:864 -1
     (nil))

(insn 294 293 0 (set (reg/v:SI 90 [ yy_act ])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 401)
                        (const_int 2 [0x2]))
                    (reg/f:DI 400)) [3 yy_accept S2 A16]))) lex.yy.c:864 -1
     (nil))

;; # DEBUG yy_act => yy_act_89

(debug_insn 295 294 0 (var_location:SI yy_act (const_int 0 [0])) lex.yy.c:864 -1
     (nil))
;; Generating RTL for gimple basic block 38

;; 

(code_label 296 295 297 134 "" [0 uses])

(note 297 296 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG yy_act => yy_act_9

(debug_insn 298 297 0 (var_location:SI yy_act (const_int 0 [0])) -1
     (nil))
;; # DEBUG yy_cp => yy_cp_6

(debug_insn 299 298 0 (var_location:DI yy_cp (const_int 0 [0])) -1
     (nil))
;; yytext = yy_cp_8;

(insn 300 299 0 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/v/f:DI 89 [ yy_cp ])) lex.yy.c:867 -1
     (nil))

;; _91 = (long int) yy_cp_6;

(insn 301 300 0 (set (reg:DI 126 [ D.6788 ])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:867 -1
     (nil))

;; yyleng = _94;

(insn 302 301 303 (parallel [
            (set (reg:DI 403)
                (minus:DI (reg:DI 126 [ D.6788 ])
                    (reg/v/f:DI 89 [ yy_cp ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:867 -1
     (nil))

(insn 303 302 0 (set (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])
        (reg:DI 403)) lex.yy.c:867 -1
     (nil))

;; yy_hold_char = _96;

(insn 304 303 305 (set (reg:QI 404)
        (mem:QI (reg/v/f:DI 88 [ yy_cp ]) [0 *yy_cp_6+0 S1 A8])) lex.yy.c:867 -1
     (nil))

(insn 305 304 0 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 404)) lex.yy.c:867 -1
     (nil))

;; *yy_cp_6 = 0;

(insn 306 305 0 (set (mem:QI (reg/v/f:DI 88 [ yy_cp ]) [0 *yy_cp_6+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:867 -1
     (nil))

;; yy_c_buf_p = yy_cp_6;

(insn 307 306 0 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:867 -1
     (nil))

;; if (yy_act_9 != 46)

(insn 308 307 309 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 90 [ yy_act ])
            (const_int 46 [0x2e]))) lex.yy.c:869 -1
     (nil))

(jump_insn 309 308 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:869 -1
     (int_list:REG_BR_PROB 2800 (nil)))

;; Generating RTL for gimple basic block 39
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; if (_100 != 0)

(insn 311 310 312 (set (reg/f:DI 405)
        (symbol_ref:DI ("_ZL21yy_rule_can_match_eol") [flags 0x2]  <var_decl 0x7f88bc080750 yy_rule_can_match_eol>)) lex.yy.c:869 -1
     (nil))

(insn 312 311 313 (set (reg:DI 406)
        (sign_extend:DI (reg/v:SI 90 [ yy_act ]))) lex.yy.c:869 -1
     (nil))

(insn 313 312 314 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/u:SI (plus:DI (mult:DI (reg:DI 406)
                        (const_int 4 [0x4]))
                    (reg/f:DI 405)) [2 yy_rule_can_match_eol S4 A32])
            (const_int 0 [0]))) lex.yy.c:869 -1
     (nil))

(jump_insn 314 313 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:869 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 40

;; # DEBUG yyl => 0

(debug_insn 316 315 0 (var_location:DI yyl (const_int 0 [0])) -1
     (nil))
;; _471 = yyleng;

(insn 317 316 0 (set (reg:DI 307 [ D.6781 ])
        (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])) lex.yy.c:872 -1
     (nil))

;; if (_471 == 0)

(insn 318 317 319 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 307 [ D.6781 ])
            (const_int 0 [0]))) lex.yy.c:872 -1
     (nil))

(jump_insn 319 318 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:872 -1
     (int_list:REG_BR_PROB 9100 (nil)))

;; Generating RTL for gimple basic block 41

;; 

(code_label 320 319 321 135 "" [0 uses])

(note 321 320 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 42

;; 

(code_label 324 323 325 136 "" [0 uses])

(note 325 324 0 NOTE_INSN_BASIC_BLOCK)

;; _1019 = yytext;

(insn 326 325 0 (set (reg/f:DI 337 [ D.6783 ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) -1
     (nil))

;; ivtmp.210_326 = (unsigned long) _1019;

(insn 327 326 0 (set (reg:DI 311 [ ivtmp.210 ])
        (reg/f:DI 337 [ D.6783 ])) -1
     (nil))

;; _951 = (unsigned long) _953;

(insn 328 327 0 (parallel [
            (set (reg:DI 327 [ D.6796 ])
                (plus:DI (reg/f:DI 337 [ D.6783 ])
                    (reg:DI 307 [ D.6781 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; Generating RTL for gimple basic block 43

;; # DEBUG yyl => (yy_size_t) ivtmp.210_566 - (yy_size_t) _1019

(debug_insn 330 329 0 (var_location:DI yyl (const_int 0 [0])) -1
     (nil))
;; if (_104 == 10)

(insn 331 330 332 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg:DI 311 [ ivtmp.210 ]) [0 MEM[base: _324, offset: 0B]+0 S1 A8])
            (const_int 10 [0xa]))) lex.yy.c:873 -1
     (nil))

(jump_insn 332 331 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:873 -1
     (int_list:REG_BR_PROB 7200 (nil)))

;; Generating RTL for gimple basic block 44

;; yylineno = _106;

(insn 334 333 0 (parallel [
            (set (mem/c:SI (symbol_ref:DI ("yylineno") [flags 0x2]  <var_decl 0x7f88bc0807e0 yylineno>) [2 yylineno+0 S4 A32])
                (plus:SI (mem/c:SI (symbol_ref:DI ("yylineno") [flags 0x2]  <var_decl 0x7f88bc0807e0 yylineno>) [2 yylineno+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:875 -1
     (nil))

;; Generating RTL for gimple basic block 45

;; 

(code_label 335 334 336 138 "" [0 uses])

(note 336 335 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG D#19 => ((yy_size_t) ivtmp.210_566 - (yy_size_t) _1019) + 1

(debug_insn 337 336 0 (var_location:DI D#19 (const_int 0 [0])) -1
     (nil))
;; # DEBUG yyl => D#19

(debug_insn 338 337 0 (var_location:DI yyl (const_int 0 [0])) lex.yy.c:872 -1
     (nil))
;; # DEBUG yyl => D#19

(debug_insn 339 338 0 (var_location:DI yyl (const_int 0 [0])) -1
     (nil))
;; ivtmp.210_564 = ivtmp.210_566 + 1;

(insn 340 339 0 (parallel [
            (set (reg:DI 311 [ ivtmp.210 ])
                (plus:DI (reg:DI 311 [ ivtmp.210 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))

;; if (ivtmp.210_564 == _951)

(insn 341 340 342 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 311 [ ivtmp.210 ])
            (reg:DI 327 [ D.6796 ]))) lex.yy.c:872 -1
     (nil))

(jump_insn 342 341 346 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 320)
            (pc))) lex.yy.c:872 -1
     (int_list:REG_BR_PROB 900 (nil)))

(note 346 342 344 165 [bb 165] NOTE_INSN_BASIC_BLOCK)

(jump_insn 344 346 345 165 (set (pc)
        (label_ref 343)) -1
     (nil))

(barrier 345 344 0)

;; Generating RTL for gimple basic block 46

;; 

(code_label 347 345 348 137 "" [0 uses])

(note 348 347 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG yy_act => yy_act_10

(debug_insn 349 348 0 (var_location:SI yy_act (const_int 0 [0])) -1
     (nil))Applying pattern match.pd:49, generic-match.c:4249

;; switch (yy_act_10) <default: <L118>, case 0: <L45>, case 1: <L46>, case 2 ... 3: <L140>, case 4: <L49>, case 5: <L50>, case 6: <L51>, case 7: <L140>, case 8: <L53>, case 9 ... 10: <L140>, case 11: <L129>, case 12: <L130>, case 13: <L131>, case 14: <L132>, case 15: <L123>, case 16: <L124>, case 17: <L133>, case 18: <L141>, case 19: <L125>, case 20: <L146>, case 21: <L72>, case 22: <L73>, case 23: <L74>, case 24: <L75>, case 25: <L76>, case 26: <L77>, case 27: <L78>, case 28: <L79>, case 29: <L80>, case 30: <L81>, case 31: <L82>, case 32: <L83>, case 33: <L84>, case 34: <L85>, case 35: <L86>, case 36: <L87>, case 37: <L88>, case 38: <L89>, case 39: <L90>, case 40: <L91>, case 41: <L92>, case 42: <L93>, case 43: <L94>, case 44: <L95>, case 45: <L96>, case 46: <L100>, case 47 ... 49: <L54>>

(insn 350 349 351 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 90 [ yy_act ])
            (const_int 49 [0x31]))) lex.yy.c:881 -1
     (nil))

(jump_insn 351 350 352 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:881 -1
     (int_list:REG_BR_PROB 222 (nil)))

(insn 352 351 353 (set (reg:DI 407)
        (zero_extend:DI (reg/v:SI 90 [ yy_act ]))) lex.yy.c:881 -1
     (nil))

(insn 353 352 354 (set (reg/f:DI 408)
        (label_ref:DI 357)) lex.yy.c:881 -1
     (nil))

(insn 354 353 355 (set (reg:DI 409)
        (mem/u/c:DI (plus:DI (ashift:DI (reg:DI 407)
                    (const_int 3 [0x3]))
                (reg/f:DI 408)) [0  S8 A8])) lex.yy.c:881 -1
     (nil))

(jump_insn 355 354 356 (parallel [
            (set (pc)
                (reg:DI 409))
            (use (label_ref 357))
        ]) lex.yy.c:881 -1
     (nil))

(barrier 356 355 357)

(code_label 357 356 358 142 "" [0 uses])

(jump_table_data 358 357 359 (addr_vec:DI [
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
            (label_ref:DI 0)
        ]))

(barrier 359 358 0)

;; Generating RTL for gimple basic block 47

;; <L146>:

(code_label 360 359 361 158 "" [0 uses])

(note 361 360 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 48

;; <L140>:

(code_label 364 363 365 144 "" [0 uses])

(note 365 364 0 NOTE_INSN_BASIC_BLOCK)

;; _917 = yy_hold_char;

(insn 366 365 0 (set (reg:QI 320 [ D.6789 ])
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) -1
     (nil))

;; _1041 = yy_start;

(insn 367 366 0 (set (reg:SI 342 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _1043 = yy_accept[_1041];

(insn 368 367 369 (set (reg/f:DI 410)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) -1
     (nil))

(insn 369 368 370 (set (reg:DI 411)
        (sign_extend:DI (reg:SI 342 [ D.6777 ]))) -1
     (nil))

(insn 370 369 0 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 411)
                    (const_int 2 [0x2]))
                (reg/f:DI 410)) [3 yy_accept S2 A16])) -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _1045 = yy_base[_1041];

(insn 371 370 372 (set (reg/f:DI 412)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) -1
     (nil))

(insn 372 371 373 (set (reg:DI 413)
        (sign_extend:DI (reg:SI 342 [ D.6777 ]))) -1
     (nil))

(insn 373 372 0 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 413)
                    (const_int 2 [0x2]))
                (reg/f:DI 412)) [3 yy_base S2 A16])) -1
     (nil))

;; yy_cp_3 = _915;

(insn 374 373 0 (set (reg/v/f:DI 88 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) -1
     (nil))

;; yy_current_state_893 = _1041;

(insn 375 374 0 (set (reg/v:SI 87 [ yy_current_state ])
        (reg:SI 342 [ D.6777 ])) -1
     (nil))

;; Generating RTL for gimple basic block 49

;; <L45>:

(code_label 379 378 380 141 "" [0 uses])

(note 380 379 0 NOTE_INSN_BASIC_BLOCK)

;; *yy_cp_6 = _216;

(insn 381 380 382 (set (reg:QI 414)
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) lex.yy.c:885 -1
     (nil))

(insn 382 381 0 (set (mem:QI (reg/v/f:DI 88 [ yy_cp ]) [0 *yy_cp_6+0 S1 A8])
        (reg:QI 414)) lex.yy.c:885 -1
     (nil))

;; yy_cp_218 = yy_last_accepting_cpos;

(insn 383 382 0 (set (reg/v/f:DI 88 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])) lex.yy.c:886 -1
     (nil))

;; # DEBUG yy_cp => yy_cp_218

(debug_insn 384 383 0 (var_location:DI yy_cp (const_int 0 [0])) lex.yy.c:886 -1
     (nil))
;; # DEBUG yy_current_state => yy_current_state_219

(debug_insn 385 384 0 (var_location:SI yy_current_state (const_int 0 [0])) lex.yy.c:887 -1
     (nil))Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _992 = yy_accept[yy_current_state_219];

(insn 386 385 387 (set (reg/f:DI 415)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) -1
     (nil))

(insn 387 386 388 (set (reg:SI 417)
        (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])) -1
     (nil))

(insn 388 387 389 (set (reg:DI 416)
        (sign_extend:DI (reg:SI 417))) -1
     (nil))

(insn 389 388 0 (set (reg:HI 186 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 416)
                    (const_int 2 [0x2]))
                (reg/f:DI 415)) [3 yy_accept S2 A16])) -1
     (nil))

;; Generating RTL for gimple basic block 50

;; <L46>:

(code_label 393 392 394 143 "" [0 uses])

(note 394 393 0 NOTE_INSN_BASIC_BLOCK)

;; yy_start = 5;

(insn 395 394 0 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 5 [0x5])) mycc.l:43 -1
     (nil))

;; Generating RTL for gimple basic block 51

;; <L49>:

(code_label 399 398 400 145 "" [0 uses])

(note 400 399 0 NOTE_INSN_BASIC_BLOCK)

;; line_num = _129;

(insn 401 400 0 (parallel [
            (set (mem/c:SI (symbol_ref:DI ("_ZL8line_num") [flags 0x2]  <var_decl 0x7f88bc119b40 line_num>) [2 line_num+0 S4 A32])
                (plus:SI (mem/c:SI (symbol_ref:DI ("_ZL8line_num") [flags 0x2]  <var_decl 0x7f88bc119b40 line_num>) [2 line_num+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mycc.l:46 -1
     (nil))

;; _999 = yy_start;

(insn 402 401 0 (set (reg:SI 341 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _1004 = yy_accept[_999];

(insn 403 402 404 (set (reg/f:DI 418)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) -1
     (nil))

(insn 404 403 405 (set (reg:DI 419)
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) -1
     (nil))

(insn 405 404 0 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 419)
                    (const_int 2 [0x2]))
                (reg/f:DI 418)) [3 yy_accept S2 A16])) -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _1009 = yy_base[_999];

(insn 406 405 407 (set (reg/f:DI 420)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) -1
     (nil))

(insn 407 406 408 (set (reg:DI 421)
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) -1
     (nil))

(insn 408 407 0 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 421)
                    (const_int 2 [0x2]))
                (reg/f:DI 420)) [3 yy_base S2 A16])) -1
     (nil))

;; Generating RTL for gimple basic block 52

;; <L50>:

(code_label 411 410 412 146 "" [0 uses])

(note 412 411 0 NOTE_INSN_BASIC_BLOCK)

;; yy_start = 1;

(insn 413 412 0 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 1 [0x1])) mycc.l:47 -1
     (nil))

;; Generating RTL for gimple basic block 53

;; <L51>:

(code_label 416 415 417 147 "" [0 uses])

(note 417 416 0 NOTE_INSN_BASIC_BLOCK)

;; yy_start = 3;

(insn 418 417 0 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 3 [0x3])) mycc.l:49 -1
     (nil))

;; Generating RTL for gimple basic block 54

;; <L53>:

(code_label 421 420 422 148 "" [0 uses])

(note 422 421 0 NOTE_INSN_BASIC_BLOCK)

;; _113 = fopen (_111, "r");

(insn 423 422 424 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f88bbbf2750 *.LC14>)) mycc.l:52 -1
     (nil))

(insn 424 423 425 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:52 -1
     (nil))

(call_insn 425 424 426 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f88bbf7aca8 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mycc.l:52 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f88bbf7aca8 fopen>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 426 425 0 (set (reg/f:DI 136 [ D.6778 ])
        (reg:DI 0 ax)) mycc.l:52 -1
     (nil))

;; yyin = _113;

(insn 427 426 0 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 136 [ D.6778 ])) mycc.l:52 -1
     (nil))

;; _117 = yy_create_buffer (_113, 16384);

(insn 428 427 429 (set (reg:SI 4 si)
        (const_int 16384 [0x4000])) mycc.l:53 -1
     (nil))

(insn 429 428 430 (set (reg:DI 5 di)
        (reg/f:DI 136 [ D.6778 ])) mycc.l:53 -1
     (nil))

(call_insn 430 429 431 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>) [0 yy_create_buffer S1 A8])
            (const_int 0 [0]))) mycc.l:53 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 431 430 0 (set (reg/f:DI 137 [ D.6782 ])
        (reg:DI 0 ax)) mycc.l:53 -1
     (nil))

;; yypush_buffer_state (_117);

(insn 432 431 433 (set (reg:DI 5 di)
        (reg/f:DI 137 [ D.6782 ])) mycc.l:53 -1
     (nil))

(call_insn 433 432 0 (call (mem:QI (symbol_ref:DI ("_Z19yypush_buffer_stateP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c5e8 yypush_buffer_state>) [0 yypush_buffer_state S1 A8])
        (const_int 0 [0])) mycc.l:53 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z19yypush_buffer_stateP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c5e8 yypush_buffer_state>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; yy_start = 1;

(insn 434 433 0 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 1 [0x1])) mycc.l:54 -1
     (nil))

;; Generating RTL for gimple basic block 55

;; <L54>:

(code_label 437 436 438 185 "" [0 uses])

(note 438 437 0 NOTE_INSN_BASIC_BLOCK)

;; yypop_buffer_state ();

(call_insn 439 438 0 (call (mem:QI (symbol_ref:DI ("_Z18yypop_buffer_statev") [flags 0x3]  <function_decl 0x7f88bc07c6c0 yypop_buffer_state>) [0 yypop_buffer_state S1 A8])
        (const_int 0 [0])) mycc.l:58 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z18yypop_buffer_statev") [flags 0x3]  <function_decl 0x7f88bc07c6c0 yypop_buffer_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))

;; _221 = yy_buffer_stack;

(insn 440 439 0 (set (reg/f:DI 168 [ D.6780 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) mycc.l:60 -1
     (nil))

;; if (_221 == 0B)

(insn 441 440 442 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 168 [ D.6780 ])
            (const_int 0 [0]))) mycc.l:60 -1
     (nil))

(jump_insn 442 441 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mycc.l:60 -1
     (int_list:REG_BR_PROB 200 (nil)))

;; Generating RTL for gimple basic block 56

;; if (_225 == 0B)

(insn 444 443 445 56 (set (reg:DI 422)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) mycc.l:60 -1
     (nil))

(insn 445 444 446 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (mult:DI (reg:DI 422)
                        (const_int 8 [0x8]))
                    (reg/f:DI 168 [ D.6780 ])) [1 *_224+0 S8 A64])
            (const_int 0 [0]))) mycc.l:60 -1
     (nil))

(jump_insn 446 445 450 56 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mycc.l:60 -1
     (int_list:REG_BR_PROB 200 (nil)))

(note 450 446 448 166 [bb 166] NOTE_INSN_BASIC_BLOCK)

(jump_insn 448 450 449 166 (set (pc)
        (label_ref 447)) -1
     (nil))

(barrier 449 448 0)

;; Generating RTL for gimple basic block 57

;; <L129>:

(code_label 451 449 452 149 "" [0 uses])

(note 452 451 0 NOTE_INSN_BASIC_BLOCK)

;; _282 = lookup (_281);

(insn 453 452 454 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:109 -1
     (nil))

(call_insn 454 453 455 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z6lookupPKc") [flags 0x41]  <function_decl 0x7f88bc12e798 lookup>) [0 lookup S1 A8])
            (const_int 0 [0]))) mycc.l:109 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z6lookupPKc") [flags 0x41]  <function_decl 0x7f88bc12e798 lookup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 455 454 0 (set (reg/f:DI 198 [ D.6792 ])
        (reg:DI 0 ax)) mycc.l:109 -1
     (nil))

;; yylval.sym = _282;

(insn 456 455 0 (set (mem/f/c:DI (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>) [0 yylval.sym+0 S8 A64])
        (reg/f:DI 198 [ D.6792 ])) mycc.l:109 -1
     (nil))

;; if (_282 == 0B)

(insn 457 456 458 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 198 [ D.6792 ])
            (const_int 0 [0]))) mycc.l:111 -1
     (nil))

(jump_insn 458 457 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mycc.l:111 -1
     (int_list:REG_BR_PROB 8987 (nil)))

;; Generating RTL for gimple basic block 58

;; _284 = insert (_283, 258);

(insn 460 459 461 (set (reg:SI 4 si)
        (const_int 258 [0x102])) mycc.l:113 -1
     (nil))

(insn 461 460 462 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:113 -1
     (nil))

(call_insn 462 461 463 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z6insertPKci") [flags 0x41]  <function_decl 0x7f88bc12e870 insert>) [0 insert S1 A8])
            (const_int 0 [0]))) mycc.l:113 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z6insertPKci") [flags 0x41]  <function_decl 0x7f88bc12e870 insert>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 463 462 0 (set (reg/f:DI 198 [ D.6792 ])
        (reg:DI 0 ax)) mycc.l:113 -1
     (nil))

;; yylval.sym = _284;

(insn 464 463 0 (set (mem/f/c:DI (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>) [0 yylval.sym+0 S8 A64])
        (reg/f:DI 198 [ D.6792 ])) mycc.l:113 -1
     (nil))

;; _285 = localvar;

(insn 465 464 0 (set (reg:SI 200 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL8localvar") [flags 0x2]  <var_decl 0x7f88bc119ab0 localvar>) [2 localvar+0 S4 A32])) mycc.l:114 -1
     (nil))

;; localvar = _286;

(insn 466 465 467 (parallel [
            (set (reg:SI 423)
                (plus:SI (reg:SI 200 [ D.6777 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mycc.l:114 -1
     (nil))

(insn 467 466 0 (set (mem/c:SI (symbol_ref:DI ("_ZL8localvar") [flags 0x2]  <var_decl 0x7f88bc119ab0 localvar>) [2 localvar+0 S4 A32])
        (reg:SI 423)) mycc.l:114 -1
     (nil))

;; _284->localvar = _285;

(insn 468 467 0 (set (mem:SI (plus:DI (reg/f:DI 198 [ D.6792 ])
                (const_int 12 [0xc])) [2 _284->localvar+0 S4 A32])
        (reg:SI 200 [ D.6777 ])) mycc.l:114 -1
     (nil))

;; Generating RTL for gimple basic block 59

;; 

(code_label 469 468 470 190 "" [0 uses])

(note 470 469 0 NOTE_INSN_BASIC_BLOCK)

;; _288 = _991->token;

(insn 471 470 0 (set (reg:SI 92 [ D.6777 ])
        (mem:SI (plus:DI (reg/f:DI 198 [ D.6792 ])
                (const_int 8 [0x8])) [2 _991->token+0 S4 A64])) mycc.l:117 -1
     (nil))

;; Generating RTL for gimple basic block 60

;; <L130>:

(code_label 474 473 475 150 "" [0 uses])

(note 475 474 0 NOTE_INSN_BASIC_BLOCK)

;; sscanf (_226, "%o", &yylval.num);

(insn 476 475 477 (set (reg:DI 1 dx)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:137 -1
     (nil))

(insn 477 476 478 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f88bbbf27e0 *.LC15>)) mycc.l:137 -1
     (nil))

(insn 478 477 479 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:137 -1
     (nil))

(insn 479 478 480 (set (reg:QI 0 ax)
        (const_int 0 [0])) mycc.l:137 -1
     (nil))

(call_insn 480 479 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) mycc.l:137 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))

;; _289 = yylval.num;

(insn 481 480 482 (set (reg/f:DI 424)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:139 -1
     (nil))

(insn 482 481 0 (set (reg:SI 202 [ D.6785 ])
        (mem/c:SI (reg/f:DI 424) [0 yylval.num+0 S4 A64])) mycc.l:139 -1
     (nil))

;; if (_289 <= 127)

(insn 483 482 484 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 202 [ D.6785 ])
            (const_int 127 [0x7f]))) mycc.l:139 -1
     (nil))

(jump_insn 484 483 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mycc.l:139 -1
     (int_list:REG_BR_PROB 6100 (nil)))

;; Generating RTL for gimple basic block 61

;; Generating RTL for gimple basic block 62

;; 

(code_label 488 487 489 191 "" [0 uses])

(note 489 488 0 NOTE_INSN_BASIC_BLOCK)

;; if (_289 <= 32367)

(insn 490 489 491 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 202 [ D.6785 ])
            (const_int 32367 [0x7e6f]))) mycc.l:142 -1
     (nil))

(jump_insn 491 490 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mycc.l:142 -1
     (int_list:REG_BR_PROB 6100 (nil)))

;; Generating RTL for gimple basic block 63

;; Generating RTL for gimple basic block 64

;; 

(code_label 495 494 496 192 "" [0 uses])

(note 496 495 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 65

;; <L131>:

(code_label 499 498 500 151 "" [0 uses])

(note 500 499 0 NOTE_INSN_BASIC_BLOCK)

;; sscanf (_228, "%x", &yylval.num);

(insn 501 500 502 (set (reg:DI 1 dx)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:151 -1
     (nil))

(insn 502 501 503 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f88bbbf2870 *.LC16>)) mycc.l:151 -1
     (nil))

(insn 503 502 504 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:151 -1
     (nil))

(insn 504 503 505 (set (reg:QI 0 ax)
        (const_int 0 [0])) mycc.l:151 -1
     (nil))

(call_insn 505 504 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) mycc.l:151 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))

;; _291 = yylval.num;

(insn 506 505 507 (set (reg/f:DI 425)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:153 -1
     (nil))

(insn 507 506 0 (set (reg:SI 203 [ D.6785 ])
        (mem/c:SI (reg/f:DI 425) [0 yylval.num+0 S4 A64])) mycc.l:153 -1
     (nil))

;; if (_291 <= 127)

(insn 509 507 510 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 203 [ D.6785 ])
            (const_int 127 [0x7f]))) mycc.l:153 -1
     (nil))

(jump_insn 510 509 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 508)
            (pc))) mycc.l:153 -1
     (int_list:REG_BR_PROB 3900 (nil)))

;; Generating RTL for gimple basic block 66

;; if (_291 <= 32367)

(insn 513 511 514 66 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 203 [ D.6785 ])
            (const_int 32367 [0x7e6f]))) mycc.l:156 -1
     (nil))

(jump_insn 514 513 517 66 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 512)
            (pc))) mycc.l:156 -1
     (int_list:REG_BR_PROB 3900 (nil)))

(note 517 514 515 167 [bb 167] NOTE_INSN_BASIC_BLOCK)

(jump_insn 515 517 516 167 (set (pc)
        (label_ref 495)) mycc.l:156 -1
     (nil))

(barrier 516 515 0)

;; Generating RTL for gimple basic block 67

;; <L132>:

(code_label 518 516 519 152 "" [0 uses])

(note 519 518 0 NOTE_INSN_BASIC_BLOCK)

;; sscanf (_230, "%u", &yylval.num);

(insn 520 519 521 (set (reg:DI 1 dx)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:123 -1
     (nil))

(insn 521 520 522 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f88bbbf2900 *.LC17>)) mycc.l:123 -1
     (nil))

(insn 522 521 523 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:123 -1
     (nil))

(insn 523 522 524 (set (reg:QI 0 ax)
        (const_int 0 [0])) mycc.l:123 -1
     (nil))

(call_insn 524 523 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) mycc.l:123 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))

;; _293 = yylval.num;

(insn 525 524 526 (set (reg/f:DI 426)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:125 -1
     (nil))

(insn 526 525 0 (set (reg:SI 204 [ D.6785 ])
        (mem/c:SI (reg/f:DI 426) [0 yylval.num+0 S4 A64])) mycc.l:125 -1
     (nil))

;; if (_293 <= 127)

(insn 527 526 528 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 204 [ D.6785 ])
            (const_int 127 [0x7f]))) mycc.l:125 -1
     (nil))

(jump_insn 528 527 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 508)
            (pc))) mycc.l:125 -1
     (int_list:REG_BR_PROB 3900 (nil)))

;; Generating RTL for gimple basic block 68

;; if (_293 <= 32367)

(insn 530 529 531 68 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 204 [ D.6785 ])
            (const_int 32367 [0x7e6f]))) mycc.l:128 -1
     (nil))

(jump_insn 531 530 534 68 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 512)
            (pc))) mycc.l:128 -1
     (int_list:REG_BR_PROB 3900 (nil)))

(note 534 531 532 168 [bb 168] NOTE_INSN_BASIC_BLOCK)

(jump_insn 532 534 533 168 (set (pc)
        (label_ref 495)) mycc.l:128 -1
     (nil))

(barrier 533 532 0)

;; Generating RTL for gimple basic block 69

;; <L123>:

(code_label 535 533 536 153 "" [0 uses])

(note 536 535 0 NOTE_INSN_BASIC_BLOCK)

;; sscanf (_252, "%c", &c);

(insn 537 536 538 (parallel [
            (set (reg:DI 427)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -9 [0xfffffffffffffff7])))
            (clobber (reg:CC 17 flags))
        ]) mycc.l:167 -1
     (nil))

(insn 538 537 539 (set (reg/f:DI 429)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:167 -1
     (nil))

(insn 539 538 540 (parallel [
            (set (reg:DI 428 [ D.6791 ])
                (plus:DI (reg/f:DI 429)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mycc.l:167 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))

(insn 540 539 541 (set (reg:DI 1 dx)
        (reg:DI 427)) mycc.l:167 -1
     (nil))

(insn 541 540 542 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f88bbbf2990 *.LC18>)) mycc.l:167 -1
     (nil))

(insn 542 541 543 (set (reg:DI 5 di)
        (reg:DI 428 [ D.6791 ])) mycc.l:167 -1
     (nil))

(insn 543 542 544 (set (reg:QI 0 ax)
        (const_int 0 [0])) mycc.l:167 -1
     (nil))

(call_insn 544 543 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) mycc.l:167 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))

;; yylval.num = _254;

(insn 545 544 546 (set (reg/f:DI 430)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:168 -1
     (nil))

(insn 546 545 547 (set (reg:SI 431)
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -9 [0xfffffffffffffff7])) [0 c+0 S1 A8]))) mycc.l:168 -1
     (nil))

(insn 547 546 0 (set (mem/c:SI (reg/f:DI 430) [0 yylval.num+0 S4 A64])
        (reg:SI 431)) mycc.l:168 -1
     (nil))

;; c ={v} {CLOBBER};

(nil)

;; # DEBUG c => NULL

(debug_insn 548 547 0 (var_location:QI c (const_int 0 [0])) mycc.l:72 -1
     (nil))
;; Generating RTL for gimple basic block 70

;; <L124>:

(code_label 551 550 552 154 "" [0 uses])

(note 552 551 0 NOTE_INSN_BASIC_BLOCK)

;; sscanf (_234, "%g", &yylval.flt);

(insn 553 552 554 (set (reg:DI 1 dx)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:176 -1
     (nil))

(insn 554 553 555 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f88bbbf2a20 *.LC19>)) mycc.l:176 -1
     (nil))

(insn 555 554 556 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:176 -1
     (nil))

(insn 556 555 557 (set (reg:QI 0 ax)
        (const_int 0 [0])) mycc.l:176 -1
     (nil))

(call_insn 557 556 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) mycc.l:176 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))

;; Generating RTL for gimple basic block 71

;; <L133>:

(code_label 560 559 561 155 "" [0 uses])

(note 561 560 0 NOTE_INSN_BASIC_BLOCK)

;; _232 = yyleng;

(insn 562 561 0 (set (reg:DI 176 [ D.6781 ])
        (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])) mycc.l:184 -1
     (nil))

;; _296 = malloc (_295);

(insn 563 562 564 (parallel [
            (set (reg:DI 432 [ D.6781 ])
                (plus:DI (reg:DI 176 [ D.6781 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mycc.l:184 -1
     (nil))

(insn 564 563 565 (set (reg:DI 5 di)
        (reg:DI 432 [ D.6781 ])) mycc.l:184 -1
     (nil))

(call_insn 565 564 566 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) mycc.l:184 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 566 565 567 (set (reg/f:DI 433)
        (reg:DI 0 ax)) mycc.l:184 -1
     (expr_list:REG_NOALIAS (reg/f:DI 433)
        (nil)))

(insn 567 566 0 (set (reg/f:DI 206 [ D.6793 ])
        (reg/f:DI 433)) mycc.l:184 -1
     (nil))

;; yylval.str = _296;

(insn 568 567 0 (set (mem/f/c:DI (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>) [0 yylval.str+0 S8 A64])
        (reg/f:DI 206 [ D.6793 ])) mycc.l:184 -1
     (nil))

;; if (_296 != 0B)

(insn 569 568 570 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 206 [ D.6793 ])
            (const_int 0 [0]))) mycc.l:186 -1
     (nil))

(jump_insn 570 569 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) mycc.l:186 -1
     (int_list:REG_BR_PROB 2165 (nil)))

;; Generating RTL for gimple basic block 72

;; # DEBUG __dest => _296

(debug_insn 572 571 0 (var_location:DI __dest (const_int 0 [0])) mycc.l:188 -1
     (nil))
;; # DEBUG __src => _298

(debug_insn 573 572 0 (var_location:DI __src (const_int 0 [0])) mycc.l:188 -1
     (nil))
;; __builtin_strcpy (_296, _298);

(insn 574 573 575 (set (reg/f:DI 435)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/string3.h:110 -1
     (nil))

(insn 575 574 576 (parallel [
            (set (reg:DI 434 [ D.6791 ])
                (plus:DI (reg/f:DI 435)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/string3.h:110 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))

(insn 576 575 577 (set (reg:DI 4 si)
        (reg:DI 434 [ D.6791 ])) /usr/include/x86_64-linux-gnu/bits/string3.h:110 -1
     (nil))

(insn 577 576 578 (set (reg:DI 5 di)
        (reg/f:DI 206 [ D.6793 ])) /usr/include/x86_64-linux-gnu/bits/string3.h:110 -1
     (nil))

(call_insn 578 577 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f88bc2f4510 __builtin_strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/string3.h:110 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f88bc2f4510 __builtin_strcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))

;; # DEBUG __dest => NULL

(debug_insn 579 578 0 (var_location:DI __dest (const_int 0 [0])) mycc.l:188 -1
     (nil))
;; # DEBUG __src => NULL

(debug_insn 580 579 0 (var_location:DI __src (const_int 0 [0])) mycc.l:188 -1
     (nil))
;; *_301 = 0;

(insn 581 580 0 (set (mem:QI (plus:DI (plus:DI (reg/f:DI 206 [ D.6793 ])
                    (reg:DI 176 [ D.6781 ]))
                (const_int -2 [0xfffffffffffffffe])) [0 *_301+0 S1 A8])
        (const_int 0 [0])) mycc.l:189 -1
     (nil))

;; Generating RTL for gimple basic block 73

;; <L72>:

(code_label 584 583 585 159 "" [0 uses])

(note 585 584 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 74

;; <L73>:

(code_label 588 587 589 160 "" [0 uses])

(note 589 588 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 75

;; <L74>:

(code_label 592 591 593 161 "" [0 uses])

(note 593 592 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 76

;; <L75>:

(code_label 596 595 597 162 "" [0 uses])

(note 597 596 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 77

;; <L76>:

(code_label 600 599 601 163 "" [0 uses])

(note 601 600 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 78

;; <L77>:

(code_label 604 603 605 164 "" [0 uses])

(note 605 604 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 79

;; <L78>:

(code_label 608 607 609 165 "" [0 uses])

(note 609 608 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 80

;; <L79>:

(code_label 612 611 613 166 "" [0 uses])

(note 613 612 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 81

;; <L80>:

(code_label 616 615 617 167 "" [0 uses])

(note 617 616 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 82

;; <L81>:

(code_label 620 619 621 168 "" [0 uses])

(note 621 620 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 83

;; <L82>:

(code_label 624 623 625 169 "" [0 uses])

(note 625 624 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 84

;; <L83>:

(code_label 628 627 629 170 "" [0 uses])

(note 629 628 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 85

;; <L84>:

(code_label 632 631 633 171 "" [0 uses])

(note 633 632 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 86

;; <L85>:

(code_label 636 635 637 172 "" [0 uses])

(note 637 636 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 87

;; <L86>:

(code_label 640 639 641 173 "" [0 uses])

(note 641 640 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 88

;; <L87>:

(code_label 644 643 645 174 "" [0 uses])

(note 645 644 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 89

;; <L88>:

(code_label 648 647 649 175 "" [0 uses])

(note 649 648 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 90

;; <L89>:

(code_label 652 651 653 176 "" [0 uses])

(note 653 652 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 91

;; <L90>:

(code_label 656 655 657 177 "" [0 uses])

(note 657 656 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 92

;; <L91>:

(code_label 660 659 661 178 "" [0 uses])

(note 661 660 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 93

;; <L92>:

(code_label 664 663 665 179 "" [0 uses])

(note 665 664 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 94

;; <L93>:

(code_label 668 667 669 180 "" [0 uses])

(note 669 668 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 95

;; <L94>:

(code_label 672 671 673 181 "" [0 uses])

(note 673 672 0 NOTE_INSN_BASIC_BLOCK)

;; _240 = (int) _239;

(insn 674 673 675 (set (reg/f:DI 436)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:100 -1
     (nil))

(insn 675 674 0 (set (reg:SI 92 [ D.6777 ])
        (sign_extend:SI (mem:QI (reg/f:DI 436) [0 *_238+0 S1 A8]))) mycc.l:100 -1
     (nil))

;; Generating RTL for gimple basic block 96

;; <L95>:

(code_label 678 677 679 182 "" [0 uses])

(note 679 678 0 NOTE_INSN_BASIC_BLOCK)

;; yyerror ("Unknown character ignored");

(insn 680 679 681 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f88bbbf2ab0 *.LC20>)) mycc.l:101 -1
     (nil))

(call_insn 681 680 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z7yyerrorPKc") [flags 0x41]  <function_decl 0x7f88bc13b0d8 yyerror>) [0 yyerror S1 A8])
            (const_int 0 [0]))) mycc.l:101 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z7yyerrorPKc") [flags 0x41]  <function_decl 0x7f88bc13b0d8 yyerror>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _1002 = yy_start;

(insn 682 681 0 (set (reg:SI 341 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _1007 = yy_accept[_1002];

(insn 683 682 684 (set (reg/f:DI 437)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) -1
     (nil))

(insn 684 683 685 (set (reg:DI 438)
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) -1
     (nil))

(insn 685 684 0 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 438)
                    (const_int 2 [0x2]))
                (reg/f:DI 437)) [3 yy_accept S2 A16])) -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _1012 = yy_base[_1002];

(insn 686 685 687 (set (reg/f:DI 439)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) -1
     (nil))

(insn 687 686 688 (set (reg:DI 440)
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) -1
     (nil))

(insn 688 687 0 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 440)
                    (const_int 2 [0x2]))
                (reg/f:DI 439)) [3 yy_base S2 A16])) -1
     (nil))

;; Generating RTL for gimple basic block 97

;; <L96>:

(code_label 691 690 692 183 "" [0 uses])

(note 692 691 0 NOTE_INSN_BASIC_BLOCK)

;; fwrite (_123, _122, 1, _121);

(insn 693 692 694 (set (reg:DI 2 cx)
        (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])) mycc.l:103 -1
     (nil))

(insn 694 693 695 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) mycc.l:103 -1
     (nil))

(insn 695 694 696 (set (reg:DI 4 si)
        (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])) mycc.l:103 -1
     (nil))

(insn 696 695 697 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:103 -1
     (nil))

(call_insn 697 696 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7f88bc2ff0d8 fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) mycc.l:103 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7f88bc2ff0d8 fwrite>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))

;; _1000 = yy_start;

(insn 698 697 0 (set (reg:SI 341 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _1005 = yy_accept[_1000];

(insn 699 698 700 (set (reg/f:DI 441)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) -1
     (nil))

(insn 700 699 701 (set (reg:DI 442)
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) -1
     (nil))

(insn 701 700 0 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 442)
                    (const_int 2 [0x2]))
                (reg/f:DI 441)) [3 yy_accept S2 A16])) -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _1010 = yy_base[_1000];

(insn 702 701 703 (set (reg/f:DI 443)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) -1
     (nil))

(insn 703 702 704 (set (reg:DI 444)
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) -1
     (nil))

(insn 704 703 0 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 444)
                    (const_int 2 [0x2]))
                (reg/f:DI 443)) [3 yy_base S2 A16])) -1
     (nil))

;; Generating RTL for gimple basic block 98

;; <L100>:

(code_label 707 706 708 184 "" [0 uses])

(note 708 707 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG yy_act => 46

(debug_insn 709 708 0 (var_location:SI yy_act (const_int 0 [0])) -1
     (nil))
;; yy_amount_of_matched_text_136 = _135 + -1;

(insn 710 709 711 (parallel [
            (set (reg:DI 445 [ D.6788 ])
                (minus:DI (reg:DI 126 [ D.6788 ])
                    (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1140 -1
     (nil))

(insn 711 710 0 (parallel [
            (set (reg/v:SI 147 [ yy_amount_of_matched_text ])
                (plus:SI (subreg:SI (reg:DI 445 [ D.6788 ]) 0)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1140 -1
     (nil))

;; # DEBUG yy_amount_of_matched_text => yy_amount_of_matched_text_136

(debug_insn 712 711 0 (var_location:SI yy_amount_of_matched_text (const_int 0 [0])) lex.yy.c:1140 -1
     (nil))
;; *yy_cp_6 = _137;

(insn 713 712 714 (set (reg:QI 446)
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) lex.yy.c:1143 -1
     (nil))

(insn 714 713 0 (set (mem:QI (reg/v/f:DI 88 [ yy_cp ]) [0 *yy_cp_6+0 S1 A8])
        (reg:QI 446)) lex.yy.c:1143 -1
     (nil))

;; _142 = _139 + _141;

(insn 715 714 716 (set (reg:DI 448)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1146 -1
     (nil))

(insn 716 715 717 (parallel [
            (set (reg:DI 447 [ D.6781 ])
                (ashift:DI (reg:DI 448)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1146 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))

(insn 717 716 718 (set (reg/f:DI 449)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1146 -1
     (nil))

(insn 718 717 0 (parallel [
            (set (reg/f:DI 152 [ D.6780 ])
                (plus:DI (reg:DI 447 [ D.6781 ])
                    (reg/f:DI 449)))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1146 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
            (reg:DI 447 [ D.6781 ]))
        (nil)))

;; _143 = *_142;

(insn 719 718 0 (set (reg/f:DI 245 [ D.6782 ])
        (mem/f:DI (reg/f:DI 152 [ D.6780 ]) [1 *_142+0 S8 A64])) lex.yy.c:1146 -1
     (nil))

;; if (_144 == 0)

(insn 720 719 721 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                    (const_int 60 [0x3c])) [2 _143->yy_buffer_status+0 S4 A32])
            (const_int 0 [0]))) lex.yy.c:1146 -1
     (nil))

(jump_insn 721 720 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1146 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 99

;; _928 = yy_n_chars;

(insn 723 722 0 (set (reg:SI 154 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) -1
     (nil))

;; Generating RTL for gimple basic block 100

;; 

(code_label 726 725 727 195 "" [0 uses])

(note 727 726 0 NOTE_INSN_BASIC_BLOCK)

;; _150 = _143->yy_n_chars;

(insn 728 727 0 (set (reg:SI 154 [ D.6777 ])
        (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 32 [0x20])) [2 _143->yy_n_chars+0 S4 A64])) lex.yy.c:1157 -1
     (nil))

;; yy_n_chars = _150;

(insn 729 728 0 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 154 [ D.6777 ])) lex.yy.c:1157 -1
     (nil))

;; _143->yy_input_file = _156;

(insn 730 729 731 (set (reg/f:DI 450)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1158 -1
     (nil))

(insn 731 730 0 (set (mem/f:DI (reg/f:DI 245 [ D.6782 ]) [1 _143->yy_input_file+0 S8 A64])
        (reg/f:DI 450)) lex.yy.c:1158 -1
     (nil))

;; _162 = *_142;

(insn 732 731 0 (set (reg/f:DI 245 [ D.6782 ])
        (mem/f:DI (reg/f:DI 152 [ D.6780 ]) [1 *_142+0 S8 A64])) lex.yy.c:1159 -1
     (nil))

;; _162->yy_buffer_status = 1;

(insn 733 732 0 (set (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 60 [0x3c])) [2 _162->yy_buffer_status+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:1159 -1
     (nil))

;; Generating RTL for gimple basic block 101

;; 

(code_label 734 733 735 196 "" [0 uses])

(note 735 734 0 NOTE_INSN_BASIC_BLOCK)

;; dest_168 = _927->yy_ch_buf;

(insn 736 735 0 (set (reg/v/f:DI 156 [ dest ])
        (mem/f:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 8 [0x8])) [1 _927->yy_ch_buf+0 S8 A64])) lex.yy.c:1169 -1
     (nil))

;; _170 = (sizetype) _929;

(insn 737 736 0 (set (reg:DI 157 [ D.6790 ])
        (sign_extend:DI (reg:SI 154 [ D.6777 ]))) lex.yy.c:1169 -1
     (nil))

;; _171 = dest_168 + _170;

(insn 738 737 0 (parallel [
            (set (reg/f:DI 158 [ D.6783 ])
                (plus:DI (reg/v/f:DI 156 [ dest ])
                    (reg:DI 157 [ D.6790 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1169 -1
     (nil))

;; _172 = yy_c_buf_p;

(insn 739 738 0 (set (reg/f:DI 244 [ D.6783 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) lex.yy.c:1169 -1
     (nil))

;; if (_171 >= _172)

(insn 740 739 741 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 158 [ D.6783 ])
            (reg/f:DI 244 [ D.6783 ]))) lex.yy.c:1169 -1
     (nil))

(jump_insn 741 740 0 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1169 -1
     (int_list:REG_BR_PROB 9800 (nil)))

;; Generating RTL for gimple basic block 102

;; yy_cp_207 = _205 + _206;

(insn 743 742 744 (set (reg:DI 451 [ D.6790 ])
        (sign_extend:DI (reg/v:SI 147 [ yy_amount_of_matched_text ]))) lex.yy.c:1173 -1
     (nil))

(insn 744 743 745 (set (reg/f:DI 452)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1173 -1
     (nil))

(insn 745 744 0 (parallel [
            (set (reg/v/f:DI 88 [ yy_cp ])
                (plus:DI (reg:DI 451 [ D.6790 ])
                    (reg/f:DI 452)))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1173 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
            (reg:DI 451 [ D.6790 ]))
        (nil)))

;; yy_c_buf_p = yy_cp_207;

(insn 746 745 0 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:1173 -1
     (nil))

;; yy_current_state_210 = yy_get_previous_state ();

(call_insn 747 746 748 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>) [0 yy_get_previous_state S1 A8])
            (const_int 0 [0]))) lex.yy.c:1175 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))

(insn 748 747 0 (set (reg/v:SI 193 [ yy_current_state ])
        (reg:SI 0 ax)) lex.yy.c:1175 -1
     (nil))

;; # DEBUG yy_current_state => yy_current_state_210

(debug_insn 749 748 0 (var_location:SI yy_current_state (const_int 0 [0])) lex.yy.c:1175 -1
     (nil))
;; # DEBUG yy_current_state => yy_current_state_210

(debug_insn 750 749 0 (var_location:SI yy_current_state (const_int 0 [0])) lex.yy.c:1175 -1
     (nil))
;; # DEBUG yy_cp => yy_cp_207

(debug_insn 751 750 0 (var_location:DI yy_cp (const_int 0 [0])) lex.yy.c:1443 -1
     (nil))
;; # DEBUG yy_c => 1

(debug_insn 752 751 0 (var_location:QI yy_c (const_int 0 [0])) lex.yy.c:1445 -1
     (nil))Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _255 = yy_accept[yy_current_state_210];

(insn 753 752 754 (set (reg/f:DI 453)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) lex.yy.c:1446 -1
     (nil))

(insn 754 753 755 (set (reg:DI 454)
        (sign_extend:DI (reg/v:SI 193 [ yy_current_state ]))) lex.yy.c:1446 -1
     (nil))

(insn 755 754 0 (set (reg:HI 186 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 454)
                    (const_int 2 [0x2]))
                (reg/f:DI 453)) [3 yy_accept S2 A16])) lex.yy.c:1446 -1
     (nil))

;; if (_255 != 0)

(insn 756 755 757 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 186 [ D.6786 ])
            (const_int 0 [0]))) lex.yy.c:1446 -1
     (nil))

(jump_insn 757 756 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1446 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 103

;; yy_last_accepting_state = yy_current_state_210;

(insn 759 758 0 (set (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])
        (reg/v:SI 193 [ yy_current_state ])) lex.yy.c:1448 -1
     (nil))

;; yy_last_accepting_cpos = yy_cp_207;

(insn 760 759 0 (set (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:1449 -1
     (nil))

;; Generating RTL for gimple basic block 104

;; 

(code_label 761 760 762 198 "" [0 uses])

(note 762 761 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG yy_c => 1

(debug_insn 763 762 0 (var_location:QI yy_c (const_int 0 [0])) -1
     (nil))
;; # DEBUG yy_current_state => yy_current_state_210

(debug_insn 764 763 0 (var_location:SI yy_current_state (const_int 0 [0])) -1
     (nil))Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _290 = yy_base[yy_current_state_210];

(insn 765 764 766 (set (reg/f:DI 455)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) lex.yy.c:1451 -1
     (nil))

(insn 766 765 767 (set (reg:DI 456)
        (sign_extend:DI (reg/v:SI 193 [ yy_current_state ]))) lex.yy.c:1451 -1
     (nil))

(insn 767 766 0 (set (reg:HI 187 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 456)
                    (const_int 2 [0x2]))
                (reg/f:DI 455)) [3 yy_base S2 A16])) lex.yy.c:1451 -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; if (yy_current_state_210 == _574)

(insn 768 767 769 (set (reg/f:DI 457)
        (symbol_ref:DI ("_ZL6yy_chk") [flags 0x2]  <var_decl 0x7f88bc0806c0 yy_chk>)) lex.yy.c:1451 -1
     (nil))

(insn 769 768 770 (set (reg:SI 458 [ D.6777 ])
        (zero_extend:SI (reg:HI 187 [ D.6787 ]))) lex.yy.c:1451 -1
     (nil))

(insn 770 769 771 (parallel [
            (set (reg:SI 459 [ D.6777 ])
                (plus:SI (reg:SI 458 [ D.6777 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1451 -1
     (nil))

(insn 771 770 772 (set (reg:DI 460)
        (sign_extend:DI (reg:SI 459 [ D.6777 ]))) lex.yy.c:1451 -1
     (nil))

(insn 772 771 773 (set (reg:SI 461 [ D.6777 ])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 460)
                        (const_int 2 [0x2]))
                    (reg/f:DI 457)) [3 yy_chk S2 A16]))) lex.yy.c:1451 -1
     (nil))

(insn 773 772 774 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 193 [ yy_current_state ])
            (reg:SI 461 [ D.6777 ]))) lex.yy.c:1451 -1
     (nil))

(jump_insn 774 773 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1451 -1
     (int_list:REG_BR_PROB 900 (nil)))

;; Generating RTL for gimple basic block 105

;; Generating RTL for gimple basic block 106

;; # DEBUG yy_c => 1

(debug_insn 777 776 0 (var_location:QI yy_c (const_int 0 [0])) -1
     (nil))
;; # DEBUG yy_current_state => yy_current_state_561

(debug_insn 778 777 0 (var_location:SI yy_current_state (const_int 0 [0])) -1
     (nil))Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _262 = yy_def[yy_current_state_561];

(insn 779 778 780 (set (reg/f:DI 462)
        (symbol_ref:DI ("_ZL6yy_def") [flags 0x2]  <var_decl 0x7f88bc080090 yy_def>)) lex.yy.c:1453 -1
     (nil))

(insn 780 779 781 (set (reg:DI 463)
        (sign_extend:DI (reg/v:SI 193 [ yy_current_state ]))) lex.yy.c:1453 -1
     (nil))

(insn 781 780 0 (set (reg:HI 192 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 463)
                    (const_int 2 [0x2]))
                (reg/f:DI 462)) [3 yy_def S2 A16])) lex.yy.c:1453 -1
     (nil))

;; yy_current_state_263 = (yy_state_type) _262;

(insn 782 781 0 (set (reg/v:SI 193 [ yy_current_state ])
        (sign_extend:SI (reg:HI 192 [ D.6786 ]))) lex.yy.c:1453 -1
     (nil))

;; # DEBUG yy_current_state => yy_current_state_263

(debug_insn 783 782 0 (var_location:SI yy_current_state (const_int 0 [0])) lex.yy.c:1453 -1
     (nil))
;; # DEBUG yy_c => 1

(debug_insn 784 783 0 (var_location:QI yy_c (const_int 0 [0])) -1
     (nil))
;; # DEBUG yy_current_state => yy_current_state_263

(debug_insn 785 784 0 (var_location:SI yy_current_state (const_int 0 [0])) -1
     (nil))Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _257 = yy_base[yy_current_state_263];

(insn 786 785 787 (set (reg/f:DI 464)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) lex.yy.c:1451 -1
     (nil))

(insn 787 786 788 (set (reg:DI 465)
        (sign_extend:DI (reg/v:SI 193 [ yy_current_state ]))) lex.yy.c:1451 -1
     (nil))

(insn 788 787 0 (set (reg:HI 187 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 465)
                    (const_int 2 [0x2]))
                (reg/f:DI 464)) [3 yy_base S2 A16])) lex.yy.c:1451 -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; if (_261 == yy_current_state_263)

(insn 790 788 791 (set (reg/f:DI 466)
        (symbol_ref:DI ("_ZL6yy_chk") [flags 0x2]  <var_decl 0x7f88bc0806c0 yy_chk>)) lex.yy.c:1451 -1
     (nil))

(insn 791 790 792 (set (reg:SI 467 [ D.6777 ])
        (zero_extend:SI (reg:HI 187 [ D.6787 ]))) lex.yy.c:1451 -1
     (nil))

(insn 792 791 793 (parallel [
            (set (reg:SI 468 [ D.6777 ])
                (plus:SI (reg:SI 467 [ D.6777 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1451 -1
     (nil))

(insn 793 792 794 (set (reg:DI 469)
        (sign_extend:DI (reg:SI 468 [ D.6777 ]))) lex.yy.c:1451 -1
     (nil))

(insn 794 793 795 (set (reg:SI 470 [ D.6777 ])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 469)
                        (const_int 2 [0x2]))
                    (reg/f:DI 466)) [3 yy_chk S2 A16]))) lex.yy.c:1451 -1
     (nil))

(insn 795 794 796 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 470 [ D.6777 ])
            (reg/v:SI 193 [ yy_current_state ]))) lex.yy.c:1451 -1
     (nil))

(jump_insn 796 795 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 789)
            (pc))) lex.yy.c:1451 -1
     (int_list:REG_BR_PROB 9100 (nil)))

;; Generating RTL for gimple basic block 107

;; 

(code_label 797 796 798 199 "" [0 uses])

(note 798 797 0 NOTE_INSN_BASIC_BLOCK)
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; yy_current_state_267 = (yy_state_type) _266;

(insn 799 798 800 (set (reg/f:DI 471)
        (symbol_ref:DI ("_ZL6yy_nxt") [flags 0x2]  <var_decl 0x7f88bc0803f0 yy_nxt>)) lex.yy.c:1457 -1
     (nil))

(insn 800 799 801 (set (reg:SI 472 [ D.6785 ])
        (zero_extend:SI (reg:HI 187 [ D.6787 ]))) lex.yy.c:1457 -1
     (nil))

(insn 801 800 802 (parallel [
            (set (reg:SI 473 [ D.6785 ])
                (plus:SI (reg:SI 472 [ D.6785 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1457 -1
     (nil))

(insn 802 801 803 (set (reg:DI 474)
        (zero_extend:DI (reg:SI 473 [ D.6785 ]))) lex.yy.c:1457 -1
     (nil))

(insn 803 802 0 (set (reg/v:SI 87 [ yy_current_state ])
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 474)
                        (const_int 2 [0x2]))
                    (reg/f:DI 471)) [3 yy_nxt S2 A16]))) lex.yy.c:1457 -1
     (nil))

;; # DEBUG yy_current_state => yy_current_state_267

(debug_insn 804 803 0 (var_location:SI yy_current_state (const_int 0 [0])) lex.yy.c:1457 -1
     (nil))
;; # DEBUG D#1 => yy_current_state_267 == 101

(debug_insn 805 804 0 (var_location:QI D#1 (const_int 0 [0])) lex.yy.c:1458 -1
     (nil))
;; # DEBUG yy_is_jam => (int) D#1

(debug_insn 806 805 0 (var_location:SI yy_is_jam (const_int 0 [0])) lex.yy.c:1458 -1
     (nil))
;; if (yy_current_state_267 != 101)

(insn 807 806 808 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ yy_current_state ])
            (const_int 101 [0x65]))) lex.yy.c:1460 -1
     (nil))

(jump_insn 808 807 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1460 -1
     (int_list:REG_BR_PROB 2800 (nil)))

;; Generating RTL for gimple basic block 108

;; # DEBUG yy_current_state => NULL

(debug_insn 810 809 0 (var_location:SI yy_current_state (const_int 0 [0])) lex.yy.c:1186 -1
     (nil))
;; # DEBUG yy_cp => NULL

(debug_insn 811 810 0 (var_location:DI yy_cp (const_int 0 [0])) lex.yy.c:1186 -1
     (nil))
;; # DEBUG yy_next_state => NULL

(debug_insn 812 811 0 (var_location:SI yy_next_state (const_int 0 [0])) lex.yy.c:1186 -1
     (nil))
;; yy_cp_213 = yytext;

(insn 813 812 0 (set (reg/v/f:DI 89 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1188 -1
     (nil))

;; # DEBUG yy_bp => yy_cp_213

(debug_insn 814 813 0 (var_location:DI yy_bp (const_int 0 [0])) lex.yy.c:1188 -1
     (nil))
;; if (yy_current_state_267 != 0)

(insn 815 814 816 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ yy_current_state ])
            (const_int 0 [0]))) lex.yy.c:1190 -1
     (nil))

(jump_insn 816 815 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 390)
            (pc))) lex.yy.c:1190 -1
     (int_list:REG_BR_PROB 9800 (nil)))

;; Generating RTL for gimple basic block 109

;; yy_cp_214 = yy_cp_207 + 1;

(insn 818 817 0 (parallel [
            (set (reg/v/f:DI 88 [ yy_cp ])
                (plus:DI (reg/v/f:DI 88 [ yy_cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1193 -1
     (nil))

;; yy_c_buf_p = yy_cp_214;

(insn 819 818 0 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:1193 -1
     (nil))

;; # DEBUG yy_cp => yy_cp_214

(debug_insn 820 819 0 (var_location:DI yy_cp (const_int 0 [0])) lex.yy.c:1193 -1
     (nil))
;; # DEBUG yy_current_state => yy_current_state_267

(debug_insn 821 820 0 (var_location:SI yy_current_state (const_int 0 [0])) lex.yy.c:1194 -1
     (nil))
;; Generating RTL for gimple basic block 110

;; 

(code_label 825 824 826 197 "" [0 uses])

(note 826 825 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG dest => dest_168

(debug_insn 827 826 0 (var_location:DI dest (const_int 0 [0])) lex.yy.c:1276 -1
     (nil))
;; source_307 = yytext;

(insn 828 827 0 (set (reg/v/f:DI 213 [ source ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1277 -1
     (nil))

;; # DEBUG source => source_307

(debug_insn 829 828 0 (var_location:DI source (const_int 0 [0])) lex.yy.c:1277 -1
     (nil))
;; if (_172 > _311)

(insn 830 829 831 (parallel [
            (set (reg:DI 475 [ D.6790 ])
                (plus:DI (reg:DI 157 [ D.6790 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1281 -1
     (nil))

(insn 831 830 832 (parallel [
            (set (reg:DI 476 [ D.6783 ])
                (plus:DI (reg/v/f:DI 156 [ dest ])
                    (reg:DI 475 [ D.6790 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1281 -1
     (nil))

(insn 832 831 833 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 244 [ D.6783 ])
            (reg:DI 476 [ D.6783 ]))) lex.yy.c:1281 -1
     (nil))

(jump_insn 833 832 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1281 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 111

;; yy_fatal_error ("fatal flex scanner internal error--end of buffer missed");

(insn 835 834 836 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f88bbbf2b40 *.LC21>)) lex.yy.c:1283 -1
     (nil))

(call_insn 836 835 837 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1283 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 837 836 0)

;; Generating RTL for gimple basic block 112

;; 

(code_label 838 837 839 203 "" [0 uses])

(note 839 838 0 NOTE_INSN_BASIC_BLOCK)

;; if (_313 == 0)

(insn 840 839 841 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                    (const_int 56 [0x38])) [2 _927->yy_fill_buffer+0 S4 A64])
            (const_int 0 [0]))) lex.yy.c:1285 -1
     (nil))

(jump_insn 841 840 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1285 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 113

;; if (_316 == 1)

(insn 843 842 844 113 (parallel [
            (set (reg:DI 477 [ D.6788 ])
                (minus:DI (reg/f:DI 244 [ D.6783 ])
                    (reg/v/f:DI 213 [ source ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1287 -1
     (nil))

(insn 844 843 845 113 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 477 [ D.6788 ])
            (const_int 1 [0x1]))) lex.yy.c:1287 -1
     (nil))

(jump_insn 845 844 848 113 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1287 -1
     (int_list:REG_BR_PROB 1608 (nil)))

(note 848 845 846 169 [bb 169] NOTE_INSN_BASIC_BLOCK)

(jump_insn 846 848 847 169 (set (pc)
        (label_ref 0)) lex.yy.c:1287 -1
     (nil))

(barrier 847 846 0)

;; Generating RTL for gimple basic block 114

;; 

(code_label 849 847 850 204 "" [0 uses])

(note 850 849 0 NOTE_INSN_BASIC_BLOCK)

;; number_to_move_321 = _320 + 18446744073709551615;

(insn 851 850 852 (parallel [
            (set (reg:DI 478 [ D.6788 ])
                (minus:DI (reg/f:DI 244 [ D.6783 ])
                    (reg/v/f:DI 213 [ source ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1307 -1
     (nil))

(insn 852 851 0 (parallel [
            (set (reg/v:DI 224 [ number_to_move ])
                (plus:DI (reg:DI 478 [ D.6788 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1307 -1
     (nil))

;; # DEBUG number_to_move => number_to_move_321

(debug_insn 853 852 0 (var_location:DI number_to_move (const_int 0 [0])) lex.yy.c:1307 -1
     (nil))
;; # DEBUG i => 0

(debug_insn 854 853 0 (var_location:DI i (const_int 0 [0])) lex.yy.c:1309 -1
     (nil))
;; # DEBUG i => 0

(debug_insn 855 854 0 (var_location:DI i (const_int 0 [0])) -1
     (nil))
;; # DEBUG source => source_307

(debug_insn 856 855 0 (var_location:DI source (const_int 0 [0])) -1
     (nil))
;; # DEBUG dest => dest_168

(debug_insn 857 856 0 (var_location:DI dest (const_int 0 [0])) -1
     (nil))
;; if (number_to_move_321 == 0)

(insn 858 857 859 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 224 [ number_to_move ])
            (const_int 0 [0]))) lex.yy.c:1309 -1
     (nil))

(jump_insn 859 858 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1309 -1
     (int_list:REG_BR_PROB 900 (nil)))

;; Generating RTL for gimple basic block 115

;; # DEBUG i => i_563

(debug_insn 861 860 0 (var_location:DI i (const_int 0 [0])) -1
     (nil))
;; # DEBUG source => source_307 + (sizetype) i_563

(debug_insn 862 861 0 (var_location:DI source (const_int 0 [0])) -1
     (nil))
;; # DEBUG dest => dest_168 + (sizetype) i_563

(debug_insn 863 862 0 (var_location:DI dest (const_int 0 [0])) -1
     (nil))
;; # DEBUG D#17 => dest_168 + ((sizetype) i_563 + 1)

(debug_insn 864 863 0 (var_location:DI D#17 (const_int 0 [0])) -1
     (nil))
;; # DEBUG dest => D#17

(debug_insn 865 864 0 (var_location:DI dest (const_int 0 [0])) lex.yy.c:1310 -1
     (nil))
;; # DEBUG D#18 => source_307 + ((sizetype) i_563 + 1)

(debug_insn 866 865 0 (var_location:DI D#18 (const_int 0 [0])) -1
     (nil))
;; # DEBUG source => D#18

(debug_insn 867 866 0 (var_location:DI source (const_int 0 [0])) lex.yy.c:1310 -1
     (nil))
;; _327 = MEM[base: source_307, index: i_563, offset: 0B];

(insn 868 867 0 (set (reg:QI 226 [ D.6789 ])
        (mem:QI (plus:DI (reg/v/f:DI 213 [ source ])
                (reg/v:DI 227 [ i ])) [0 MEM[base: source_307, index: i_563, offset: 0B]+0 S1 A8])) lex.yy.c:1310 -1
     (nil))

;; MEM[base: dest_168, index: i_563, offset: 0B] = _327;

(insn 869 868 0 (set (mem:QI (plus:DI (reg/v/f:DI 156 [ dest ])
                (reg/v:DI 227 [ i ])) [0 MEM[base: dest_168, index: i_563, offset: 0B]+0 S1 A8])
        (reg:QI 226 [ D.6789 ])) lex.yy.c:1310 -1
     (nil))

;; i_328 = i_563 + 1;

(insn 870 869 0 (parallel [
            (set (reg/v:DI 227 [ i ])
                (plus:DI (reg/v:DI 227 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1309 -1
     (nil))

;; # DEBUG i => i_328

(debug_insn 871 870 0 (var_location:DI i (const_int 0 [0])) lex.yy.c:1309 -1
     (nil))
;; # DEBUG i => i_328

(debug_insn 872 871 0 (var_location:DI i (const_int 0 [0])) -1
     (nil))
;; # DEBUG source => D#18

(debug_insn 873 872 0 (var_location:DI source (const_int 0 [0])) -1
     (nil))
;; # DEBUG dest => D#17

(debug_insn 874 873 0 (var_location:DI dest (const_int 0 [0])) -1
     (nil))
;; if (number_to_move_321 == i_328)

(insn 876 874 877 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 224 [ number_to_move ])
            (reg/v:DI 227 [ i ]))) lex.yy.c:1309 -1
     (nil))

(jump_insn 877 876 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 875)
            (pc))) lex.yy.c:1309 -1
     (int_list:REG_BR_PROB 9100 (nil)))

;; Generating RTL for gimple basic block 116

;; _943 = *_142;

(insn 879 878 0 (set (reg/f:DI 245 [ D.6782 ])
        (mem/f:DI (reg/f:DI 152 [ D.6780 ]) [1 *_142+0 S8 A64])) -1
     (nil))

;; Generating RTL for gimple basic block 117

;; 

(code_label 880 879 881 207 "" [0 uses])

(note 881 880 0 NOTE_INSN_BASIC_BLOCK)

;; if (_330 == 2)

(insn 882 881 883 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                    (const_int 60 [0x3c])) [2 _944->yy_buffer_status+0 S4 A32])
            (const_int 2 [0x2]))) lex.yy.c:1312 -1
     (nil))

(jump_insn 883 882 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1312 -1
     (int_list:REG_BR_PROB 7200 (nil)))

;; Generating RTL for gimple basic block 118

;; yy_n_chars = 0;

(insn 885 884 0 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1316 -1
     (nil))

;; _944->yy_n_chars = 0;

(insn 886 885 0 (set (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 32 [0x20])) [2 _944->yy_n_chars+0 S4 A64])
        (const_int 0 [0])) lex.yy.c:1316 -1
     (nil))

;; Generating RTL for gimple basic block 119

;; 

(code_label 889 888 890 209 "" [0 uses])

(note 890 889 0 NOTE_INSN_BASIC_BLOCK)

;; num_to_read_333 = _363 - number_to_move_321;

(insn 891 890 892 (set (reg:DI 480)
        (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 24 [0x18])) [4 _944->yy_buf_size+0 S8 A64])) lex.yy.c:1321 -1
     (nil))

(insn 892 891 893 (parallel [
            (set (reg:DI 479 [ D.6781 ])
                (plus:DI (reg:DI 480)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1321 -1
     (expr_list:REG_EQUAL (plus:DI (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                    (const_int 24 [0x18])) [4 _944->yy_buf_size+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 893 892 0 (parallel [
            (set (reg/v:DI 230 [ num_to_read ])
                (minus:DI (reg:DI 479 [ D.6781 ])
                    (reg/v:DI 224 [ number_to_move ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1321 -1
     (nil))

;; # DEBUG num_to_read => num_to_read_333

(debug_insn 894 893 0 (var_location:DI num_to_read (const_int 0 [0])) lex.yy.c:1321 -1
     (nil))
;; # DEBUG num_to_read => num_to_read_333

(debug_insn 895 894 0 (var_location:DI num_to_read (const_int 0 [0])) -1
     (nil))
;; if (num_to_read_333 != 0)

(insn 896 895 897 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 230 [ num_to_read ])
            (const_int 0 [0]))) lex.yy.c:1323 -1
     (nil))

(jump_insn 897 896 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1323 -1
     (int_list:REG_BR_PROB 450 (nil)))

;; Generating RTL for gimple basic block 120

;; Generating RTL for gimple basic block 121

;; # DEBUG num_to_read => 0

(debug_insn 900 899 0 (var_location:DI num_to_read (const_int 0 [0])) -1
     (nil))
;; # DEBUG D#14 => yy_buffer_stack

(debug_insn 901 900 0 (var_location:DI D#14 (const_int 0 [0])) lex.yy.c:1327 -1
     (nil))
;; # DEBUG D#13 => yy_buffer_stack_top

(debug_insn 902 901 0 (var_location:DI D#13 (const_int 0 [0])) lex.yy.c:1327 -1
     (nil))
;; # DEBUG D#12 => D#13 * 8

(debug_insn 903 902 0 (var_location:DI D#12 (const_int 0 [0])) lex.yy.c:1327 -1
     (nil))
;; # DEBUG D#11 => D#14 + D#12

(debug_insn 904 903 0 (var_location:DI D#11 (const_int 0 [0])) lex.yy.c:1327 -1
     (nil))
;; # DEBUG D#10 => *D#11

(debug_insn 905 904 0 (var_location:DI D#10 (const_int 0 [0])) lex.yy.c:1327 -1
     (nil))
;; # DEBUG b => D#10

(debug_insn 906 905 0 (var_location:DI b (const_int 0 [0])) lex.yy.c:1327 -1
     (nil))
;; _342 = _986->yy_ch_buf;

(insn 907 906 0 (set (reg/f:DI 232 [ D.6783 ])
        (mem/f:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 8 [0x8])) [1 _986->yy_ch_buf+0 S8 A64])) lex.yy.c:1330 -1
     (nil))

;; yy_c_buf_p_offset_345 = (int) _344;

(insn 908 907 909 (parallel [
            (set (reg:DI 481 [ D.6788 ])
                (minus:DI (reg/f:DI 244 [ D.6783 ])
                    (reg/f:DI 232 [ D.6783 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1330 -1
     (nil))

(insn 909 908 0 (set (reg/v:SI 235 [ yy_c_buf_p_offset ])
        (subreg:SI (reg:DI 481 [ D.6788 ]) 0)) lex.yy.c:1330 -1
     (nil))

;; # DEBUG yy_c_buf_p_offset => yy_c_buf_p_offset_345

(debug_insn 910 909 0 (var_location:SI yy_c_buf_p_offset (const_int 0 [0])) lex.yy.c:1330 -1
     (nil))
;; if (_346 != 0)

(insn 911 910 912 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                    (const_int 36 [0x24])) [2 _986->yy_is_our_buffer+0 S4 A32])
            (const_int 0 [0]))) lex.yy.c:1332 -1
     (nil))

(jump_insn 912 911 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1332 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 122

;; _347 = _986->yy_buf_size;

(insn 914 913 0 (set (reg:DI 237 [ D.6781 ])
        (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 24 [0x18])) [4 _986->yy_buf_size+0 S8 A64])) lex.yy.c:1334 -1
     (nil))

;; new_size_348 = _347 * 2;

(insn 915 914 0 (parallel [
            (set (reg/v:DI 238 [ new_size ])
                (ashift:DI (reg:DI 237 [ D.6781 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1334 -1
     (nil))

;; # DEBUG new_size => new_size_348

(debug_insn 916 915 0 (var_location:DI new_size (const_int 0 [0])) lex.yy.c:1334 -1
     (nil))
;; if (new_size_348 == 0)

(insn 917 916 918 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 238 [ new_size ])
            (const_int 0 [0]))) lex.yy.c:1336 -1
     (nil))

(jump_insn 918 917 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1336 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 123
Swap operands in stmt:
_350 = _347 + _349;
Cost left opnd=0, right opnd=1

;; _350 = _349 + _347;

(insn 920 919 921 (parallel [
            (set (reg:DI 482 [ D.6781 ])
                (lshiftrt:DI (reg:DI 237 [ D.6781 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1337 -1
     (nil))

(insn 921 920 0 (parallel [
            (set (reg:DI 240 [ D.6781 ])
                (plus:DI (reg:DI 482 [ D.6781 ])
                    (reg:DI 237 [ D.6781 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1337 -1
     (nil))

;; _986->yy_buf_size = _350;

(insn 922 921 0 (set (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 24 [0x18])) [4 _986->yy_buf_size+0 S8 A64])
        (reg:DI 240 [ D.6781 ])) lex.yy.c:1337 -1
     (nil))

;; Generating RTL for gimple basic block 124

;; 

(code_label 925 924 926 213 "" [0 uses])

(note 926 925 0 NOTE_INSN_BASIC_BLOCK)

;; _986->yy_buf_size = new_size_348;

(insn 927 926 0 (set (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 24 [0x18])) [4 _986->yy_buf_size+0 S8 A64])
        (reg/v:DI 238 [ new_size ])) lex.yy.c:1339 -1
     (nil))

;; Generating RTL for gimple basic block 125

;; 

(code_label 928 927 929 214 "" [0 uses])

(note 929 928 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG ptr => _342

(debug_insn 930 929 0 (var_location:DI ptr (const_int 0 [0])) lex.yy.c:1343 -1
     (nil))
;; # DEBUG size => _352

(debug_insn 931 930 0 (var_location:DI size (const_int 0 [0])) lex.yy.c:1343 -1
     (nil))
;; _353 = realloc (_342, _352);

(insn 932 931 933 (parallel [
            (set (reg:DI 483 [ D.6781 ])
                (plus:DI (reg:DI 240 [ D.6781 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2136 -1
     (nil))

(insn 933 932 934 (set (reg:DI 4 si)
        (reg:DI 483 [ D.6781 ])) lex.yy.c:2136 -1
     (nil))

(insn 934 933 935 (set (reg:DI 5 di)
        (reg/f:DI 232 [ D.6783 ])) lex.yy.c:2136 -1
     (nil))

(call_insn 935 934 936 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2136 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 936 935 0 (set (reg/f:DI 242 [ D.6793 ])
        (reg:DI 0 ax)) lex.yy.c:2136 -1
     (nil))

;; # DEBUG ptr => NULL

(debug_insn 937 936 0 (var_location:DI ptr (const_int 0 [0])) lex.yy.c:1343 -1
     (nil))
;; # DEBUG size => NULL

(debug_insn 938 937 0 (var_location:DI size (const_int 0 [0])) lex.yy.c:1343 -1
     (nil))
;; _986->yy_ch_buf = _353;

(insn 939 938 0 (set (mem/f:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 8 [0x8])) [1 _986->yy_ch_buf+0 S8 A64])
        (reg/f:DI 242 [ D.6793 ])) lex.yy.c:1343 -1
     (nil))

;; if (_353 == 0B)

(insn 940 939 941 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 242 [ D.6793 ])
            (const_int 0 [0]))) lex.yy.c:1349 -1
     (nil))

(jump_insn 941 940 944 125 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1349 -1
     (int_list:REG_BR_PROB 0 (nil)))

(note 944 941 942 170 [bb 170] NOTE_INSN_BASIC_BLOCK)

(jump_insn 942 944 943 170 (set (pc)
        (label_ref 0)) lex.yy.c:1349 -1
     (nil))

(barrier 943 942 0)

;; Generating RTL for gimple basic block 126

;; 

(code_label 945 943 946 212 "" [0 uses])

(note 946 945 0 NOTE_INSN_BASIC_BLOCK)

;; _986->yy_ch_buf = 0B;

(insn 947 946 0 (set (mem/f:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 8 [0x8])) [1 _986->yy_ch_buf+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:1347 -1
     (nil))

;; Generating RTL for gimple basic block 127

;; 

(code_label 948 947 949 215 "" [0 uses])

(note 949 948 0 NOTE_INSN_BASIC_BLOCK)

;; yy_fatal_error ("fatal error - scanner input buffer overflow");

(insn 950 949 951 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f88bbbf2bd0 *.LC22>)) lex.yy.c:1351 -1
     (nil))

(call_insn 951 950 952 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1351 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 952 951 0)

;; Generating RTL for gimple basic block 128

;; 

(code_label 953 952 954 216 "" [0 uses])

(note 954 953 0 NOTE_INSN_BASIC_BLOCK)

;; _356 = _353 + _355;

(insn 955 954 956 (set (reg:DI 484 [ D.6790 ])
        (sign_extend:DI (reg/v:SI 235 [ yy_c_buf_p_offset ]))) lex.yy.c:1353 -1
     (nil))

(insn 956 955 0 (parallel [
            (set (reg/f:DI 244 [ D.6783 ])
                (plus:DI (reg/f:DI 242 [ D.6793 ])
                    (reg:DI 484 [ D.6790 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1353 -1
     (nil))

;; yy_c_buf_p = _356;

(insn 957 956 0 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 244 [ D.6783 ])) lex.yy.c:1353 -1
     (nil))

;; _361 = *_142;

(insn 958 957 0 (set (reg/f:DI 245 [ D.6782 ])
        (mem/f:DI (reg/f:DI 152 [ D.6780 ]) [1 *_142+0 S8 A64])) lex.yy.c:1355 -1
     (nil))

;; num_to_read_364 = _372 - number_to_move_321;

(insn 959 958 960 (set (reg:DI 486)
        (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 24 [0x18])) [4 _361->yy_buf_size+0 S8 A64])) lex.yy.c:1356 -1
     (nil))

(insn 960 959 961 (parallel [
            (set (reg:DI 485 [ D.6781 ])
                (plus:DI (reg:DI 486)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1356 -1
     (expr_list:REG_EQUAL (plus:DI (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                    (const_int 24 [0x18])) [4 _361->yy_buf_size+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 961 960 0 (parallel [
            (set (reg/v:DI 230 [ num_to_read ])
                (minus:DI (reg:DI 485 [ D.6781 ])
                    (reg/v:DI 224 [ number_to_move ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1356 -1
     (nil))

;; # DEBUG num_to_read => num_to_read_364

(debug_insn 962 961 0 (var_location:DI num_to_read (const_int 0 [0])) lex.yy.c:1356 -1
     (nil))
;; # DEBUG num_to_read => num_to_read_364

(debug_insn 963 962 0 (var_location:DI num_to_read (const_int 0 [0])) -1
     (nil))
;; if (num_to_read_364 != 0)

(insn 965 963 966 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 230 [ num_to_read ])
            (const_int 0 [0]))) lex.yy.c:1323 -1
     (nil))

(jump_insn 966 965 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 964)
            (pc))) lex.yy.c:1323 -1
     (int_list:REG_BR_PROB 9550 (nil)))

;; Generating RTL for gimple basic block 129

;; 

(code_label 967 966 968 211 "" [0 uses])

(note 968 967 0 NOTE_INSN_BASIC_BLOCK)

;; num_to_read_507 = MIN_EXPR <num_to_read_560, 8192>;

(insn 970 968 969 (set (reg:DI 487)
        (const_int 8192 [0x2000])) -1
     (nil))

(insn 969 970 971 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 230 [ num_to_read ])
            (const_int 8192 [0x2000]))) -1
     (nil))

(insn 971 969 0 (set (reg/v:DI 309 [ num_to_read ])
        (if_then_else:DI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg/v:DI 230 [ num_to_read ])
            (reg:DI 487))) -1
     (nil))

;; # DEBUG num_to_read => num_to_read_507

(debug_insn 972 971 0 (var_location:DI num_to_read (const_int 0 [0])) -1
     (nil))
;; if (_370 != 0)

(insn 973 972 974 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                    (const_int 40 [0x28])) [2 _961->yy_is_interactive+0 S4 A64])
            (const_int 0 [0]))) lex.yy.c:1364 -1
     (nil))

(jump_insn 974 973 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1364 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 130

;; Generating RTL for gimple basic block 131

;; # DEBUG n => n_304

(debug_insn 977 976 0 (var_location:DI n (const_int 0 [0])) -1
     (nil))
;; # DEBUG c => 42

(debug_insn 978 977 0 (var_location:SI c (const_int 0 [0])) -1
     (nil))
;; c_374 = _IO_getc (_373);

(insn 979 978 980 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1364 -1
     (nil))

(call_insn 980 979 981 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_getc") [flags 0x41]  <function_decl 0x7f88bbf40510 _IO_getc>) [0 _IO_getc S1 A8])
            (const_int 0 [0]))) lex.yy.c:1364 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_IO_getc") [flags 0x41]  <function_decl 0x7f88bbf40510 _IO_getc>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 981 980 0 (set (reg/v:SI 251 [ c ])
        (reg:SI 0 ax)) lex.yy.c:1364 -1
     (nil))

;; # DEBUG c => c_374

(debug_insn 982 981 0 (var_location:SI c (const_int 0 [0])) lex.yy.c:1364 -1
     (nil))
;; if (c_374 != -1)

(insn 983 982 984 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 251 [ c ])
            (const_int -1 [0xffffffffffffffff]))) lex.yy.c:1364 -1
     (nil))

(jump_insn 984 983 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1364 -1
     (int_list:REG_BR_PROB 2799 (nil)))

;; Generating RTL for gimple basic block 132

;; if (c_374 != 10)

(insn 986 985 987 132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 251 [ c ])
            (const_int 10 [0xa]))) lex.yy.c:1364 -1
     (nil))

(jump_insn 987 986 990 132 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1364 -1
     (int_list:REG_BR_PROB 7200 (nil)))

(note 990 987 988 171 [bb 171] NOTE_INSN_BASIC_BLOCK)

(jump_insn 988 990 989 171 (set (pc)
        (label_ref 0)) lex.yy.c:1364 -1
     (nil))

(barrier 989 988 0)

;; Generating RTL for gimple basic block 133

;; yy_fatal_error ("input in flex scanner failed");

(insn 992 991 993 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f88bbbf2c60 *.LC23>)) lex.yy.c:1364 -1
     (nil))

(call_insn 993 992 994 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1364 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 994 993 0)

;; Generating RTL for gimple basic block 134

;; _401 = (int) n_559;

(insn 996 995 0 (set (reg:SI 275 [ D.6777 ])
        (subreg:SI (reg/v:DI 212 [ n ]) 0)) lex.yy.c:1364 -1
     (nil))

;; yy_n_chars = _401;

(insn 997 996 0 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 275 [ D.6777 ])) lex.yy.c:1364 -1
     (nil))

;; Generating RTL for gimple basic block 135

;; 

(code_label 1000 999 1001 218 "" [0 uses])

(note 1001 1000 0 NOTE_INSN_BASIC_BLOCK)

;; _402 = __errno_location ();

(call_insn/u 1002 1001 1003 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f88bbffbca8 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) lex.yy.c:1364 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f88bbffbca8 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))

(insn 1003 1002 0 (set (reg/f:DI 270 [ D.6794 ])
        (reg:DI 0 ax)) lex.yy.c:1364 -1
     (nil))

;; *_402 = 0;

(insn 1004 1003 0 (set (mem:SI (reg/f:DI 270 [ D.6794 ]) [2 *_402+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1364 -1
     (nil))

;; Generating RTL for gimple basic block 136

;; # DEBUG __ptr => _410

(debug_insn 1006 1005 0 (var_location:DI __ptr (const_int 0 [0])) lex.yy.c:1364 -1
     (nil))
;; # DEBUG __size => 1

(debug_insn 1007 1006 0 (var_location:DI __size (const_int 0 [0])) lex.yy.c:1364 -1
     (nil))
;; # DEBUG __n => num_to_read_507

(debug_insn 1008 1007 0 (var_location:DI __n (const_int 0 [0])) lex.yy.c:1364 -1
     (nil))
;; # DEBUG __stream => _403

(debug_insn 1009 1008 0 (var_location:DI __stream (const_int 0 [0])) lex.yy.c:1364 -1
     (nil))
;; _417 = __fread_alias (_410, 1, num_to_read_507, _403);

(insn 1010 1009 1011 (set (reg/f:DI 489)
        (mem/f:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 8 [0x8])) [1 _971->yy_ch_buf+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 -1
     (nil))

(insn 1011 1010 1012 (parallel [
            (set (reg:DI 488 [ D.6783 ])
                (plus:DI (reg/v:DI 224 [ number_to_move ])
                    (reg/f:DI 489)))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                    (const_int 8 [0x8])) [1 _971->yy_ch_buf+0 S8 A64])
            (reg/v:DI 224 [ number_to_move ]))
        (nil)))

(insn 1012 1011 1013 (set (reg:DI 2 cx)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 -1
     (nil))

(insn 1013 1012 1014 (set (reg:DI 1 dx)
        (reg/v:DI 309 [ num_to_read ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 -1
     (nil))

(insn 1014 1013 1015 (set (reg:DI 4 si)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 -1
     (nil))

(insn 1015 1014 1016 (set (reg:DI 5 di)
        (reg:DI 488 [ D.6783 ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 -1
     (nil))

(call_insn 1016 1015 1017 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*fread") [flags 0x41]  <function_decl 0x7f88bbfb8870 __fread_alias>) [0 __fread_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*fread") [flags 0x41]  <function_decl 0x7f88bbfb8870 __fread_alias>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))

(insn 1017 1016 0 (set (reg:DI 274 [ D.6781 ])
        (reg:DI 0 ax)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 -1
     (nil))

;; # DEBUG __ptr => NULL

(debug_insn 1018 1017 0 (var_location:DI __ptr (const_int 0 [0])) lex.yy.c:1364 -1
     (nil))
;; # DEBUG __size => NULL

(debug_insn 1019 1018 0 (var_location:DI __size (const_int 0 [0])) lex.yy.c:1364 -1
     (nil))
;; # DEBUG __n => NULL

(debug_insn 1020 1019 0 (var_location:DI __n (const_int 0 [0])) lex.yy.c:1364 -1
     (nil))
;; # DEBUG __stream => NULL

(debug_insn 1021 1020 0 (var_location:DI __stream (const_int 0 [0])) lex.yy.c:1364 -1
     (nil))
;; _419 = (int) _417;

(insn 1022 1021 0 (set (reg:SI 275 [ D.6777 ])
        (subreg:SI (reg:DI 274 [ D.6781 ]) 0)) lex.yy.c:1364 -1
     (nil))

;; yy_n_chars = _419;

(insn 1023 1022 0 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 275 [ D.6777 ])) lex.yy.c:1364 -1
     (nil))

;; if (_419 == 0)

(insn 1024 1023 1025 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 275 [ D.6777 ])
            (const_int 0 [0]))) lex.yy.c:1364 -1
     (nil))

(jump_insn 1025 1024 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1364 -1
     (int_list:REG_BR_PROB 7100 (nil)))

;; Generating RTL for gimple basic block 137

;; _421 = ferror (_420);

(insn 1027 1026 1028 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1364 -1
     (nil))

(call_insn 1028 1027 1029 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f88bbf956c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) lex.yy.c:1364 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f88bbf956c0 ferror>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 1029 1028 0 (set (reg:SI 277 [ D.6777 ])
        (reg:SI 0 ax)) lex.yy.c:1364 -1
     (nil))

;; if (_421 != 0)

(insn 1030 1029 1031 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 277 [ D.6777 ])
            (const_int 0 [0]))) lex.yy.c:1364 -1
     (nil))

(jump_insn 1031 1030 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1364 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 138

;; _972 = yy_n_chars;

(insn 1033 1032 0 (set (reg:SI 275 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) -1
     (nil))

;; Generating RTL for gimple basic block 139

;; *_402 = 0;

(insn 1037 1036 0 (set (mem:SI (reg/f:DI 270 [ D.6794 ]) [2 *_402+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1364 -1
     (nil))

;; clearerr (_424);

(insn 1038 1037 1039 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1364 -1
     (nil))

(call_insn 1039 1038 0 (call (mem:QI (symbol_ref:DI ("clearerr") [flags 0x41]  <function_decl 0x7f88bbf95510 clearerr>) [0 clearerr S1 A8])
        (const_int 0 [0])) lex.yy.c:1364 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("clearerr") [flags 0x41]  <function_decl 0x7f88bbf95510 clearerr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _970 = *_969;

(insn 1040 1039 1041 (set (reg:DI 490)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) -1
     (nil))

(insn 1041 1040 1042 (set (reg/f:DI 491)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) -1
     (nil))

(insn 1042 1041 0 (set (reg/f:DI 245 [ D.6782 ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 490)
                    (const_int 8 [0x8]))
                (reg/f:DI 491)) [1 *_969+0 S8 A64])) -1
     (nil))

;; Generating RTL for gimple basic block 140

;; 

(code_label 1046 1045 1047 222 "" [0 uses])

(note 1047 1046 0 NOTE_INSN_BASIC_BLOCK)

;; _429 = *_1064;

(insn 1048 1047 0 (set (reg/f:DI 280 [ D.6782 ])
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_1064+0 S8 A64])) lex.yy.c:1367 -1
     (nil))

;; _429->yy_n_chars = _963;

(insn 1049 1048 0 (set (mem:SI (plus:DI (reg/f:DI 280 [ D.6782 ])
                (const_int 32 [0x20])) [2 _429->yy_n_chars+0 S4 A64])
        (reg:SI 275 [ D.6777 ])) lex.yy.c:1367 -1
     (nil))

;; if (_963 == 0)

(insn 1050 1049 1051 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 275 [ D.6777 ])
            (const_int 0 [0]))) lex.yy.c:1370 -1
     (nil))

(jump_insn 1051 1050 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1370 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 141

;; 

(code_label 1052 1051 1053 210 "" [0 uses])

(note 1053 1052 0 NOTE_INSN_BASIC_BLOCK)

;; if (number_to_move_321 == 0)

(insn 1054 1053 1055 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 224 [ number_to_move ])
            (const_int 0 [0]))) lex.yy.c:1372 -1
     (nil))

(jump_insn 1055 1054 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1372 -1
     (int_list:REG_BR_PROB 7100 (nil)))

;; Generating RTL for gimple basic block 142

;; # DEBUG ret_val => 1

(debug_insn 1057 1056 0 (var_location:SI ret_val (const_int 0 [0])) lex.yy.c:1374 -1
     (nil))
;; yyrestart (_432);

(insn 1058 1057 1059 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1375 -1
     (nil))

(call_insn 1059 1058 0 (call (mem:QI (symbol_ref:DI ("_Z9yyrestartP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c1b0 yyrestart>) [0 yyrestart S1 A8])
        (const_int 0 [0])) lex.yy.c:1375 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z9yyrestartP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c1b0 yyrestart>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _945 = yy_n_chars;

(insn 1060 1059 0 (set (reg:SI 275 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) -1
     (nil))

;; _954 = _948 + _952;

(insn 1061 1060 1062 (set (reg:DI 493)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) -1
     (nil))

(insn 1062 1061 1063 (parallel [
            (set (reg:DI 492 [ D.6781 ])
                (ashift:DI (reg:DI 493)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))

(insn 1063 1062 1064 (set (reg/f:DI 494)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) -1
     (nil))

(insn 1064 1063 0 (parallel [
            (set (reg/f:DI 347 [ D.6780 ])
                (plus:DI (reg:DI 492 [ D.6781 ])
                    (reg/f:DI 494)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
            (reg:DI 492 [ D.6781 ]))
        (nil)))

;; _956 = *_954;

(insn 1065 1064 0 (set (reg/f:DI 280 [ D.6782 ])
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_954+0 S8 A64])) -1
     (nil))

;; Generating RTL for gimple basic block 143

;; 

(code_label 1068 1067 1069 227 "" [0 uses])

(note 1069 1068 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG ret_val => 2

(debug_insn 1070 1069 0 (var_location:SI ret_val (const_int 0 [0])) lex.yy.c:1380 -1
     (nil))
;; _436 = _433 + _435;

(insn 1071 1070 1072 (set (reg:DI 496)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1381 -1
     (nil))

(insn 1072 1071 1073 (parallel [
            (set (reg:DI 495 [ D.6781 ])
                (ashift:DI (reg:DI 496)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1381 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))

(insn 1073 1072 1074 (set (reg/f:DI 497)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1381 -1
     (nil))

(insn 1074 1073 0 (parallel [
            (set (reg/f:DI 347 [ D.6780 ])
                (plus:DI (reg:DI 495 [ D.6781 ])
                    (reg/f:DI 497)))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1381 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
            (reg:DI 495 [ D.6781 ]))
        (nil)))

;; _437 = *_436;

(insn 1075 1074 0 (set (reg/f:DI 280 [ D.6782 ])
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_436+0 S8 A64])) lex.yy.c:1381 -1
     (nil))

;; _437->yy_buffer_status = 2;

(insn 1076 1075 0 (set (mem:SI (plus:DI (reg/f:DI 280 [ D.6782 ])
                (const_int 60 [0x3c])) [2 _437->yy_buffer_status+0 S4 A32])
        (const_int 2 [0x2])) lex.yy.c:1382 -1
     (nil))

;; _946 = yy_n_chars;

(insn 1077 1076 0 (set (reg:SI 275 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) -1
     (nil))

;; Generating RTL for gimple basic block 144

;; 

(code_label 1078 1077 1079 226 "" [0 uses])

(note 1079 1078 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG ret_val => ret_val_472

(debug_insn 1080 1079 0 (var_location:SI ret_val (const_int 0 [0])) -1
     (nil))
;; _441 = _438 + _440;

(insn 1081 1080 0 (parallel [
            (set (reg:SI 287 [ D.6795 ])
                (plus:SI (reg:SI 275 [ D.6777 ])
                    (subreg:SI (reg/v:DI 224 [ number_to_move ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1389 -1
     (nil))

;; _442 = (int) _441;

(insn 1082 1081 0 (set (reg:SI 288 [ D.6777 ])
        (reg:SI 287 [ D.6795 ])) lex.yy.c:1389 -1
     (nil))

;; _443 = (long unsigned int) _442;

(insn 1083 1082 0 (set (reg:DI 289 [ D.6781 ])
        (sign_extend:DI (reg:SI 288 [ D.6777 ]))) lex.yy.c:1389 -1
     (nil))

;; if (_443 > _449)

(insn 1084 1083 1085 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 289 [ D.6781 ])
            (mem:DI (plus:DI (reg/f:DI 280 [ D.6782 ])
                    (const_int 24 [0x18])) [4 _957->yy_buf_size+0 S8 A64]))) lex.yy.c:1389 -1
     (nil))

(jump_insn 1085 1084 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1389 -1
     (int_list:REG_BR_PROB 7100 (nil)))

;; Generating RTL for gimple basic block 145
Swap operands in stmt:
_452 = _441 + _451;
Cost left opnd=0, right opnd=1

;; # DEBUG new_size => new_size_453

(debug_insn 1087 1086 0 (var_location:SI new_size (const_int 0 [0])) lex.yy.c:1391 -1
     (nil))
;; # DEBUG ptr => _455

(debug_insn 1088 1087 0 (var_location:DI ptr (const_int 0 [0])) lex.yy.c:1392 -1
     (nil))
;; # DEBUG size => _454

(debug_insn 1089 1088 0 (var_location:DI size (const_int 0 [0])) lex.yy.c:1392 -1
     (nil))
;; _456 = realloc (_455, _454);

(insn 1090 1089 1091 (parallel [
            (set (reg:SI 498 [ D.6777 ])
                (ashiftrt:SI (reg:SI 275 [ D.6777 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2136 -1
     (nil))

(insn 1091 1090 1092 (parallel [
            (set (reg:SI 499 [ D.6795 ])
                (plus:SI (reg:SI 498 [ D.6777 ])
                    (reg:SI 287 [ D.6795 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2136 -1
     (nil))

(insn 1092 1091 1093 (set (reg:DI 500 [ D.6781 ])
        (sign_extend:DI (reg:SI 499 [ D.6795 ]))) lex.yy.c:2136 -1
     (nil))

(insn 1093 1092 1094 (set (reg:DI 501)
        (mem/f:DI (plus:DI (reg/f:DI 280 [ D.6782 ])
                (const_int 8 [0x8])) [1 _957->yy_ch_buf+0 S8 A64])) lex.yy.c:2136 -1
     (nil))

(insn 1094 1093 1095 (set (reg:DI 4 si)
        (reg:DI 500 [ D.6781 ])) lex.yy.c:2136 -1
     (nil))

(insn 1095 1094 1096 (set (reg:DI 5 di)
        (reg:DI 501)) lex.yy.c:2136 -1
     (nil))

(call_insn 1096 1095 1097 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2136 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 1097 1096 0 (set (reg/f:DI 297 [ D.6793 ])
        (reg:DI 0 ax)) lex.yy.c:2136 -1
     (nil))

;; # DEBUG ptr => NULL

(debug_insn 1098 1097 0 (var_location:DI ptr (const_int 0 [0])) lex.yy.c:1392 -1
     (nil))
;; # DEBUG size => NULL

(debug_insn 1099 1098 0 (var_location:DI size (const_int 0 [0])) lex.yy.c:1392 -1
     (nil))
;; _957->yy_ch_buf = _456;

(insn 1100 1099 0 (set (mem/f:DI (plus:DI (reg/f:DI 280 [ D.6782 ])
                (const_int 8 [0x8])) [1 _957->yy_ch_buf+0 S8 A64])
        (reg/f:DI 297 [ D.6793 ])) lex.yy.c:1392 -1
     (nil))

;; _458 = _457->yy_ch_buf;

(insn 1101 1100 1102 (set (reg/f:DI 502)
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_955+0 S8 A64])) lex.yy.c:1393 -1
     (nil))

(insn 1102 1101 0 (set (reg/f:DI 299 [ D.6783 ])
        (mem/f:DI (plus:DI (reg/f:DI 502)
                (const_int 8 [0x8])) [1 _457->yy_ch_buf+0 S8 A64])) lex.yy.c:1393 -1
     (nil))

;; if (_458 == 0B)

(insn 1103 1102 1104 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 299 [ D.6783 ])
            (const_int 0 [0]))) lex.yy.c:1393 -1
     (nil))

(jump_insn 1104 1103 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1393 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 146

;; yy_fatal_error ("out of dynamic memory in yy_get_next_buffer()");

(insn 1106 1105 1107 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f88bbbf2cf0 *.LC24>)) lex.yy.c:1394 -1
     (nil))

(call_insn 1107 1106 1108 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1394 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 1108 1107 0)

;; Generating RTL for gimple basic block 147

;; 

(code_label 1109 1108 1110 228 "" [0 uses])

(note 1110 1109 0 NOTE_INSN_BASIC_BLOCK)

;; _959 = _957->yy_ch_buf;

(insn 1111 1110 0 (set (reg/f:DI 299 [ D.6783 ])
        (mem/f:DI (plus:DI (reg/f:DI 280 [ D.6782 ])
                (const_int 8 [0x8])) [1 _957->yy_ch_buf+0 S8 A64])) -1
     (nil))

;; Generating RTL for gimple basic block 148

;; 

(code_label 1112 1111 1113 229 "" [0 uses])

(note 1113 1112 0 NOTE_INSN_BASIC_BLOCK)

;; yy_n_chars = _442;

(insn 1114 1113 0 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 288 [ D.6777 ])) lex.yy.c:1397 -1
     (nil))

;; *_461 = 0;

(insn 1115 1114 0 (set (mem:QI (plus:DI (reg/f:DI 299 [ D.6783 ])
                (reg:DI 289 [ D.6781 ])) [0 *_461+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1398 -1
     (nil))

;; *_465 = 0;

(insn 1116 1115 1117 (set (reg/f:DI 503)
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_955+0 S8 A64])) lex.yy.c:1399 -1
     (nil))

(insn 1117 1116 1118 (set (reg/f:DI 504)
        (mem/f:DI (plus:DI (reg/f:DI 503)
                (const_int 8 [0x8])) [1 _462->yy_ch_buf+0 S8 A64])) lex.yy.c:1399 -1
     (nil))

(insn 1118 1117 0 (set (mem:QI (plus:DI (plus:DI (reg/f:DI 504)
                    (reg:DI 289 [ D.6781 ]))
                (const_int 1 [0x1])) [0 *_465+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1399 -1
     (nil))

;; _467 = _466->yy_ch_buf;

(insn 1119 1118 1120 (set (reg/f:DI 505)
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_955+0 S8 A64])) lex.yy.c:1401 -1
     (nil))

(insn 1120 1119 0 (set (reg/f:DI 306 [ D.6783 ])
        (mem/f:DI (plus:DI (reg/f:DI 505)
                (const_int 8 [0x8])) [1 _466->yy_ch_buf+0 S8 A64])) lex.yy.c:1401 -1
     (nil))

;; yytext = _467;

(insn 1121 1120 0 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 306 [ D.6783 ])) lex.yy.c:1401 -1
     (nil))

;; # DEBUG new_size => NULL

(debug_insn 1122 1121 0 (var_location:SI new_size (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG n => NULL

(debug_insn 1123 1122 0 (var_location:DI n (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG c => NULL

(debug_insn 1124 1123 0 (var_location:SI c (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG new_size => NULL

(debug_insn 1125 1124 0 (var_location:DI new_size (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG yy_c_buf_p_offset => NULL

(debug_insn 1126 1125 0 (var_location:SI yy_c_buf_p_offset (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG b => NULL

(debug_insn 1127 1126 0 (var_location:DI b (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG num_to_read => NULL

(debug_insn 1128 1127 0 (var_location:DI num_to_read (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG ret_val => NULL

(debug_insn 1129 1128 0 (var_location:SI ret_val (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG i => NULL

(debug_insn 1130 1129 0 (var_location:DI i (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG number_to_move => NULL

(debug_insn 1131 1130 0 (var_location:DI number_to_move (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG source => NULL

(debug_insn 1132 1131 0 (var_location:DI source (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG dest => NULL

(debug_insn 1133 1132 0 (var_location:DI dest (const_int 0 [0])) lex.yy.c:1205 -1
     (nil));; Expanding GIMPLE switch as decision tree:
;;        1
;;               2

;; switch (ret_val_472) <default: <L114>, case 1: <L108>, case 2: <L142>>

(insn 1134 1133 1135 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 308 [ ret_val ])
            (const_int 1 [0x1]))) lex.yy.c:1205 -1
     (nil))

(jump_insn 1135 1134 1136 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1205 -1
     (int_list:REG_BR_PROB 10000 (nil)))

(insn 1136 1135 1137 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 308 [ ret_val ])
            (const_int 2 [0x2]))) lex.yy.c:1205 -1
     (nil))

(jump_insn 1137 1136 1138 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1205 -1
     (nil))

(jump_insn 1138 1137 1139 (set (pc)
        (label_ref 0)) lex.yy.c:1205 -1
     (nil))

(barrier 1139 1138 0)

;; Generating RTL for gimple basic block 149

;; <L142>:

(code_label 1140 1139 1141 231 "" [0 uses])

(note 1141 1140 0 NOTE_INSN_BASIC_BLOCK)

;; _940 = _936 + _443;

(insn 1142 1141 1143 (set (reg/f:DI 506)
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_955+0 S8 A64])) -1
     (nil))

(insn 1143 1142 1144 (set (reg/f:DI 507)
        (mem/f:DI (plus:DI (reg/f:DI 506)
                (const_int 8 [0x8])) [1 _934->yy_ch_buf+0 S8 A64])) -1
     (nil))

(insn 1144 1143 0 (parallel [
            (set (reg/f:DI 324 [ D.6783 ])
                (plus:DI (reg:DI 289 [ D.6781 ])
                    (reg/f:DI 507)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (plus:DI (mem/f:DI (plus:DI (reg/f:DI 506)
                    (const_int 8 [0x8])) [1 _934->yy_ch_buf+0 S8 A64])
            (reg:DI 289 [ D.6781 ]))
        (nil)))

;; Generating RTL for gimple basic block 150

;; <L108>:

(code_label 1147 1146 1148 205 "" [0 uses])

(note 1148 1147 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG new_size => NULL

(debug_insn 1149 1148 0 (var_location:SI new_size (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG n => NULL

(debug_insn 1150 1149 0 (var_location:DI n (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG c => NULL

(debug_insn 1151 1150 0 (var_location:SI c (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG new_size => NULL

(debug_insn 1152 1151 0 (var_location:DI new_size (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG yy_c_buf_p_offset => NULL

(debug_insn 1153 1152 0 (var_location:SI yy_c_buf_p_offset (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG b => NULL

(debug_insn 1154 1153 0 (var_location:DI b (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG num_to_read => NULL

(debug_insn 1155 1154 0 (var_location:DI num_to_read (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG ret_val => NULL

(debug_insn 1156 1155 0 (var_location:SI ret_val (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG i => NULL

(debug_insn 1157 1156 0 (var_location:DI i (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG number_to_move => NULL

(debug_insn 1158 1157 0 (var_location:DI number_to_move (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG source => NULL

(debug_insn 1159 1158 0 (var_location:DI source (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG dest => NULL

(debug_insn 1160 1159 0 (var_location:DI dest (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; yy_c_buf_p = _942;

(insn 1161 1160 0 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 306 [ D.6783 ])) lex.yy.c:1222 -1
     (nil))

;; yy_act_204 = _203 + 47;

(insn 1162 1161 1163 (set (reg:SI 509)
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) lex.yy.c:1224 -1
     (nil))

(insn 1163 1162 1164 (parallel [
            (set (reg:SI 508 [ D.6777 ])
                (plus:SI (reg:SI 509)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1224 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 1164 1163 1165 (parallel [
            (set (reg:SI 511)
                (lshiftrt:SI (reg:SI 508 [ D.6777 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1224 -1
     (nil))

(insn 1165 1164 1166 (parallel [
            (set (reg:SI 512)
                (plus:SI (reg:SI 511)
                    (reg:SI 508 [ D.6777 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1224 -1
     (nil))

(insn 1166 1165 1167 (parallel [
            (set (reg:SI 513 [ D.6777 ])
                (ashiftrt:SI (reg:SI 512)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1224 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 508 [ D.6777 ])
            (const_int 2 [0x2]))
        (nil)))

(insn 1167 1166 0 (parallel [
            (set (reg/v:SI 90 [ yy_act ])
                (plus:SI (reg:SI 513 [ D.6777 ])
                    (const_int 47 [0x2f])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1224 -1
     (nil))

;; # DEBUG yy_act => yy_act_204

(debug_insn 1168 1167 0 (var_location:SI yy_act (const_int 0 [0])) lex.yy.c:1224 -1
     (nil))
;; Generating RTL for gimple basic block 151

;; <L114>:

(code_label 1171 1170 1172 230 "" [0 uses])

(note 1172 1171 0 NOTE_INSN_BASIC_BLOCK)

;; yy_cp_178 = _467 + _177;

(insn 1173 1172 1174 (set (reg:DI 514 [ D.6790 ])
        (sign_extend:DI (reg/v:SI 147 [ yy_amount_of_matched_text ]))) lex.yy.c:1238 -1
     (nil))

(insn 1174 1173 0 (parallel [
            (set (reg/v/f:DI 88 [ yy_cp ])
                (plus:DI (reg/f:DI 306 [ D.6783 ])
                    (reg:DI 514 [ D.6790 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1238 -1
     (nil))

;; yy_c_buf_p = yy_cp_178;

(insn 1175 1174 0 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:1238 -1
     (nil))

;; yy_current_state_181 = yy_get_previous_state ();

(call_insn 1176 1175 1177 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>) [0 yy_get_previous_state S1 A8])
            (const_int 0 [0]))) lex.yy.c:1240 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))

(insn 1177 1176 0 (set (reg/v:SI 87 [ yy_current_state ])
        (reg:SI 0 ax)) lex.yy.c:1240 -1
     (nil))

;; # DEBUG yy_current_state => yy_current_state_181

(debug_insn 1178 1177 0 (var_location:SI yy_current_state (const_int 0 [0])) lex.yy.c:1240 -1
     (nil))
;; # DEBUG yy_cp => yy_cp_178

(debug_insn 1179 1178 0 (var_location:DI yy_cp (const_int 0 [0])) lex.yy.c:1242 -1
     (nil))
;; yy_cp_183 = yytext;

(insn 1180 1179 0 (set (reg/v/f:DI 89 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1243 -1
     (nil))

;; # DEBUG yy_bp => yy_cp_183

(debug_insn 1181 1180 0 (var_location:DI yy_bp (const_int 0 [0])) lex.yy.c:1243 -1
     (nil))
;; Generating RTL for gimple basic block 152

;; 

(code_label 1184 1183 1185 206 "" [0 uses])

(note 1185 1184 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG new_size => NULL

(debug_insn 1186 1185 0 (var_location:SI new_size (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG n => NULL

(debug_insn 1187 1186 0 (var_location:DI n (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG c => NULL

(debug_insn 1188 1187 0 (var_location:SI c (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG new_size => NULL

(debug_insn 1189 1188 0 (var_location:DI new_size (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG yy_c_buf_p_offset => NULL

(debug_insn 1190 1189 0 (var_location:SI yy_c_buf_p_offset (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG b => NULL

(debug_insn 1191 1190 0 (var_location:DI b (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG num_to_read => NULL

(debug_insn 1192 1191 0 (var_location:DI num_to_read (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG ret_val => NULL

(debug_insn 1193 1192 0 (var_location:SI ret_val (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG i => NULL

(debug_insn 1194 1193 0 (var_location:DI i (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG number_to_move => NULL

(debug_insn 1195 1194 0 (var_location:DI number_to_move (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG source => NULL

(debug_insn 1196 1195 0 (var_location:DI source (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG dest => NULL

(debug_insn 1197 1196 0 (var_location:DI dest (const_int 0 [0])) lex.yy.c:1205 -1
     (nil))
;; # DEBUG D#9 => yy_buffer_stack

(debug_insn 1198 1197 0 (var_location:DI D#9 (const_int 0 [0])) lex.yy.c:1248 -1
     (nil))
;; # DEBUG D#8 => yy_buffer_stack_top

(debug_insn 1199 1198 0 (var_location:DI D#8 (const_int 0 [0])) lex.yy.c:1248 -1
     (nil))
;; # DEBUG D#7 => D#8 * 8

(debug_insn 1200 1199 0 (var_location:DI D#7 (const_int 0 [0])) lex.yy.c:1248 -1
     (nil))
;; # DEBUG D#6 => D#9 + D#7

(debug_insn 1201 1200 0 (var_location:DI D#6 (const_int 0 [0])) lex.yy.c:1248 -1
     (nil))
;; # DEBUG D#5 => *D#6

(debug_insn 1202 1201 0 (var_location:DI D#5 (const_int 0 [0])) lex.yy.c:1248 -1
     (nil))
;; # DEBUG D#4 => D#5->yy_ch_buf

(debug_insn 1203 1202 0 (var_location:DI D#4 (const_int 0 [0])) lex.yy.c:1248 -1
     (nil))
;; # DEBUG D#3 => yy_n_chars

(debug_insn 1204 1203 0 (var_location:SI D#3 (const_int 0 [0])) lex.yy.c:1248 -1
     (nil))
;; # DEBUG D#2 => (sizetype) D#3

(debug_insn 1205 1204 0 (var_location:DI D#2 (const_int 0 [0])) lex.yy.c:1248 -1
     (nil))
;; yy_c_buf_p = yy_cp_941;

(insn 1206 1205 0 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:1248 -1
     (nil))

;; yy_current_state_195 = yy_get_previous_state ();

(call_insn 1207 1206 1208 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>) [0 yy_get_previous_state S1 A8])
            (const_int 0 [0]))) lex.yy.c:1250 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))

(insn 1208 1207 0 (set (reg/v:SI 160 [ yy_current_state ])
        (reg:SI 0 ax)) lex.yy.c:1250 -1
     (nil))

;; # DEBUG yy_current_state => yy_current_state_195

(debug_insn 1209 1208 0 (var_location:SI yy_current_state (const_int 0 [0])) lex.yy.c:1250 -1
     (nil))
;; # DEBUG yy_cp => D#4 + D#2

(debug_insn 1210 1209 0 (var_location:DI yy_cp (const_int 0 [0])) lex.yy.c:1252 -1
     (nil))
;; yy_cp_197 = yytext;

(insn 1211 1210 0 (set (reg/v/f:DI 89 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1253 -1
     (nil))

;; # DEBUG yy_bp => yy_cp_197

(debug_insn 1212 1211 0 (var_location:DI yy_bp (const_int 0 [0])) lex.yy.c:1253 -1
     (nil))Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _993 = yy_accept[yy_current_state_195];

(insn 1213 1212 1214 (set (reg/f:DI 515)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) -1
     (nil))

(insn 1214 1213 1215 (set (reg:DI 516)
        (sign_extend:DI (reg/v:SI 160 [ yy_current_state ]))) -1
     (nil))

(insn 1215 1214 0 (set (reg:HI 186 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 516)
                    (const_int 2 [0x2]))
                (reg/f:DI 515)) [3 yy_accept S2 A16])) -1
     (nil))

;; Generating RTL for gimple basic block 153

;; <L118>:

(code_label 1218 1217 1219 140 "" [0 uses])

(note 1219 1218 0 NOTE_INSN_BASIC_BLOCK)

;; yy_fatal_error ("fatal flex scanner internal error--no action found");

(insn 1220 1219 1221 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f88bbbf2d80 *.LC25>)) lex.yy.c:1261 -1
     (nil))

(call_insn 1221 1220 1222 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1261 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 1222 1221 0)

;; Generating RTL for gimple basic block 154

;; <L141>:

(code_label 1223 1222 1224 156 "" [0 uses])

(note 1224 1223 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 155

;; <L125>:

(code_label 1225 1224 1226 157 "" [0 uses])

(note 1226 1225 0 NOTE_INSN_BASIC_BLOCK)

;; return _13;

(insn 1227 1226 1228 (set (reg:SI 348 [ <retval> ])
        (reg:SI 92 [ D.6777 ])) -1
     (nil))

(jump_insn 1228 1227 1229 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 1229 1228 0)

;; Generating RTL for gimple basic block 156

;; 

(code_label 1230 1229 1231 201 "" [0 uses])

(note 1231 1230 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG yy_current_state => NULL

(debug_insn 1232 1231 0 (var_location:SI yy_current_state (const_int 0 [0])) lex.yy.c:1186 -1
     (nil))
;; # DEBUG yy_cp => NULL

(debug_insn 1233 1232 0 (var_location:DI yy_cp (const_int 0 [0])) lex.yy.c:1186 -1
     (nil))
;; # DEBUG yy_next_state => NULL

(debug_insn 1234 1233 0 (var_location:SI yy_next_state (const_int 0 [0])) lex.yy.c:1186 -1
     (nil))
;; yy_cp_577 = yytext;

(insn 1235 1234 0 (set (reg/v/f:DI 89 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1188 -1
     (nil))

;; # DEBUG yy_bp => yy_cp_577

(debug_insn 1236 1235 0 (var_location:DI yy_bp (const_int 0 [0])) lex.yy.c:1188 -1
     (nil))
;; Generating RTL for gimple basic block 157

;; 

(code_label 1239 1238 1240 220 "" [0 uses])

(note 1240 1239 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG c => c_374

(debug_insn 1241 1240 0 (var_location:SI c (const_int 0 [0])) -1
     (nil))
;; # DEBUG c => c_374

(debug_insn 1242 1241 0 (var_location:SI c (const_int 0 [0])) -1
     (nil))
;; _379 = _376 + _378;

(insn 1243 1242 1244 (set (reg:DI 519)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1364 -1
     (nil))

(insn 1244 1243 1245 (parallel [
            (set (reg:DI 518 [ D.6781 ])
                (ashift:DI (reg:DI 519)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))

(insn 1245 1244 1246 (set (reg/f:DI 520)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1364 -1
     (nil))

(insn 1246 1245 0 (parallel [
            (set (reg/f:DI 347 [ D.6780 ])
                (plus:DI (reg:DI 518 [ D.6781 ])
                    (reg/f:DI 520)))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
            (reg:DI 518 [ D.6781 ]))
        (nil)))

;; *_383 = _385;

(insn 1247 1246 1248 (set (reg/f:DI 521)
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_379+0 S8 A64])) lex.yy.c:1364 -1
     (nil))

(insn 1248 1247 1249 (set (reg/f:DI 522)
        (mem/f:DI (plus:DI (reg/f:DI 521)
                (const_int 8 [0x8])) [1 _380->yy_ch_buf+0 S8 A64])) lex.yy.c:1364 -1
     (nil))

(insn 1249 1248 1250 (parallel [
            (set (reg:DI 523)
                (plus:DI (reg/f:DI 522)
                    (reg/v:DI 212 [ n ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 -1
     (nil))

(insn 1250 1249 1251 (parallel [
            (set (reg/f:DI 524)
                (plus:DI (reg:DI 523)
                    (reg/v:DI 224 [ number_to_move ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 -1
     (nil))

(insn 1251 1250 0 (set (mem:QI (reg/f:DI 524) [0 *_383+0 S1 A8])
        (subreg:QI (reg/v:SI 251 [ c ]) 0)) lex.yy.c:1364 -1
     (nil))

;; n_386 = n_304 + 1;

(insn 1252 1251 0 (parallel [
            (set (reg/v:DI 212 [ n ])
                (plus:DI (reg/v:DI 212 [ n ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 -1
     (nil))

;; # DEBUG n => n_386

(debug_insn 1253 1252 0 (var_location:DI n (const_int 0 [0])) lex.yy.c:1364 -1
     (nil))
;; # DEBUG n => n_386

(debug_insn 1254 1253 0 (var_location:DI n (const_int 0 [0])) -1
     (nil))
;; # DEBUG c => c_374

(debug_insn 1255 1254 0 (var_location:SI c (const_int 0 [0])) -1
     (nil))
;; if (n_386 < num_to_read_507)

(insn 1257 1255 1258 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 212 [ n ])
            (reg/v:DI 309 [ num_to_read ]))) lex.yy.c:1364 -1
     (nil))

(jump_insn 1258 1257 0 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1256)
            (pc))) lex.yy.c:1364 -1
     (int_list:REG_BR_PROB 8800 (nil)))

;; Generating RTL for gimple basic block 158

;; Generating RTL for gimple basic block 159

;; 

(code_label 1263 1262 1264 223 "" [0 uses])

(note 1264 1263 0 NOTE_INSN_BASIC_BLOCK)

;; _1063 = _1057 + _1061;

(insn 1265 1264 1266 (set (reg:DI 526)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) -1
     (nil))

(insn 1266 1265 1267 (parallel [
            (set (reg:DI 525 [ D.6781 ])
                (ashift:DI (reg:DI 526)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))

(insn 1267 1266 1268 (set (reg/f:DI 527)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) -1
     (nil))

(insn 1268 1267 0 (parallel [
            (set (reg/f:DI 347 [ D.6780 ])
                (plus:DI (reg:DI 525 [ D.6781 ])
                    (reg/f:DI 527)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
            (reg:DI 525 [ D.6781 ]))
        (nil)))

;; Generating RTL for gimple basic block 160

;; 

(code_label 1271 1270 1272 224 "" [0 uses])

(note 1272 1271 0 NOTE_INSN_BASIC_BLOCK)

;; if (_423 != 4)

(insn 1274 1272 1275 160 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/f:DI 270 [ D.6794 ]) [2 *_402+0 S4 A32])
            (const_int 4 [0x4]))) lex.yy.c:1364 -1
     (nil))

(jump_insn 1275 1274 1279 160 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1273)
            (pc))) lex.yy.c:1364 -1
     (int_list:REG_BR_PROB 4 (nil)))

(note 1279 1275 1277 172 [bb 172] NOTE_INSN_BASIC_BLOCK)

(jump_insn 1277 1279 1278 172 (set (pc)
        (label_ref 1276)) lex.yy.c:1364 -1
     (nil))

(barrier 1278 1277 0)

;; Generating RTL for gimple basic block 161

;; 

(code_label 1280 1278 1281 221 "" [0 uses])

(note 1281 1280 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG c => 10

(debug_insn 1282 1281 0 (var_location:SI c (const_int 0 [0])) -1
     (nil))
;; # DEBUG c => 10

(debug_insn 1283 1282 0 (var_location:SI c (const_int 0 [0])) -1
     (nil))
;; # DEBUG c => 10

(debug_insn 1284 1283 0 (var_location:SI c (const_int 0 [0])) -1
     (nil))
;; _390 = _387 + _389;

(insn 1285 1284 1286 (set (reg:DI 529)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1364 -1
     (nil))

(insn 1286 1285 1287 (parallel [
            (set (reg:DI 528 [ D.6781 ])
                (ashift:DI (reg:DI 529)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))

(insn 1287 1286 1288 (set (reg/f:DI 530)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1364 -1
     (nil))

(insn 1288 1287 0 (parallel [
            (set (reg/f:DI 347 [ D.6780 ])
                (plus:DI (reg:DI 528 [ D.6781 ])
                    (reg/f:DI 530)))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
            (reg:DI 528 [ D.6781 ]))
        (nil)))

;; n_393 = n_304 + 1;

(insn 1289 1288 0 (parallel [
            (set (reg/v:DI 264 [ n ])
                (plus:DI (reg/v:DI 212 [ n ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 -1
     (nil))

;; # DEBUG n => n_393

(debug_insn 1290 1289 0 (var_location:DI n (const_int 0 [0])) lex.yy.c:1364 -1
     (nil))
;; *_395 = 10;

(insn 1291 1290 1292 (set (reg/f:DI 531)
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_390+0 S8 A64])) lex.yy.c:1364 -1
     (nil))

(insn 1292 1291 1293 (set (reg/f:DI 532)
        (mem/f:DI (plus:DI (reg/f:DI 531)
                (const_int 8 [0x8])) [1 _391->yy_ch_buf+0 S8 A64])) lex.yy.c:1364 -1
     (nil))

(insn 1293 1292 1294 (parallel [
            (set (reg:DI 533)
                (plus:DI (reg/f:DI 532)
                    (reg/v:DI 212 [ n ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 -1
     (nil))

(insn 1294 1293 1295 (parallel [
            (set (reg/f:DI 534)
                (plus:DI (reg:DI 533)
                    (reg/v:DI 224 [ number_to_move ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 -1
     (nil))

(insn 1295 1294 0 (set (mem:QI (reg/f:DI 534) [0 *_395+0 S1 A8])
        (const_int 10 [0xa])) lex.yy.c:1364 -1
     (nil))

;; # DEBUG n => n_393

(debug_insn 1296 1295 0 (var_location:DI n (const_int 0 [0])) -1
     (nil))
;; Generating RTL for gimple basic block 162

;; 

(code_label 1299 1298 1300 219 "" [0 uses])

(note 1300 1299 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG c => -1

(debug_insn 1301 1300 0 (var_location:SI c (const_int 0 [0])) -1
     (nil))
;; # DEBUG c => -1

(debug_insn 1302 1301 0 (var_location:SI c (const_int 0 [0])) -1
     (nil))
;; # DEBUG c => -1

(debug_insn 1303 1302 0 (var_location:SI c (const_int 0 [0])) -1
     (nil))
;; # DEBUG n => n_304

(debug_insn 1304 1303 0 (var_location:DI n (const_int 0 [0])) -1
     (nil))
;; _398 = ferror (_397);

(insn 1305 1304 1306 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1364 -1
     (nil))

(call_insn 1306 1305 1307 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f88bbf956c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) lex.yy.c:1364 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f88bbf956c0 ferror>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 1307 1306 0 (set (reg:SI 268 [ D.6777 ])
        (reg:SI 0 ax)) lex.yy.c:1364 -1
     (nil))

;; if (_398 != 0)

(insn 1308 1307 1309 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 268 [ D.6777 ])
            (const_int 0 [0]))) lex.yy.c:1364 -1
     (nil))

(jump_insn 1309 1308 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1273)
            (pc))) lex.yy.c:1364 -1
     (int_list:REG_BR_PROB 5000 (nil)))

;; Generating RTL for gimple basic block 163

;; _980 = _974 + _978;

(insn 1311 1310 1312 (set (reg:DI 536)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) -1
     (nil))

(insn 1312 1311 1313 (parallel [
            (set (reg:DI 535 [ D.6781 ])
                (ashift:DI (reg:DI 536)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))

(insn 1313 1312 1314 (set (reg/f:DI 537)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) -1
     (nil))

(insn 1314 1313 0 (parallel [
            (set (reg/f:DI 347 [ D.6780 ])
                (plus:DI (reg:DI 535 [ D.6781 ])
                    (reg/f:DI 537)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
            (reg:DI 535 [ D.6781 ]))
        (nil)))
Edge 46->155 redirected to 174
Edge 55->155 redirected to 175
Edge 56->155 redirected to 176
Edge 71->155 redirected to 177
Edge 113->150 redirected to 178
Edge 140->144 redirected to 180
Purged edges from bb 183
Predictions for insn 1137 bb 182
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  opcode values nonequal heuristics: 29.0%
Predictions for insn 1321 bb 173
  DS theory heuristics (ignored): 100.0%
  first match heuristics: 100.0%
  combined heuristics: 100.0%
  noreturn call heuristics: 100.0%


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 59->60 to 16 failed.
Forwarding edge 70->71 to 68 failed.
Forwarding edge 73->74 to 68 failed.
Forwarding edge 133->134 to 137 failed.
Forwarding edge 141->142 to 180 failed.
Forwarding edge 160->161 to 165 failed.
Forwarding edge 175->176 to 144 failed.
Forwarding edge 178->179 to 149 failed.
Redirecting jump 1316 from 176 to 144.


try_optimize_cfg iteration 2

Forwarding edge 59->60 to 16 failed.
Forwarding edge 70->71 to 68 failed.
Forwarding edge 73->74 to 68 failed.
Forwarding edge 133->134 to 137 failed.
Forwarding edge 141->142 to 180 failed.
Forwarding edge 160->161 to 165 failed.
Forwarding edge 175->176 to 144 failed.
Deleted label in block 176.
Forwarding edge 178->179 to 149 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 69 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 63, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 69 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 69 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 71 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.6797+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:787 -1
     (nil))
(insn 71 3 72 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("_ZL7yy_init") [flags 0x2]  <var_decl 0x7f88bc080510 yy_init>) [2 yy_init+0 S4 A32])
            (const_int 0 [0]))) lex.yy.c:792 -1
     (nil))
(jump_insn 72 71 73 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) lex.yy.c:792 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 78)
;;  succ:       5 [50.0%] 
;;              4 [50.0%]  (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 32, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [50.0%]  (FALLTHRU)
(note 73 72 74 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 4 (set (reg/f:DI 318 [ D.6783 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) -1
     (nil))
(insn 75 74 76 4 (set (reg:QI 320 [ D.6789 ])
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) -1
     (nil))
(jump_insn 76 75 77 4 (set (pc)
        (label_ref 140)) -1
     (nil)
 -> 140)
;;  succ:       15 [100.0%] 

(barrier 77 76 78)
;; basic block 5, loop depth 0, count 0, freq 32, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [50.0%] 
(code_label 78 77 79 5 116 "" [1 uses])
(note 79 78 80 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 5 (set (mem/c:SI (symbol_ref:DI ("_ZL7yy_init") [flags 0x2]  <var_decl 0x7f88bc080510 yy_init>) [2 yy_init+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:794 -1
     (nil))
(insn 81 80 82 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
            (const_int 0 [0]))) lex.yy.c:800 -1
     (nil))
(jump_insn 82 81 83 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) lex.yy.c:800 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 85)
;;  succ:       6 [50.0%]  (FALLTHRU)
;;              7 [50.0%] 

;; basic block 6, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [50.0%]  (FALLTHRU)
(note 83 82 84 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 6 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:801 -1
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 32, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [50.0%] 
;;              6 [100.0%]  (FALLTHRU)
(code_label 85 84 86 7 118 "" [1 uses])
(note 86 85 87 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
            (const_int 0 [0]))) lex.yy.c:803 -1
     (nil))
(jump_insn 88 87 89 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) lex.yy.c:803 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 92)
;;  succ:       8 [15.0%]  (FALLTHRU)
;;              9 [85.0%] 

;; basic block 8, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [15.0%]  (FALLTHRU)
(note 89 88 90 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 8 (set (reg/f:DI 349)
        (mem/f/c:DI (symbol_ref:DI ("stdin") [flags 0x40]  <var_decl 0x7f88bc3c9d80 stdin>) [1 stdin+0 S8 A64])) lex.yy.c:804 -1
     (nil))
(insn 91 90 92 8 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 349)) lex.yy.c:804 -1
     (nil))
;;  succ:       9 [100.0%]  (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 32, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [85.0%] 
;;              8 [100.0%]  (FALLTHRU)
(code_label 92 91 93 9 119 "" [1 uses])
(note 93 92 94 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])
            (const_int 0 [0]))) lex.yy.c:806 -1
     (nil))
(jump_insn 95 94 96 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) lex.yy.c:806 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 99)
;;  succ:       10 [15.0%]  (FALLTHRU)
;;              11 [85.0%] 

;; basic block 10, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [15.0%]  (FALLTHRU)
(note 96 95 97 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 10 (set (reg/f:DI 350)
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f88bc3c9e10 stdout>) [1 stdout+0 S8 A64])) lex.yy.c:807 -1
     (nil))
(insn 98 97 99 10 (set (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])
        (reg/f:DI 350)) lex.yy.c:807 -1
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)

;; basic block 11, loop depth 0, count 0, freq 32, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [85.0%] 
;;              10 [100.0%]  (FALLTHRU)
(code_label 99 98 100 11 120 "" [1 uses])
(note 100 99 101 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 11 (set (reg/f:DI 99 [ D.6780 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:809 -1
     (nil))
(insn 102 101 103 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 99 [ D.6780 ])
            (const_int 0 [0]))) lex.yy.c:809 -1
     (nil))
(jump_insn 103 102 104 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 111)
            (pc))) lex.yy.c:809 -1
     (int_list:REG_BR_PROB 672 (nil))
 -> 111)
;;  succ:       13 [6.7%] 
;;              12 [93.3%]  (FALLTHRU)

;; basic block 12, loop depth 0, count 0, freq 30, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 [93.3%]  (FALLTHRU)
(note 104 103 105 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 12 (set (reg:DI 352)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:809 -1
     (nil))
(insn 106 105 107 12 (parallel [
            (set (reg:DI 351 [ D.6781 ])
                (ashift:DI (reg:DI 352)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:809 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 107 106 108 12 (parallel [
            (set (reg/f:DI 102 [ D.6780 ])
                (plus:DI (reg/f:DI 99 [ D.6780 ])
                    (reg:DI 351 [ D.6781 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:809 -1
     (nil))
(insn 108 107 109 12 (set (reg/f:DI 103 [ D.6782 ])
        (mem/f:DI (reg/f:DI 102 [ D.6780 ]) [1 *_42+0 S8 A64])) lex.yy.c:809 -1
     (nil))
(insn 109 108 110 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 103 [ D.6782 ])
            (const_int 0 [0]))) lex.yy.c:809 -1
     (nil))
(jump_insn 110 109 111 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 128)
            (pc))) lex.yy.c:809 -1
     (int_list:REG_BR_PROB 8500 (nil))
 -> 128)
;;  succ:       13 [15.0%]  (FALLTHRU)
;;              14 [85.0%] 

;; basic block 13, loop depth 0, count 0, freq 7, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 [15.0%]  (FALLTHRU)
;;              11 [6.7%] 
(code_label 111 110 112 13 121 "" [1 uses])
(note 112 111 113 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(call_insn 113 112 114 13 (call (mem:QI (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>) [0 yyensure_buffer_stack S1 A8])
        (const_int 0 [0])) lex.yy.c:810 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>)
        (nil))
    (nil))
(insn 114 113 115 13 (set (reg:DI 354)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:811 -1
     (nil))
(insn 115 114 116 13 (parallel [
            (set (reg:DI 353 [ D.6781 ])
                (ashift:DI (reg:DI 354)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:811 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 116 115 117 13 (set (reg/f:DI 355)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:811 -1
     (nil))
(insn 117 116 118 13 (parallel [
            (set (reg/f:DI 107 [ D.6780 ])
                (plus:DI (reg:DI 353 [ D.6781 ])
                    (reg/f:DI 355)))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:811 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
            (reg:DI 353 [ D.6781 ]))
        (nil)))
(insn 118 117 119 13 (set (reg:SI 4 si)
        (const_int 16384 [0x4000])) lex.yy.c:812 -1
     (nil))
(insn 119 118 120 13 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:812 -1
     (nil))
(call_insn 120 119 121 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>) [0 yy_create_buffer S1 A8])
            (const_int 0 [0]))) lex.yy.c:812 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 121 120 122 13 (set (reg/f:DI 109 [ D.6782 ])
        (reg:DI 0 ax)) lex.yy.c:812 -1
     (nil))
(insn 122 121 123 13 (set (mem/f:DI (reg/f:DI 107 [ D.6780 ]) [1 *_48+0 S8 A64])
        (reg/f:DI 109 [ D.6782 ])) lex.yy.c:812 -1
     (nil))
(insn 123 122 124 13 (set (reg:DI 357)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) -1
     (nil))
(insn 124 123 125 13 (parallel [
            (set (reg:DI 356 [ D.6781 ])
                (ashift:DI (reg:DI 357)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 125 124 126 13 (set (reg/f:DI 358)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) -1
     (nil))
(insn 126 125 127 13 (parallel [
            (set (reg/f:DI 102 [ D.6780 ])
                (plus:DI (reg:DI 356 [ D.6781 ])
                    (reg/f:DI 358)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
            (reg:DI 356 [ D.6781 ]))
        (nil)))
(insn 127 126 128 13 (set (reg/f:DI 103 [ D.6782 ])
        (mem/f:DI (reg/f:DI 102 [ D.6780 ]) [1 *_1030+0 S8 A64])) -1
     (nil))
;;  succ:       14 [100.0%]  (FALLTHRU)

;; basic block 14, loop depth 0, count 0, freq 32, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 [85.0%] 
;;              13 [100.0%]  (FALLTHRU)
(code_label 128 127 129 14 122 "" [1 uses])
(note 129 128 130 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 14 (set (reg:SI 359)
        (mem:SI (plus:DI (reg/f:DI 103 [ D.6782 ])
                (const_int 32 [0x20])) [2 _1033->yy_n_chars+0 S4 A64])) lex.yy.c:1642 -1
     (nil))
(insn 131 130 132 14 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 359)) lex.yy.c:1642 -1
     (nil))
(insn 132 131 133 14 (set (reg/f:DI 318 [ D.6783 ])
        (mem/f:DI (plus:DI (reg/f:DI 103 [ D.6782 ])
                (const_int 16 [0x10])) [1 _1033->yy_buf_pos+0 S8 A64])) lex.yy.c:1643 -1
     (nil))
(insn 133 132 134 14 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 318 [ D.6783 ])) lex.yy.c:1643 -1
     (nil))
(insn 134 133 135 14 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 318 [ D.6783 ])) lex.yy.c:1643 -1
     (nil))
(insn 135 134 136 14 (set (reg/f:DI 360)
        (mem/f:DI (reg/f:DI 102 [ D.6780 ]) [1 *_1031+0 S8 A64])) lex.yy.c:1644 -1
     (nil))
(insn 136 135 137 14 (set (reg/f:DI 361)
        (mem/f:DI (reg/f:DI 360) [1 _249->yy_input_file+0 S8 A64])) lex.yy.c:1644 -1
     (nil))
(insn 137 136 138 14 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 361)) lex.yy.c:1644 -1
     (nil))
(insn 138 137 139 14 (set (reg:QI 320 [ D.6789 ])
        (mem:QI (reg/f:DI 318 [ D.6783 ]) [0 *_248+0 S1 A8])) lex.yy.c:1645 -1
     (nil))
(insn 139 138 140 14 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 320 [ D.6789 ])) lex.yy.c:1645 -1
     (nil))
;;  succ:       15 [100.0%]  (FALLTHRU)

;; basic block 15, loop depth 0, count 0, freq 64, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 [100.0%]  (FALLTHRU)
;;              4 [100.0%] 
(code_label 140 139 141 15 117 "" [1 uses])
(note 141 140 142 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 15 (set (reg:SI 341 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) -1
     (nil))
(insn 143 142 144 15 (set (reg/f:DI 362)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) -1
     (nil))
(insn 144 143 145 15 (set (reg:DI 363)
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) -1
     (nil))
(insn 145 144 146 15 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 363)
                    (const_int 2 [0x2]))
                (reg/f:DI 362)) [3 yy_accept S2 A16])) -1
     (nil))
(insn 146 145 147 15 (set (reg/f:DI 364)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) -1
     (nil))
(insn 147 146 148 15 (set (reg:DI 365)
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) -1
     (nil))
(insn 148 147 149 15 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 365)
                    (const_int 2 [0x2]))
                (reg/f:DI 364)) [3 yy_base S2 A16])) -1
     (nil))
(jump_insn 149 148 150 15 (set (pc)
        (label_ref 162)) -1
     (nil)
 -> 162)
;;  succ:       18 [100.0%] 

(barrier 150 149 447)
;; basic block 16, loop depth 1, count 0, freq 2, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       60 [100.0%] 
(code_label 447 150 151 16 189 "" [1 uses])
(note 151 447 152 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 153 16 (set (reg:SI 341 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) -1
     (nil))
(insn 153 152 154 16 (set (reg/f:DI 366)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) -1
     (nil))
(insn 154 153 155 16 (set (reg:DI 367)
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) -1
     (nil))
(insn 155 154 156 16 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 367)
                    (const_int 2 [0x2]))
                (reg/f:DI 366)) [3 yy_accept S2 A16])) -1
     (nil))
(insn 156 155 157 16 (set (reg/f:DI 368)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) -1
     (nil))
(insn 157 156 158 16 (set (reg:DI 369)
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) -1
     (nil))
(insn 158 157 396 16 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 369)
                    (const_int 2 [0x2]))
                (reg/f:DI 368)) [3 yy_base S2 A16])) -1
     (nil))
;;  succ:       17 [100.0%]  (FALLTHRU)

;; basic block 17, loop depth 1, count 0, freq 17, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       53 [100.0%] 
;;              55 [100.0%] 
;;              54 [100.0%] 
;;              56 [100.0%] 
;;              103 [100.0%] 
;;              57 [100.0%] 
;;              16 [100.0%]  (FALLTHRU)
;;              102 [100.0%] 
(code_label 396 158 159 17 188 "" [7 uses])
(note 159 396 160 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 17 (set (reg/f:DI 318 [ D.6783 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) -1
     (nil))
(insn 161 160 162 17 (set (reg:QI 320 [ D.6789 ])
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) -1
     (nil))
;;  succ:       18 [100.0%]  (FALLTHRU,DFS_BACK)

;; basic block 18, loop depth 1, count 0, freq 79, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 [100.0%] 
;;              17 [100.0%]  (FALLTHRU,DFS_BACK)
(code_label 162 161 163 18 123 "" [1 uses])
(note 163 162 16 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 16 163 17 18 (set (reg/v:SI 87 [ yy_current_state ])
        (reg:SI 341 [ D.6777 ])) mycc.l:56 -1
     (nil))
(insn 17 16 376 18 (set (reg/v/f:DI 88 [ yy_cp ])
        (reg/f:DI 318 [ D.6783 ])) mycc.l:56 -1
     (nil))
;;  succ:       19 [100.0%]  (FALLTHRU)

;; basic block 19, loop depth 2, count 0, freq 81, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 [100.0%]  (FALLTHRU)
;;              51 [100.0%]  (DFS_BACK)
(code_label 376 17 164 19 186 "" [1 uses])
(note 164 376 165 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(debug_insn 165 164 166 19 (var_location:DI D#16 (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) lex.yy.c:827 -1
     (nil))
(debug_insn 166 165 167 19 (var_location:DI yy_cp (debug_expr:DI D#16)) lex.yy.c:827 -1
     (nil))
(insn 167 166 168 19 (set (mem:QI (reg/v/f:DI 88 [ yy_cp ]) [0 *yy_cp_916+0 S1 A8])
        (reg:QI 320 [ D.6789 ])) lex.yy.c:830 -1
     (nil))
(debug_insn 168 167 169 19 (var_location:DI yy_bp (debug_expr:DI D#16)) lex.yy.c:835 -1
     (nil))
(debug_insn 169 168 170 19 (var_location:SI D#15 (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) lex.yy.c:837 -1
     (nil))
(debug_insn 170 169 18 19 (var_location:SI yy_current_state (debug_expr:SI D#15)) lex.yy.c:837 -1
     (nil))
(insn 18 170 171 19 (set (reg/v/f:DI 89 [ yy_cp ])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:830 -1
     (nil))
(jump_insn 171 18 172 19 (set (pc)
        (label_ref 181)) lex.yy.c:830 -1
     (nil)
 -> 181)
;;  succ:       21 [100.0%] 

(barrier 172 171 822)
;; basic block 20, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       165 [100.0%] 
;;              115 [100.0%] 
(code_label 822 172 173 20 202 "" [2 uses])
(note 173 822 174 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 20 (set (reg:QI 320 [ D.6789 ])
        (mem:QI (reg/v/f:DI 88 [ yy_cp ]) [0 *yy_cp_147+0 S1 A8])) -1
     (nil))
(insn 175 174 176 20 (set (reg/f:DI 370)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) -1
     (nil))
(insn 176 175 177 20 (set (reg:DI 371)
        (sign_extend:DI (reg/v:SI 87 [ yy_current_state ]))) -1
     (nil))
(insn 177 176 178 20 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 371)
                    (const_int 2 [0x2]))
                (reg/f:DI 370)) [3 yy_accept S2 A16])) -1
     (nil))
(insn 178 177 179 20 (set (reg/f:DI 372)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) -1
     (nil))
(insn 179 178 180 20 (set (reg:DI 373)
        (sign_extend:DI (reg/v:SI 87 [ yy_current_state ]))) -1
     (nil))
(insn 180 179 181 20 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 373)
                    (const_int 2 [0x2]))
                (reg/f:DI 372)) [3 yy_base S2 A16])) -1
     (nil))
;;  succ:       21 [100.0%]  (FALLTHRU,DFS_BACK)

;; basic block 21, loop depth 3, count 0, freq 81, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 [100.0%]  (FALLTHRU,DFS_BACK)
;;              19 [100.0%] 
(code_label 181 180 182 21 124 "" [1 uses])
(note 182 181 183 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 21 (set (reg:SI 314 [ yy_last_accepting_state_lsm.193 ])
        (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])) -1
     (nil))
(insn 184 183 19 21 (set (reg/f:DI 316 [ yy_last_accepting_cpos_lsm.191 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])) -1
     (nil))
(insn 19 184 20 21 (set (reg:QI 313 [ yy_last_accepting_state_lsm.194 ])
        (const_int 0 [0])) lex.yy.c:830 -1
     (nil))
(insn 20 19 255 21 (set (reg:QI 315 [ yy_last_accepting_cpos_lsm.192 ])
        (const_int 0 [0])) lex.yy.c:830 -1
     (nil))
;;  succ:       22 [100.0%]  (FALLTHRU)

;; basic block 22, loop depth 4, count 0, freq 900, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       21 [100.0%]  (FALLTHRU)
;;              30 [100.0%]  (DFS_BACK)
(code_label 255 20 185 22 130 "" [1 uses])
(note 185 255 186 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(debug_insn 186 185 187 22 (var_location:DI yy_bp (reg/v/f:DI 89 [ yy_cp ])) -1
     (nil))
(debug_insn 187 186 188 22 (var_location:DI yy_cp (reg/v/f:DI 88 [ yy_cp ])) -1
     (nil))
(debug_insn 188 187 189 22 (var_location:SI yy_current_state (reg/v:SI 87 [ yy_current_state ])) -1
     (nil))
(insn 189 188 190 22 (set (reg/f:DI 374)
        (symbol_ref:DI ("_ZL5yy_ec") [flags 0x2]  <var_decl 0x7f88bc080b40 yy_ec>)) lex.yy.c:841 -1
     (nil))
(insn 190 189 191 22 (set (reg:SI 375 [ D.6785 ])
        (zero_extend:SI (reg:QI 320 [ D.6789 ]))) lex.yy.c:841 -1
     (nil))
(insn 191 190 192 22 (set (reg:DI 376)
        (zero_extend:DI (reg:SI 375 [ D.6785 ]))) lex.yy.c:841 -1
     (nil))
(insn 192 191 193 22 (set (reg/v:QI 91 [ yy_c ])
        (mem/u/j:QI (plus:DI (reg/f:DI 374)
                (reg:DI 376)) [0 yy_ec S1 A8])) lex.yy.c:841 -1
     (nil))
(debug_insn 193 192 194 22 (var_location:QI yy_c (reg/v:QI 91 [ yy_c ])) lex.yy.c:841 -1
     (nil))
(insn 194 193 195 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 343 [ D.6786 ])
            (const_int 0 [0]))) lex.yy.c:842 -1
     (nil))
(jump_insn 195 194 196 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 197)
            (pc))) lex.yy.c:842 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 197)
;;  succ:       23 [50.0%]  (FALLTHRU)
;;              24 [50.0%] 

;; basic block 23, loop depth 4, count 0, freq 450, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 [50.0%]  (FALLTHRU)
(note 196 195 21 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 21 196 22 23 (set (reg:SI 314 [ yy_last_accepting_state_lsm.193 ])
        (reg/v:SI 87 [ yy_current_state ])) lex.yy.c:844 -1
     (nil))
(insn 22 21 23 23 (set (reg/f:DI 316 [ yy_last_accepting_cpos_lsm.191 ])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:845 -1
     (nil))
(insn 23 22 24 23 (set (reg:QI 313 [ yy_last_accepting_state_lsm.194 ])
        (const_int 1 [0x1])) lex.yy.c:842 -1
     (nil))
(insn 24 23 197 23 (set (reg:QI 315 [ yy_last_accepting_cpos_lsm.192 ])
        (const_int 1 [0x1])) lex.yy.c:842 -1
     (nil))
;;  succ:       24 [100.0%]  (FALLTHRU)

;; basic block 24, loop depth 4, count 0, freq 900, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       23 [100.0%]  (FALLTHRU)
;;              22 [50.0%] 
(code_label 197 24 198 24 125 "" [1 uses])
(note 198 197 199 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(jump_insn 199 198 200 24 (set (pc)
        (label_ref 205)) -1
     (nil)
 -> 205)
;;  succ:       26 [100.0%] 

(barrier 200 199 223)
;; basic block 25, loop depth 5, count 0, freq 9100, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       27 [50.0%] 
;;              28 [100.0%] 
(code_label 223 200 201 25 128 "" [2 uses])
(note 201 223 202 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 25 (set (reg/f:DI 377)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) -1
     (nil))
(insn 203 202 204 25 (set (reg:DI 378)
        (sign_extend:DI (reg/v:SI 87 [ yy_current_state ]))) -1
     (nil))
(insn 204 203 205 25 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 378)
                    (const_int 2 [0x2]))
                (reg/f:DI 377)) [3 yy_base S2 A16])) -1
     (nil))
;;  succ:       26 [100.0%]  (FALLTHRU,DFS_BACK)

;; basic block 26, loop depth 5, count 0, freq 10000, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       24 [100.0%] 
;;              25 [100.0%]  (FALLTHRU,DFS_BACK)
(code_label 205 204 206 26 126 "" [1 uses])
(note 206 205 207 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(debug_insn 207 206 208 26 (var_location:QI yy_c (reg/v:QI 91 [ yy_c ])) -1
     (nil))
(debug_insn 208 207 209 26 (var_location:SI yy_current_state (reg/v:SI 87 [ yy_current_state ])) -1
     (nil))
(insn 209 208 210 26 (set (reg/f:DI 379)
        (symbol_ref:DI ("_ZL6yy_chk") [flags 0x2]  <var_decl 0x7f88bc0806c0 yy_chk>)) lex.yy.c:847 -1
     (nil))
(insn 210 209 211 26 (set (reg:SI 380 [ D.6777 ])
        (zero_extend:SI (reg:HI 321 [ D.6787 ]))) lex.yy.c:847 -1
     (nil))
(insn 211 210 212 26 (set (reg:SI 381 [ D.6777 ])
        (zero_extend:SI (reg/v:QI 91 [ yy_c ]))) lex.yy.c:847 -1
     (nil))
(insn 212 211 213 26 (parallel [
            (set (reg:SI 382 [ D.6777 ])
                (plus:SI (reg:SI 380 [ D.6777 ])
                    (reg:SI 381 [ D.6777 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:847 -1
     (nil))
(insn 213 212 214 26 (set (reg:DI 383)
        (sign_extend:DI (reg:SI 382 [ D.6777 ]))) lex.yy.c:847 -1
     (nil))
(insn 214 213 215 26 (set (reg:SI 384 [ D.6777 ])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 383)
                        (const_int 2 [0x2]))
                    (reg/f:DI 379)) [3 yy_chk S2 A16]))) lex.yy.c:847 -1
     (nil))
(insn 215 214 216 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ yy_current_state ])
            (reg:SI 384 [ D.6777 ]))) lex.yy.c:847 -1
     (nil))
(jump_insn 216 215 217 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 234)
            (pc))) lex.yy.c:847 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 234)
;;  succ:       29 [9.0%] 
;;              27 [91.0%]  (FALLTHRU)

;; basic block 27, loop depth 5, count 0, freq 9100, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       26 [91.0%]  (FALLTHRU)
(note 217 216 218 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 218 217 219 27 (set (reg/f:DI 385)
        (symbol_ref:DI ("_ZL6yy_def") [flags 0x2]  <var_decl 0x7f88bc080090 yy_def>)) lex.yy.c:849 -1
     (nil))
(insn 219 218 220 27 (set (reg:DI 386)
        (sign_extend:DI (reg/v:SI 87 [ yy_current_state ]))) lex.yy.c:849 -1
     (nil))
(insn 220 219 221 27 (set (reg:HI 118 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 386)
                    (const_int 2 [0x2]))
                (reg/f:DI 385)) [3 yy_def S2 A16])) lex.yy.c:849 -1
     (nil))
(insn 221 220 222 27 (set (reg/v:SI 87 [ yy_current_state ])
        (sign_extend:SI (reg:HI 118 [ D.6786 ]))) lex.yy.c:849 -1
     (nil))
(debug_insn 222 221 224 27 (var_location:SI yy_current_state (reg/v:SI 87 [ yy_current_state ])) lex.yy.c:849 -1
     (nil))
(insn 224 222 225 27 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 87 [ yy_current_state ])
            (const_int 101 [0x65]))) lex.yy.c:850 -1
     (nil))
(jump_insn 225 224 226 27 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 223)
            (pc))) lex.yy.c:850 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 223)
;;  succ:       28 [50.0%]  (FALLTHRU)
;;              25 [50.0%] 

;; basic block 28, loop depth 5, count 0, freq 4550, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       27 [50.0%]  (FALLTHRU)
(note 226 225 227 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 28 (set (reg:SI 119 [ D.6785 ])
        (zero_extend:SI (reg/v:QI 91 [ yy_c ]))) lex.yy.c:851 -1
     (nil))
(insn 228 227 229 28 (set (reg/f:DI 387)
        (symbol_ref:DI ("_ZL7yy_meta") [flags 0x2]  <var_decl 0x7f88bc080cf0 yy_meta>)) lex.yy.c:851 -1
     (nil))
(insn 229 228 230 28 (set (reg:DI 388)
        (zero_extend:DI (reg:SI 119 [ D.6785 ]))) lex.yy.c:851 -1
     (nil))
(insn 230 229 231 28 (set (reg/v:QI 91 [ yy_c ])
        (mem/u/j:QI (plus:DI (reg/f:DI 387)
                (reg:DI 388)) [0 yy_meta S1 A8])) lex.yy.c:851 -1
     (nil))
(debug_insn 231 230 232 28 (var_location:QI yy_c (reg/v:QI 91 [ yy_c ])) lex.yy.c:851 -1
     (nil))
(jump_insn 232 231 233 28 (set (pc)
        (label_ref 223)) -1
     (nil)
 -> 223)
;;  succ:       25 [100.0%] 

(barrier 233 232 234)
;; basic block 29, loop depth 4, count 0, freq 900, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL)
;;  pred:       26 [9.0%] 
(code_label 234 233 235 29 127 "" [1 uses])
(note 235 234 236 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 236 235 237 29 (set (reg/f:DI 389)
        (symbol_ref:DI ("_ZL6yy_nxt") [flags 0x2]  <var_decl 0x7f88bc0803f0 yy_nxt>)) lex.yy.c:853 -1
     (nil))
(insn 237 236 238 29 (set (reg:SI 390 [ D.6785 ])
        (zero_extend:SI (reg:HI 321 [ D.6787 ]))) lex.yy.c:853 -1
     (nil))
(insn 238 237 239 29 (set (reg:SI 391 [ D.6785 ])
        (zero_extend:SI (reg/v:QI 91 [ yy_c ]))) lex.yy.c:853 -1
     (nil))
(insn 239 238 240 29 (parallel [
            (set (reg:SI 392 [ D.6785 ])
                (plus:SI (reg:SI 390 [ D.6785 ])
                    (reg:SI 391 [ D.6785 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:853 -1
     (nil))
(insn 240 239 241 29 (set (reg:DI 393)
        (zero_extend:DI (reg:SI 392 [ D.6785 ]))) lex.yy.c:853 -1
     (nil))
(insn 241 240 242 29 (set (reg/v:SI 87 [ yy_current_state ])
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 393)
                        (const_int 2 [0x2]))
                    (reg/f:DI 389)) [3 yy_nxt S2 A16]))) lex.yy.c:853 -1
     (nil))
(debug_insn 242 241 243 29 (var_location:SI yy_current_state (reg/v:SI 87 [ yy_current_state ])) lex.yy.c:853 -1
     (nil))
(insn 243 242 244 29 (parallel [
            (set (reg/v/f:DI 88 [ yy_cp ])
                (plus:DI (reg/v/f:DI 88 [ yy_cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:854 -1
     (nil))
(debug_insn 244 243 245 29 (var_location:DI yy_cp (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:854 -1
     (nil))
(insn 245 244 246 29 (set (reg/f:DI 394)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) lex.yy.c:856 -1
     (nil))
(insn 246 245 247 29 (set (reg:DI 395)
        (sign_extend:DI (reg/v:SI 87 [ yy_current_state ]))) lex.yy.c:856 -1
     (nil))
(insn 247 246 248 29 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 395)
                    (const_int 2 [0x2]))
                (reg/f:DI 394)) [3 yy_base S2 A16])) lex.yy.c:856 -1
     (nil))
(insn 248 247 249 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 321 [ D.6787 ])
            (const_int 190 [0xbe]))) lex.yy.c:856 -1
     (nil))
(jump_insn 249 248 250 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 258)
            (pc))) lex.yy.c:856 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 258)
;;  succ:       31 [9.0%] 
;;              30 [91.0%]  (FALLTHRU)

;; basic block 30, loop depth 4, count 0, freq 819, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL)
;;  pred:       29 [91.0%]  (FALLTHRU)
(note 250 249 251 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 252 30 (set (reg:QI 320 [ D.6789 ])
        (mem:QI (reg/v/f:DI 88 [ yy_cp ]) [0 MEM[base: yy_cp_82, offset: 0B]+0 S1 A8])) -1
     (nil))
(insn 252 251 253 30 (set (reg/f:DI 396)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) -1
     (nil))
(insn 253 252 254 30 (set (reg:DI 397)
        (sign_extend:DI (reg/v:SI 87 [ yy_current_state ]))) -1
     (nil))
(insn 254 253 256 30 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 397)
                    (const_int 2 [0x2]))
                (reg/f:DI 396)) [3 yy_accept S2 A16])) -1
     (nil))
(jump_insn 256 254 257 30 (set (pc)
        (label_ref 255)) -1
     (nil)
 -> 255)
;;  succ:       22 [100.0%]  (DFS_BACK)

(barrier 257 256 258)
;; basic block 31, loop depth 3, count 0, freq 81, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL)
;;  pred:       29 [9.0%] 
(code_label 258 257 259 31 129 "" [1 uses])
(note 259 258 260 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 315 [ yy_last_accepting_cpos_lsm.192 ])
            (const_int 0 [0]))) -1
     (nil))
(jump_insn 261 260 262 31 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 264)
            (pc))) -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 264)
;;  succ:       33 [100.0%] 
;;              32 (FALLTHRU)

;; basic block 32, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL)
;;  pred:       31 (FALLTHRU)
(note 262 261 263 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 263 262 264 32 (set (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])
        (reg/f:DI 316 [ yy_last_accepting_cpos_lsm.191 ])) -1
     (nil))
;;  succ:       33 [100.0%]  (FALLTHRU)

;; basic block 33, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL)
;;  pred:       32 [100.0%]  (FALLTHRU)
;;              31 [100.0%] 
(code_label 264 263 265 33 131 "" [1 uses])
(note 265 264 266 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 267 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 313 [ yy_last_accepting_state_lsm.194 ])
            (const_int 0 [0]))) -1
     (nil))
(jump_insn 267 266 268 33 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 270)
            (pc))) -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 270)
;;  succ:       35 [100.0%] 
;;              34 (FALLTHRU)

;; basic block 34, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL)
;;  pred:       33 (FALLTHRU)
(note 268 267 269 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 269 268 270 34 (set (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])
        (reg:SI 314 [ yy_last_accepting_state_lsm.193 ])) -1
     (nil))
;;  succ:       35 [100.0%]  (FALLTHRU)

;; basic block 35, loop depth 3, count 0, freq 81, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL)
;;  pred:       34 [100.0%]  (FALLTHRU)
;;              33 [100.0%] 
(code_label 270 269 271 35 132 "" [1 uses])
(note 271 270 272 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 35 (set (reg/f:DI 398)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) -1
     (nil))
(insn 273 272 274 35 (set (reg:DI 399)
        (sign_extend:DI (reg/v:SI 87 [ yy_current_state ]))) -1
     (nil))
(insn 274 273 275 35 (set (reg:HI 186 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 399)
                    (const_int 2 [0x2]))
                (reg/f:DI 398)) [3 yy_accept S2 A16])) -1
     (nil))
(jump_insn 275 274 276 35 (set (pc)
        (label_ref 278)) -1
     (nil)
 -> 278)
;;  succ:       37 [100.0%] 

(barrier 276 275 390)
;; basic block 36, loop depth 4, count 0, freq 2, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL)
;;  pred:       114 [98.0%] 
;;              52 [100.0%] 
;;              166 [100.0%] 
;;              174 [100.0%] 
(code_label 390 276 277 36 187 "" [4 uses])
(note 277 390 278 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
;;  succ:       37 [100.0%]  (FALLTHRU,DFS_BACK)

;; basic block 37, loop depth 4, count 0, freq 83, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL)
;;  pred:       35 [100.0%] 
;;              36 [100.0%]  (FALLTHRU,DFS_BACK)
(code_label 278 277 279 37 133 "" [1 uses])
(note 279 278 280 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(debug_insn 280 279 281 37 (var_location:DI yy_bp (reg/v/f:DI 89 [ yy_cp ])) -1
     (nil))
(debug_insn 281 280 282 37 (var_location:DI yy_cp (reg/v/f:DI 88 [ yy_cp ])) -1
     (nil))
(debug_insn 282 281 283 37 (var_location:SI yy_current_state (clobber (const_int 0 [0]))) -1
     (nil))
(insn 283 282 284 37 (set (reg/v:SI 90 [ yy_act ])
        (sign_extend:SI (reg:HI 186 [ D.6786 ]))) lex.yy.c:859 -1
     (nil))
(debug_insn 284 283 285 37 (var_location:SI yy_act (reg/v:SI 90 [ yy_act ])) lex.yy.c:859 -1
     (nil))
(insn 285 284 286 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 90 [ yy_act ])
            (const_int 0 [0]))) lex.yy.c:860 -1
     (nil))
(jump_insn 286 285 287 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 296)
            (pc))) lex.yy.c:860 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 296)
;;  succ:       38 [50.0%]  (FALLTHRU)
;;              39 [50.0%] 

;; basic block 38, loop depth 4, count 0, freq 42, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL)
;;  pred:       37 [50.0%]  (FALLTHRU)
(note 287 286 288 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 288 287 289 38 (set (reg/v/f:DI 88 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])) lex.yy.c:862 -1
     (nil))
(debug_insn 289 288 290 38 (var_location:DI yy_cp (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:862 -1
     (nil))
(debug_insn 290 289 291 38 (var_location:SI yy_current_state (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])) lex.yy.c:863 -1
     (nil))
(insn 291 290 292 38 (set (reg/f:DI 400)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) lex.yy.c:864 -1
     (nil))
(insn 292 291 293 38 (set (reg:SI 402)
        (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])) lex.yy.c:864 -1
     (nil))
(insn 293 292 294 38 (set (reg:DI 401)
        (sign_extend:DI (reg:SI 402))) lex.yy.c:864 -1
     (nil))
(insn 294 293 295 38 (set (reg/v:SI 90 [ yy_act ])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 401)
                        (const_int 2 [0x2]))
                    (reg/f:DI 400)) [3 yy_accept S2 A16]))) lex.yy.c:864 -1
     (nil))
(debug_insn 295 294 296 38 (var_location:SI yy_act (reg/v:SI 90 [ yy_act ])) lex.yy.c:864 -1
     (nil))
;;  succ:       39 [100.0%]  (FALLTHRU)

;; basic block 39, loop depth 4, count 0, freq 83, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL)
;;  pred:       37 [50.0%] 
;;              38 [100.0%]  (FALLTHRU)
(code_label 296 295 297 39 134 "" [1 uses])
(note 297 296 298 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(debug_insn 298 297 299 39 (var_location:SI yy_act (reg/v:SI 90 [ yy_act ])) -1
     (nil))
(debug_insn 299 298 300 39 (var_location:DI yy_cp (reg/v/f:DI 88 [ yy_cp ])) -1
     (nil))
(insn 300 299 301 39 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/v/f:DI 89 [ yy_cp ])) lex.yy.c:867 -1
     (nil))
(insn 301 300 302 39 (set (reg:DI 126 [ D.6788 ])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:867 -1
     (nil))
(insn 302 301 303 39 (parallel [
            (set (reg:DI 403)
                (minus:DI (reg:DI 126 [ D.6788 ])
                    (reg/v/f:DI 89 [ yy_cp ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:867 -1
     (nil))
(insn 303 302 304 39 (set (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])
        (reg:DI 403)) lex.yy.c:867 -1
     (nil))
(insn 304 303 305 39 (set (reg:QI 404)
        (mem:QI (reg/v/f:DI 88 [ yy_cp ]) [0 *yy_cp_6+0 S1 A8])) lex.yy.c:867 -1
     (nil))
(insn 305 304 306 39 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 404)) lex.yy.c:867 -1
     (nil))
(insn 306 305 307 39 (set (mem:QI (reg/v/f:DI 88 [ yy_cp ]) [0 *yy_cp_6+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:867 -1
     (nil))
(insn 307 306 308 39 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:867 -1
     (nil))
(insn 308 307 309 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 90 [ yy_act ])
            (const_int 46 [0x2e]))) lex.yy.c:869 -1
     (nil))
(jump_insn 309 308 310 39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 320)
            (pc))) lex.yy.c:869 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 320)
;;  succ:       40 [72.0%]  (FALLTHRU)
;;              42 [28.0%] 

;; basic block 40, loop depth 4, count 0, freq 60, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL)
;;  pred:       39 [72.0%]  (FALLTHRU)
(note 310 309 311 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 311 310 312 40 (set (reg/f:DI 405)
        (symbol_ref:DI ("_ZL21yy_rule_can_match_eol") [flags 0x2]  <var_decl 0x7f88bc080750 yy_rule_can_match_eol>)) lex.yy.c:869 -1
     (nil))
(insn 312 311 313 40 (set (reg:DI 406)
        (sign_extend:DI (reg/v:SI 90 [ yy_act ]))) lex.yy.c:869 -1
     (nil))
(insn 313 312 314 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/u:SI (plus:DI (mult:DI (reg:DI 406)
                        (const_int 4 [0x4]))
                    (reg/f:DI 405)) [2 yy_rule_can_match_eol S4 A32])
            (const_int 0 [0]))) lex.yy.c:869 -1
     (nil))
(jump_insn 314 313 315 40 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 320)
            (pc))) lex.yy.c:869 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 320)
;;  succ:       41 [50.0%]  (FALLTHRU)
;;              42 [50.0%] 

;; basic block 41, loop depth 4, count 0, freq 30, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL)
;;  pred:       40 [50.0%]  (FALLTHRU)
(note 315 314 316 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(debug_insn 316 315 317 41 (var_location:DI yyl (const_int 0 [0])) -1
     (nil))
(insn 317 316 318 41 (set (reg:DI 307 [ D.6781 ])
        (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])) lex.yy.c:872 -1
     (nil))
(insn 318 317 319 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 307 [ D.6781 ])
            (const_int 0 [0]))) lex.yy.c:872 -1
     (nil))
(jump_insn 319 318 320 41 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 324)
            (pc))) lex.yy.c:872 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 324)
;;  succ:       42 [9.0%]  (FALLTHRU)
;;              43 [91.0%] 

;; basic block 42, loop depth 4, count 0, freq 83, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL)
;;  pred:       40 [50.0%] 
;;              46 [9.0%] 
;;              39 [28.0%] 
;;              41 [9.0%]  (FALLTHRU)
(code_label 320 319 321 42 135 "" [3 uses])
(note 321 320 322 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(jump_insn 322 321 323 42 (set (pc)
        (label_ref 347)) lex.yy.c:872 -1
     (nil)
 -> 347)
;;  succ:       48 [100.0%] 

(barrier 323 322 324)
;; basic block 43, loop depth 4, count 0, freq 27, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL)
;;  pred:       41 [91.0%] 
(code_label 324 323 325 43 136 "" [1 uses])
(note 325 324 326 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 326 325 327 43 (set (reg/f:DI 337 [ D.6783 ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) -1
     (nil))
(insn 327 326 328 43 (set (reg:DI 311 [ ivtmp.210 ])
        (reg/f:DI 337 [ D.6783 ])) -1
     (nil))
(insn 328 327 343 43 (parallel [
            (set (reg:DI 327 [ D.6796 ])
                (plus:DI (reg/f:DI 337 [ D.6783 ])
                    (reg:DI 307 [ D.6781 ])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
;;  succ:       44 [100.0%]  (FALLTHRU)

;; basic block 44, loop depth 5, count 0, freq 303, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL)
;;  pred:       43 [100.0%]  (FALLTHRU)
;;              47 [100.0%] 
(code_label 343 328 329 44 139 "" [1 uses])
(note 329 343 330 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(debug_insn 330 329 331 44 (var_location:DI yyl (minus:DI (reg:DI 311 [ ivtmp.210 ])
        (reg/f:DI 337 [ D.6783 ]))) -1
     (nil))
(insn 331 330 332 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg:DI 311 [ ivtmp.210 ]) [0 MEM[base: _324, offset: 0B]+0 S1 A8])
            (const_int 10 [0xa]))) lex.yy.c:873 -1
     (nil))
(jump_insn 332 331 333 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 335)
            (pc))) lex.yy.c:873 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 335)
;;  succ:       45 [28.0%]  (FALLTHRU)
;;              46 [72.0%] 

;; basic block 45, loop depth 5, count 0, freq 85, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL)
;;  pred:       44 [28.0%]  (FALLTHRU)
(note 333 332 334 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 334 333 335 45 (parallel [
            (set (mem/c:SI (symbol_ref:DI ("yylineno") [flags 0x2]  <var_decl 0x7f88bc0807e0 yylineno>) [2 yylineno+0 S4 A32])
                (plus:SI (mem/c:SI (symbol_ref:DI ("yylineno") [flags 0x2]  <var_decl 0x7f88bc0807e0 yylineno>) [2 yylineno+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:875 -1
     (nil))
;;  succ:       46 [100.0%]  (FALLTHRU)

;; basic block 46, loop depth 5, count 0, freq 303, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL)
;;  pred:       44 [72.0%] 
;;              45 [100.0%]  (FALLTHRU)
(code_label 335 334 336 46 138 "" [1 uses])
(note 336 335 337 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(debug_insn 337 336 338 46 (var_location:DI D#19 (plus:DI (minus:DI (reg:DI 311 [ ivtmp.210 ])
            (reg/f:DI 337 [ D.6783 ]))
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 338 337 339 46 (var_location:DI yyl (debug_expr:DI D#19)) lex.yy.c:872 -1
     (nil))
(debug_insn 339 338 340 46 (var_location:DI yyl (debug_expr:DI D#19)) -1
     (nil))
(insn 340 339 341 46 (parallel [
            (set (reg:DI 311 [ ivtmp.210 ])
                (plus:DI (reg:DI 311 [ ivtmp.210 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (nil))
(insn 341 340 342 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 311 [ ivtmp.210 ])
            (reg:DI 327 [ D.6796 ]))) lex.yy.c:872 -1
     (nil))
(jump_insn 342 341 346 46 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 320)
            (pc))) lex.yy.c:872 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 320)
;;  succ:       42 [9.0%] 
;;              47 [91.0%]  (FALLTHRU,DFS_BACK)

;; basic block 47, loop depth 5, count 0, freq 276, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL)
;;  pred:       46 [91.0%]  (FALLTHRU,DFS_BACK)
(note 346 342 344 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(jump_insn 344 346 345 47 (set (pc)
        (label_ref 343)) -1
     (nil)
 -> 343)
;;  succ:       44 [100.0%] 

(barrier 345 344 347)
;; basic block 48, loop depth 5, count 0, freq 84, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       42 [100.0%] 
;;              164 [100.0%]  (DFS_BACK)
(code_label 347 345 348 48 137 "" [2 uses])
(note 348 347 349 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(debug_insn 349 348 350 48 (var_location:SI yy_act (reg/v:SI 90 [ yy_act ])) -1
     (nil))
(insn 350 349 351 48 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 90 [ yy_act ])
            (const_int 49 [0x31]))) lex.yy.c:881 -1
     (nil))
(jump_insn 351 350 1350 48 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1218)
            (pc))) lex.yy.c:881 -1
     (int_list:REG_BR_PROB 222 (nil))
 -> 1218)
;;  succ:       167 [2.2%] 
;;              49 [97.8%]  (FALLTHRU)

;; basic block 49, loop depth 5, count 0, freq 82, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL)
;;  pred:       48 [97.8%]  (FALLTHRU)
(note 1350 351 352 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 352 1350 353 49 (set (reg:DI 407)
        (zero_extend:DI (reg/v:SI 90 [ yy_act ]))) lex.yy.c:881 -1
     (nil))
(insn 353 352 354 49 (set (reg/f:DI 408)
        (label_ref:DI 357)) lex.yy.c:881 -1
     (insn_list:REG_LABEL_OPERAND 357 (nil)))
(insn 354 353 355 49 (set (reg:DI 409)
        (mem/u/c:DI (plus:DI (ashift:DI (reg:DI 407)
                    (const_int 3 [0x3]))
                (reg/f:DI 408)) [0  S8 A8])) lex.yy.c:881 -1
     (nil))
(jump_insn 355 354 356 49 (parallel [
            (set (pc)
                (reg:DI 409))
            (use (label_ref 357))
        ]) lex.yy.c:881 -1
     (nil)
 -> 357)
;;  succ:       101 [2.3%] 
;;              52 [2.3%] 
;;              53 [2.3%] 
;;              51 [2.3%] 
;;              58 [2.3%] 
;;              54 [2.3%] 
;;              55 [2.3%] 
;;              56 [2.3%] 
;;              104 [2.3%] 
;;              57 [2.3%] 
;;              103 [2.3%] 
;;              102 [2.3%] 
;;              61 [2.3%] 
;;              64 [2.3%] 
;;              69 [2.3%] 
;;              72 [2.3%] 
;;              75 [2.3%] 
;;              76 [2.3%] 
;;              77 [2.3%] 
;;              168 [2.3%] 
;;              169 [2.3%] 
;;              50 [2.3%] 
;;              79 [2.3%] 
;;              80 [2.3%] 
;;              81 [2.3%] 
;;              82 [2.3%] 
;;              83 [2.3%] 
;;              84 [2.3%] 
;;              85 [2.3%] 
;;              86 [2.3%] 
;;              87 [2.3%] 
;;              88 [2.3%] 
;;              89 [2.3%] 
;;              90 [2.3%] 
;;              91 [2.3%] 
;;              92 [2.3%] 
;;              93 [2.3%] 
;;              94 [2.3%] 
;;              95 [2.3%] 
;;              96 [2.3%] 
;;              97 [2.3%] 
;;              98 [2.3%] 
;;              99 [2.3%] 
;;              100 [2.3%] 

(barrier 356 355 357)
;; Insn is not within a basic block
(code_label 357 356 358 142 "" [2 uses])
;; Insn is not within a basic block
(jump_table_data 358 357 359 (addr_vec:DI [
            (label_ref:DI 379)
            (label_ref:DI 393)
            (label_ref:DI 364)
            (label_ref:DI 364)
            (label_ref:DI 399)
            (label_ref:DI 411)
            (label_ref:DI 416)
            (label_ref:DI 364)
            (label_ref:DI 421)
            (label_ref:DI 364)
            (label_ref:DI 364)
            (label_ref:DI 451)
            (label_ref:DI 474)
            (label_ref:DI 499)
            (label_ref:DI 518)
            (label_ref:DI 535)
            (label_ref:DI 551)
            (label_ref:DI 560)
            (label_ref:DI 1223)
            (label_ref:DI 1330)
            (label_ref:DI 360)
            (label_ref:DI 584)
            (label_ref:DI 588)
            (label_ref:DI 592)
            (label_ref:DI 596)
            (label_ref:DI 600)
            (label_ref:DI 604)
            (label_ref:DI 608)
            (label_ref:DI 612)
            (label_ref:DI 616)
            (label_ref:DI 620)
            (label_ref:DI 624)
            (label_ref:DI 628)
            (label_ref:DI 632)
            (label_ref:DI 636)
            (label_ref:DI 640)
            (label_ref:DI 644)
            (label_ref:DI 648)
            (label_ref:DI 652)
            (label_ref:DI 656)
            (label_ref:DI 660)
            (label_ref:DI 664)
            (label_ref:DI 668)
            (label_ref:DI 672)
            (label_ref:DI 678)
            (label_ref:DI 691)
            (label_ref:DI 707)
            (label_ref:DI 437)
            (label_ref:DI 437)
            (label_ref:DI 437)
        ]))
(barrier 359 358 360)
;; basic block 50, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 360 359 361 50 158 "" [1 uses])
(note 361 360 44 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 44 361 362 50 (set (reg:SI 92 [ D.6777 ])
        (const_int 278 [0x116])) mycc.l:77 -1
     (nil))
(jump_insn 362 44 363 50 (set (pc)
        (label_ref 1225)) -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 363 362 364)
;; basic block 51, loop depth 2, count 0, freq 2, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 364 363 365 51 144 "" [5 uses])
(note 365 364 366 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 366 365 367 51 (set (reg:QI 320 [ D.6789 ])
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) -1
     (nil))
(insn 367 366 368 51 (set (reg:SI 342 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) -1
     (nil))
(insn 368 367 369 51 (set (reg/f:DI 410)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) -1
     (nil))
(insn 369 368 370 51 (set (reg:DI 411)
        (sign_extend:DI (reg:SI 342 [ D.6777 ]))) -1
     (nil))
(insn 370 369 371 51 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 411)
                    (const_int 2 [0x2]))
                (reg/f:DI 410)) [3 yy_accept S2 A16])) -1
     (nil))
(insn 371 370 372 51 (set (reg/f:DI 412)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) -1
     (nil))
(insn 372 371 373 51 (set (reg:DI 413)
        (sign_extend:DI (reg:SI 342 [ D.6777 ]))) -1
     (nil))
(insn 373 372 374 51 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 413)
                    (const_int 2 [0x2]))
                (reg/f:DI 412)) [3 yy_base S2 A16])) -1
     (nil))
(insn 374 373 375 51 (set (reg/v/f:DI 88 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) -1
     (nil))
(insn 375 374 377 51 (set (reg/v:SI 87 [ yy_current_state ])
        (reg:SI 342 [ D.6777 ])) -1
     (nil))
(jump_insn 377 375 378 51 (set (pc)
        (label_ref 376)) -1
     (nil)
 -> 376)
;;  succ:       19 [100.0%]  (DFS_BACK)

(barrier 378 377 379)
;; basic block 52, loop depth 4, count 0, freq 2, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 379 378 380 52 141 "" [1 uses])
(note 380 379 381 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 381 380 382 52 (set (reg:QI 414)
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) lex.yy.c:885 -1
     (nil))
(insn 382 381 383 52 (set (mem:QI (reg/v/f:DI 88 [ yy_cp ]) [0 *yy_cp_6+0 S1 A8])
        (reg:QI 414)) lex.yy.c:885 -1
     (nil))
(insn 383 382 384 52 (set (reg/v/f:DI 88 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])) lex.yy.c:886 -1
     (nil))
(debug_insn 384 383 385 52 (var_location:DI yy_cp (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:886 -1
     (nil))
(debug_insn 385 384 386 52 (var_location:SI yy_current_state (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])) lex.yy.c:887 -1
     (nil))
(insn 386 385 387 52 (set (reg/f:DI 415)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) -1
     (nil))
(insn 387 386 388 52 (set (reg:SI 417)
        (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])) -1
     (nil))
(insn 388 387 389 52 (set (reg:DI 416)
        (sign_extend:DI (reg:SI 417))) -1
     (nil))
(insn 389 388 391 52 (set (reg:HI 186 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 416)
                    (const_int 2 [0x2]))
                (reg/f:DI 415)) [3 yy_accept S2 A16])) -1
     (nil))
(jump_insn 391 389 392 52 (set (pc)
        (label_ref 390)) lex.yy.c:888 -1
     (nil)
 -> 390)
;;  succ:       36 [100.0%] 

(barrier 392 391 393)
;; basic block 53, loop depth 1, count 0, freq 2, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 393 392 394 53 143 "" [1 uses])
(note 394 393 395 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 395 394 4 53 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 5 [0x5])) mycc.l:43 -1
     (nil))
(insn 4 395 5 53 (set (reg:HI 321 [ D.6787 ])
        (const_int 40 [0x28])) mycc.l:44 -1
     (nil))
(insn 5 4 6 53 (set (reg:HI 343 [ D.6786 ])
        (const_int 2 [0x2])) mycc.l:44 -1
     (nil))
(insn 6 5 397 53 (set (reg:SI 341 [ D.6777 ])
        (const_int 5 [0x5])) mycc.l:44 -1
     (nil))
(jump_insn 397 6 398 53 (set (pc)
        (label_ref 396)) mycc.l:44 -1
     (nil)
 -> 396)
;;  succ:       17 [100.0%] 

(barrier 398 397 399)
;; basic block 54, loop depth 1, count 0, freq 2, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 399 398 400 54 145 "" [1 uses])
(note 400 399 401 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 401 400 402 54 (parallel [
            (set (mem/c:SI (symbol_ref:DI ("_ZL8line_num") [flags 0x2]  <var_decl 0x7f88bc119b40 line_num>) [2 line_num+0 S4 A32])
                (plus:SI (mem/c:SI (symbol_ref:DI ("_ZL8line_num") [flags 0x2]  <var_decl 0x7f88bc119b40 line_num>) [2 line_num+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mycc.l:46 -1
     (nil))
(insn 402 401 403 54 (set (reg:SI 341 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) -1
     (nil))
(insn 403 402 404 54 (set (reg/f:DI 418)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) -1
     (nil))
(insn 404 403 405 54 (set (reg:DI 419)
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) -1
     (nil))
(insn 405 404 406 54 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 419)
                    (const_int 2 [0x2]))
                (reg/f:DI 418)) [3 yy_accept S2 A16])) -1
     (nil))
(insn 406 405 407 54 (set (reg/f:DI 420)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) -1
     (nil))
(insn 407 406 408 54 (set (reg:DI 421)
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) -1
     (nil))
(insn 408 407 409 54 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 421)
                    (const_int 2 [0x2]))
                (reg/f:DI 420)) [3 yy_base S2 A16])) -1
     (nil))
(jump_insn 409 408 410 54 (set (pc)
        (label_ref 396)) mycc.l:47 -1
     (nil)
 -> 396)
;;  succ:       17 [100.0%] 

(barrier 410 409 411)
;; basic block 55, loop depth 1, count 0, freq 2, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 411 410 412 55 146 "" [1 uses])
(note 412 411 413 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 413 412 7 55 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 1 [0x1])) mycc.l:47 -1
     (nil))
(insn 7 413 8 55 (set (reg:HI 321 [ D.6787 ])
        (const_int 0 [0])) mycc.l:48 -1
     (nil))
(insn 8 7 9 55 (set (reg:HI 343 [ D.6786 ])
        (const_int 0 [0])) mycc.l:48 -1
     (nil))
(insn 9 8 414 55 (set (reg:SI 341 [ D.6777 ])
        (const_int 1 [0x1])) mycc.l:48 -1
     (nil))
(jump_insn 414 9 415 55 (set (pc)
        (label_ref 396)) mycc.l:48 -1
     (nil)
 -> 396)
;;  succ:       17 [100.0%] 

(barrier 415 414 416)
;; basic block 56, loop depth 1, count 0, freq 2, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 416 415 417 56 147 "" [1 uses])
(note 417 416 418 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 418 417 10 56 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 3 [0x3])) mycc.l:49 -1
     (nil))
(insn 10 418 11 56 (set (reg:HI 321 [ D.6787 ])
        (const_int 37 [0x25])) mycc.l:50 -1
     (nil))
(insn 11 10 12 56 (set (reg:HI 343 [ D.6786 ])
        (const_int 7 [0x7])) mycc.l:50 -1
     (nil))
(insn 12 11 419 56 (set (reg:SI 341 [ D.6777 ])
        (const_int 3 [0x3])) mycc.l:50 -1
     (nil))
(jump_insn 419 12 420 56 (set (pc)
        (label_ref 396)) mycc.l:50 -1
     (nil)
 -> 396)
;;  succ:       17 [100.0%] 

(barrier 420 419 421)
;; basic block 57, loop depth 1, count 0, freq 2, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 421 420 422 57 148 "" [1 uses])
(note 422 421 423 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 423 422 424 57 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f88bbbf2750 *.LC14>)) mycc.l:52 -1
     (nil))
(insn 424 423 425 57 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:52 -1
     (nil))
(call_insn 425 424 426 57 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f88bbf7aca8 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mycc.l:52 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f88bbf7aca8 fopen>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 426 425 427 57 (set (reg/f:DI 136 [ D.6778 ])
        (reg:DI 0 ax)) mycc.l:52 -1
     (nil))
(insn 427 426 428 57 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 136 [ D.6778 ])) mycc.l:52 -1
     (nil))
(insn 428 427 429 57 (set (reg:SI 4 si)
        (const_int 16384 [0x4000])) mycc.l:53 -1
     (nil))
(insn 429 428 430 57 (set (reg:DI 5 di)
        (reg/f:DI 136 [ D.6778 ])) mycc.l:53 -1
     (nil))
(call_insn 430 429 431 57 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>) [0 yy_create_buffer S1 A8])
            (const_int 0 [0]))) mycc.l:53 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 431 430 432 57 (set (reg/f:DI 137 [ D.6782 ])
        (reg:DI 0 ax)) mycc.l:53 -1
     (nil))
(insn 432 431 433 57 (set (reg:DI 5 di)
        (reg/f:DI 137 [ D.6782 ])) mycc.l:53 -1
     (nil))
(call_insn 433 432 434 57 (call (mem:QI (symbol_ref:DI ("_Z19yypush_buffer_stateP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c5e8 yypush_buffer_state>) [0 yypush_buffer_state S1 A8])
        (const_int 0 [0])) mycc.l:53 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z19yypush_buffer_stateP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c5e8 yypush_buffer_state>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 434 433 13 57 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 1 [0x1])) mycc.l:54 -1
     (nil))
(insn 13 434 14 57 (set (reg:HI 321 [ D.6787 ])
        (const_int 0 [0])) mycc.l:56 -1
     (nil))
(insn 14 13 15 57 (set (reg:HI 343 [ D.6786 ])
        (const_int 0 [0])) mycc.l:56 -1
     (nil))
(insn 15 14 435 57 (set (reg:SI 341 [ D.6777 ])
        (const_int 1 [0x1])) mycc.l:56 -1
     (nil))
(jump_insn 435 15 436 57 (set (pc)
        (label_ref 396)) mycc.l:56 -1
     (nil)
 -> 396)
;;  succ:       17 [100.0%] 

(barrier 436 435 437)
;; basic block 58, loop depth 1, count 0, freq 2, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49 [2.3%] 
(code_label 437 436 438 58 185 "" [3 uses])
(note 438 437 439 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(call_insn 439 438 440 58 (call (mem:QI (symbol_ref:DI ("_Z18yypop_buffer_statev") [flags 0x3]  <function_decl 0x7f88bc07c6c0 yypop_buffer_state>) [0 yypop_buffer_state S1 A8])
        (const_int 0 [0])) mycc.l:58 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z18yypop_buffer_statev") [flags 0x3]  <function_decl 0x7f88bc07c6c0 yypop_buffer_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 440 439 441 58 (set (reg/f:DI 168 [ D.6780 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) mycc.l:60 -1
     (nil))
(insn 441 440 442 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 168 [ D.6780 ])
            (const_int 0 [0]))) mycc.l:60 -1
     (nil))
(jump_insn 442 441 443 58 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1334)
            (pc))) mycc.l:60 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 1334)
;;  succ:       170 [2.0%] 
;;              59 [98.0%]  (FALLTHRU)

;; basic block 59, loop depth 1, count 0, freq 2, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       58 [98.0%]  (FALLTHRU)
(note 443 442 444 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 444 443 445 59 (set (reg:DI 422)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) mycc.l:60 -1
     (nil))
(insn 445 444 446 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (mult:DI (reg:DI 422)
                        (const_int 8 [0x8]))
                    (reg/f:DI 168 [ D.6780 ])) [1 *_224+0 S8 A64])
            (const_int 0 [0]))) mycc.l:60 -1
     (nil))
(jump_insn 446 445 450 59 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1338)
            (pc))) mycc.l:60 612 {*jcc_1}
     (int_list:REG_BR_PROB 200 (nil))
 -> 1338)
;;  succ:       171 [2.0%] 
;;              60 [98.0%]  (FALLTHRU)

;; basic block 60, loop depth 1, count 0, freq 2, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL)
;;  pred:       59 [98.0%]  (FALLTHRU)
(note 450 446 448 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(jump_insn 448 450 449 60 (set (pc)
        (label_ref 447)) -1
     (nil)
 -> 447)
;;  succ:       16 [100.0%] 

(barrier 449 448 451)
;; basic block 61, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 451 449 452 61 149 "" [1 uses])
(note 452 451 453 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 453 452 454 61 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:109 -1
     (nil))
(call_insn 454 453 455 61 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z6lookupPKc") [flags 0x41]  <function_decl 0x7f88bc12e798 lookup>) [0 lookup S1 A8])
            (const_int 0 [0]))) mycc.l:109 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z6lookupPKc") [flags 0x41]  <function_decl 0x7f88bc12e798 lookup>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 455 454 456 61 (set (reg/f:DI 198 [ D.6792 ])
        (reg:DI 0 ax)) mycc.l:109 -1
     (nil))
(insn 456 455 457 61 (set (mem/f/c:DI (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>) [0 yylval.sym+0 S8 A64])
        (reg/f:DI 198 [ D.6792 ])) mycc.l:109 -1
     (nil))
(insn 457 456 458 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 198 [ D.6792 ])
            (const_int 0 [0]))) mycc.l:111 -1
     (nil))
(jump_insn 458 457 459 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 469)
            (pc))) mycc.l:111 -1
     (int_list:REG_BR_PROB 8987 (nil))
 -> 469)
;;  succ:       62 [10.1%]  (FALLTHRU)
;;              63 [89.9%] 

;; basic block 62, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 61, next block 63, flags: (NEW, REACHABLE, RTL)
;;  pred:       61 [10.1%]  (FALLTHRU)
(note 459 458 460 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 460 459 461 62 (set (reg:SI 4 si)
        (const_int 258 [0x102])) mycc.l:113 -1
     (nil))
(insn 461 460 462 62 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:113 -1
     (nil))
(call_insn 462 461 463 62 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z6insertPKci") [flags 0x41]  <function_decl 0x7f88bc12e870 insert>) [0 insert S1 A8])
            (const_int 0 [0]))) mycc.l:113 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z6insertPKci") [flags 0x41]  <function_decl 0x7f88bc12e870 insert>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 463 462 464 62 (set (reg/f:DI 198 [ D.6792 ])
        (reg:DI 0 ax)) mycc.l:113 -1
     (nil))
(insn 464 463 465 62 (set (mem/f/c:DI (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>) [0 yylval.sym+0 S8 A64])
        (reg/f:DI 198 [ D.6792 ])) mycc.l:113 -1
     (nil))
(insn 465 464 466 62 (set (reg:SI 200 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL8localvar") [flags 0x2]  <var_decl 0x7f88bc119ab0 localvar>) [2 localvar+0 S4 A32])) mycc.l:114 -1
     (nil))
(insn 466 465 467 62 (parallel [
            (set (reg:SI 423)
                (plus:SI (reg:SI 200 [ D.6777 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mycc.l:114 -1
     (nil))
(insn 467 466 468 62 (set (mem/c:SI (symbol_ref:DI ("_ZL8localvar") [flags 0x2]  <var_decl 0x7f88bc119ab0 localvar>) [2 localvar+0 S4 A32])
        (reg:SI 423)) mycc.l:114 -1
     (nil))
(insn 468 467 469 62 (set (mem:SI (plus:DI (reg/f:DI 198 [ D.6792 ])
                (const_int 12 [0xc])) [2 _284->localvar+0 S4 A32])
        (reg:SI 200 [ D.6777 ])) mycc.l:114 -1
     (nil))
;;  succ:       63 [100.0%]  (FALLTHRU)

;; basic block 63, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 62, next block 64, flags: (NEW, REACHABLE, RTL)
;;  pred:       61 [89.9%] 
;;              62 [100.0%]  (FALLTHRU)
(code_label 469 468 470 63 190 "" [1 uses])
(note 470 469 471 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 471 470 472 63 (set (reg:SI 92 [ D.6777 ])
        (mem:SI (plus:DI (reg/f:DI 198 [ D.6792 ])
                (const_int 8 [0x8])) [2 _991->token+0 S4 A64])) mycc.l:117 -1
     (nil))
(jump_insn 472 471 473 63 (set (pc)
        (label_ref 1225)) mycc.l:68 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 473 472 474)
;; basic block 64, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 63, next block 65, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 474 473 475 64 150 "" [1 uses])
(note 475 474 476 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 476 475 477 64 (set (reg:DI 1 dx)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:137 -1
     (nil))
(insn 477 476 478 64 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f88bbbf27e0 *.LC15>)) mycc.l:137 -1
     (nil))
(insn 478 477 479 64 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:137 -1
     (nil))
(insn 479 478 480 64 (set (reg:QI 0 ax)
        (const_int 0 [0])) mycc.l:137 -1
     (nil))
(call_insn 480 479 481 64 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) mycc.l:137 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 481 480 482 64 (set (reg/f:DI 424)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:139 -1
     (nil))
(insn 482 481 483 64 (set (reg:SI 202 [ D.6785 ])
        (mem/c:SI (reg/f:DI 424) [0 yylval.num+0 S4 A64])) mycc.l:139 -1
     (nil))
(insn 483 482 484 64 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 202 [ D.6785 ])
            (const_int 127 [0x7f]))) mycc.l:139 -1
     (nil))
(jump_insn 484 483 508 64 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 488)
            (pc))) mycc.l:139 -1
     (int_list:REG_BR_PROB 6100 (nil))
 -> 488)
;;  succ:       65 [39.0%]  (FALLTHRU)
;;              66 [61.0%] 

;; basic block 65, loop depth 0, count 0, freq 3, maybe hot
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL)
;;  pred:       64 [39.0%]  (FALLTHRU)
;;              69 [39.0%] 
;;              72 [39.0%] 
(code_label 508 484 485 65 193 "" [2 uses])
(note 485 508 37 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 37 485 486 65 (set (reg:SI 92 [ D.6777 ])
        (const_int 259 [0x103])) mycc.l:140 -1
     (nil))
(jump_insn 486 37 487 65 (set (pc)
        (label_ref 1225)) mycc.l:139 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 487 486 488)
;; basic block 66, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL)
;;  pred:       64 [61.0%] 
(code_label 488 487 489 66 191 "" [1 uses])
(note 489 488 490 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 490 489 491 66 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 202 [ D.6785 ])
            (const_int 32367 [0x7e6f]))) mycc.l:142 -1
     (nil))
(jump_insn 491 490 512 66 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 495)
            (pc))) mycc.l:142 -1
     (int_list:REG_BR_PROB 6100 (nil))
 -> 495)
;;  succ:       67 [39.0%]  (FALLTHRU)
;;              68 [61.0%] 

;; basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL)
;;  pred:       66 [39.0%]  (FALLTHRU)
;;              70 [39.0%] 
;;              73 [39.0%] 
(code_label 512 491 492 67 194 "" [2 uses])
(note 492 512 36 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 36 492 493 67 (set (reg:SI 92 [ D.6777 ])
        (const_int 260 [0x104])) mycc.l:143 -1
     (nil))
(jump_insn 493 36 494 67 (set (pc)
        (label_ref 1225)) mycc.l:142 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 494 493 495)
;; basic block 68, loop depth 0, count 0, freq 3, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL)
;;  pred:       66 [61.0%] 
;;              71 [100.0%] 
;;              74 [100.0%] 
(code_label 495 494 496 68 192 "" [3 uses])
(note 496 495 35 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 35 496 497 68 (set (reg:SI 92 [ D.6777 ])
        (const_int 261 [0x105])) mycc.l:145 -1
     (nil))
(jump_insn 497 35 498 68 (set (pc)
        (label_ref 1225)) mycc.l:142 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 498 497 499)
;; basic block 69, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 68, next block 70, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 499 498 500 69 151 "" [1 uses])
(note 500 499 501 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 501 500 502 69 (set (reg:DI 1 dx)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:151 -1
     (nil))
(insn 502 501 503 69 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f88bbbf2870 *.LC16>)) mycc.l:151 -1
     (nil))
(insn 503 502 504 69 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:151 -1
     (nil))
(insn 504 503 505 69 (set (reg:QI 0 ax)
        (const_int 0 [0])) mycc.l:151 -1
     (nil))
(call_insn 505 504 506 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) mycc.l:151 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 506 505 507 69 (set (reg/f:DI 425)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:153 -1
     (nil))
(insn 507 506 509 69 (set (reg:SI 203 [ D.6785 ])
        (mem/c:SI (reg/f:DI 425) [0 yylval.num+0 S4 A64])) mycc.l:153 -1
     (nil))
(insn 509 507 510 69 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 203 [ D.6785 ])
            (const_int 127 [0x7f]))) mycc.l:153 -1
     (nil))
(jump_insn 510 509 511 69 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 508)
            (pc))) mycc.l:153 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 508)
;;  succ:       65 [39.0%] 
;;              70 [61.0%]  (FALLTHRU)

;; basic block 70, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 69, next block 71, flags: (NEW, REACHABLE, RTL)
;;  pred:       69 [61.0%]  (FALLTHRU)
(note 511 510 513 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 513 511 514 70 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 203 [ D.6785 ])
            (const_int 32367 [0x7e6f]))) mycc.l:156 -1
     (nil))
(jump_insn 514 513 517 70 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 512)
            (pc))) mycc.l:156 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 512)
;;  succ:       67 [39.0%] 
;;              71 [61.0%]  (FALLTHRU)

;; basic block 71, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 70, next block 72, flags: (NEW, REACHABLE, RTL)
;;  pred:       70 [61.0%]  (FALLTHRU)
(note 517 514 515 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(jump_insn 515 517 516 71 (set (pc)
        (label_ref 495)) mycc.l:156 -1
     (nil)
 -> 495)
;;  succ:       68 [100.0%] 

(barrier 516 515 518)
;; basic block 72, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 71, next block 73, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 518 516 519 72 152 "" [1 uses])
(note 519 518 520 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 520 519 521 72 (set (reg:DI 1 dx)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:123 -1
     (nil))
(insn 521 520 522 72 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f88bbbf2900 *.LC17>)) mycc.l:123 -1
     (nil))
(insn 522 521 523 72 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:123 -1
     (nil))
(insn 523 522 524 72 (set (reg:QI 0 ax)
        (const_int 0 [0])) mycc.l:123 -1
     (nil))
(call_insn 524 523 525 72 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) mycc.l:123 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 525 524 526 72 (set (reg/f:DI 426)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:125 -1
     (nil))
(insn 526 525 527 72 (set (reg:SI 204 [ D.6785 ])
        (mem/c:SI (reg/f:DI 426) [0 yylval.num+0 S4 A64])) mycc.l:125 -1
     (nil))
(insn 527 526 528 72 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 204 [ D.6785 ])
            (const_int 127 [0x7f]))) mycc.l:125 -1
     (nil))
(jump_insn 528 527 529 72 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 508)
            (pc))) mycc.l:125 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 508)
;;  succ:       65 [39.0%] 
;;              73 [61.0%]  (FALLTHRU)

;; basic block 73, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 72, next block 74, flags: (NEW, REACHABLE, RTL)
;;  pred:       72 [61.0%]  (FALLTHRU)
(note 529 528 530 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 530 529 531 73 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 204 [ D.6785 ])
            (const_int 32367 [0x7e6f]))) mycc.l:128 -1
     (nil))
(jump_insn 531 530 534 73 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 512)
            (pc))) mycc.l:128 -1
     (int_list:REG_BR_PROB 3900 (nil))
 -> 512)
;;  succ:       67 [39.0%] 
;;              74 [61.0%]  (FALLTHRU)

;; basic block 74, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 73, next block 75, flags: (NEW, REACHABLE, RTL)
;;  pred:       73 [61.0%]  (FALLTHRU)
(note 534 531 532 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(jump_insn 532 534 533 74 (set (pc)
        (label_ref 495)) mycc.l:128 -1
     (nil)
 -> 495)
;;  succ:       68 [100.0%] 

(barrier 533 532 535)
;; basic block 75, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 74, next block 76, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 535 533 536 75 153 "" [1 uses])
(note 536 535 537 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 537 536 538 75 (parallel [
            (set (reg:DI 427)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -9 [0xfffffffffffffff7])))
            (clobber (reg:CC 17 flags))
        ]) mycc.l:167 -1
     (nil))
(insn 538 537 539 75 (set (reg/f:DI 429)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:167 -1
     (nil))
(insn 539 538 540 75 (parallel [
            (set (reg:DI 428 [ D.6791 ])
                (plus:DI (reg/f:DI 429)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mycc.l:167 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 540 539 541 75 (set (reg:DI 1 dx)
        (reg:DI 427)) mycc.l:167 -1
     (nil))
(insn 541 540 542 75 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f88bbbf2990 *.LC18>)) mycc.l:167 -1
     (nil))
(insn 542 541 543 75 (set (reg:DI 5 di)
        (reg:DI 428 [ D.6791 ])) mycc.l:167 -1
     (nil))
(insn 543 542 544 75 (set (reg:QI 0 ax)
        (const_int 0 [0])) mycc.l:167 -1
     (nil))
(call_insn 544 543 545 75 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) mycc.l:167 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 545 544 546 75 (set (reg/f:DI 430)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:168 -1
     (nil))
(insn 546 545 547 75 (set (reg:SI 431)
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -9 [0xfffffffffffffff7])) [0 c+0 S1 A8]))) mycc.l:168 -1
     (nil))
(insn 547 546 548 75 (set (mem/c:SI (reg/f:DI 430) [0 yylval.num+0 S4 A64])
        (reg:SI 431)) mycc.l:168 -1
     (nil))
(debug_insn 548 547 39 75 (var_location:QI c (clobber (const_int 0 [0]))) mycc.l:72 -1
     (nil))
(insn 39 548 549 75 (set (reg:SI 92 [ D.6777 ])
        (const_int 259 [0x103])) mycc.l:72 -1
     (nil))
(jump_insn 549 39 550 75 (set (pc)
        (label_ref 1225)) mycc.l:72 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 550 549 551)
;; basic block 76, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 75, next block 77, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 551 550 552 76 154 "" [1 uses])
(note 552 551 553 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 553 552 554 76 (set (reg:DI 1 dx)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:176 -1
     (nil))
(insn 554 553 555 76 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f88bbbf2a20 *.LC19>)) mycc.l:176 -1
     (nil))
(insn 555 554 556 76 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:176 -1
     (nil))
(insn 556 555 557 76 (set (reg:QI 0 ax)
        (const_int 0 [0])) mycc.l:176 -1
     (nil))
(call_insn 557 556 40 76 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) mycc.l:176 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 40 557 558 76 (set (reg:SI 92 [ D.6777 ])
        (const_int 262 [0x106])) mycc.l:73 -1
     (nil))
(jump_insn 558 40 559 76 (set (pc)
        (label_ref 1225)) mycc.l:73 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 559 558 560)
;; basic block 77, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 76, next block 78, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49 [2.3%] 
(code_label 560 559 561 77 155 "" [1 uses])
(note 561 560 562 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 562 561 563 77 (set (reg:DI 176 [ D.6781 ])
        (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])) mycc.l:184 -1
     (nil))
(insn 563 562 564 77 (parallel [
            (set (reg:DI 432 [ D.6781 ])
                (plus:DI (reg:DI 176 [ D.6781 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mycc.l:184 -1
     (nil))
(insn 564 563 565 77 (set (reg:DI 5 di)
        (reg:DI 432 [ D.6781 ])) mycc.l:184 -1
     (nil))
(call_insn 565 564 566 77 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) mycc.l:184 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 566 565 567 77 (set (reg/f:DI 433)
        (reg:DI 0 ax)) mycc.l:184 -1
     (expr_list:REG_NOALIAS (reg/f:DI 433)
        (nil)))
(insn 567 566 568 77 (set (reg/f:DI 206 [ D.6793 ])
        (reg/f:DI 433)) mycc.l:184 -1
     (nil))
(insn 568 567 569 77 (set (mem/f/c:DI (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>) [0 yylval.str+0 S8 A64])
        (reg/f:DI 206 [ D.6793 ])) mycc.l:184 -1
     (nil))
(insn 569 568 570 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 206 [ D.6793 ])
            (const_int 0 [0]))) mycc.l:186 -1
     (nil))
(jump_insn 570 569 571 77 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1342)
            (pc))) mycc.l:186 612 {*jcc_1}
     (int_list:REG_BR_PROB 2165 (nil))
 -> 1342)
;;  succ:       78 [78.3%]  (FALLTHRU)
;;              172 [21.6%] 

;; basic block 78, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 77, next block 79, flags: (NEW, REACHABLE, RTL)
;;  pred:       77 [78.3%]  (FALLTHRU)
(note 571 570 572 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(debug_insn 572 571 573 78 (var_location:DI __dest (reg/f:DI 206 [ D.6793 ])) mycc.l:188 -1
     (nil))
(debug_insn 573 572 574 78 (var_location:DI __src (plus:DI (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (const_int 1 [0x1]))) mycc.l:188 -1
     (nil))
(insn 574 573 575 78 (set (reg/f:DI 435)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/string3.h:110 -1
     (nil))
(insn 575 574 576 78 (parallel [
            (set (reg:DI 434 [ D.6791 ])
                (plus:DI (reg/f:DI 435)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/string3.h:110 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
            (const_int 1 [0x1]))
        (nil)))
(insn 576 575 577 78 (set (reg:DI 4 si)
        (reg:DI 434 [ D.6791 ])) /usr/include/x86_64-linux-gnu/bits/string3.h:110 -1
     (nil))
(insn 577 576 578 78 (set (reg:DI 5 di)
        (reg/f:DI 206 [ D.6793 ])) /usr/include/x86_64-linux-gnu/bits/string3.h:110 -1
     (nil))
(call_insn 578 577 579 78 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f88bc2f4510 __builtin_strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/string3.h:110 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f88bc2f4510 __builtin_strcpy>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(debug_insn 579 578 580 78 (var_location:DI __dest (clobber (const_int 0 [0]))) mycc.l:188 -1
     (nil))
(debug_insn 580 579 581 78 (var_location:DI __src (clobber (const_int 0 [0]))) mycc.l:188 -1
     (nil))
(insn 581 580 41 78 (set (mem:QI (plus:DI (plus:DI (reg/f:DI 206 [ D.6793 ])
                    (reg:DI 176 [ D.6781 ]))
                (const_int -2 [0xfffffffffffffffe])) [0 *_301+0 S1 A8])
        (const_int 0 [0])) mycc.l:189 -1
     (nil))
(insn 41 581 582 78 (set (reg:SI 92 [ D.6777 ])
        (const_int 263 [0x107])) mycc.l:74 -1
     (nil))
(jump_insn 582 41 583 78 (set (pc)
        (label_ref 1225)) mycc.l:189 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 583 582 584)
;; basic block 79, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 78, next block 80, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 584 583 585 79 159 "" [1 uses])
(note 585 584 45 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 45 585 586 79 (set (reg:SI 92 [ D.6777 ])
        (const_int 279 [0x117])) mycc.l:78 -1
     (nil))
(jump_insn 586 45 587 79 (set (pc)
        (label_ref 1225)) mycc.l:78 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 587 586 588)
;; basic block 80, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 79, next block 81, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 588 587 589 80 160 "" [1 uses])
(note 589 588 46 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 46 589 590 80 (set (reg:SI 92 [ D.6777 ])
        (const_int 280 [0x118])) mycc.l:79 -1
     (nil))
(jump_insn 590 46 591 80 (set (pc)
        (label_ref 1225)) mycc.l:79 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 591 590 592)
;; basic block 81, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 80, next block 82, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 592 591 593 81 161 "" [1 uses])
(note 593 592 47 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 47 593 594 81 (set (reg:SI 92 [ D.6777 ])
        (const_int 281 [0x119])) mycc.l:80 -1
     (nil))
(jump_insn 594 47 595 81 (set (pc)
        (label_ref 1225)) mycc.l:80 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 595 594 596)
;; basic block 82, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 81, next block 83, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 596 595 597 82 162 "" [1 uses])
(note 597 596 48 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 48 597 598 82 (set (reg:SI 92 [ D.6777 ])
        (const_int 282 [0x11a])) mycc.l:81 -1
     (nil))
(jump_insn 598 48 599 82 (set (pc)
        (label_ref 1225)) mycc.l:81 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 599 598 600)
;; basic block 83, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 82, next block 84, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 600 599 601 83 163 "" [1 uses])
(note 601 600 49 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 49 601 602 83 (set (reg:SI 92 [ D.6777 ])
        (const_int 283 [0x11b])) mycc.l:82 -1
     (nil))
(jump_insn 602 49 603 83 (set (pc)
        (label_ref 1225)) mycc.l:82 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 603 602 604)
;; basic block 84, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 83, next block 85, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 604 603 605 84 164 "" [1 uses])
(note 605 604 50 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 50 605 606 84 (set (reg:SI 92 [ D.6777 ])
        (const_int 284 [0x11c])) mycc.l:83 -1
     (nil))
(jump_insn 606 50 607 84 (set (pc)
        (label_ref 1225)) mycc.l:83 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 607 606 608)
;; basic block 85, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 84, next block 86, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 608 607 609 85 165 "" [1 uses])
(note 609 608 51 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 51 609 610 85 (set (reg:SI 92 [ D.6777 ])
        (const_int 285 [0x11d])) mycc.l:84 -1
     (nil))
(jump_insn 610 51 611 85 (set (pc)
        (label_ref 1225)) mycc.l:84 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 611 610 612)
;; basic block 86, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 85, next block 87, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 612 611 613 86 166 "" [1 uses])
(note 613 612 52 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 52 613 614 86 (set (reg:SI 92 [ D.6777 ])
        (const_int 286 [0x11e])) mycc.l:85 -1
     (nil))
(jump_insn 614 52 615 86 (set (pc)
        (label_ref 1225)) mycc.l:85 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 615 614 616)
;; basic block 87, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 86, next block 88, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 616 615 617 87 167 "" [1 uses])
(note 617 616 53 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 53 617 618 87 (set (reg:SI 92 [ D.6777 ])
        (const_int 287 [0x11f])) mycc.l:86 -1
     (nil))
(jump_insn 618 53 619 87 (set (pc)
        (label_ref 1225)) mycc.l:86 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 619 618 620)
;; basic block 88, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 87, next block 89, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 620 619 621 88 168 "" [1 uses])
(note 621 620 54 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 54 621 622 88 (set (reg:SI 92 [ D.6777 ])
        (const_int 288 [0x120])) mycc.l:87 -1
     (nil))
(jump_insn 622 54 623 88 (set (pc)
        (label_ref 1225)) mycc.l:87 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 623 622 624)
;; basic block 89, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 88, next block 90, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 624 623 625 89 169 "" [1 uses])
(note 625 624 55 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 55 625 626 89 (set (reg:SI 92 [ D.6777 ])
        (const_int 289 [0x121])) mycc.l:88 -1
     (nil))
(jump_insn 626 55 627 89 (set (pc)
        (label_ref 1225)) mycc.l:88 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 627 626 628)
;; basic block 90, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 89, next block 91, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 628 627 629 90 170 "" [1 uses])
(note 629 628 56 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 56 629 630 90 (set (reg:SI 92 [ D.6777 ])
        (const_int 290 [0x122])) mycc.l:89 -1
     (nil))
(jump_insn 630 56 631 90 (set (pc)
        (label_ref 1225)) mycc.l:89 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 631 630 632)
;; basic block 91, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 90, next block 92, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 632 631 633 91 171 "" [1 uses])
(note 633 632 57 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 57 633 634 91 (set (reg:SI 92 [ D.6777 ])
        (const_int 291 [0x123])) mycc.l:90 -1
     (nil))
(jump_insn 634 57 635 91 (set (pc)
        (label_ref 1225)) mycc.l:90 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 635 634 636)
;; basic block 92, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 91, next block 93, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 636 635 637 92 172 "" [1 uses])
(note 637 636 58 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 58 637 638 92 (set (reg:SI 92 [ D.6777 ])
        (const_int 292 [0x124])) mycc.l:91 -1
     (nil))
(jump_insn 638 58 639 92 (set (pc)
        (label_ref 1225)) mycc.l:91 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 639 638 640)
;; basic block 93, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 92, next block 94, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 640 639 641 93 173 "" [1 uses])
(note 641 640 59 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 59 641 642 93 (set (reg:SI 92 [ D.6777 ])
        (const_int 293 [0x125])) mycc.l:92 -1
     (nil))
(jump_insn 642 59 643 93 (set (pc)
        (label_ref 1225)) mycc.l:92 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 643 642 644)
;; basic block 94, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 93, next block 95, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 644 643 645 94 174 "" [1 uses])
(note 645 644 60 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 60 645 646 94 (set (reg:SI 92 [ D.6777 ])
        (const_int 294 [0x126])) mycc.l:93 -1
     (nil))
(jump_insn 646 60 647 94 (set (pc)
        (label_ref 1225)) mycc.l:93 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 647 646 648)
;; basic block 95, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 94, next block 96, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 648 647 649 95 175 "" [1 uses])
(note 649 648 61 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 61 649 650 95 (set (reg:SI 92 [ D.6777 ])
        (const_int 295 [0x127])) mycc.l:94 -1
     (nil))
(jump_insn 650 61 651 95 (set (pc)
        (label_ref 1225)) mycc.l:94 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 651 650 652)
;; basic block 96, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 95, next block 97, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 652 651 653 96 176 "" [1 uses])
(note 653 652 62 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 62 653 654 96 (set (reg:SI 92 [ D.6777 ])
        (const_int 296 [0x128])) mycc.l:95 -1
     (nil))
(jump_insn 654 62 655 96 (set (pc)
        (label_ref 1225)) mycc.l:95 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 655 654 656)
;; basic block 97, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 96, next block 98, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 656 655 657 97 177 "" [1 uses])
(note 657 656 63 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 63 657 658 97 (set (reg:SI 92 [ D.6777 ])
        (const_int 123 [0x7b])) mycc.l:96 -1
     (nil))
(jump_insn 658 63 659 97 (set (pc)
        (label_ref 1225)) mycc.l:96 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 659 658 660)
;; basic block 98, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 97, next block 99, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 660 659 661 98 178 "" [1 uses])
(note 661 660 64 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 64 661 662 98 (set (reg:SI 92 [ D.6777 ])
        (const_int 125 [0x7d])) mycc.l:97 -1
     (nil))
(jump_insn 662 64 663 98 (set (pc)
        (label_ref 1225)) mycc.l:97 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 663 662 664)
;; basic block 99, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 98, next block 100, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 664 663 665 99 179 "" [1 uses])
(note 665 664 65 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 65 665 666 99 (set (reg:SI 92 [ D.6777 ])
        (const_int 91 [0x5b])) mycc.l:98 -1
     (nil))
(jump_insn 666 65 667 99 (set (pc)
        (label_ref 1225)) mycc.l:98 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 667 666 668)
;; basic block 100, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 99, next block 101, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 668 667 669 100 180 "" [1 uses])
(note 669 668 66 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 66 669 670 100 (set (reg:SI 92 [ D.6777 ])
        (const_int 93 [0x5d])) mycc.l:99 -1
     (nil))
(jump_insn 670 66 671 100 (set (pc)
        (label_ref 1225)) mycc.l:99 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 671 670 672)
;; basic block 101, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 100, next block 102, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 672 671 673 101 181 "" [1 uses])
(note 673 672 674 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 674 673 675 101 (set (reg/f:DI 436)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:100 -1
     (nil))
(insn 675 674 676 101 (set (reg:SI 92 [ D.6777 ])
        (sign_extend:SI (mem:QI (reg/f:DI 436) [0 *_238+0 S1 A8]))) mycc.l:100 -1
     (nil))
(jump_insn 676 675 677 101 (set (pc)
        (label_ref 1225)) mycc.l:100 -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 677 676 678)
;; basic block 102, loop depth 1, count 0, freq 2, maybe hot
;;  prev block 101, next block 103, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 678 677 679 102 182 "" [1 uses])
(note 679 678 680 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 680 679 681 102 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f88bbbf2ab0 *.LC20>)) mycc.l:101 -1
     (nil))
(call_insn 681 680 682 102 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z7yyerrorPKc") [flags 0x41]  <function_decl 0x7f88bc13b0d8 yyerror>) [0 yyerror S1 A8])
            (const_int 0 [0]))) mycc.l:101 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z7yyerrorPKc") [flags 0x41]  <function_decl 0x7f88bc13b0d8 yyerror>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 682 681 683 102 (set (reg:SI 341 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) -1
     (nil))
(insn 683 682 684 102 (set (reg/f:DI 437)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) -1
     (nil))
(insn 684 683 685 102 (set (reg:DI 438)
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) -1
     (nil))
(insn 685 684 686 102 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 438)
                    (const_int 2 [0x2]))
                (reg/f:DI 437)) [3 yy_accept S2 A16])) -1
     (nil))
(insn 686 685 687 102 (set (reg/f:DI 439)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) -1
     (nil))
(insn 687 686 688 102 (set (reg:DI 440)
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) -1
     (nil))
(insn 688 687 689 102 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 440)
                    (const_int 2 [0x2]))
                (reg/f:DI 439)) [3 yy_base S2 A16])) -1
     (nil))
(jump_insn 689 688 690 102 (set (pc)
        (label_ref 396)) mycc.l:102 -1
     (nil)
 -> 396)
;;  succ:       17 [100.0%] 

(barrier 690 689 691)
;; basic block 103, loop depth 1, count 0, freq 2, maybe hot
;;  prev block 102, next block 104, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 691 690 692 103 183 "" [1 uses])
(note 692 691 693 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 693 692 694 103 (set (reg:DI 2 cx)
        (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])) mycc.l:103 -1
     (nil))
(insn 694 693 695 103 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) mycc.l:103 -1
     (nil))
(insn 695 694 696 103 (set (reg:DI 4 si)
        (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])) mycc.l:103 -1
     (nil))
(insn 696 695 697 103 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:103 -1
     (nil))
(call_insn 697 696 698 103 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7f88bc2ff0d8 fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) mycc.l:103 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7f88bc2ff0d8 fwrite>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 698 697 699 103 (set (reg:SI 341 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) -1
     (nil))
(insn 699 698 700 103 (set (reg/f:DI 441)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) -1
     (nil))
(insn 700 699 701 103 (set (reg:DI 442)
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) -1
     (nil))
(insn 701 700 702 103 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 442)
                    (const_int 2 [0x2]))
                (reg/f:DI 441)) [3 yy_accept S2 A16])) -1
     (nil))
(insn 702 701 703 103 (set (reg/f:DI 443)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) -1
     (nil))
(insn 703 702 704 103 (set (reg:DI 444)
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) -1
     (nil))
(insn 704 703 705 103 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 444)
                    (const_int 2 [0x2]))
                (reg/f:DI 443)) [3 yy_base S2 A16])) -1
     (nil))
(jump_insn 705 704 706 103 (set (pc)
        (label_ref 396)) -1
     (nil)
 -> 396)
;;  succ:       17 [100.0%] 

(barrier 706 705 707)
;; basic block 104, loop depth 5, count 0, freq 2, maybe hot
;;  prev block 103, next block 105, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 707 706 708 104 184 "" [1 uses])
(note 708 707 709 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(debug_insn 709 708 710 104 (var_location:SI yy_act (const_int 46 [0x2e])) -1
     (nil))
(insn 710 709 711 104 (parallel [
            (set (reg:DI 445 [ D.6788 ])
                (minus:DI (reg:DI 126 [ D.6788 ])
                    (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1140 -1
     (nil))
(insn 711 710 712 104 (parallel [
            (set (reg/v:SI 147 [ yy_amount_of_matched_text ])
                (plus:SI (subreg:SI (reg:DI 445 [ D.6788 ]) 0)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1140 -1
     (nil))
(debug_insn 712 711 713 104 (var_location:SI yy_amount_of_matched_text (reg/v:SI 147 [ yy_amount_of_matched_text ])) lex.yy.c:1140 -1
     (nil))
(insn 713 712 714 104 (set (reg:QI 446)
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) lex.yy.c:1143 -1
     (nil))
(insn 714 713 715 104 (set (mem:QI (reg/v/f:DI 88 [ yy_cp ]) [0 *yy_cp_6+0 S1 A8])
        (reg:QI 446)) lex.yy.c:1143 -1
     (nil))
(insn 715 714 716 104 (set (reg:DI 448)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1146 -1
     (nil))
(insn 716 715 717 104 (parallel [
            (set (reg:DI 447 [ D.6781 ])
                (ashift:DI (reg:DI 448)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1146 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 717 716 718 104 (set (reg/f:DI 449)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1146 -1
     (nil))
(insn 718 717 719 104 (parallel [
            (set (reg/f:DI 152 [ D.6780 ])
                (plus:DI (reg:DI 447 [ D.6781 ])
                    (reg/f:DI 449)))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1146 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
            (reg:DI 447 [ D.6781 ]))
        (nil)))
(insn 719 718 720 104 (set (reg/f:DI 245 [ D.6782 ])
        (mem/f:DI (reg/f:DI 152 [ D.6780 ]) [1 *_142+0 S8 A64])) lex.yy.c:1146 -1
     (nil))
(insn 720 719 721 104 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                    (const_int 60 [0x3c])) [2 _143->yy_buffer_status+0 S4 A32])
            (const_int 0 [0]))) lex.yy.c:1146 -1
     (nil))
(jump_insn 721 720 722 104 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 726)
            (pc))) lex.yy.c:1146 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 726)
;;  succ:       106 [50.0%] 
;;              105 [50.0%]  (FALLTHRU)

;; basic block 105, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 104, next block 106, flags: (NEW, REACHABLE, RTL)
;;  pred:       104 [50.0%]  (FALLTHRU)
(note 722 721 723 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 723 722 724 105 (set (reg:SI 154 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) -1
     (nil))
(jump_insn 724 723 725 105 (set (pc)
        (label_ref 734)) -1
     (nil)
 -> 734)
;;  succ:       107 [100.0%] 

(barrier 725 724 726)
;; basic block 106, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 105, next block 107, flags: (NEW, REACHABLE, RTL)
;;  pred:       104 [50.0%] 
(code_label 726 725 727 106 195 "" [1 uses])
(note 727 726 728 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 728 727 729 106 (set (reg:SI 154 [ D.6777 ])
        (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 32 [0x20])) [2 _143->yy_n_chars+0 S4 A64])) lex.yy.c:1157 -1
     (nil))
(insn 729 728 730 106 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 154 [ D.6777 ])) lex.yy.c:1157 -1
     (nil))
(insn 730 729 731 106 (set (reg/f:DI 450)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1158 -1
     (nil))
(insn 731 730 732 106 (set (mem/f:DI (reg/f:DI 245 [ D.6782 ]) [1 _143->yy_input_file+0 S8 A64])
        (reg/f:DI 450)) lex.yy.c:1158 -1
     (nil))
(insn 732 731 733 106 (set (reg/f:DI 245 [ D.6782 ])
        (mem/f:DI (reg/f:DI 152 [ D.6780 ]) [1 *_142+0 S8 A64])) lex.yy.c:1159 -1
     (nil))
(insn 733 732 734 106 (set (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 60 [0x3c])) [2 _162->yy_buffer_status+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:1159 -1
     (nil))
;;  succ:       107 [100.0%]  (FALLTHRU)

;; basic block 107, loop depth 5, count 0, freq 2, maybe hot
;;  prev block 106, next block 108, flags: (NEW, REACHABLE, RTL)
;;  pred:       105 [100.0%] 
;;              106 [100.0%]  (FALLTHRU)
(code_label 734 733 735 107 196 "" [1 uses])
(note 735 734 736 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 736 735 737 107 (set (reg/v/f:DI 156 [ dest ])
        (mem/f:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 8 [0x8])) [1 _927->yy_ch_buf+0 S8 A64])) lex.yy.c:1169 -1
     (nil))
(insn 737 736 738 107 (set (reg:DI 157 [ D.6790 ])
        (sign_extend:DI (reg:SI 154 [ D.6777 ]))) lex.yy.c:1169 -1
     (nil))
(insn 738 737 739 107 (parallel [
            (set (reg/f:DI 158 [ D.6783 ])
                (plus:DI (reg/v/f:DI 156 [ dest ])
                    (reg:DI 157 [ D.6790 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1169 -1
     (nil))
(insn 739 738 740 107 (set (reg/f:DI 244 [ D.6783 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) lex.yy.c:1169 -1
     (nil))
(insn 740 739 741 107 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 158 [ D.6783 ])
            (reg/f:DI 244 [ D.6783 ]))) lex.yy.c:1169 -1
     (nil))
(jump_insn 741 740 742 107 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 825)
            (pc))) lex.yy.c:1169 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 825)
;;  succ:       108 [2.0%]  (FALLTHRU)
;;              116 [98.0%] 

;; basic block 108, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 107, next block 109, flags: (NEW, REACHABLE, RTL)
;;  pred:       107 [2.0%]  (FALLTHRU)
(note 742 741 743 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 743 742 744 108 (set (reg:DI 451 [ D.6790 ])
        (sign_extend:DI (reg/v:SI 147 [ yy_amount_of_matched_text ]))) lex.yy.c:1173 -1
     (nil))
(insn 744 743 745 108 (set (reg/f:DI 452)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1173 -1
     (nil))
(insn 745 744 746 108 (parallel [
            (set (reg/v/f:DI 88 [ yy_cp ])
                (plus:DI (reg:DI 451 [ D.6790 ])
                    (reg/f:DI 452)))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1173 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
            (reg:DI 451 [ D.6790 ]))
        (nil)))
(insn 746 745 747 108 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:1173 -1
     (nil))
(call_insn 747 746 748 108 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>) [0 yy_get_previous_state S1 A8])
            (const_int 0 [0]))) lex.yy.c:1175 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 748 747 749 108 (set (reg/v:SI 193 [ yy_current_state ])
        (reg:SI 0 ax)) lex.yy.c:1175 -1
     (nil))
(debug_insn 749 748 750 108 (var_location:SI yy_current_state (reg/v:SI 193 [ yy_current_state ])) lex.yy.c:1175 -1
     (nil))
(debug_insn 750 749 751 108 (var_location:SI yy_current_state (reg/v:SI 193 [ yy_current_state ])) lex.yy.c:1175 -1
     (nil))
(debug_insn 751 750 752 108 (var_location:DI yy_cp (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:1443 -1
     (nil))
(debug_insn 752 751 753 108 (var_location:QI yy_c (const_int 1 [0x1])) lex.yy.c:1445 -1
     (nil))
(insn 753 752 754 108 (set (reg/f:DI 453)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) lex.yy.c:1446 -1
     (nil))
(insn 754 753 755 108 (set (reg:DI 454)
        (sign_extend:DI (reg/v:SI 193 [ yy_current_state ]))) lex.yy.c:1446 -1
     (nil))
(insn 755 754 756 108 (set (reg:HI 186 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 454)
                    (const_int 2 [0x2]))
                (reg/f:DI 453)) [3 yy_accept S2 A16])) lex.yy.c:1446 -1
     (nil))
(insn 756 755 757 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 186 [ D.6786 ])
            (const_int 0 [0]))) lex.yy.c:1446 -1
     (nil))
(jump_insn 757 756 758 108 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 761)
            (pc))) lex.yy.c:1446 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 761)
;;  succ:       109 [50.0%]  (FALLTHRU)
;;              110 [50.0%] 

;; basic block 109, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 108, next block 110, flags: (NEW, REACHABLE, RTL)
;;  pred:       108 [50.0%]  (FALLTHRU)
(note 758 757 759 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 759 758 760 109 (set (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])
        (reg/v:SI 193 [ yy_current_state ])) lex.yy.c:1448 -1
     (nil))
(insn 760 759 761 109 (set (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:1449 -1
     (nil))
;;  succ:       110 [100.0%]  (FALLTHRU)

;; basic block 110, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 109, next block 111, flags: (NEW, REACHABLE, RTL)
;;  pred:       108 [50.0%] 
;;              109 [100.0%]  (FALLTHRU)
(code_label 761 760 762 110 198 "" [1 uses])
(note 762 761 763 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(debug_insn 763 762 764 110 (var_location:QI yy_c (const_int 1 [0x1])) -1
     (nil))
(debug_insn 764 763 765 110 (var_location:SI yy_current_state (reg/v:SI 193 [ yy_current_state ])) -1
     (nil))
(insn 765 764 766 110 (set (reg/f:DI 455)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) lex.yy.c:1451 -1
     (nil))
(insn 766 765 767 110 (set (reg:DI 456)
        (sign_extend:DI (reg/v:SI 193 [ yy_current_state ]))) lex.yy.c:1451 -1
     (nil))
(insn 767 766 768 110 (set (reg:HI 187 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 456)
                    (const_int 2 [0x2]))
                (reg/f:DI 455)) [3 yy_base S2 A16])) lex.yy.c:1451 -1
     (nil))
(insn 768 767 769 110 (set (reg/f:DI 457)
        (symbol_ref:DI ("_ZL6yy_chk") [flags 0x2]  <var_decl 0x7f88bc0806c0 yy_chk>)) lex.yy.c:1451 -1
     (nil))
(insn 769 768 770 110 (set (reg:SI 458 [ D.6777 ])
        (zero_extend:SI (reg:HI 187 [ D.6787 ]))) lex.yy.c:1451 -1
     (nil))
(insn 770 769 771 110 (parallel [
            (set (reg:SI 459 [ D.6777 ])
                (plus:SI (reg:SI 458 [ D.6777 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1451 -1
     (nil))
(insn 771 770 772 110 (set (reg:DI 460)
        (sign_extend:DI (reg:SI 459 [ D.6777 ]))) lex.yy.c:1451 -1
     (nil))
(insn 772 771 773 110 (set (reg:SI 461 [ D.6777 ])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 460)
                        (const_int 2 [0x2]))
                    (reg/f:DI 457)) [3 yy_chk S2 A16]))) lex.yy.c:1451 -1
     (nil))
(insn 773 772 774 110 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 193 [ yy_current_state ])
            (reg:SI 461 [ D.6777 ]))) lex.yy.c:1451 -1
     (nil))
(jump_insn 774 773 775 110 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 797)
            (pc))) lex.yy.c:1451 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 797)
;;  succ:       113 [9.0%] 
;;              111 [91.0%]  (FALLTHRU)

;; basic block 111, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 110, next block 112, flags: (NEW, REACHABLE, RTL)
;;  pred:       110 [91.0%]  (FALLTHRU)
(note 775 774 789 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
;;  succ:       112 [100.0%]  (FALLTHRU)

;; basic block 112, loop depth 5, count 0, freq 0, maybe hot
;;  prev block 111, next block 113, flags: (NEW, REACHABLE, RTL)
;;  pred:       111 [100.0%]  (FALLTHRU)
;;              112 [91.0%]  (DFS_BACK)
(code_label 789 775 776 112 200 "" [1 uses])
(note 776 789 777 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(debug_insn 777 776 778 112 (var_location:QI yy_c (const_int 1 [0x1])) -1
     (nil))
(debug_insn 778 777 779 112 (var_location:SI yy_current_state (reg/v:SI 193 [ yy_current_state ])) -1
     (nil))
(insn 779 778 780 112 (set (reg/f:DI 462)
        (symbol_ref:DI ("_ZL6yy_def") [flags 0x2]  <var_decl 0x7f88bc080090 yy_def>)) lex.yy.c:1453 -1
     (nil))
(insn 780 779 781 112 (set (reg:DI 463)
        (sign_extend:DI (reg/v:SI 193 [ yy_current_state ]))) lex.yy.c:1453 -1
     (nil))
(insn 781 780 782 112 (set (reg:HI 192 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 463)
                    (const_int 2 [0x2]))
                (reg/f:DI 462)) [3 yy_def S2 A16])) lex.yy.c:1453 -1
     (nil))
(insn 782 781 783 112 (set (reg/v:SI 193 [ yy_current_state ])
        (sign_extend:SI (reg:HI 192 [ D.6786 ]))) lex.yy.c:1453 -1
     (nil))
(debug_insn 783 782 784 112 (var_location:SI yy_current_state (reg/v:SI 193 [ yy_current_state ])) lex.yy.c:1453 -1
     (nil))
(debug_insn 784 783 785 112 (var_location:QI yy_c (const_int 1 [0x1])) -1
     (nil))
(debug_insn 785 784 786 112 (var_location:SI yy_current_state (reg/v:SI 193 [ yy_current_state ])) -1
     (nil))
(insn 786 785 787 112 (set (reg/f:DI 464)
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) lex.yy.c:1451 -1
     (nil))
(insn 787 786 788 112 (set (reg:DI 465)
        (sign_extend:DI (reg/v:SI 193 [ yy_current_state ]))) lex.yy.c:1451 -1
     (nil))
(insn 788 787 790 112 (set (reg:HI 187 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 465)
                    (const_int 2 [0x2]))
                (reg/f:DI 464)) [3 yy_base S2 A16])) lex.yy.c:1451 -1
     (nil))
(insn 790 788 791 112 (set (reg/f:DI 466)
        (symbol_ref:DI ("_ZL6yy_chk") [flags 0x2]  <var_decl 0x7f88bc0806c0 yy_chk>)) lex.yy.c:1451 -1
     (nil))
(insn 791 790 792 112 (set (reg:SI 467 [ D.6777 ])
        (zero_extend:SI (reg:HI 187 [ D.6787 ]))) lex.yy.c:1451 -1
     (nil))
(insn 792 791 793 112 (parallel [
            (set (reg:SI 468 [ D.6777 ])
                (plus:SI (reg:SI 467 [ D.6777 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1451 -1
     (nil))
(insn 793 792 794 112 (set (reg:DI 469)
        (sign_extend:DI (reg:SI 468 [ D.6777 ]))) lex.yy.c:1451 -1
     (nil))
(insn 794 793 795 112 (set (reg:SI 470 [ D.6777 ])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 469)
                        (const_int 2 [0x2]))
                    (reg/f:DI 466)) [3 yy_chk S2 A16]))) lex.yy.c:1451 -1
     (nil))
(insn 795 794 796 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 470 [ D.6777 ])
            (reg/v:SI 193 [ yy_current_state ]))) lex.yy.c:1451 -1
     (nil))
(jump_insn 796 795 797 112 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 789)
            (pc))) lex.yy.c:1451 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 789)
;;  succ:       113 [9.0%]  (FALLTHRU)
;;              112 [91.0%]  (DFS_BACK)

;; basic block 113, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 112, next block 114, flags: (NEW, REACHABLE, RTL)
;;  pred:       112 [9.0%]  (FALLTHRU)
;;              110 [9.0%] 
(code_label 797 796 798 113 199 "" [1 uses])
(note 798 797 799 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 799 798 800 113 (set (reg/f:DI 471)
        (symbol_ref:DI ("_ZL6yy_nxt") [flags 0x2]  <var_decl 0x7f88bc0803f0 yy_nxt>)) lex.yy.c:1457 -1
     (nil))
(insn 800 799 801 113 (set (reg:SI 472 [ D.6785 ])
        (zero_extend:SI (reg:HI 187 [ D.6787 ]))) lex.yy.c:1457 -1
     (nil))
(insn 801 800 802 113 (parallel [
            (set (reg:SI 473 [ D.6785 ])
                (plus:SI (reg:SI 472 [ D.6785 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1457 -1
     (nil))
(insn 802 801 803 113 (set (reg:DI 474)
        (zero_extend:DI (reg:SI 473 [ D.6785 ]))) lex.yy.c:1457 -1
     (nil))
(insn 803 802 804 113 (set (reg/v:SI 87 [ yy_current_state ])
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 474)
                        (const_int 2 [0x2]))
                    (reg/f:DI 471)) [3 yy_nxt S2 A16]))) lex.yy.c:1457 -1
     (nil))
(debug_insn 804 803 805 113 (var_location:SI yy_current_state (reg/v:SI 87 [ yy_current_state ])) lex.yy.c:1457 -1
     (nil))
(debug_insn 805 804 806 113 (var_location:QI D#1 (eq:QI (reg/v:SI 87 [ yy_current_state ])
        (const_int 101 [0x65]))) lex.yy.c:1458 -1
     (nil))
(debug_insn 806 805 807 113 (var_location:SI yy_is_jam (zero_extend:SI (debug_expr:QI D#1))) lex.yy.c:1458 -1
     (nil))
(insn 807 806 808 113 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ yy_current_state ])
            (const_int 101 [0x65]))) lex.yy.c:1460 -1
     (nil))
(jump_insn 808 807 809 113 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1230)
            (pc))) lex.yy.c:1460 -1
     (int_list:REG_BR_PROB 2800 (nil))
 -> 1230)
;;  succ:       114 [72.0%]  (FALLTHRU)
;;              174 [28.0%] 

;; basic block 114, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 113, next block 115, flags: (NEW, REACHABLE, RTL)
;;  pred:       113 [72.0%]  (FALLTHRU)
(note 809 808 810 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(debug_insn 810 809 811 114 (var_location:SI yy_current_state (clobber (const_int 0 [0]))) lex.yy.c:1186 -1
     (nil))
(debug_insn 811 810 812 114 (var_location:DI yy_cp (clobber (const_int 0 [0]))) lex.yy.c:1186 -1
     (nil))
(debug_insn 812 811 813 114 (var_location:SI yy_next_state (clobber (const_int 0 [0]))) lex.yy.c:1186 -1
     (nil))
(insn 813 812 814 114 (set (reg/v/f:DI 89 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1188 -1
     (nil))
(debug_insn 814 813 815 114 (var_location:DI yy_bp (reg/v/f:DI 89 [ yy_cp ])) lex.yy.c:1188 -1
     (nil))
(insn 815 814 816 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ yy_current_state ])
            (const_int 0 [0]))) lex.yy.c:1190 -1
     (nil))
(jump_insn 816 815 817 114 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 390)
            (pc))) lex.yy.c:1190 -1
     (int_list:REG_BR_PROB 9800 (nil))
 -> 390)
;;  succ:       115 [2.0%]  (FALLTHRU)
;;              36 [98.0%] 

;; basic block 115, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 114, next block 116, flags: (NEW, REACHABLE, RTL)
;;  pred:       114 [2.0%]  (FALLTHRU)
(note 817 816 818 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 818 817 819 115 (parallel [
            (set (reg/v/f:DI 88 [ yy_cp ])
                (plus:DI (reg/v/f:DI 88 [ yy_cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1193 -1
     (nil))
(insn 819 818 820 115 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:1193 -1
     (nil))
(debug_insn 820 819 821 115 (var_location:DI yy_cp (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:1193 -1
     (nil))
(debug_insn 821 820 823 115 (var_location:SI yy_current_state (reg/v:SI 87 [ yy_current_state ])) lex.yy.c:1194 -1
     (nil))
(jump_insn 823 821 824 115 (set (pc)
        (label_ref 822)) lex.yy.c:1195 -1
     (nil)
 -> 822)
;;  succ:       20 [100.0%] 

(barrier 824 823 825)
;; basic block 116, loop depth 5, count 0, freq 2, maybe hot
;;  prev block 115, next block 117, flags: (NEW, REACHABLE, RTL)
;;  pred:       107 [98.0%] 
(code_label 825 824 826 116 197 "" [1 uses])
(note 826 825 827 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(debug_insn 827 826 828 116 (var_location:DI dest (reg/v/f:DI 156 [ dest ])) lex.yy.c:1276 -1
     (nil))
(insn 828 827 829 116 (set (reg/v/f:DI 213 [ source ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1277 -1
     (nil))
(debug_insn 829 828 830 116 (var_location:DI source (reg/v/f:DI 213 [ source ])) lex.yy.c:1277 -1
     (nil))
(insn 830 829 831 116 (parallel [
            (set (reg:DI 475 [ D.6790 ])
                (plus:DI (reg:DI 157 [ D.6790 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1281 -1
     (nil))
(insn 831 830 832 116 (parallel [
            (set (reg:DI 476 [ D.6783 ])
                (plus:DI (reg/v/f:DI 156 [ dest ])
                    (reg:DI 475 [ D.6790 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1281 -1
     (nil))
(insn 832 831 833 116 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 244 [ D.6783 ])
            (reg:DI 476 [ D.6783 ]))) lex.yy.c:1281 -1
     (nil))
(jump_insn 833 832 834 116 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 838)
            (pc))) lex.yy.c:1281 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 838)
;;  succ:       117 [0.0%]  (FALLTHRU)
;;              118 [100.0%] 

;; basic block 117, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 116, next block 118, flags: (NEW, REACHABLE, RTL)
;;  pred:       116 [0.0%]  (FALLTHRU)
(note 834 833 835 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 835 834 836 117 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f88bbbf2b40 *.LC21>)) lex.yy.c:1283 -1
     (nil))
(call_insn 836 835 837 117 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1283 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 837 836 838)
;; basic block 118, loop depth 5, count 0, freq 2, maybe hot
;;  prev block 117, next block 119, flags: (NEW, REACHABLE, RTL)
;;  pred:       116 [100.0%] 
(code_label 838 837 839 118 203 "" [1 uses])
(note 839 838 840 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 840 839 841 118 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                    (const_int 56 [0x38])) [2 _927->yy_fill_buffer+0 S4 A64])
            (const_int 0 [0]))) lex.yy.c:1285 -1
     (nil))
(jump_insn 841 840 842 118 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 849)
            (pc))) lex.yy.c:1285 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 849)
;;  succ:       119 [50.0%]  (FALLTHRU)
;;              121 [50.0%] 

;; basic block 119, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 118, next block 120, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       118 [50.0%]  (FALLTHRU)
(note 842 841 843 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 843 842 844 119 (parallel [
            (set (reg:DI 477 [ D.6788 ])
                (minus:DI (reg/f:DI 244 [ D.6783 ])
                    (reg/v/f:DI 213 [ source ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1287 -1
     (nil))
(insn 844 843 845 119 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 477 [ D.6788 ])
            (const_int 1 [0x1]))) lex.yy.c:1287 -1
     (nil))
(jump_insn 845 844 848 119 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1344)
            (pc))) lex.yy.c:1287 612 {*jcc_1}
     (int_list:REG_BR_PROB 1608 (nil))
 -> 1344)
;;  succ:       163 [16.1%] 
;;              120 [83.9%]  (FALLTHRU)

;; basic block 120, loop depth 4, count 0, freq 1, maybe hot
;;  prev block 119, next block 121, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       119 [83.9%]  (FALLTHRU)
(note 848 845 34 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 34 848 846 120 (set (reg/v/f:DI 88 [ yy_cp ])
        (reg/f:DI 158 [ D.6783 ])) lex.yy.c:1169 -1
     (nil))
(jump_insn 846 34 847 120 (set (pc)
        (label_ref 1184)) lex.yy.c:1287 -1
     (nil)
 -> 1184)
;;  succ:       166 [100.0%] 

(barrier 847 846 849)
;; basic block 121, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 120, next block 122, flags: (NEW, REACHABLE, RTL)
;;  pred:       118 [50.0%] 
(code_label 849 847 850 121 204 "" [1 uses])
(note 850 849 851 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 851 850 852 121 (parallel [
            (set (reg:DI 478 [ D.6788 ])
                (minus:DI (reg/f:DI 244 [ D.6783 ])
                    (reg/v/f:DI 213 [ source ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1307 -1
     (nil))
(insn 852 851 853 121 (parallel [
            (set (reg/v:DI 224 [ number_to_move ])
                (plus:DI (reg:DI 478 [ D.6788 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1307 -1
     (nil))
(debug_insn 853 852 854 121 (var_location:DI number_to_move (reg/v:DI 224 [ number_to_move ])) lex.yy.c:1307 -1
     (nil))
(debug_insn 854 853 855 121 (var_location:DI i (const_int 0 [0])) lex.yy.c:1309 -1
     (nil))
(debug_insn 855 854 856 121 (var_location:DI i (const_int 0 [0])) -1
     (nil))
(debug_insn 856 855 857 121 (var_location:DI source (reg/v/f:DI 213 [ source ])) -1
     (nil))
(debug_insn 857 856 858 121 (var_location:DI dest (reg/v/f:DI 156 [ dest ])) -1
     (nil))
(insn 858 857 859 121 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 224 [ number_to_move ])
            (const_int 0 [0]))) lex.yy.c:1309 -1
     (nil))
(jump_insn 859 858 1345 121 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 880)
            (pc))) lex.yy.c:1309 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 880)
;;  succ:       125 [9.0%] 
;;              122 [91.0%]  (FALLTHRU)

;; basic block 122, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 121, next block 123, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       121 [91.0%]  (FALLTHRU)
(note 1345 859 25 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 25 1345 875 122 (set (reg/v:DI 227 [ i ])
        (const_int 0 [0])) lex.yy.c:1309 -1
     (nil))
;;  succ:       123 [100.0%]  (FALLTHRU)

;; basic block 123, loop depth 6, count 0, freq 9, maybe hot
;;  prev block 122, next block 124, flags: (NEW, REACHABLE, RTL)
;;  pred:       122 [100.0%]  (FALLTHRU)
;;              123 [91.0%]  (DFS_BACK)
(code_label 875 25 860 123 208 "" [1 uses])
(note 860 875 861 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(debug_insn 861 860 862 123 (var_location:DI i (reg/v:DI 227 [ i ])) -1
     (nil))
(debug_insn 862 861 863 123 (var_location:DI source (plus:DI (reg/v/f:DI 213 [ source ])
        (reg/v:DI 227 [ i ]))) -1
     (nil))
(debug_insn 863 862 864 123 (var_location:DI dest (plus:DI (reg/v/f:DI 156 [ dest ])
        (reg/v:DI 227 [ i ]))) -1
     (nil))
(debug_insn 864 863 865 123 (var_location:DI D#17 (plus:DI (plus:DI (reg/v/f:DI 156 [ dest ])
            (reg/v:DI 227 [ i ]))
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 865 864 866 123 (var_location:DI dest (debug_expr:DI D#17)) lex.yy.c:1310 -1
     (nil))
(debug_insn 866 865 867 123 (var_location:DI D#18 (plus:DI (plus:DI (reg/v/f:DI 213 [ source ])
            (reg/v:DI 227 [ i ]))
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 867 866 868 123 (var_location:DI source (debug_expr:DI D#18)) lex.yy.c:1310 -1
     (nil))
(insn 868 867 869 123 (set (reg:QI 226 [ D.6789 ])
        (mem:QI (plus:DI (reg/v/f:DI 213 [ source ])
                (reg/v:DI 227 [ i ])) [0 MEM[base: source_307, index: i_563, offset: 0B]+0 S1 A8])) lex.yy.c:1310 -1
     (nil))
(insn 869 868 870 123 (set (mem:QI (plus:DI (reg/v/f:DI 156 [ dest ])
                (reg/v:DI 227 [ i ])) [0 MEM[base: dest_168, index: i_563, offset: 0B]+0 S1 A8])
        (reg:QI 226 [ D.6789 ])) lex.yy.c:1310 -1
     (nil))
(insn 870 869 871 123 (parallel [
            (set (reg/v:DI 227 [ i ])
                (plus:DI (reg/v:DI 227 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1309 -1
     (nil))
(debug_insn 871 870 872 123 (var_location:DI i (reg/v:DI 227 [ i ])) lex.yy.c:1309 -1
     (nil))
(debug_insn 872 871 873 123 (var_location:DI i (reg/v:DI 227 [ i ])) -1
     (nil))
(debug_insn 873 872 874 123 (var_location:DI source (debug_expr:DI D#18)) -1
     (nil))
(debug_insn 874 873 876 123 (var_location:DI dest (debug_expr:DI D#17)) -1
     (nil))
(insn 876 874 877 123 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 224 [ number_to_move ])
            (reg/v:DI 227 [ i ]))) lex.yy.c:1309 -1
     (nil))
(jump_insn 877 876 878 123 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 875)
            (pc))) lex.yy.c:1309 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 875)
;;  succ:       124 [9.0%]  (FALLTHRU)
;;              123 [91.0%]  (DFS_BACK)

;; basic block 124, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 123, next block 125, flags: (NEW, REACHABLE, RTL)
;;  pred:       123 [9.0%]  (FALLTHRU)
(note 878 877 879 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 879 878 880 124 (set (reg/f:DI 245 [ D.6782 ])
        (mem/f:DI (reg/f:DI 152 [ D.6780 ]) [1 *_142+0 S8 A64])) -1
     (nil))
;;  succ:       125 [100.0%]  (FALLTHRU)

;; basic block 125, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 124, next block 126, flags: (NEW, REACHABLE, RTL)
;;  pred:       124 [100.0%]  (FALLTHRU)
;;              121 [9.0%] 
(code_label 880 879 881 125 207 "" [1 uses])
(note 881 880 882 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 882 881 883 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                    (const_int 60 [0x3c])) [2 _944->yy_buffer_status+0 S4 A32])
            (const_int 2 [0x2]))) lex.yy.c:1312 -1
     (nil))
(jump_insn 883 882 884 125 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 889)
            (pc))) lex.yy.c:1312 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 889)
;;  succ:       126 [28.0%]  (FALLTHRU)
;;              127 [72.0%] 

;; basic block 126, loop depth 5, count 0, freq 0, maybe hot
;;  prev block 125, next block 127, flags: (NEW, REACHABLE, RTL)
;;  pred:       125 [28.0%]  (FALLTHRU)
(note 884 883 885 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 885 884 886 126 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1316 -1
     (nil))
(insn 886 885 887 126 (set (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 32 [0x20])) [2 _944->yy_n_chars+0 S4 A64])
        (const_int 0 [0])) lex.yy.c:1316 -1
     (nil))
(jump_insn 887 886 888 126 (set (pc)
        (label_ref 1052)) lex.yy.c:1316 -1
     (nil)
 -> 1052)
;;  succ:       151 [100.0%] 

(barrier 888 887 889)
;; basic block 127, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 126, next block 128, flags: (NEW, REACHABLE, RTL)
;;  pred:       125 [72.0%] 
(code_label 889 888 890 127 209 "" [1 uses])
(note 890 889 891 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 891 890 892 127 (set (reg:DI 480)
        (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 24 [0x18])) [4 _944->yy_buf_size+0 S8 A64])) lex.yy.c:1321 -1
     (nil))
(insn 892 891 893 127 (parallel [
            (set (reg:DI 479 [ D.6781 ])
                (plus:DI (reg:DI 480)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1321 -1
     (expr_list:REG_EQUAL (plus:DI (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                    (const_int 24 [0x18])) [4 _944->yy_buf_size+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 893 892 894 127 (parallel [
            (set (reg/v:DI 230 [ num_to_read ])
                (minus:DI (reg:DI 479 [ D.6781 ])
                    (reg/v:DI 224 [ number_to_move ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1321 -1
     (nil))
(debug_insn 894 893 895 127 (var_location:DI num_to_read (reg/v:DI 230 [ num_to_read ])) lex.yy.c:1321 -1
     (nil))
(debug_insn 895 894 896 127 (var_location:DI num_to_read (reg/v:DI 230 [ num_to_read ])) -1
     (nil))
(insn 896 895 897 127 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 230 [ num_to_read ])
            (const_int 0 [0]))) lex.yy.c:1323 -1
     (nil))
(jump_insn 897 896 898 127 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 967)
            (pc))) lex.yy.c:1323 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 967)
;;  succ:       138 [4.5%] 
;;              128 [95.5%]  (FALLTHRU)

;; basic block 128, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 127, next block 129, flags: (NEW, REACHABLE, RTL)
;;  pred:       127 [95.5%]  (FALLTHRU)
(note 898 897 964 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
;;  succ:       129 [100.0%]  (FALLTHRU)

;; basic block 129, loop depth 6, count 0, freq 14, maybe hot
;;  prev block 128, next block 130, flags: (NEW, REACHABLE, RTL)
;;  pred:       128 [100.0%]  (FALLTHRU)
;;              137 [95.5%]  (DFS_BACK)
(code_label 964 898 899 129 217 "" [1 uses])
(note 899 964 900 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(debug_insn 900 899 901 129 (var_location:DI num_to_read (const_int 0 [0])) -1
     (nil))
(debug_insn 901 900 902 129 (var_location:DI D#14 (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1327 -1
     (nil))
(debug_insn 902 901 903 129 (var_location:DI D#13 (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1327 -1
     (nil))
(debug_insn 903 902 904 129 (var_location:DI D#12 (ashift:DI (debug_expr:DI D#13)
        (const_int 3 [0x3]))) lex.yy.c:1327 -1
     (nil))
(debug_insn 904 903 905 129 (var_location:DI D#11 (plus:DI (debug_expr:DI D#14)
        (debug_expr:DI D#12))) lex.yy.c:1327 -1
     (nil))
(debug_insn 905 904 906 129 (var_location:DI D#10 (mem/f:DI (debug_expr:DI D#11) [0 +0 S8 A64])) lex.yy.c:1327 -1
     (nil))
(debug_insn 906 905 907 129 (var_location:DI b (debug_expr:DI D#10)) lex.yy.c:1327 -1
     (nil))
(insn 907 906 908 129 (set (reg/f:DI 232 [ D.6783 ])
        (mem/f:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 8 [0x8])) [1 _986->yy_ch_buf+0 S8 A64])) lex.yy.c:1330 -1
     (nil))
(insn 908 907 909 129 (parallel [
            (set (reg:DI 481 [ D.6788 ])
                (minus:DI (reg/f:DI 244 [ D.6783 ])
                    (reg/f:DI 232 [ D.6783 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1330 -1
     (nil))
(insn 909 908 910 129 (set (reg/v:SI 235 [ yy_c_buf_p_offset ])
        (subreg:SI (reg:DI 481 [ D.6788 ]) 0)) lex.yy.c:1330 -1
     (nil))
(debug_insn 910 909 911 129 (var_location:SI yy_c_buf_p_offset (reg/v:SI 235 [ yy_c_buf_p_offset ])) lex.yy.c:1330 -1
     (nil))
(insn 911 910 912 129 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                    (const_int 36 [0x24])) [2 _986->yy_is_our_buffer+0 S4 A32])
            (const_int 0 [0]))) lex.yy.c:1332 -1
     (nil))
(jump_insn 912 911 913 129 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 945)
            (pc))) lex.yy.c:1332 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 945)
;;  succ:       130 [50.0%]  (FALLTHRU)
;;              135 [50.0%] 

;; basic block 130, loop depth 6, count 0, freq 7, maybe hot
;;  prev block 129, next block 131, flags: (NEW, REACHABLE, RTL)
;;  pred:       129 [50.0%]  (FALLTHRU)
(note 913 912 914 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 914 913 915 130 (set (reg:DI 237 [ D.6781 ])
        (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 24 [0x18])) [4 _986->yy_buf_size+0 S8 A64])) lex.yy.c:1334 -1
     (nil))
(insn 915 914 916 130 (parallel [
            (set (reg/v:DI 238 [ new_size ])
                (ashift:DI (reg:DI 237 [ D.6781 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1334 -1
     (nil))
(debug_insn 916 915 917 130 (var_location:DI new_size (reg/v:DI 238 [ new_size ])) lex.yy.c:1334 -1
     (nil))
(insn 917 916 918 130 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 238 [ new_size ])
            (const_int 0 [0]))) lex.yy.c:1336 -1
     (nil))
(jump_insn 918 917 919 130 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 925)
            (pc))) lex.yy.c:1336 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 925)
;;  succ:       131 [50.0%]  (FALLTHRU)
;;              132 [50.0%] 

;; basic block 131, loop depth 6, count 0, freq 3, maybe hot
;;  prev block 130, next block 132, flags: (NEW, REACHABLE, RTL)
;;  pred:       130 [50.0%]  (FALLTHRU)
(note 919 918 920 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 920 919 921 131 (parallel [
            (set (reg:DI 482 [ D.6781 ])
                (lshiftrt:DI (reg:DI 237 [ D.6781 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1337 -1
     (nil))
(insn 921 920 922 131 (parallel [
            (set (reg:DI 240 [ D.6781 ])
                (plus:DI (reg:DI 482 [ D.6781 ])
                    (reg:DI 237 [ D.6781 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1337 -1
     (nil))
(insn 922 921 923 131 (set (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 24 [0x18])) [4 _986->yy_buf_size+0 S8 A64])
        (reg:DI 240 [ D.6781 ])) lex.yy.c:1337 -1
     (nil))
(jump_insn 923 922 924 131 (set (pc)
        (label_ref 928)) lex.yy.c:1337 -1
     (nil)
 -> 928)
;;  succ:       133 [100.0%] 

(barrier 924 923 925)
;; basic block 132, loop depth 6, count 0, freq 3, maybe hot
;;  prev block 131, next block 133, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       130 [50.0%] 
(code_label 925 924 926 132 213 "" [1 uses])
(note 926 925 927 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 927 926 26 132 (set (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 24 [0x18])) [4 _986->yy_buf_size+0 S8 A64])
        (reg/v:DI 238 [ new_size ])) lex.yy.c:1339 -1
     (nil))
(insn 26 927 928 132 (set (reg:DI 240 [ D.6781 ])
        (reg/v:DI 238 [ new_size ])) lex.yy.c:1339 -1
     (nil))
;;  succ:       133 [100.0%]  (FALLTHRU)

;; basic block 133, loop depth 6, count 0, freq 7, maybe hot
;;  prev block 132, next block 134, flags: (NEW, REACHABLE, RTL)
;;  pred:       131 [100.0%] 
;;              132 [100.0%]  (FALLTHRU)
(code_label 928 26 929 133 214 "" [1 uses])
(note 929 928 930 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(debug_insn 930 929 931 133 (var_location:DI ptr (reg/f:DI 232 [ D.6783 ])) lex.yy.c:1343 -1
     (nil))
(debug_insn 931 930 932 133 (var_location:DI size (plus:DI (reg:DI 240 [ D.6781 ])
        (const_int 2 [0x2]))) lex.yy.c:1343 -1
     (nil))
(insn 932 931 933 133 (parallel [
            (set (reg:DI 483 [ D.6781 ])
                (plus:DI (reg:DI 240 [ D.6781 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2136 -1
     (nil))
(insn 933 932 934 133 (set (reg:DI 4 si)
        (reg:DI 483 [ D.6781 ])) lex.yy.c:2136 -1
     (nil))
(insn 934 933 935 133 (set (reg:DI 5 di)
        (reg/f:DI 232 [ D.6783 ])) lex.yy.c:2136 -1
     (nil))
(call_insn 935 934 936 133 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2136 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 936 935 937 133 (set (reg/f:DI 242 [ D.6793 ])
        (reg:DI 0 ax)) lex.yy.c:2136 -1
     (nil))
(debug_insn 937 936 938 133 (var_location:DI ptr (clobber (const_int 0 [0]))) lex.yy.c:1343 -1
     (nil))
(debug_insn 938 937 939 133 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1343 -1
     (nil))
(insn 939 938 940 133 (set (mem/f:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 8 [0x8])) [1 _986->yy_ch_buf+0 S8 A64])
        (reg/f:DI 242 [ D.6793 ])) lex.yy.c:1343 -1
     (nil))
(insn 940 939 941 133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 242 [ D.6793 ])
            (const_int 0 [0]))) lex.yy.c:1349 -1
     (nil))
(jump_insn 941 940 944 133 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 948)
            (pc))) lex.yy.c:1349 -1
     (int_list:REG_BR_PROB 0 (nil))
 -> 948)
;;  succ:       136
;;              134 [100.0%]  (FALLTHRU)

;; basic block 134, loop depth 6, count 0, freq 7, maybe hot
;;  prev block 133, next block 135, flags: (NEW, REACHABLE, RTL)
;;  pred:       133 [100.0%]  (FALLTHRU)
(note 944 941 942 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(jump_insn 942 944 943 134 (set (pc)
        (label_ref 953)) lex.yy.c:1349 -1
     (nil)
 -> 953)
;;  succ:       137 [100.0%] 

(barrier 943 942 945)
;; basic block 135, loop depth 0, count 0, freq 7, maybe hot
;;  prev block 134, next block 136, flags: (NEW, REACHABLE, RTL)
;;  pred:       129 [50.0%] 
(code_label 945 943 946 135 212 "" [1 uses])
(note 946 945 947 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 947 946 948 135 (set (mem/f:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 8 [0x8])) [1 _986->yy_ch_buf+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:1347 -1
     (nil))
;;  succ:       136 [100.0%]  (FALLTHRU)

;; basic block 136, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 135, next block 137, flags: (NEW, REACHABLE, RTL)
;;  pred:       133
;;              135 [100.0%]  (FALLTHRU)
(code_label 948 947 949 136 215 "" [1 uses])
(note 949 948 950 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 950 949 951 136 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f88bbbf2bd0 *.LC22>)) lex.yy.c:1351 -1
     (nil))
(call_insn 951 950 952 136 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1351 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 952 951 953)
;; basic block 137, loop depth 6, count 0, freq 14, maybe hot
;;  prev block 136, next block 138, flags: (NEW, REACHABLE, RTL)
;;  pred:       134 [100.0%] 
(code_label 953 952 954 137 216 "" [1 uses])
(note 954 953 955 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 955 954 956 137 (set (reg:DI 484 [ D.6790 ])
        (sign_extend:DI (reg/v:SI 235 [ yy_c_buf_p_offset ]))) lex.yy.c:1353 -1
     (nil))
(insn 956 955 957 137 (parallel [
            (set (reg/f:DI 244 [ D.6783 ])
                (plus:DI (reg/f:DI 242 [ D.6793 ])
                    (reg:DI 484 [ D.6790 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1353 -1
     (nil))
(insn 957 956 958 137 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 244 [ D.6783 ])) lex.yy.c:1353 -1
     (nil))
(insn 958 957 959 137 (set (reg/f:DI 245 [ D.6782 ])
        (mem/f:DI (reg/f:DI 152 [ D.6780 ]) [1 *_142+0 S8 A64])) lex.yy.c:1355 -1
     (nil))
(insn 959 958 960 137 (set (reg:DI 486)
        (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 24 [0x18])) [4 _361->yy_buf_size+0 S8 A64])) lex.yy.c:1356 -1
     (nil))
(insn 960 959 961 137 (parallel [
            (set (reg:DI 485 [ D.6781 ])
                (plus:DI (reg:DI 486)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1356 -1
     (expr_list:REG_EQUAL (plus:DI (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                    (const_int 24 [0x18])) [4 _361->yy_buf_size+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 961 960 962 137 (parallel [
            (set (reg/v:DI 230 [ num_to_read ])
                (minus:DI (reg:DI 485 [ D.6781 ])
                    (reg/v:DI 224 [ number_to_move ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1356 -1
     (nil))
(debug_insn 962 961 963 137 (var_location:DI num_to_read (reg/v:DI 230 [ num_to_read ])) lex.yy.c:1356 -1
     (nil))
(debug_insn 963 962 965 137 (var_location:DI num_to_read (reg/v:DI 230 [ num_to_read ])) -1
     (nil))
(insn 965 963 966 137 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 230 [ num_to_read ])
            (const_int 0 [0]))) lex.yy.c:1323 -1
     (nil))
(jump_insn 966 965 967 137 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 964)
            (pc))) lex.yy.c:1323 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 964)
;;  succ:       138 [4.5%]  (FALLTHRU)
;;              129 [95.5%]  (DFS_BACK)

;; basic block 138, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 137, next block 139, flags: (NEW, REACHABLE, RTL)
;;  pred:       137 [4.5%]  (FALLTHRU)
;;              127 [4.5%] 
(code_label 967 966 968 138 211 "" [1 uses])
(note 968 967 970 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 970 968 969 138 (set (reg:DI 487)
        (const_int 8192 [0x2000])) -1
     (nil))
(insn 969 970 971 138 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 230 [ num_to_read ])
            (const_int 8192 [0x2000]))) -1
     (nil))
(insn 971 969 972 138 (set (reg/v:DI 309 [ num_to_read ])
        (if_then_else:DI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg/v:DI 230 [ num_to_read ])
            (reg:DI 487))) -1
     (nil))
(debug_insn 972 971 973 138 (var_location:DI num_to_read (reg/v:DI 309 [ num_to_read ])) -1
     (nil))
(insn 973 972 974 138 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                    (const_int 40 [0x28])) [2 _961->yy_is_interactive+0 S4 A64])
            (const_int 0 [0]))) lex.yy.c:1364 -1
     (nil))
(jump_insn 974 973 975 138 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1000)
            (pc))) lex.yy.c:1364 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1000)
;;  succ:       139 [50.0%]  (FALLTHRU)
;;              145 [50.0%] 

;; basic block 139, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 138, next block 140, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       138 [50.0%]  (FALLTHRU)
(note 975 974 27 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 27 975 1256 139 (set (reg/v:DI 212 [ n ])
        (const_int 0 [0])) lex.yy.c:1364 -1
     (nil))
;;  succ:       140 [100.0%]  (FALLTHRU)

;; basic block 140, loop depth 6, count 0, freq 3, maybe hot
;;  prev block 139, next block 141, flags: (NEW, REACHABLE, RTL)
;;  pred:       139 [100.0%]  (FALLTHRU)
;;              175 [88.0%]  (DFS_BACK)
(code_label 1256 27 976 140 232 "" [1 uses])
(note 976 1256 977 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(debug_insn 977 976 978 140 (var_location:DI n (reg/v:DI 212 [ n ])) -1
     (nil))
(debug_insn 978 977 979 140 (var_location:SI c (const_int 42 [0x2a])) -1
     (nil))
(insn 979 978 980 140 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1364 -1
     (nil))
(call_insn 980 979 981 140 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_getc") [flags 0x41]  <function_decl 0x7f88bbf40510 _IO_getc>) [0 _IO_getc S1 A8])
            (const_int 0 [0]))) lex.yy.c:1364 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_IO_getc") [flags 0x41]  <function_decl 0x7f88bbf40510 _IO_getc>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 981 980 982 140 (set (reg/v:SI 251 [ c ])
        (reg:SI 0 ax)) lex.yy.c:1364 -1
     (nil))
(debug_insn 982 981 983 140 (var_location:SI c (reg/v:SI 251 [ c ])) lex.yy.c:1364 -1
     (nil))
(insn 983 982 984 140 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 251 [ c ])
            (const_int -1 [0xffffffffffffffff]))) lex.yy.c:1364 -1
     (nil))
(jump_insn 984 983 985 140 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1299)
            (pc))) lex.yy.c:1364 -1
     (int_list:REG_BR_PROB 2799 (nil))
 -> 1299)
;;  succ:       141 [72.0%]  (FALLTHRU)
;;              181 [28.0%] 

;; basic block 141, loop depth 6, count 0, freq 2, maybe hot
;;  prev block 140, next block 142, flags: (NEW, REACHABLE, RTL)
;;  pred:       140 [72.0%]  (FALLTHRU)
(note 985 984 986 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 986 985 987 141 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 251 [ c ])
            (const_int 10 [0xa]))) lex.yy.c:1364 -1
     (nil))
(jump_insn 987 986 990 141 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1239)
            (pc))) lex.yy.c:1364 -1
     (int_list:REG_BR_PROB 7200 (nil))
 -> 1239)
;;  succ:       175 [72.0%] 
;;              142 [28.0%]  (FALLTHRU)

;; basic block 142, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 141, next block 143, flags: (NEW, REACHABLE, RTL)
;;  pred:       141 [28.0%]  (FALLTHRU)
(note 990 987 988 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(jump_insn 988 990 989 142 (set (pc)
        (label_ref 1280)) lex.yy.c:1364 -1
     (nil)
 -> 1280)
;;  succ:       180 [100.0%] 

(barrier 989 988 1273)
;; basic block 143, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 142, next block 144, flags: (NEW, REACHABLE, RTL)
;;  pred:       181 [50.0%] 
;;              178 [0.0%] 
(code_label 1273 989 991 143 234 "" [2 uses])
(note 991 1273 992 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 992 991 993 143 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f88bbbf2c60 *.LC23>)) lex.yy.c:1364 -1
     (nil))
(call_insn 993 992 994 143 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1364 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 994 993 1260)
;; basic block 144, loop depth 5, count 0, freq 0, maybe hot
;;  prev block 143, next block 145, flags: (NEW, REACHABLE, RTL)
;;  pred:       180 [100.0%] 
;;              176 [100.0%] 
;;              182 [100.0%] 
(code_label 1260 994 995 144 233 "" [3 uses])
(note 995 1260 996 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 996 995 997 144 (set (reg:SI 275 [ D.6777 ])
        (subreg:SI (reg/v:DI 212 [ n ]) 0)) lex.yy.c:1364 -1
     (nil))
(insn 997 996 998 144 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 275 [ D.6777 ])) lex.yy.c:1364 -1
     (nil))
(jump_insn 998 997 999 144 (set (pc)
        (label_ref 1046)) lex.yy.c:1364 -1
     (nil)
 -> 1046)
;;  succ:       150 [100.0%] 

(barrier 999 998 1000)
;; basic block 145, loop depth 5, count 0, freq 0, maybe hot
;;  prev block 144, next block 146, flags: (NEW, REACHABLE, RTL)
;;  pred:       138 [50.0%] 
(code_label 1000 999 1001 145 218 "" [1 uses])
(note 1001 1000 1002 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 1002 1001 1003 145 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f88bbffbca8 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) lex.yy.c:1364 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f88bbffbca8 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 1003 1002 1004 145 (set (reg/f:DI 270 [ D.6794 ])
        (reg:DI 0 ax)) lex.yy.c:1364 -1
     (nil))
(insn 1004 1003 1043 145 (set (mem:SI (reg/f:DI 270 [ D.6794 ]) [2 *_402+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1364 -1
     (nil))
;;  succ:       146 [100.0%]  (FALLTHRU)

;; basic block 146, loop depth 6, count 0, freq 7, maybe hot
;;  prev block 145, next block 147, flags: (NEW, REACHABLE, RTL)
;;  pred:       145 [100.0%]  (FALLTHRU)
;;              149 [100.0%]  (DFS_BACK)
(code_label 1043 1004 1005 146 225 "" [1 uses])
(note 1005 1043 1006 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1006 1005 1007 146 (var_location:DI __ptr (plus:DI (mem/f/j:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 8 [0x8])) [0 _971->yy_ch_buf+0 S8 A64])
        (reg/v:DI 224 [ number_to_move ]))) lex.yy.c:1364 -1
     (nil))
(debug_insn 1007 1006 1008 146 (var_location:DI __size (const_int 1 [0x1])) lex.yy.c:1364 -1
     (nil))
(debug_insn 1008 1007 1009 146 (var_location:DI __n (reg/v:DI 309 [ num_to_read ])) lex.yy.c:1364 -1
     (nil))
(debug_insn 1009 1008 1010 146 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1364 -1
     (nil))
(insn 1010 1009 1011 146 (set (reg/f:DI 489)
        (mem/f:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 8 [0x8])) [1 _971->yy_ch_buf+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 -1
     (nil))
(insn 1011 1010 1012 146 (parallel [
            (set (reg:DI 488 [ D.6783 ])
                (plus:DI (reg/v:DI 224 [ number_to_move ])
                    (reg/f:DI 489)))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                    (const_int 8 [0x8])) [1 _971->yy_ch_buf+0 S8 A64])
            (reg/v:DI 224 [ number_to_move ]))
        (nil)))
(insn 1012 1011 1013 146 (set (reg:DI 2 cx)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 -1
     (nil))
(insn 1013 1012 1014 146 (set (reg:DI 1 dx)
        (reg/v:DI 309 [ num_to_read ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 -1
     (nil))
(insn 1014 1013 1015 146 (set (reg:DI 4 si)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 -1
     (nil))
(insn 1015 1014 1016 146 (set (reg:DI 5 di)
        (reg:DI 488 [ D.6783 ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 -1
     (nil))
(call_insn 1016 1015 1017 146 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*fread") [flags 0x41]  <function_decl 0x7f88bbfb8870 __fread_alias>) [0 __fread_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*fread") [flags 0x41]  <function_decl 0x7f88bbfb8870 __fread_alias>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1017 1016 1018 146 (set (reg:DI 274 [ D.6781 ])
        (reg:DI 0 ax)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 -1
     (nil))
(debug_insn 1018 1017 1019 146 (var_location:DI __ptr (clobber (const_int 0 [0]))) lex.yy.c:1364 -1
     (nil))
(debug_insn 1019 1018 1020 146 (var_location:DI __size (clobber (const_int 0 [0]))) lex.yy.c:1364 -1
     (nil))
(debug_insn 1020 1019 1021 146 (var_location:DI __n (clobber (const_int 0 [0]))) lex.yy.c:1364 -1
     (nil))
(debug_insn 1021 1020 1022 146 (var_location:DI __stream (clobber (const_int 0 [0]))) lex.yy.c:1364 -1
     (nil))
(insn 1022 1021 1023 146 (set (reg:SI 275 [ D.6777 ])
        (subreg:SI (reg:DI 274 [ D.6781 ]) 0)) lex.yy.c:1364 -1
     (nil))
(insn 1023 1022 1024 146 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 275 [ D.6777 ])) lex.yy.c:1364 -1
     (nil))
(insn 1024 1023 1025 146 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 275 [ D.6777 ])
            (const_int 0 [0]))) lex.yy.c:1364 -1
     (nil))
(jump_insn 1025 1024 1026 146 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1263)
            (pc))) lex.yy.c:1364 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 1263)
;;  succ:       147 [29.0%]  (FALLTHRU)
;;              177 [71.0%] 

;; basic block 147, loop depth 6, count 0, freq 2, maybe hot
;;  prev block 146, next block 148, flags: (NEW, REACHABLE, RTL)
;;  pred:       146 [29.0%]  (FALLTHRU)
(note 1026 1025 1027 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 1027 1026 1028 147 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1364 -1
     (nil))
(call_insn 1028 1027 1029 147 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f88bbf956c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) lex.yy.c:1364 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f88bbf956c0 ferror>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1029 1028 1030 147 (set (reg:SI 277 [ D.6777 ])
        (reg:SI 0 ax)) lex.yy.c:1364 -1
     (nil))
(insn 1030 1029 1031 147 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 277 [ D.6777 ])
            (const_int 0 [0]))) lex.yy.c:1364 -1
     (nil))
(jump_insn 1031 1030 1032 147 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1271)
            (pc))) lex.yy.c:1364 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1271)
;;  succ:       178 [50.0%] 
;;              148 [50.0%]  (FALLTHRU)

;; basic block 148, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 147, next block 149, flags: (NEW, REACHABLE, RTL)
;;  pred:       147 [50.0%]  (FALLTHRU)
(note 1032 1031 1033 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 1033 1032 1034 148 (set (reg:SI 275 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) -1
     (nil))
(jump_insn 1034 1033 1035 148 (set (pc)
        (label_ref 1263)) -1
     (nil)
 -> 1263)
;;  succ:       177 [100.0%] 

(barrier 1035 1034 1276)
;; basic block 149, loop depth 6, count 0, freq 7, maybe hot
;;  prev block 148, next block 150, flags: (NEW, REACHABLE, RTL)
;;  pred:       179 [100.0%] 
(code_label 1276 1035 1036 149 235 "" [1 uses])
(note 1036 1276 1037 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 1037 1036 1038 149 (set (mem:SI (reg/f:DI 270 [ D.6794 ]) [2 *_402+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1364 -1
     (nil))
(insn 1038 1037 1039 149 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1364 -1
     (nil))
(call_insn 1039 1038 1040 149 (call (mem:QI (symbol_ref:DI ("clearerr") [flags 0x41]  <function_decl 0x7f88bbf95510 clearerr>) [0 clearerr S1 A8])
        (const_int 0 [0])) lex.yy.c:1364 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("clearerr") [flags 0x41]  <function_decl 0x7f88bbf95510 clearerr>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1040 1039 1041 149 (set (reg:DI 490)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) -1
     (nil))
(insn 1041 1040 1042 149 (set (reg/f:DI 491)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) -1
     (nil))
(insn 1042 1041 1044 149 (set (reg/f:DI 245 [ D.6782 ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 490)
                    (const_int 8 [0x8]))
                (reg/f:DI 491)) [1 *_969+0 S8 A64])) -1
     (nil))
(jump_insn 1044 1042 1045 149 (set (pc)
        (label_ref 1043)) -1
     (nil)
 -> 1043)
;;  succ:       146 [100.0%]  (DFS_BACK)

(barrier 1045 1044 1046)
;; basic block 150, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 149, next block 151, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       144 [100.0%] 
;;              177 [100.0%] 
(code_label 1046 1045 1047 150 222 "" [2 uses])
(note 1047 1046 1048 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 1048 1047 1049 150 (set (reg/f:DI 280 [ D.6782 ])
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_1064+0 S8 A64])) lex.yy.c:1367 -1
     (nil))
(insn 1049 1048 1050 150 (set (mem:SI (plus:DI (reg/f:DI 280 [ D.6782 ])
                (const_int 32 [0x20])) [2 _429->yy_n_chars+0 S4 A64])
        (reg:SI 275 [ D.6777 ])) lex.yy.c:1367 -1
     (nil))
(insn 1050 1049 1051 150 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 275 [ D.6777 ])
            (const_int 0 [0]))) lex.yy.c:1370 -1
     (nil))
(jump_insn 1051 1050 1052 150 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1349)
            (pc))) lex.yy.c:1370 612 {*jcc_1}
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1349)
;;  succ:       151 [50.0%]  (FALLTHRU)
;;              154 [50.0%] 

;; basic block 151, loop depth 5, count 0, freq 0, maybe hot
;;  prev block 150, next block 152, flags: (NEW, REACHABLE, RTL)
;;  pred:       150 [50.0%]  (FALLTHRU)
;;              126 [100.0%] 
(code_label 1052 1051 1053 151 210 "" [1 uses])
(note 1053 1052 1054 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 1054 1053 1055 151 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 224 [ number_to_move ])
            (const_int 0 [0]))) lex.yy.c:1372 -1
     (nil))
(jump_insn 1055 1054 1056 151 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1068)
            (pc))) lex.yy.c:1372 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 1068)
;;  succ:       152 [29.0%]  (FALLTHRU)
;;              153 [71.0%] 

;; basic block 152, loop depth 5, count 0, freq 0, maybe hot
;;  prev block 151, next block 153, flags: (NEW, REACHABLE, RTL)
;;  pred:       151 [29.0%]  (FALLTHRU)
(note 1056 1055 1057 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1057 1056 1058 152 (var_location:SI ret_val (const_int 1 [0x1])) lex.yy.c:1374 -1
     (nil))
(insn 1058 1057 1059 152 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1375 -1
     (nil))
(call_insn 1059 1058 1060 152 (call (mem:QI (symbol_ref:DI ("_Z9yyrestartP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c1b0 yyrestart>) [0 yyrestart S1 A8])
        (const_int 0 [0])) lex.yy.c:1375 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z9yyrestartP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c1b0 yyrestart>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1060 1059 1061 152 (set (reg:SI 275 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) -1
     (nil))
(insn 1061 1060 1062 152 (set (reg:DI 493)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) -1
     (nil))
(insn 1062 1061 1063 152 (parallel [
            (set (reg:DI 492 [ D.6781 ])
                (ashift:DI (reg:DI 493)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 1063 1062 1064 152 (set (reg/f:DI 494)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) -1
     (nil))
(insn 1064 1063 1065 152 (parallel [
            (set (reg/f:DI 347 [ D.6780 ])
                (plus:DI (reg:DI 492 [ D.6781 ])
                    (reg/f:DI 494)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
            (reg:DI 492 [ D.6781 ]))
        (nil)))
(insn 1065 1064 30 152 (set (reg/f:DI 280 [ D.6782 ])
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_954+0 S8 A64])) -1
     (nil))
(insn 30 1065 1066 152 (set (reg/v:SI 308 [ ret_val ])
        (const_int 1 [0x1])) lex.yy.c:1374 -1
     (nil))
(jump_insn 1066 30 1067 152 (set (pc)
        (label_ref 1078)) -1
     (nil)
 -> 1078)
;;  succ:       155 [100.0%] 

(barrier 1067 1066 1068)
;; basic block 153, loop depth 5, count 0, freq 0, maybe hot
;;  prev block 152, next block 154, flags: (NEW, REACHABLE, RTL)
;;  pred:       151 [71.0%] 
(code_label 1068 1067 1069 153 227 "" [1 uses])
(note 1069 1068 1070 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1070 1069 1071 153 (var_location:SI ret_val (const_int 2 [0x2])) lex.yy.c:1380 -1
     (nil))
(insn 1071 1070 1072 153 (set (reg:DI 496)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1381 -1
     (nil))
(insn 1072 1071 1073 153 (parallel [
            (set (reg:DI 495 [ D.6781 ])
                (ashift:DI (reg:DI 496)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1381 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 1073 1072 1074 153 (set (reg/f:DI 497)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1381 -1
     (nil))
(insn 1074 1073 1075 153 (parallel [
            (set (reg/f:DI 347 [ D.6780 ])
                (plus:DI (reg:DI 495 [ D.6781 ])
                    (reg/f:DI 497)))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1381 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
            (reg:DI 495 [ D.6781 ]))
        (nil)))
(insn 1075 1074 1076 153 (set (reg/f:DI 280 [ D.6782 ])
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_436+0 S8 A64])) lex.yy.c:1381 -1
     (nil))
(insn 1076 1075 1077 153 (set (mem:SI (plus:DI (reg/f:DI 280 [ D.6782 ])
                (const_int 60 [0x3c])) [2 _437->yy_buffer_status+0 S4 A32])
        (const_int 2 [0x2])) lex.yy.c:1382 -1
     (nil))
(insn 1077 1076 31 153 (set (reg:SI 275 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) -1
     (nil))
(insn 31 1077 1346 153 (set (reg/v:SI 308 [ ret_val ])
        (const_int 2 [0x2])) lex.yy.c:1380 -1
     (nil))
(jump_insn 1346 31 1347 153 (set (pc)
        (label_ref 1078)) -1
     (nil)
 -> 1078)
;;  succ:       155 [100.0%] 

(barrier 1347 1346 1349)
;; basic block 154, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 153, next block 155, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       150 [50.0%] 
(code_label 1349 1347 1348 154 243 "" [1 uses])
(note 1348 1349 29 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 29 1348 1078 154 (set (reg/v:SI 308 [ ret_val ])
        (const_int 0 [0])) lex.yy.c:1387 -1
     (nil))
;;  succ:       155 [100.0%]  (FALLTHRU)

;; basic block 155, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 154, next block 156, flags: (NEW, REACHABLE, RTL)
;;  pred:       154 [100.0%]  (FALLTHRU)
;;              152 [100.0%] 
;;              153 [100.0%] 
(code_label 1078 29 1079 155 226 "" [2 uses])
(note 1079 1078 1080 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1080 1079 1081 155 (var_location:SI ret_val (reg/v:SI 308 [ ret_val ])) -1
     (nil))
(insn 1081 1080 1082 155 (parallel [
            (set (reg:SI 287 [ D.6795 ])
                (plus:SI (reg:SI 275 [ D.6777 ])
                    (subreg:SI (reg/v:DI 224 [ number_to_move ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1389 -1
     (nil))
(insn 1082 1081 1083 155 (set (reg:SI 288 [ D.6777 ])
        (reg:SI 287 [ D.6795 ])) lex.yy.c:1389 -1
     (nil))
(insn 1083 1082 1084 155 (set (reg:DI 289 [ D.6781 ])
        (sign_extend:DI (reg:SI 288 [ D.6777 ]))) lex.yy.c:1389 -1
     (nil))
(insn 1084 1083 1085 155 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 289 [ D.6781 ])
            (mem:DI (plus:DI (reg/f:DI 280 [ D.6782 ])
                    (const_int 24 [0x18])) [4 _957->yy_buf_size+0 S8 A64]))) lex.yy.c:1389 -1
     (nil))
(jump_insn 1085 1084 1086 155 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1109)
            (pc))) lex.yy.c:1389 -1
     (int_list:REG_BR_PROB 7100 (nil))
 -> 1109)
;;  succ:       156 [29.0%]  (FALLTHRU)
;;              158 [71.0%] 

;; basic block 156, loop depth 5, count 0, freq 0, maybe hot
;;  prev block 155, next block 157, flags: (NEW, REACHABLE, RTL)
;;  pred:       155 [29.0%]  (FALLTHRU)
(note 1086 1085 1087 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1087 1086 1088 156 (var_location:SI new_size (plus:SI (ashiftrt:SI (reg:SI 275 [ D.6777 ])
            (const_int 1 [0x1]))
        (reg:SI 287 [ D.6795 ]))) lex.yy.c:1391 -1
     (nil))
(debug_insn 1088 1087 1089 156 (var_location:DI ptr (mem/f/j:DI (plus:DI (reg/f:DI 280 [ D.6782 ])
            (const_int 8 [0x8])) [0 _957->yy_ch_buf+0 S8 A64])) lex.yy.c:1392 -1
     (nil))
(debug_insn 1089 1088 1090 156 (var_location:DI size (sign_extend:DI (plus:SI (ashiftrt:SI (reg:SI 275 [ D.6777 ])
                (const_int 1 [0x1]))
            (reg:SI 287 [ D.6795 ])))) lex.yy.c:1392 -1
     (nil))
(insn 1090 1089 1091 156 (parallel [
            (set (reg:SI 498 [ D.6777 ])
                (ashiftrt:SI (reg:SI 275 [ D.6777 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2136 -1
     (nil))
(insn 1091 1090 1092 156 (parallel [
            (set (reg:SI 499 [ D.6795 ])
                (plus:SI (reg:SI 498 [ D.6777 ])
                    (reg:SI 287 [ D.6795 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2136 -1
     (nil))
(insn 1092 1091 1093 156 (set (reg:DI 500 [ D.6781 ])
        (sign_extend:DI (reg:SI 499 [ D.6795 ]))) lex.yy.c:2136 -1
     (nil))
(insn 1093 1092 1094 156 (set (reg:DI 501)
        (mem/f:DI (plus:DI (reg/f:DI 280 [ D.6782 ])
                (const_int 8 [0x8])) [1 _957->yy_ch_buf+0 S8 A64])) lex.yy.c:2136 -1
     (nil))
(insn 1094 1093 1095 156 (set (reg:DI 4 si)
        (reg:DI 500 [ D.6781 ])) lex.yy.c:2136 -1
     (nil))
(insn 1095 1094 1096 156 (set (reg:DI 5 di)
        (reg:DI 501)) lex.yy.c:2136 -1
     (nil))
(call_insn 1096 1095 1097 156 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2136 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1097 1096 1098 156 (set (reg/f:DI 297 [ D.6793 ])
        (reg:DI 0 ax)) lex.yy.c:2136 -1
     (nil))
(debug_insn 1098 1097 1099 156 (var_location:DI ptr (clobber (const_int 0 [0]))) lex.yy.c:1392 -1
     (nil))
(debug_insn 1099 1098 1100 156 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1392 -1
     (nil))
(insn 1100 1099 1101 156 (set (mem/f:DI (plus:DI (reg/f:DI 280 [ D.6782 ])
                (const_int 8 [0x8])) [1 _957->yy_ch_buf+0 S8 A64])
        (reg/f:DI 297 [ D.6793 ])) lex.yy.c:1392 -1
     (nil))
(insn 1101 1100 1102 156 (set (reg/f:DI 502)
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_955+0 S8 A64])) lex.yy.c:1393 -1
     (nil))
(insn 1102 1101 1103 156 (set (reg/f:DI 299 [ D.6783 ])
        (mem/f:DI (plus:DI (reg/f:DI 502)
                (const_int 8 [0x8])) [1 _457->yy_ch_buf+0 S8 A64])) lex.yy.c:1393 -1
     (nil))
(insn 1103 1102 1104 156 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 299 [ D.6783 ])
            (const_int 0 [0]))) lex.yy.c:1393 -1
     (nil))
(jump_insn 1104 1103 1105 156 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1112)
            (pc))) lex.yy.c:1393 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 1112)
;;  succ:       157 [0.0%]  (FALLTHRU)
;;              159 [100.0%] 

;; basic block 157, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 156, next block 158, flags: (NEW, REACHABLE, RTL)
;;  pred:       156 [0.0%]  (FALLTHRU)
(note 1105 1104 1106 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 1106 1105 1107 157 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f88bbbf2cf0 *.LC24>)) lex.yy.c:1394 -1
     (nil))
(call_insn 1107 1106 1108 157 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1394 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 1108 1107 1109)
;; basic block 158, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 157, next block 159, flags: (NEW, REACHABLE, RTL)
;;  pred:       155 [71.0%] 
(code_label 1109 1108 1110 158 228 "" [1 uses])
(note 1110 1109 1111 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 1111 1110 1112 158 (set (reg/f:DI 299 [ D.6783 ])
        (mem/f:DI (plus:DI (reg/f:DI 280 [ D.6782 ])
                (const_int 8 [0x8])) [1 _957->yy_ch_buf+0 S8 A64])) -1
     (nil))
;;  succ:       159 [100.0%]  (FALLTHRU)

;; basic block 159, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 158, next block 160, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       158 [100.0%]  (FALLTHRU)
;;              156 [100.0%] 
(code_label 1112 1111 1113 159 229 "" [1 uses])
(note 1113 1112 1114 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 1114 1113 1115 159 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 288 [ D.6777 ])) lex.yy.c:1397 -1
     (nil))
(insn 1115 1114 1116 159 (set (mem:QI (plus:DI (reg/f:DI 299 [ D.6783 ])
                (reg:DI 289 [ D.6781 ])) [0 *_461+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1398 -1
     (nil))
(insn 1116 1115 1117 159 (set (reg/f:DI 503)
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_955+0 S8 A64])) lex.yy.c:1399 -1
     (nil))
(insn 1117 1116 1118 159 (set (reg/f:DI 504)
        (mem/f:DI (plus:DI (reg/f:DI 503)
                (const_int 8 [0x8])) [1 _462->yy_ch_buf+0 S8 A64])) lex.yy.c:1399 -1
     (nil))
(insn 1118 1117 1119 159 (set (mem:QI (plus:DI (plus:DI (reg/f:DI 504)
                    (reg:DI 289 [ D.6781 ]))
                (const_int 1 [0x1])) [0 *_465+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1399 -1
     (nil))
(insn 1119 1118 1120 159 (set (reg/f:DI 505)
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_955+0 S8 A64])) lex.yy.c:1401 -1
     (nil))
(insn 1120 1119 1121 159 (set (reg/f:DI 306 [ D.6783 ])
        (mem/f:DI (plus:DI (reg/f:DI 505)
                (const_int 8 [0x8])) [1 _466->yy_ch_buf+0 S8 A64])) lex.yy.c:1401 -1
     (nil))
(insn 1121 1120 1122 159 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 306 [ D.6783 ])) lex.yy.c:1401 -1
     (nil))
(debug_insn 1122 1121 1123 159 (var_location:SI new_size (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1123 1122 1124 159 (var_location:DI n (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1124 1123 1125 159 (var_location:SI c (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1125 1124 1126 159 (var_location:DI new_size (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1126 1125 1127 159 (var_location:SI yy_c_buf_p_offset (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1127 1126 1128 159 (var_location:DI b (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1128 1127 1129 159 (var_location:DI num_to_read (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1129 1128 1130 159 (var_location:SI ret_val (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1130 1129 1131 159 (var_location:DI i (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1131 1130 1132 159 (var_location:DI number_to_move (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1132 1131 1133 159 (var_location:DI source (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1133 1132 1134 159 (var_location:DI dest (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(insn 1134 1133 1135 159 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 308 [ ret_val ])
            (const_int 1 [0x1]))) lex.yy.c:1205 -1
     (nil))
(jump_insn 1135 1134 1351 159 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1147)
            (pc))) lex.yy.c:1205 -1
     (int_list:REG_BR_PROB 10000 (nil))
 -> 1147)
;;  succ:       164 [100.0%] 
;;              160 (FALLTHRU)

;; basic block 160, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 159, next block 161, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       159 (FALLTHRU)
(note 1351 1135 1136 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 1136 1351 1137 160 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 308 [ ret_val ])
            (const_int 2 [0x2]))) lex.yy.c:1205 -1
     (nil))
(jump_insn 1137 1136 1352 160 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1140)
            (pc))) lex.yy.c:1205 -1
     (int_list:REG_BR_PROB 2900 (nil))
 -> 1140)
;;  succ:       162 [29.0%] 
;;              161 [71.0%]  (FALLTHRU)

;; basic block 161, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 160, next block 162, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       160 [71.0%]  (FALLTHRU)
(note 1352 1137 1138 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1138 1352 1139 161 (set (pc)
        (label_ref 1171)) lex.yy.c:1205 -1
     (nil)
 -> 1171)
;;  succ:       165 [100.0%] 

(barrier 1139 1138 1140)
;; basic block 162, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 161, next block 163, flags: (NEW, REACHABLE, RTL)
;;  pred:       160 [29.0%] 
(code_label 1140 1139 1141 162 231 "" [1 uses])
(note 1141 1140 1142 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 1142 1141 1143 162 (set (reg/f:DI 506)
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_955+0 S8 A64])) -1
     (nil))
(insn 1143 1142 1144 162 (set (reg/f:DI 507)
        (mem/f:DI (plus:DI (reg/f:DI 506)
                (const_int 8 [0x8])) [1 _934->yy_ch_buf+0 S8 A64])) -1
     (nil))
(insn 1144 1143 33 162 (parallel [
            (set (reg/f:DI 324 [ D.6783 ])
                (plus:DI (reg:DI 289 [ D.6781 ])
                    (reg/f:DI 507)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (plus:DI (mem/f:DI (plus:DI (reg/f:DI 506)
                    (const_int 8 [0x8])) [1 _934->yy_ch_buf+0 S8 A64])
            (reg:DI 289 [ D.6781 ]))
        (nil)))
(insn 33 1144 1145 162 (set (reg/v/f:DI 88 [ yy_cp ])
        (reg/f:DI 324 [ D.6783 ])) lex.yy.c:1205 -1
     (nil))
(jump_insn 1145 33 1146 162 (set (pc)
        (label_ref 1184)) -1
     (nil)
 -> 1184)
;;  succ:       166 [100.0%] 

(barrier 1146 1145 1344)
;; basic block 163, loop depth 5, count 0, freq 0, maybe hot
;;  prev block 162, next block 164, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       119 [16.1%] 
(code_label 1344 1146 1343 163 242 "" [1 uses])
(note 1343 1344 32 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn 32 1343 1147 163 (set (reg/f:DI 306 [ D.6783 ])
        (reg/v/f:DI 213 [ source ])) lex.yy.c:1277 -1
     (nil))
;;  succ:       164 [100.0%]  (FALLTHRU)

;; basic block 164, loop depth 5, count 0, freq 0, maybe hot
;;  prev block 163, next block 165, flags: (NEW, REACHABLE, RTL)
;;  pred:       163 [100.0%]  (FALLTHRU)
;;              159 [100.0%] 
(code_label 1147 32 1148 164 205 "" [1 uses])
(note 1148 1147 1149 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1149 1148 1150 164 (var_location:SI new_size (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1150 1149 1151 164 (var_location:DI n (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1151 1150 1152 164 (var_location:SI c (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1152 1151 1153 164 (var_location:DI new_size (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1153 1152 1154 164 (var_location:SI yy_c_buf_p_offset (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1154 1153 1155 164 (var_location:DI b (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1155 1154 1156 164 (var_location:DI num_to_read (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1156 1155 1157 164 (var_location:SI ret_val (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1157 1156 1158 164 (var_location:DI i (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1158 1157 1159 164 (var_location:DI number_to_move (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1159 1158 1160 164 (var_location:DI source (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1160 1159 1161 164 (var_location:DI dest (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(insn 1161 1160 1162 164 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 306 [ D.6783 ])) lex.yy.c:1222 -1
     (nil))
(insn 1162 1161 1163 164 (set (reg:SI 509)
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) lex.yy.c:1224 -1
     (nil))
(insn 1163 1162 1164 164 (parallel [
            (set (reg:SI 508 [ D.6777 ])
                (plus:SI (reg:SI 509)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1224 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 1164 1163 1165 164 (parallel [
            (set (reg:SI 511)
                (lshiftrt:SI (reg:SI 508 [ D.6777 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1224 -1
     (nil))
(insn 1165 1164 1166 164 (parallel [
            (set (reg:SI 512)
                (plus:SI (reg:SI 511)
                    (reg:SI 508 [ D.6777 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1224 -1
     (nil))
(insn 1166 1165 1167 164 (parallel [
            (set (reg:SI 513 [ D.6777 ])
                (ashiftrt:SI (reg:SI 512)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1224 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 508 [ D.6777 ])
            (const_int 2 [0x2]))
        (nil)))
(insn 1167 1166 1168 164 (parallel [
            (set (reg/v:SI 90 [ yy_act ])
                (plus:SI (reg:SI 513 [ D.6777 ])
                    (const_int 47 [0x2f])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1224 -1
     (nil))
(debug_insn 1168 1167 1169 164 (var_location:SI yy_act (reg/v:SI 90 [ yy_act ])) lex.yy.c:1224 -1
     (nil))
(jump_insn 1169 1168 1170 164 (set (pc)
        (label_ref 347)) lex.yy.c:1225 -1
     (nil)
 -> 347)
;;  succ:       48 [100.0%]  (DFS_BACK)

(barrier 1170 1169 1171)
;; basic block 165, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 164, next block 166, flags: (NEW, REACHABLE, RTL)
;;  pred:       161 [100.0%] 
(code_label 1171 1170 1172 165 230 "" [1 uses])
(note 1172 1171 1173 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 1173 1172 1174 165 (set (reg:DI 514 [ D.6790 ])
        (sign_extend:DI (reg/v:SI 147 [ yy_amount_of_matched_text ]))) lex.yy.c:1238 -1
     (nil))
(insn 1174 1173 1175 165 (parallel [
            (set (reg/v/f:DI 88 [ yy_cp ])
                (plus:DI (reg/f:DI 306 [ D.6783 ])
                    (reg:DI 514 [ D.6790 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1238 -1
     (nil))
(insn 1175 1174 1176 165 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:1238 -1
     (nil))
(call_insn 1176 1175 1177 165 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>) [0 yy_get_previous_state S1 A8])
            (const_int 0 [0]))) lex.yy.c:1240 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 1177 1176 1178 165 (set (reg/v:SI 87 [ yy_current_state ])
        (reg:SI 0 ax)) lex.yy.c:1240 -1
     (nil))
(debug_insn 1178 1177 1179 165 (var_location:SI yy_current_state (reg/v:SI 87 [ yy_current_state ])) lex.yy.c:1240 -1
     (nil))
(debug_insn 1179 1178 1180 165 (var_location:DI yy_cp (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:1242 -1
     (nil))
(insn 1180 1179 1181 165 (set (reg/v/f:DI 89 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1243 -1
     (nil))
(debug_insn 1181 1180 1182 165 (var_location:DI yy_bp (reg/v/f:DI 89 [ yy_cp ])) lex.yy.c:1243 -1
     (nil))
(jump_insn 1182 1181 1183 165 (set (pc)
        (label_ref 822)) lex.yy.c:1244 -1
     (nil)
 -> 822)
;;  succ:       20 [100.0%] 

(barrier 1183 1182 1184)
;; basic block 166, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 165, next block 167, flags: (NEW, REACHABLE, RTL)
;;  pred:       162 [100.0%] 
;;              120 [100.0%] 
(code_label 1184 1183 1185 166 206 "" [2 uses])
(note 1185 1184 1186 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1186 1185 1187 166 (var_location:SI new_size (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1187 1186 1188 166 (var_location:DI n (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1188 1187 1189 166 (var_location:SI c (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1189 1188 1190 166 (var_location:DI new_size (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1190 1189 1191 166 (var_location:SI yy_c_buf_p_offset (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1191 1190 1192 166 (var_location:DI b (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1192 1191 1193 166 (var_location:DI num_to_read (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1193 1192 1194 166 (var_location:SI ret_val (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1194 1193 1195 166 (var_location:DI i (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1195 1194 1196 166 (var_location:DI number_to_move (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1196 1195 1197 166 (var_location:DI source (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1197 1196 1198 166 (var_location:DI dest (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1198 1197 1199 166 (var_location:DI D#9 (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1248 -1
     (nil))
(debug_insn 1199 1198 1200 166 (var_location:DI D#8 (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1248 -1
     (nil))
(debug_insn 1200 1199 1201 166 (var_location:DI D#7 (ashift:DI (debug_expr:DI D#8)
        (const_int 3 [0x3]))) lex.yy.c:1248 -1
     (nil))
(debug_insn 1201 1200 1202 166 (var_location:DI D#6 (plus:DI (debug_expr:DI D#9)
        (debug_expr:DI D#7))) lex.yy.c:1248 -1
     (nil))
(debug_insn 1202 1201 1203 166 (var_location:DI D#5 (mem/f:DI (debug_expr:DI D#6) [0 +0 S8 A64])) lex.yy.c:1248 -1
     (nil))
(debug_insn 1203 1202 1204 166 (var_location:DI D#4 (mem/f/j:DI (plus:DI (debug_expr:DI D#5)
            (const_int 8 [0x8])) [0 D#5->yy_ch_buf+0 S8 A64])) lex.yy.c:1248 -1
     (nil))
(debug_insn 1204 1203 1205 166 (var_location:SI D#3 (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) lex.yy.c:1248 -1
     (nil))
(debug_insn 1205 1204 1206 166 (var_location:DI D#2 (sign_extend:DI (debug_expr:SI D#3))) lex.yy.c:1248 -1
     (nil))
(insn 1206 1205 1207 166 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:1248 -1
     (nil))
(call_insn 1207 1206 1208 166 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>) [0 yy_get_previous_state S1 A8])
            (const_int 0 [0]))) lex.yy.c:1250 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 1208 1207 1209 166 (set (reg/v:SI 160 [ yy_current_state ])
        (reg:SI 0 ax)) lex.yy.c:1250 -1
     (nil))
(debug_insn 1209 1208 1210 166 (var_location:SI yy_current_state (reg/v:SI 160 [ yy_current_state ])) lex.yy.c:1250 -1
     (nil))
(debug_insn 1210 1209 1211 166 (var_location:DI yy_cp (plus:DI (debug_expr:DI D#4)
        (debug_expr:DI D#2))) lex.yy.c:1252 -1
     (nil))
(insn 1211 1210 1212 166 (set (reg/v/f:DI 89 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1253 -1
     (nil))
(debug_insn 1212 1211 1213 166 (var_location:DI yy_bp (reg/v/f:DI 89 [ yy_cp ])) lex.yy.c:1253 -1
     (nil))
(insn 1213 1212 1214 166 (set (reg/f:DI 515)
        (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) -1
     (nil))
(insn 1214 1213 1215 166 (set (reg:DI 516)
        (sign_extend:DI (reg/v:SI 160 [ yy_current_state ]))) -1
     (nil))
(insn 1215 1214 1216 166 (set (reg:HI 186 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 516)
                    (const_int 2 [0x2]))
                (reg/f:DI 515)) [3 yy_accept S2 A16])) -1
     (nil))
(jump_insn 1216 1215 1217 166 (set (pc)
        (label_ref 390)) lex.yy.c:1254 -1
     (nil)
 -> 390)
;;  succ:       36 [100.0%] 

(barrier 1217 1216 1218)
;; basic block 167, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 166, next block 168, flags: (NEW, REACHABLE, RTL)
;;  pred:       48 [2.2%] 
(code_label 1218 1217 1219 167 140 "" [1 uses])
(note 1219 1218 1220 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn 1220 1219 1221 167 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f88bbbf2d80 *.LC25>)) lex.yy.c:1261 -1
     (nil))
(call_insn 1221 1220 1222 167 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1261 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 1222 1221 1223)
;; basic block 168, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 167, next block 169, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 [2.3%] 
(code_label 1223 1222 1224 168 156 "" [1 uses])
(note 1224 1223 42 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn 42 1224 1327 168 (set (reg:SI 92 [ D.6777 ])
        (const_int 276 [0x114])) mycc.l:75 -1
     (nil))
(jump_insn 1327 42 1328 168 (set (pc)
        (label_ref 1225)) -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 1328 1327 1330)
;; basic block 169, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 168, next block 170, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49 [2.3%] 
(code_label 1330 1328 1329 169 238 "" [1 uses])
(note 1329 1330 43 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(insn 43 1329 1331 169 (set (reg:SI 92 [ D.6777 ])
        (const_int 277 [0x115])) mycc.l:76 -1
     (nil))
(jump_insn 1331 43 1332 169 (set (pc)
        (label_ref 1225)) -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 1332 1331 1334)
;; basic block 170, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 169, next block 171, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       58 [2.0%] 
(code_label 1334 1332 1333 170 239 "" [1 uses])
(note 1333 1334 68 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(insn 68 1333 1335 170 (set (reg:SI 92 [ D.6777 ])
        (const_int 0 [0])) mycc.l:62 -1
     (nil))
(jump_insn 1335 68 1336 170 (set (pc)
        (label_ref 1225)) -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 1336 1335 1338)
;; basic block 171, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 170, next block 172, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       59 [2.0%] 
(code_label 1338 1336 1337 171 240 "" [1 uses])
(note 1337 1338 67 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(insn 67 1337 1339 171 (set (reg:SI 92 [ D.6777 ])
        (const_int 0 [0])) mycc.l:62 -1
     (nil))
(jump_insn 1339 67 1340 171 (set (pc)
        (label_ref 1225)) -1
     (nil)
 -> 1225)
;;  succ:       173 [100.0%] 

(barrier 1340 1339 1342)
;; basic block 172, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 171, next block 173, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       77 [21.6%] 
(code_label 1342 1340 1341 172 241 "" [1 uses])
(note 1341 1342 38 172 [bb 172] NOTE_INSN_BASIC_BLOCK)
(insn 38 1341 1225 172 (set (reg:SI 92 [ D.6777 ])
        (const_int 263 [0x107])) mycc.l:74 -1
     (nil))
;;  succ:       173 [100.0%]  (FALLTHRU)

;; basic block 173, loop depth 0, count 0, freq 61, maybe hot
;;  prev block 172, next block 174, flags: (NEW, REACHABLE, RTL)
;;  pred:       68 [100.0%] 
;;              63 [100.0%] 
;;              67 [100.0%] 
;;              65 [100.0%] 
;;              172 [100.0%]  (FALLTHRU)
;;              75 [100.0%] 
;;              76 [100.0%] 
;;              78 [100.0%] 
;;              169 [100.0%] 
;;              168 [100.0%] 
;;              50 [100.0%] 
;;              79 [100.0%] 
;;              80 [100.0%] 
;;              81 [100.0%] 
;;              82 [100.0%] 
;;              83 [100.0%] 
;;              84 [100.0%] 
;;              85 [100.0%] 
;;              86 [100.0%] 
;;              87 [100.0%] 
;;              88 [100.0%] 
;;              89 [100.0%] 
;;              90 [100.0%] 
;;              91 [100.0%] 
;;              92 [100.0%] 
;;              93 [100.0%] 
;;              94 [100.0%] 
;;              95 [100.0%] 
;;              96 [100.0%] 
;;              97 [100.0%] 
;;              98 [100.0%] 
;;              99 [100.0%] 
;;              100 [100.0%] 
;;              101 [100.0%] 
;;              170 [100.0%] 
;;              171 [100.0%] 
(code_label 1225 38 1226 173 157 "" [35 uses])
(note 1226 1225 1227 173 [bb 173] NOTE_INSN_BASIC_BLOCK)
(insn 1227 1226 1228 173 (set (reg:SI 348 [ <retval> ])
        (reg:SI 92 [ D.6777 ])) -1
     (nil))
(jump_insn 1228 1227 1229 173 (set (pc)
        (label_ref 1318)) -1
     (nil)
 -> 1318)
;;  succ:       183 [100.0%] 

(barrier 1229 1228 1230)
;; basic block 174, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 173, next block 175, flags: (NEW, REACHABLE, RTL)
;;  pred:       113 [28.0%] 
(code_label 1230 1229 1231 174 201 "" [1 uses])
(note 1231 1230 1232 174 [bb 174] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1232 1231 1233 174 (var_location:SI yy_current_state (clobber (const_int 0 [0]))) lex.yy.c:1186 -1
     (nil))
(debug_insn 1233 1232 1234 174 (var_location:DI yy_cp (clobber (const_int 0 [0]))) lex.yy.c:1186 -1
     (nil))
(debug_insn 1234 1233 1235 174 (var_location:SI yy_next_state (clobber (const_int 0 [0]))) lex.yy.c:1186 -1
     (nil))
(insn 1235 1234 1236 174 (set (reg/v/f:DI 89 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1188 -1
     (nil))
(debug_insn 1236 1235 1237 174 (var_location:DI yy_bp (reg/v/f:DI 89 [ yy_cp ])) lex.yy.c:1188 -1
     (nil))
(jump_insn 1237 1236 1238 174 (set (pc)
        (label_ref 390)) lex.yy.c:1188 -1
     (nil)
 -> 390)
;;  succ:       36 [100.0%] 

(barrier 1238 1237 1239)
;; basic block 175, loop depth 6, count 0, freq 3, maybe hot
;;  prev block 174, next block 176, flags: (NEW, REACHABLE, RTL)
;;  pred:       141 [72.0%] 
(code_label 1239 1238 1240 175 220 "" [1 uses])
(note 1240 1239 1241 175 [bb 175] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1241 1240 1242 175 (var_location:SI c (reg/v:SI 251 [ c ])) -1
     (nil))
(debug_insn 1242 1241 1243 175 (var_location:SI c (reg/v:SI 251 [ c ])) -1
     (nil))
(insn 1243 1242 1244 175 (set (reg:DI 519)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1364 -1
     (nil))
(insn 1244 1243 1245 175 (parallel [
            (set (reg:DI 518 [ D.6781 ])
                (ashift:DI (reg:DI 519)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 1245 1244 1246 175 (set (reg/f:DI 520)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1364 -1
     (nil))
(insn 1246 1245 1247 175 (parallel [
            (set (reg/f:DI 347 [ D.6780 ])
                (plus:DI (reg:DI 518 [ D.6781 ])
                    (reg/f:DI 520)))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
            (reg:DI 518 [ D.6781 ]))
        (nil)))
(insn 1247 1246 1248 175 (set (reg/f:DI 521)
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_379+0 S8 A64])) lex.yy.c:1364 -1
     (nil))
(insn 1248 1247 1249 175 (set (reg/f:DI 522)
        (mem/f:DI (plus:DI (reg/f:DI 521)
                (const_int 8 [0x8])) [1 _380->yy_ch_buf+0 S8 A64])) lex.yy.c:1364 -1
     (nil))
(insn 1249 1248 1250 175 (parallel [
            (set (reg:DI 523)
                (plus:DI (reg/f:DI 522)
                    (reg/v:DI 212 [ n ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 -1
     (nil))
(insn 1250 1249 1251 175 (parallel [
            (set (reg/f:DI 524)
                (plus:DI (reg:DI 523)
                    (reg/v:DI 224 [ number_to_move ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 -1
     (nil))
(insn 1251 1250 1252 175 (set (mem:QI (reg/f:DI 524) [0 *_383+0 S1 A8])
        (subreg:QI (reg/v:SI 251 [ c ]) 0)) lex.yy.c:1364 -1
     (nil))
(insn 1252 1251 1253 175 (parallel [
            (set (reg/v:DI 212 [ n ])
                (plus:DI (reg/v:DI 212 [ n ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 -1
     (nil))
(debug_insn 1253 1252 1254 175 (var_location:DI n (reg/v:DI 212 [ n ])) lex.yy.c:1364 -1
     (nil))
(debug_insn 1254 1253 1255 175 (var_location:DI n (reg/v:DI 212 [ n ])) -1
     (nil))
(debug_insn 1255 1254 1257 175 (var_location:SI c (reg/v:SI 251 [ c ])) -1
     (nil))
(insn 1257 1255 1258 175 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 212 [ n ])
            (reg/v:DI 309 [ num_to_read ]))) lex.yy.c:1364 -1
     (nil))
(jump_insn 1258 1257 1259 175 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1256)
            (pc))) lex.yy.c:1364 -1
     (int_list:REG_BR_PROB 8800 (nil))
 -> 1256)
;;  succ:       140 [88.0%]  (DFS_BACK)
;;              176 [12.0%]  (FALLTHRU)

;; basic block 176, loop depth 5, count 0, freq 0, maybe hot
;;  prev block 175, next block 177, flags: (NEW, REACHABLE, RTL)
;;  pred:       175 [12.0%]  (FALLTHRU)
(note 1259 1258 1261 176 [bb 176] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1261 1259 1262 176 (set (pc)
        (label_ref 1260)) lex.yy.c:1364 -1
     (nil)
 -> 1260)
;;  succ:       144 [100.0%] 

(barrier 1262 1261 1263)
;; basic block 177, loop depth 5, count 0, freq 6, maybe hot
;;  prev block 176, next block 178, flags: (NEW, REACHABLE, RTL)
;;  pred:       148 [100.0%] 
;;              146 [71.0%] 
(code_label 1263 1262 1264 177 223 "" [2 uses])
(note 1264 1263 1265 177 [bb 177] NOTE_INSN_BASIC_BLOCK)
(insn 1265 1264 1266 177 (set (reg:DI 526)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) -1
     (nil))
(insn 1266 1265 1267 177 (parallel [
            (set (reg:DI 525 [ D.6781 ])
                (ashift:DI (reg:DI 526)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 1267 1266 1268 177 (set (reg/f:DI 527)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) -1
     (nil))
(insn 1268 1267 1269 177 (parallel [
            (set (reg/f:DI 347 [ D.6780 ])
                (plus:DI (reg:DI 525 [ D.6781 ])
                    (reg/f:DI 527)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
            (reg:DI 525 [ D.6781 ]))
        (nil)))
(jump_insn 1269 1268 1270 177 (set (pc)
        (label_ref 1046)) -1
     (nil)
 -> 1046)
;;  succ:       150 [100.0%] 

(barrier 1270 1269 1271)
;; basic block 178, loop depth 6, count 0, freq 7, maybe hot
;;  prev block 177, next block 179, flags: (NEW, REACHABLE, RTL)
;;  pred:       147 [50.0%] 
(code_label 1271 1270 1272 178 224 "" [1 uses])
(note 1272 1271 1274 178 [bb 178] NOTE_INSN_BASIC_BLOCK)
(insn 1274 1272 1275 178 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/f:DI 270 [ D.6794 ]) [2 *_402+0 S4 A32])
            (const_int 4 [0x4]))) lex.yy.c:1364 -1
     (nil))
(jump_insn 1275 1274 1279 178 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1273)
            (pc))) lex.yy.c:1364 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 1273)
;;  succ:       143 [0.0%] 
;;              179 [100.0%]  (FALLTHRU)

;; basic block 179, loop depth 6, count 0, freq 7, maybe hot
;;  prev block 178, next block 180, flags: (NEW, REACHABLE, RTL)
;;  pred:       178 [100.0%]  (FALLTHRU)
(note 1279 1275 1277 179 [bb 179] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1277 1279 1278 179 (set (pc)
        (label_ref 1276)) lex.yy.c:1364 -1
     (nil)
 -> 1276)
;;  succ:       149 [100.0%] 

(barrier 1278 1277 1280)
;; basic block 180, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 179, next block 181, flags: (NEW, REACHABLE, RTL)
;;  pred:       142 [100.0%] 
(code_label 1280 1278 1281 180 221 "" [1 uses])
(note 1281 1280 1282 180 [bb 180] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1282 1281 1283 180 (var_location:SI c (const_int 10 [0xa])) -1
     (nil))
(debug_insn 1283 1282 1284 180 (var_location:SI c (const_int 10 [0xa])) -1
     (nil))
(debug_insn 1284 1283 1285 180 (var_location:SI c (const_int 10 [0xa])) -1
     (nil))
(insn 1285 1284 1286 180 (set (reg:DI 529)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1364 -1
     (nil))
(insn 1286 1285 1287 180 (parallel [
            (set (reg:DI 528 [ D.6781 ])
                (ashift:DI (reg:DI 529)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 1287 1286 1288 180 (set (reg/f:DI 530)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1364 -1
     (nil))
(insn 1288 1287 1289 180 (parallel [
            (set (reg/f:DI 347 [ D.6780 ])
                (plus:DI (reg:DI 528 [ D.6781 ])
                    (reg/f:DI 530)))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
            (reg:DI 528 [ D.6781 ]))
        (nil)))
(insn 1289 1288 1290 180 (parallel [
            (set (reg/v:DI 264 [ n ])
                (plus:DI (reg/v:DI 212 [ n ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 -1
     (nil))
(debug_insn 1290 1289 1291 180 (var_location:DI n (reg/v:DI 264 [ n ])) lex.yy.c:1364 -1
     (nil))
(insn 1291 1290 1292 180 (set (reg/f:DI 531)
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_390+0 S8 A64])) lex.yy.c:1364 -1
     (nil))
(insn 1292 1291 1293 180 (set (reg/f:DI 532)
        (mem/f:DI (plus:DI (reg/f:DI 531)
                (const_int 8 [0x8])) [1 _391->yy_ch_buf+0 S8 A64])) lex.yy.c:1364 -1
     (nil))
(insn 1293 1292 1294 180 (parallel [
            (set (reg:DI 533)
                (plus:DI (reg/f:DI 532)
                    (reg/v:DI 212 [ n ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 -1
     (nil))
(insn 1294 1293 1295 180 (parallel [
            (set (reg/f:DI 534)
                (plus:DI (reg:DI 533)
                    (reg/v:DI 224 [ number_to_move ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 -1
     (nil))
(insn 1295 1294 1296 180 (set (mem:QI (reg/f:DI 534) [0 *_395+0 S1 A8])
        (const_int 10 [0xa])) lex.yy.c:1364 -1
     (nil))
(debug_insn 1296 1295 28 180 (var_location:DI n (reg/v:DI 264 [ n ])) -1
     (nil))
(insn 28 1296 1297 180 (set (reg/v:DI 212 [ n ])
        (reg/v:DI 264 [ n ])) lex.yy.c:1364 -1
     (nil))
(jump_insn 1297 28 1298 180 (set (pc)
        (label_ref 1260)) lex.yy.c:1364 -1
     (nil)
 -> 1260)
;;  succ:       144 [100.0%] 

(barrier 1298 1297 1299)
;; basic block 181, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 180, next block 182, flags: (NEW, REACHABLE, RTL)
;;  pred:       140 [28.0%] 
(code_label 1299 1298 1300 181 219 "" [1 uses])
(note 1300 1299 1301 181 [bb 181] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1301 1300 1302 181 (var_location:SI c (const_int -1 [0xffffffffffffffff])) -1
     (nil))
(debug_insn 1302 1301 1303 181 (var_location:SI c (const_int -1 [0xffffffffffffffff])) -1
     (nil))
(debug_insn 1303 1302 1304 181 (var_location:SI c (const_int -1 [0xffffffffffffffff])) -1
     (nil))
(debug_insn 1304 1303 1305 181 (var_location:DI n (reg/v:DI 212 [ n ])) -1
     (nil))
(insn 1305 1304 1306 181 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1364 -1
     (nil))
(call_insn 1306 1305 1307 181 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f88bbf956c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) lex.yy.c:1364 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f88bbf956c0 ferror>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1307 1306 1308 181 (set (reg:SI 268 [ D.6777 ])
        (reg:SI 0 ax)) lex.yy.c:1364 -1
     (nil))
(insn 1308 1307 1309 181 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 268 [ D.6777 ])
            (const_int 0 [0]))) lex.yy.c:1364 -1
     (nil))
(jump_insn 1309 1308 1310 181 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1273)
            (pc))) lex.yy.c:1364 -1
     (int_list:REG_BR_PROB 5000 (nil))
 -> 1273)
;;  succ:       143 [50.0%] 
;;              182 [50.0%]  (FALLTHRU)

;; basic block 182, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 181, next block 183, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       181 [50.0%]  (FALLTHRU)
(note 1310 1309 1311 182 [bb 182] NOTE_INSN_BASIC_BLOCK)
(insn 1311 1310 1312 182 (set (reg:DI 536)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) -1
     (nil))
(insn 1312 1311 1313 182 (parallel [
            (set (reg:DI 535 [ D.6781 ])
                (ashift:DI (reg:DI 536)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 1313 1312 1314 182 (set (reg/f:DI 537)
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) -1
     (nil))
(insn 1314 1313 1316 182 (parallel [
            (set (reg/f:DI 347 [ D.6780 ])
                (plus:DI (reg:DI 535 [ D.6781 ])
                    (reg/f:DI 537)))
            (clobber (reg:CC 17 flags))
        ]) -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
            (reg:DI 535 [ D.6781 ]))
        (nil)))
(jump_insn 1316 1314 1317 182 (set (pc)
        (label_ref:DI 1260)) 654 {jump}
     (nil)
 -> 1260)
;;  succ:       144 [100.0%] 

(barrier 1317 1316 1318)
;; basic block 183, loop depth 0, count 0, freq 63, maybe hot
;;  prev block 182, next block 184, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       173 [100.0%] 
(code_label 1318 1317 1326 183 115 "" [1 uses])
(note 1326 1318 1319 183 [bb 183] NOTE_INSN_BASIC_BLOCK)
(insn 1319 1326 1320 183 (set (reg/i:SI 0 ax)
        (reg:SI 348 [ <retval> ])) lex.yy.c:1265 -1
     (nil))
(insn 1320 1319 1321 183 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                                (const_int -8 [0xfffffffffffffff8])) [1 D.6797+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) lex.yy.c:1265 -1
     (nil))
(jump_insn 1321 1320 1353 183 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1324)
            (pc))) lex.yy.c:1265 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 1324)
;;  succ:       185 [100.0%] 
;;              184 [0.0%]  (FALLTHRU)

;; basic block 184, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 183, next block 185, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       183 [0.0%]  (FALLTHRU)
(note 1353 1321 1322 184 [bb 184] NOTE_INSN_BASIC_BLOCK)
(call_insn 1322 1353 1323 184 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f88bbdacaf8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) lex.yy.c:1265 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f88bbdacaf8 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      

(barrier 1323 1322 1324)
;; basic block 185, loop depth 0, count 0, freq 63, maybe hot
;;  prev block 184, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       183 [100.0%] 
(code_label 1324 1323 1354 185 237 "" [1 uses])
(note 1354 1324 1325 185 [bb 185] NOTE_INSN_BASIC_BLOCK)
(insn 1325 1354 0 185 (use (reg/i:SI 0 ax)) lex.yy.c:1265 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function yy_buffer_state* yy_scan_buffer(char*, yy_size_t) (_Z14yy_scan_bufferPcm, funcdef_no=101, decl_uid=4272, cgraph_uid=101, symbol_order=128)

yy_buffer_state* yy_scan_buffer(char*, yy_size_t) (char * base, yy_size_t size)
{
  struct yy_buffer_state * _1;
  sizetype _4;
  char * _6;
  char _8;
  sizetype _9;
  char * _10;
  char _11;
  int _18;
  void * _26;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (size_3(D) <= 1)
    goto <bb 8>;
  else
    goto <bb 3>;
;;    succ:       8
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  _4 = size_3(D) + 18446744073709551614;
  _6 = base_5(D) + _4;
  _8 = *_6;
  if (_8 != 0)
    goto <bb 8>;
  else
    goto <bb 4>;
;;    succ:       8
;;                4

;;   basic block 4, loop depth 0
;;    pred:       3
  _9 = size_3(D) + 18446744073709551615;
  _10 = base_5(D) + _9;
  _11 = *_10;
  if (_11 != 0)
    goto <bb 8>;
  else
    goto <bb 5>;
;;    succ:       8
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  # DEBUG size => 64
  _26 = malloc (64);
  # DEBUG size => NULL
  # DEBUG b => NULL
  if (_26 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  yy_fatal_error ("out of dynamic memory in yy_scan_buffer()");
;;    succ:      

;;   basic block 7, loop depth 0
;;    pred:       5
  MEM[(struct yy_buffer_state *)_26].yy_buf_size = _4;
  MEM[(struct yy_buffer_state *)_26].yy_ch_buf = base_5(D);
  MEM[(struct yy_buffer_state *)_26].yy_buf_pos = base_5(D);
  MEM[(struct yy_buffer_state *)_26].yy_is_our_buffer = 0;
  MEM[(struct yy_buffer_state *)_26].yy_input_file = 0B;
  _18 = (int) _4;
  MEM[(struct yy_buffer_state *)_26].yy_n_chars = _18;
  MEM[(struct yy_buffer_state *)_26].yy_is_interactive = 0;
  MEM[(struct yy_buffer_state *)_26].yy_at_bol = 1;
  MEM[(struct yy_buffer_state *)_26].yy_fill_buffer = 0;
  MEM[(struct yy_buffer_state *)_26].yy_buffer_status = 0;
  yy_switch_to_buffer (_26);
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       3
;;                7
;;                2
;;                4
  # _1 = PHI <0B(3), _26(7), 0B(2), 0B(4)>
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 3 (size_3(D) - 3 )
Partition 4 (_4 - 4 )
Partition 5 (base_5(D) - 5 )
Partition 6 (_6 - 6 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 18 (_18 - 18 )
Partition 26 (_26 - 26 )


Partition map 

Partition 0 (size_3(D) - 3 )
Partition 1 (base_5(D) - 5 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (size_3(D) - 3 )
Partition 1 (base_5(D) - 5 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (size_3(D) - 3 )
Partition 2 (_4 - 4 )
Partition 3 (base_5(D) - 5 )
Partition 4 (_6 - 6 )
Partition 5 (_8 - 8 )
Partition 6 (_9 - 9 )
Partition 7 (_10 - 10 )
Partition 8 (_11 - 11 )
Partition 9 (_18 - 18 )
Partition 10 (_26 - 26 )


Replacing Expressions
_6 replace with --> _6 = base_5(D) + _4;

_8 replace with --> _8 = *_6;

_9 replace with --> _9 = size_3(D) + 18446744073709551615;

_10 replace with --> _10 = base_5(D) + _9;

_11 replace with --> _11 = *_10;

_18 replace with --> _18 = (int) _4;


yy_buffer_state* yy_scan_buffer(char*, yy_size_t) (char * base, yy_size_t size)
{
  struct yy_buffer_state * _1;
  sizetype _4;
  char * _6;
  char _8;
  sizetype _9;
  char * _10;
  char _11;
  int _18;
  void * _26;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  if (size_3(D) <= 1)
    goto <bb 8>;
  else
    goto <bb 3>;
;;    succ:       8
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  _4 = size_3(D) + 18446744073709551614;
  _6 = base_5(D) + _4;
  _8 = *_6;
  if (_8 != 0)
    goto <bb 8>;
  else
    goto <bb 4>;
;;    succ:       8
;;                4

;;   basic block 4, loop depth 0
;;    pred:       3
  _9 = size_3(D) + 18446744073709551615;
  _10 = base_5(D) + _9;
  _11 = *_10;
  if (_11 != 0)
    goto <bb 8>;
  else
    goto <bb 5>;
;;    succ:       8
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  # DEBUG size => 64
  _26 = malloc (64);
  # DEBUG size => NULL
  # DEBUG b => NULL
  if (_26 == 0B)
    goto <bb 6>;
  else
    goto <bb 7>;
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  yy_fatal_error ("out of dynamic memory in yy_scan_buffer()");
;;    succ:      

;;   basic block 7, loop depth 0
;;    pred:       5
  MEM[(struct yy_buffer_state *)_26].yy_buf_size = _4;
  MEM[(struct yy_buffer_state *)_26].yy_ch_buf = base_5(D);
  MEM[(struct yy_buffer_state *)_26].yy_buf_pos = base_5(D);
  MEM[(struct yy_buffer_state *)_26].yy_is_our_buffer = 0;
  MEM[(struct yy_buffer_state *)_26].yy_input_file = 0B;
  _18 = (int) _4;
  MEM[(struct yy_buffer_state *)_26].yy_n_chars = _18;
  MEM[(struct yy_buffer_state *)_26].yy_is_interactive = 0;
  MEM[(struct yy_buffer_state *)_26].yy_at_bol = 1;
  MEM[(struct yy_buffer_state *)_26].yy_fill_buffer = 0;
  MEM[(struct yy_buffer_state *)_26].yy_buffer_status = 0;
  yy_switch_to_buffer (_26);
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       3
;;                7
;;                2
;;                4
  # _1 = PHI <0B(3), _26(7), 0B(2), 0B(4)>
  return _1;
;;    succ:       EXIT

}


Inserting a value copy on edge BB3->BB8 : PART.0 = 0B
Inserting a partition copy on edge BB7->BB8 :PART.0 = PART.10
Inserting a value copy on edge BB2->BB8 : PART.0 = 0B
Inserting a value copy on edge BB4->BB8 : PART.0 = 0B

;; Generating RTL for gimple basic block 2

;; if (size_3(D) <= 1)

(insn 11 10 12 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 98 [ size ])
            (const_int 1 [0x1]))) lex.yy.c:1860 -1
     (nil))

(jump_insn 12 11 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1860 -1
     (int_list:REG_BR_PROB 395 (nil)))

;; Generating RTL for gimple basic block 3

;; _4 = size_3(D) + 18446744073709551614;

(insn 14 13 0 (parallel [
            (set (reg:DI 88 [ D.6819 ])
                (plus:DI (reg/v:DI 98 [ size ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1861 -1
     (nil))

;; if (_8 != 0)

(insn 15 14 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 97 [ base ])
                    (reg:DI 88 [ D.6819 ])) [0 *_6+0 S1 A8])
            (const_int 0 [0]))) lex.yy.c:1860 -1
     (nil))

(jump_insn 16 15 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1860 -1
     (int_list:REG_BR_PROB 1000 (nil)))

;; Generating RTL for gimple basic block 4

;; if (_11 != 0)

(insn 18 17 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (plus:DI (reg/v/f:DI 97 [ base ])
                        (reg/v:DI 98 [ size ]))
                    (const_int -1 [0xffffffffffffffff])) [0 *_10+0 S1 A8])
            (const_int 0 [0]))) lex.yy.c:1861 -1
     (nil))

(jump_insn 19 18 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1861 -1
     (int_list:REG_BR_PROB 2139 (nil)))

;; Generating RTL for gimple basic block 5

;; # DEBUG size => 64

(debug_insn 21 20 0 (var_location:DI size (const_int 0 [0])) -1
     (nil))
;; _26 = malloc (64);

(insn 22 21 23 (set (reg:DI 5 di)
        (const_int 64 [0x40])) lex.yy.c:2123 -1
     (nil))

(call_insn 23 22 24 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 24 23 25 (set (reg/f:DI 99)
        (reg:DI 0 ax)) lex.yy.c:2123 -1
     (expr_list:REG_NOALIAS (reg/f:DI 99)
        (nil)))

(insn 25 24 0 (set (reg/f:DI 95 [ D.6823 ])
        (reg/f:DI 99)) lex.yy.c:2123 -1
     (nil))

;; # DEBUG size => NULL

(debug_insn 26 25 0 (var_location:DI size (const_int 0 [0])) lex.yy.c:1866 -1
     (nil))
;; # DEBUG b => NULL

(debug_insn 27 26 0 (var_location:DI b (const_int 0 [0])) lex.yy.c:1866 -1
     (nil))
;; if (_26 == 0B)

(insn 28 27 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 95 [ D.6823 ])
            (const_int 0 [0]))) lex.yy.c:1867 -1
     (nil))

(jump_insn 29 28 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1867 -1
     (int_list:REG_BR_PROB 9996 (nil)))

;; Generating RTL for gimple basic block 6

;; yy_fatal_error ("out of dynamic memory in yy_scan_buffer()");

(insn 31 30 32 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f88bbca4bd0 *.LC27>)) lex.yy.c:1868 -1
     (nil))

(call_insn 32 31 33 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1868 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 33 32 0)

;; Generating RTL for gimple basic block 7

;; 

(code_label 34 33 35 319 "" [0 uses])

(note 35 34 0 NOTE_INSN_BASIC_BLOCK)

;; MEM[(struct yy_buffer_state *)_26].yy_buf_size = _4;

(insn 36 35 0 (set (mem:DI (plus:DI (reg/f:DI 95 [ D.6823 ])
                (const_int 24 [0x18])) [4 MEM[(struct yy_buffer_state *)_26].yy_buf_size+0 S8 A64])
        (reg:DI 88 [ D.6819 ])) lex.yy.c:1870 -1
     (nil))

;; MEM[(struct yy_buffer_state *)_26].yy_ch_buf = base_5(D);

(insn 37 36 0 (set (mem/f:DI (plus:DI (reg/f:DI 95 [ D.6823 ])
                (const_int 8 [0x8])) [1 MEM[(struct yy_buffer_state *)_26].yy_ch_buf+0 S8 A64])
        (reg/v/f:DI 97 [ base ])) lex.yy.c:1871 -1
     (nil))

;; MEM[(struct yy_buffer_state *)_26].yy_buf_pos = base_5(D);

(insn 38 37 0 (set (mem/f:DI (plus:DI (reg/f:DI 95 [ D.6823 ])
                (const_int 16 [0x10])) [1 MEM[(struct yy_buffer_state *)_26].yy_buf_pos+0 S8 A64])
        (reg/v/f:DI 97 [ base ])) lex.yy.c:1871 -1
     (nil))

;; MEM[(struct yy_buffer_state *)_26].yy_is_our_buffer = 0;

(insn 39 38 0 (set (mem:SI (plus:DI (reg/f:DI 95 [ D.6823 ])
                (const_int 36 [0x24])) [2 MEM[(struct yy_buffer_state *)_26].yy_is_our_buffer+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1872 -1
     (nil))

;; MEM[(struct yy_buffer_state *)_26].yy_input_file = 0B;

(insn 40 39 0 (set (mem/f:DI (reg/f:DI 95 [ D.6823 ]) [1 MEM[(struct yy_buffer_state *)_26].yy_input_file+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:1873 -1
     (nil))

;; MEM[(struct yy_buffer_state *)_26].yy_n_chars = _18;

(insn 41 40 0 (set (mem:SI (plus:DI (reg/f:DI 95 [ D.6823 ])
                (const_int 32 [0x20])) [2 MEM[(struct yy_buffer_state *)_26].yy_n_chars+0 S4 A64])
        (subreg:SI (reg:DI 88 [ D.6819 ]) 0)) lex.yy.c:1874 -1
     (nil))

;; MEM[(struct yy_buffer_state *)_26].yy_is_interactive = 0;

(insn 42 41 0 (set (mem:SI (plus:DI (reg/f:DI 95 [ D.6823 ])
                (const_int 40 [0x28])) [2 MEM[(struct yy_buffer_state *)_26].yy_is_interactive+0 S4 A64])
        (const_int 0 [0])) lex.yy.c:1875 -1
     (nil))

;; MEM[(struct yy_buffer_state *)_26].yy_at_bol = 1;

(insn 43 42 0 (set (mem:SI (plus:DI (reg/f:DI 95 [ D.6823 ])
                (const_int 44 [0x2c])) [2 MEM[(struct yy_buffer_state *)_26].yy_at_bol+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:1876 -1
     (nil))

;; MEM[(struct yy_buffer_state *)_26].yy_fill_buffer = 0;

(insn 44 43 0 (set (mem:SI (plus:DI (reg/f:DI 95 [ D.6823 ])
                (const_int 56 [0x38])) [2 MEM[(struct yy_buffer_state *)_26].yy_fill_buffer+0 S4 A64])
        (const_int 0 [0])) lex.yy.c:1877 -1
     (nil))

;; MEM[(struct yy_buffer_state *)_26].yy_buffer_status = 0;

(insn 45 44 0 (set (mem:SI (plus:DI (reg/f:DI 95 [ D.6823 ])
                (const_int 60 [0x3c])) [2 MEM[(struct yy_buffer_state *)_26].yy_buffer_status+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1878 -1
     (nil))

;; yy_switch_to_buffer (_26);

(insn 46 45 47 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.6823 ])) lex.yy.c:1880 -1
     (nil))

(call_insn 47 46 0 (call (mem:QI (symbol_ref:DI ("_Z19yy_switch_to_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c288 yy_switch_to_buffer>) [0 yy_switch_to_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:1880 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z19yy_switch_to_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c288 yy_switch_to_buffer>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 8

;; 

(code_label 48 47 49 318 "" [0 uses])

(note 49 48 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 50 49 51 (set (reg:DI 96 [ <retval> ])
        (reg/f:DI 87 [ D.6818 ])) -1
     (nil))

(jump_insn 51 50 52 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 52 51 0)
Edge 2->8 redirected to 11
Edge 3->8 redirected to 12
Edge 4->8 redirected to 13


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 51.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 97 [ base ])
        (reg:DI 5 di [ base ])) lex.yy.c:1857 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:DI 98 [ size ])
        (reg:DI 4 si [ size ])) lex.yy.c:1857 -1
     (nil))
(note 4 3 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 4 12 2 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 98 [ size ])
            (const_int 1 [0x1]))) lex.yy.c:1860 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 60)
            (pc))) lex.yy.c:1860 612 {*jcc_1}
     (int_list:REG_BR_PROB 395 (nil))
 -> 60)
;;  succ:       9 [4.0%] 
;;              4 [96.0%]  (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 9605, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [96.0%]  (FALLTHRU)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (parallel [
            (set (reg:DI 88 [ D.6819 ])
                (plus:DI (reg/v:DI 98 [ size ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1861 -1
     (nil))
(insn 15 14 16 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (reg/v/f:DI 97 [ base ])
                    (reg:DI 88 [ D.6819 ])) [0 *_6+0 S1 A8])
            (const_int 0 [0]))) lex.yy.c:1860 -1
     (nil))
(jump_insn 16 15 17 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 64)
            (pc))) lex.yy.c:1860 612 {*jcc_1}
     (int_list:REG_BR_PROB 1000 (nil))
 -> 64)
;;  succ:       10 [10.0%] 
;;              5 [90.0%]  (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 8644, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [90.0%]  (FALLTHRU)
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (plus:DI (reg/v/f:DI 97 [ base ])
                        (reg/v:DI 98 [ size ]))
                    (const_int -1 [0xffffffffffffffff])) [0 *_10+0 S1 A8])
            (const_int 0 [0]))) lex.yy.c:1861 -1
     (nil))
(jump_insn 19 18 20 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 68)
            (pc))) lex.yy.c:1861 612 {*jcc_1}
     (int_list:REG_BR_PROB 2139 (nil))
 -> 68)
;;  succ:       11 [21.4%] 
;;              6 [78.6%]  (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 6795, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [78.6%]  (FALLTHRU)
(note 20 19 21 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 21 20 22 6 (var_location:DI size (const_int 64 [0x40])) -1
     (nil))
(insn 22 21 23 6 (set (reg:DI 5 di)
        (const_int 64 [0x40])) lex.yy.c:2123 -1
     (nil))
(call_insn 23 22 24 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 24 23 25 6 (set (reg/f:DI 99)
        (reg:DI 0 ax)) lex.yy.c:2123 -1
     (expr_list:REG_NOALIAS (reg/f:DI 99)
        (nil)))
(insn 25 24 26 6 (set (reg/f:DI 95 [ D.6823 ])
        (reg/f:DI 99)) lex.yy.c:2123 -1
     (nil))
(debug_insn 26 25 27 6 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1866 -1
     (nil))
(debug_insn 27 26 28 6 (var_location:DI b (clobber (const_int 0 [0]))) lex.yy.c:1866 -1
     (nil))
(insn 28 27 29 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 95 [ D.6823 ])
            (const_int 0 [0]))) lex.yy.c:1867 -1
     (nil))
(jump_insn 29 28 30 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) lex.yy.c:1867 -1
     (int_list:REG_BR_PROB 9996 (nil))
 -> 34)
;;  succ:       7 [0.0%]  (FALLTHRU)
;;              8 [100.0%] 

;; basic block 7, loop depth 0, count 0, freq 3
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [0.0%]  (FALLTHRU)
(note 30 29 31 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f88bbca4bd0 *.LC27>)) lex.yy.c:1868 -1
     (nil))
(call_insn 32 31 33 7 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1868 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 33 32 34)
;; basic block 8, loop depth 0, count 0, freq 6793, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [100.0%] 
(code_label 34 33 35 8 319 "" [1 uses])
(note 35 34 36 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 8 (set (mem:DI (plus:DI (reg/f:DI 95 [ D.6823 ])
                (const_int 24 [0x18])) [4 MEM[(struct yy_buffer_state *)_26].yy_buf_size+0 S8 A64])
        (reg:DI 88 [ D.6819 ])) lex.yy.c:1870 -1
     (nil))
(insn 37 36 38 8 (set (mem/f:DI (plus:DI (reg/f:DI 95 [ D.6823 ])
                (const_int 8 [0x8])) [1 MEM[(struct yy_buffer_state *)_26].yy_ch_buf+0 S8 A64])
        (reg/v/f:DI 97 [ base ])) lex.yy.c:1871 -1
     (nil))
(insn 38 37 39 8 (set (mem/f:DI (plus:DI (reg/f:DI 95 [ D.6823 ])
                (const_int 16 [0x10])) [1 MEM[(struct yy_buffer_state *)_26].yy_buf_pos+0 S8 A64])
        (reg/v/f:DI 97 [ base ])) lex.yy.c:1871 -1
     (nil))
(insn 39 38 40 8 (set (mem:SI (plus:DI (reg/f:DI 95 [ D.6823 ])
                (const_int 36 [0x24])) [2 MEM[(struct yy_buffer_state *)_26].yy_is_our_buffer+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1872 -1
     (nil))
(insn 40 39 41 8 (set (mem/f:DI (reg/f:DI 95 [ D.6823 ]) [1 MEM[(struct yy_buffer_state *)_26].yy_input_file+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:1873 -1
     (nil))
(insn 41 40 42 8 (set (mem:SI (plus:DI (reg/f:DI 95 [ D.6823 ])
                (const_int 32 [0x20])) [2 MEM[(struct yy_buffer_state *)_26].yy_n_chars+0 S4 A64])
        (subreg:SI (reg:DI 88 [ D.6819 ]) 0)) lex.yy.c:1874 -1
     (nil))
(insn 42 41 43 8 (set (mem:SI (plus:DI (reg/f:DI 95 [ D.6823 ])
                (const_int 40 [0x28])) [2 MEM[(struct yy_buffer_state *)_26].yy_is_interactive+0 S4 A64])
        (const_int 0 [0])) lex.yy.c:1875 -1
     (nil))
(insn 43 42 44 8 (set (mem:SI (plus:DI (reg/f:DI 95 [ D.6823 ])
                (const_int 44 [0x2c])) [2 MEM[(struct yy_buffer_state *)_26].yy_at_bol+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:1876 -1
     (nil))
(insn 44 43 45 8 (set (mem:SI (plus:DI (reg/f:DI 95 [ D.6823 ])
                (const_int 56 [0x38])) [2 MEM[(struct yy_buffer_state *)_26].yy_fill_buffer+0 S4 A64])
        (const_int 0 [0])) lex.yy.c:1877 -1
     (nil))
(insn 45 44 46 8 (set (mem:SI (plus:DI (reg/f:DI 95 [ D.6823 ])
                (const_int 60 [0x3c])) [2 MEM[(struct yy_buffer_state *)_26].yy_buffer_status+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1878 -1
     (nil))
(insn 46 45 47 8 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.6823 ])) lex.yy.c:1880 -1
     (nil))
(call_insn 47 46 6 8 (call (mem:QI (symbol_ref:DI ("_Z19yy_switch_to_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c288 yy_switch_to_buffer>) [0 yy_switch_to_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:1880 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z19yy_switch_to_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c288 yy_switch_to_buffer>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 6 47 57 8 (set (reg/f:DI 87 [ D.6818 ])
        (reg/f:DI 95 [ D.6823 ])) lex.yy.c:1882 -1
     (nil))
(jump_insn 57 6 58 8 (set (pc)
        (label_ref 48)) lex.yy.c:1882 -1
     (nil)
 -> 48)
;;  succ:       12 [100.0%] 

(barrier 58 57 60)
;; basic block 9, loop depth 0, count 0, freq 395, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 [4.0%] 
(code_label 60 58 59 9 320 "" [1 uses])
(note 59 60 7 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 7 59 61 9 (set (reg/f:DI 87 [ D.6818 ])
        (const_int 0 [0])) lex.yy.c:1864 -1
     (nil))
(jump_insn 61 7 62 9 (set (pc)
        (label_ref 48)) -1
     (nil)
 -> 48)
;;  succ:       12 [100.0%] 

(barrier 62 61 64)
;; basic block 10, loop depth 0, count 0, freq 961, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [10.0%] 
(code_label 64 62 63 10 321 "" [1 uses])
(note 63 64 5 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 5 63 65 10 (set (reg/f:DI 87 [ D.6818 ])
        (const_int 0 [0])) lex.yy.c:1864 -1
     (nil))
(jump_insn 65 5 66 10 (set (pc)
        (label_ref 48)) -1
     (nil)
 -> 48)
;;  succ:       12 [100.0%] 

(barrier 66 65 68)
;; basic block 11, loop depth 0, count 0, freq 1849, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 [21.4%] 
(code_label 68 66 67 11 322 "" [1 uses])
(note 67 68 8 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 8 67 48 11 (set (reg/f:DI 87 [ D.6818 ])
        (const_int 0 [0])) lex.yy.c:1864 -1
     (nil))
;;  succ:       12 [100.0%]  (FALLTHRU)

;; basic block 12, loop depth 0, count 0, freq 9997, maybe hot
;;  prev block 11, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [100.0%] 
;;              11 [100.0%]  (FALLTHRU)
;;              8 [100.0%] 
;;              10 [100.0%] 
(code_label 48 8 49 12 318 "" [3 uses])
(note 49 48 50 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 54 12 (set (reg:DI 96 [ <retval> ])
        (reg/f:DI 87 [ D.6818 ])) -1
     (nil))
(insn 54 50 55 12 (set (reg/i:DI 0 ax)
        (reg:DI 96 [ <retval> ])) lex.yy.c:1883 -1
     (nil))
(insn 55 54 0 12 (use (reg/i:DI 0 ax)) lex.yy.c:1883 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function yy_buffer_state* yy_scan_bytes(const char*, yy_size_t) (_Z13yy_scan_bytesPKcm, funcdef_no=103, decl_uid=4277, cgraph_uid=103, symbol_order=130)

yy_buffer_state* yy_scan_bytes(const char*, yy_size_t) (const char * yybytes, yy_size_t _yybytes_len)
{
  yy_size_t i;
  yy_size_t n;
  struct yy_buffer_state * b;
  char _11;
  char * _14;
  sizetype _15;
  char * _16;
  void * _24;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  n_4 = _yybytes_len_3(D) + 2;
  # DEBUG n => n_4
  # DEBUG size => n_4
  _24 = malloc (n_4);
  # DEBUG size => NULL
  # DEBUG buf => NULL
  if (_24 == 0B)
    goto <bb 5>;
  else
    goto <bb 3>;
;;    succ:       5
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  # DEBUG i => 0
  if (_yybytes_len_3(D) == 0)
    goto <bb 4>;
  else
    goto <bb 6>;
;;    succ:       4
;;                6

;;   basic block 4, loop depth 0
;;    pred:       3
;;                7
  _14 = _24 + _yybytes_len_3(D);
  _15 = _yybytes_len_3(D) + 1;
  _16 = _24 + _15;
  *_16 = 0;
  *_14 = 0;
  b_20 = yy_scan_buffer (_24, n_4);
  # DEBUG b => b_20
  if (b_20 == 0B)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8
;;                9

;;   basic block 5, loop depth 0
;;    pred:       2
  yy_fatal_error ("out of dynamic memory in yy_scan_bytes()");
;;    succ:      

;;   basic block 6, loop depth 0
;;    pred:       3
  # i_29 = PHI <0(3)>
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       6
;;                7
  # i_27 = PHI <i_29(6), i_13(7)>
  # DEBUG i => i_27
  _11 = MEM[base: yybytes_9(D), index: i_27, offset: 0B];
  MEM[base: _24, index: i_27, offset: 0B] = _11;
  i_13 = i_27 + 1;
  # DEBUG i => i_13
  # DEBUG i => i_13
  if (_yybytes_len_3(D) == i_13)
    goto <bb 4>;
  else
    goto <bb 7>;
;;    succ:       4
;;                7

;;   basic block 8, loop depth 0
;;    pred:       4
  yy_fatal_error ("bad buffer in yy_scan_bytes()");
;;    succ:      

;;   basic block 9, loop depth 0
;;    pred:       4
  b_20->yy_is_our_buffer = 1;
  return b_20;
;;    succ:       EXIT

}



Partition map 

Partition 3 (_yybytes_len_3(D) - 3 )
Partition 4 (n_4 - 4 )
Partition 9 (yybytes_9(D) - 9 )
Partition 11 (_11 - 11 )
Partition 13 (i_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 20 (b_20 - 20 )
Partition 24 (_24 - 24 )
Partition 27 (i_27 - 27 )
Partition 29 (i_29 - 29 )


Partition map 

Partition 0 (_yybytes_len_3(D) - 3 )
Partition 1 (yybytes_9(D) - 9 )
Partition 2 (i_13 - 13 )
Partition 3 (i_27 - 27 )
Partition 4 (i_29 - 29 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(16562) i_13 <-> i_27
(819) i_27 <-> i_29

Partition map 

Partition 0 (_yybytes_len_3(D) - 3 )
Partition 1 (yybytes_9(D) - 9 )
Partition 2 (i_13 - 13 )
Partition 3 (i_27 - 27 )
Partition 4 (i_29 - 29 )

Coalesce list: (13)i_13 & (27)i_27 [map: 2, 3] : Success -> 2
Coalesce list: (27)i_13 & (29)i_29 [map: 2, 4] : Success -> 2
After Coalescing:

Partition map 

Partition 0 (_yybytes_len_3(D) - 3 )
Partition 1 (n_4 - 4 )
Partition 2 (yybytes_9(D) - 9 )
Partition 3 (_11 - 11 )
Partition 4 (i_13 - 13 27 29 )
Partition 5 (_14 - 14 )
Partition 6 (_15 - 15 )
Partition 7 (_16 - 16 )
Partition 8 (b_20 - 20 )
Partition 9 (_24 - 24 )


Replacing Expressions
_11 replace with --> _11 = MEM[base: yybytes_9(D), index: i_27, offset: 0B];

_14 replace with --> _14 = _24 + _yybytes_len_3(D);

_15 replace with --> _15 = _yybytes_len_3(D) + 1;

_16 replace with --> _16 = _24 + _15;


yy_buffer_state* yy_scan_bytes(const char*, yy_size_t) (const char * yybytes, yy_size_t _yybytes_len)
{
  yy_size_t i;
  yy_size_t n;
  struct yy_buffer_state * b;
  char _11;
  char * _14;
  sizetype _15;
  char * _16;
  void * _24;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  n_4 = _yybytes_len_3(D) + 2;
  # DEBUG n => n_4
  # DEBUG size => n_4
  _24 = malloc (n_4);
  # DEBUG size => NULL
  # DEBUG buf => NULL
  if (_24 == 0B)
    goto <bb 5>;
  else
    goto <bb 3>;
;;    succ:       5
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  # DEBUG i => 0
  if (_yybytes_len_3(D) == 0)
    goto <bb 4>;
  else
    goto <bb 6>;
;;    succ:       4
;;                6

;;   basic block 4, loop depth 0
;;    pred:       3
;;                7
  _14 = _24 + _yybytes_len_3(D);
  _15 = _yybytes_len_3(D) + 1;
  _16 = _24 + _15;
  *_16 = 0;
  *_14 = 0;
  b_20 = yy_scan_buffer (_24, n_4);
  # DEBUG b => b_20
  if (b_20 == 0B)
    goto <bb 8>;
  else
    goto <bb 9>;
;;    succ:       8
;;                9

;;   basic block 5, loop depth 0
;;    pred:       2
  yy_fatal_error ("out of dynamic memory in yy_scan_bytes()");
;;    succ:      

;;   basic block 6, loop depth 0
;;    pred:       3
  # i_29 = PHI <0(3)>
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       6
;;                7
  # i_27 = PHI <i_29(6), i_13(7)>
  # DEBUG i => i_27
  _11 = MEM[base: yybytes_9(D), index: i_27, offset: 0B];
  MEM[base: _24, index: i_27, offset: 0B] = _11;
  i_13 = i_27 + 1;
  # DEBUG i => i_13
  # DEBUG i => i_13
  if (_yybytes_len_3(D) == i_13)
    goto <bb 4>;
  else
    goto <bb 7>;
;;    succ:       4
;;                7

;;   basic block 8, loop depth 0
;;    pred:       4
  yy_fatal_error ("bad buffer in yy_scan_bytes()");
;;    succ:      

;;   basic block 9, loop depth 0
;;    pred:       4
  b_20->yy_is_our_buffer = 1;
  return b_20;
;;    succ:       EXIT

}


Inserting a value copy on edge BB3->BB6 : PART.4 = 0

;; Generating RTL for gimple basic block 2

;; n_4 = _yybytes_len_3(D) + 2;

(insn 8 7 0 (parallel [
            (set (reg/v:DI 87 [ n ])
                (plus:DI (reg/v:DI 97 [ _yybytes_len ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1914 -1
     (nil))

;; # DEBUG n => n_4

(debug_insn 9 8 0 (var_location:DI n (const_int 0 [0])) lex.yy.c:1914 -1
     (nil))
;; # DEBUG size => n_4

(debug_insn 10 9 0 (var_location:DI size (const_int 0 [0])) lex.yy.c:1914 -1
     (nil))
;; _24 = malloc (n_4);

(insn 11 10 12 (set (reg:DI 5 di)
        (reg/v:DI 87 [ n ])) lex.yy.c:2123 -1
     (nil))

(call_insn 12 11 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 13 12 14 (set (reg/f:DI 98)
        (reg:DI 0 ax)) lex.yy.c:2123 -1
     (expr_list:REG_NOALIAS (reg/f:DI 98)
        (nil)))

(insn 14 13 0 (set (reg/f:DI 94 [ D.6837 ])
        (reg/f:DI 98)) lex.yy.c:2123 -1
     (nil))

;; # DEBUG size => NULL

(debug_insn 15 14 0 (var_location:DI size (const_int 0 [0])) lex.yy.c:1915 -1
     (nil))
;; # DEBUG buf => NULL

(debug_insn 16 15 0 (var_location:DI buf (const_int 0 [0])) lex.yy.c:1915 -1
     (nil))
;; if (_24 == 0B)

(insn 17 16 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ D.6837 ])
            (const_int 0 [0]))) lex.yy.c:1916 -1
     (nil))

(jump_insn 18 17 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1916 -1
     (int_list:REG_BR_PROB 4 (nil)))

;; Generating RTL for gimple basic block 3

;; # DEBUG i => 0

(debug_insn 20 19 0 (var_location:DI i (const_int 0 [0])) -1
     (nil))
;; if (_yybytes_len_3(D) == 0)

(insn 21 20 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 97 [ _yybytes_len ])
            (const_int 0 [0]))) lex.yy.c:1919 -1
     (nil))

(jump_insn 22 21 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1919 -1
     (int_list:REG_BR_PROB 9100 (nil)))

;; Generating RTL for gimple basic block 4

;; *_16 = 0;

(insn 24 23 0 (set (mem:QI (plus:DI (plus:DI (reg/f:DI 94 [ D.6837 ])
                    (reg/v:DI 97 [ _yybytes_len ]))
                (const_int 1 [0x1])) [0 *_16+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1922 -1
     (nil))

;; *_14 = 0;

(insn 25 24 0 (set (mem:QI (plus:DI (reg/f:DI 94 [ D.6837 ])
                (reg/v:DI 97 [ _yybytes_len ])) [0 *_14+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1922 -1
     (nil))

;; b_20 = yy_scan_buffer (_24, n_4);

(insn 26 25 27 (set (reg:DI 4 si)
        (reg/v:DI 87 [ n ])) lex.yy.c:1924 -1
     (nil))

(insn 27 26 28 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.6837 ])) lex.yy.c:1924 -1
     (nil))

(call_insn 28 27 29 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z14yy_scan_bufferPcm") [flags 0x3]  <function_decl 0x7f88bc07ca20 yy_scan_buffer>) [0 yy_scan_buffer S1 A8])
            (const_int 0 [0]))) lex.yy.c:1924 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z14yy_scan_bufferPcm") [flags 0x3]  <function_decl 0x7f88bc07ca20 yy_scan_buffer>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 29 28 0 (set (reg/v/f:DI 93 [ b ])
        (reg:DI 0 ax)) lex.yy.c:1924 -1
     (nil))

;; # DEBUG b => b_20

(debug_insn 30 29 0 (var_location:DI b (const_int 0 [0])) lex.yy.c:1924 -1
     (nil))
;; if (b_20 == 0B)

(insn 31 30 32 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 93 [ b ])
            (const_int 0 [0]))) lex.yy.c:1925 -1
     (nil))

(jump_insn 32 31 35 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:1925 -1
     (int_list:REG_BR_PROB 4 (nil)))

(note 35 32 33 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(jump_insn 33 35 34 11 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 34 33 0)

;; Generating RTL for gimple basic block 5

;; 

(code_label 36 34 37 326 "" [0 uses])

(note 37 36 0 NOTE_INSN_BASIC_BLOCK)

;; yy_fatal_error ("out of dynamic memory in yy_scan_bytes()");

(insn 38 37 39 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f88bbcc7a20 *.LC29>)) lex.yy.c:1917 -1
     (nil))

(call_insn 39 38 40 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1917 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 40 39 0)

;; Generating RTL for gimple basic block 6

;; 

(code_label 41 40 42 327 "" [0 uses])

(note 42 41 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 7

;; # DEBUG i => i_27

(debug_insn 44 43 0 (var_location:DI i (const_int 0 [0])) -1
     (nil))
;; MEM[base: _24, index: i_27, offset: 0B] = _11;

(insn 45 44 46 (set (reg:QI 99)
        (mem:QI (plus:DI (reg/v/f:DI 96 [ yybytes ])
                (reg/v:DI 89 [ i ])) [0 MEM[base: yybytes_9(D), index: i_27, offset: 0B]+0 S1 A8])) lex.yy.c:1920 -1
     (nil))

(insn 46 45 0 (set (mem:QI (plus:DI (reg/f:DI 94 [ D.6837 ])
                (reg/v:DI 89 [ i ])) [0 MEM[base: _24, index: i_27, offset: 0B]+0 S1 A8])
        (reg:QI 99)) lex.yy.c:1920 -1
     (nil))

;; i_13 = i_27 + 1;

(insn 47 46 0 (parallel [
            (set (reg/v:DI 89 [ i ])
                (plus:DI (reg/v:DI 89 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1919 -1
     (nil))

;; # DEBUG i => i_13

(debug_insn 48 47 0 (var_location:DI i (const_int 0 [0])) lex.yy.c:1919 -1
     (nil))
;; # DEBUG i => i_13

(debug_insn 49 48 0 (var_location:DI i (const_int 0 [0])) -1
     (nil))
;; if (_yybytes_len_3(D) == i_13)

(insn 51 49 52 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 97 [ _yybytes_len ])
            (reg/v:DI 89 [ i ]))) lex.yy.c:1919 -1
     (nil))

(jump_insn 52 51 56 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) lex.yy.c:1919 -1
     (int_list:REG_BR_PROB 900 (nil)))

(note 56 52 54 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(jump_insn 54 56 55 12 (set (pc)
        (label_ref 53)) -1
     (nil))

(barrier 55 54 0)

;; Generating RTL for gimple basic block 8

;; 

(code_label 57 55 58 328 "" [0 uses])

(note 58 57 0 NOTE_INSN_BASIC_BLOCK)

;; yy_fatal_error ("bad buffer in yy_scan_bytes()");

(insn 59 58 60 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f88bbcc7ab0 *.LC30>)) lex.yy.c:1926 -1
     (nil))

(call_insn 60 59 61 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1926 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 61 60 0)

;; Generating RTL for gimple basic block 9

;; 

(code_label 62 61 63 329 "" [0 uses])

(note 63 62 0 NOTE_INSN_BASIC_BLOCK)

;; b_20->yy_is_our_buffer = 1;

(insn 64 63 0 (set (mem:SI (plus:DI (reg/v/f:DI 93 [ b ])
                (const_int 36 [0x24])) [2 b_20->yy_is_our_buffer+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:1931 -1
     (nil))

;; return b_20;

(insn 65 64 66 (set (reg:DI 95 [ <retval> ])
        (reg/v/f:DI 93 [ b ])) lex.yy.c:1933 -1
     (nil))

(jump_insn 66 65 67 (set (pc)
        (label_ref 0)) lex.yy.c:1933 -1
     (nil))

(barrier 67 66 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 12 failed.
Removing jump 66.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 12 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 96 [ yybytes ])
        (reg:DI 5 di [ yybytes ])) lex.yy.c:1907 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:DI 97 [ _yybytes_len ])
        (reg:DI 4 si [ _yybytes_len ])) lex.yy.c:1907 -1
     (nil))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (parallel [
            (set (reg/v:DI 87 [ n ])
                (plus:DI (reg/v:DI 97 [ _yybytes_len ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1914 -1
     (nil))
(debug_insn 9 8 10 2 (var_location:DI n (reg/v:DI 87 [ n ])) lex.yy.c:1914 -1
     (nil))
(debug_insn 10 9 11 2 (var_location:DI size (reg/v:DI 87 [ n ])) lex.yy.c:1914 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/v:DI 87 [ n ])) lex.yy.c:2123 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 14 2 (set (reg/f:DI 98)
        (reg:DI 0 ax)) lex.yy.c:2123 -1
     (expr_list:REG_NOALIAS (reg/f:DI 98)
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 94 [ D.6837 ])
        (reg/f:DI 98)) lex.yy.c:2123 -1
     (nil))
(debug_insn 15 14 16 2 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1915 -1
     (nil))
(debug_insn 16 15 17 2 (var_location:DI buf (clobber (const_int 0 [0]))) lex.yy.c:1915 -1
     (nil))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ D.6837 ])
            (const_int 0 [0]))) lex.yy.c:1916 -1
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) lex.yy.c:1916 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 36)
;;  succ:       7 [0.0%] 
;;              4 [100.0%]  (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [100.0%]  (FALLTHRU)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 20 19 21 4 (var_location:DI i (const_int 0 [0])) -1
     (nil))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 97 [ _yybytes_len ])
            (const_int 0 [0]))) lex.yy.c:1919 -1
     (nil))
(jump_insn 22 21 50 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 41)
            (pc))) lex.yy.c:1919 -1
     (int_list:REG_BR_PROB 9100 (nil))
 -> 41)
;;  succ:       5 [9.0%]  (FALLTHRU)
;;              8 [91.0%] 

;; basic block 5, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [9.0%]  (FALLTHRU)
;;              9 [9.0%] 
(code_label 50 22 23 5 330 "" [1 uses])
(note 23 50 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (mem:QI (plus:DI (plus:DI (reg/f:DI 94 [ D.6837 ])
                    (reg/v:DI 97 [ _yybytes_len ]))
                (const_int 1 [0x1])) [0 *_16+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1922 -1
     (nil))
(insn 25 24 26 5 (set (mem:QI (plus:DI (reg/f:DI 94 [ D.6837 ])
                (reg/v:DI 97 [ _yybytes_len ])) [0 *_14+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1922 -1
     (nil))
(insn 26 25 27 5 (set (reg:DI 4 si)
        (reg/v:DI 87 [ n ])) lex.yy.c:1924 -1
     (nil))
(insn 27 26 28 5 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.6837 ])) lex.yy.c:1924 -1
     (nil))
(call_insn 28 27 29 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z14yy_scan_bufferPcm") [flags 0x3]  <function_decl 0x7f88bc07ca20 yy_scan_buffer>) [0 yy_scan_buffer S1 A8])
            (const_int 0 [0]))) lex.yy.c:1924 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z14yy_scan_bufferPcm") [flags 0x3]  <function_decl 0x7f88bc07ca20 yy_scan_buffer>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 29 28 30 5 (set (reg/v/f:DI 93 [ b ])
        (reg:DI 0 ax)) lex.yy.c:1924 -1
     (nil))
(debug_insn 30 29 31 5 (var_location:DI b (reg/v/f:DI 93 [ b ])) lex.yy.c:1924 -1
     (nil))
(insn 31 30 32 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 93 [ b ])
            (const_int 0 [0]))) lex.yy.c:1925 -1
     (nil))
(jump_insn 32 31 35 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) lex.yy.c:1925 -1
     (int_list:REG_BR_PROB 4 (nil))
 -> 57)
;;  succ:       11 [0.0%] 
;;              6 [100.0%]  (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [100.0%]  (FALLTHRU)
(note 35 32 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 33 35 34 6 (set (pc)
        (label_ref 62)) -1
     (nil)
 -> 62)
;;  succ:       12 [100.0%] 

(barrier 34 33 36)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [0.0%] 
(code_label 36 34 37 7 326 "" [1 uses])
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f88bbcc7a20 *.LC29>)) lex.yy.c:1917 -1
     (nil))
(call_insn 39 38 40 7 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1917 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 40 39 41)
;; basic block 8, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 [91.0%] 
(code_label 41 40 42 8 327 "" [1 uses])
(note 42 41 5 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 5 42 53 8 (set (reg/v:DI 89 [ i ])
        (const_int 0 [0])) lex.yy.c:1919 -1
     (nil))
;;  succ:       9 [100.0%]  (FALLTHRU)

;; basic block 9, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 [100.0%]  (FALLTHRU)
;;              10 [100.0%] 
(code_label 53 5 43 9 331 "" [1 uses])
(note 43 53 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(debug_insn 44 43 45 9 (var_location:DI i (reg/v:DI 89 [ i ])) -1
     (nil))
(insn 45 44 46 9 (set (reg:QI 99)
        (mem:QI (plus:DI (reg/v/f:DI 96 [ yybytes ])
                (reg/v:DI 89 [ i ])) [0 MEM[base: yybytes_9(D), index: i_27, offset: 0B]+0 S1 A8])) lex.yy.c:1920 -1
     (nil))
(insn 46 45 47 9 (set (mem:QI (plus:DI (reg/f:DI 94 [ D.6837 ])
                (reg/v:DI 89 [ i ])) [0 MEM[base: _24, index: i_27, offset: 0B]+0 S1 A8])
        (reg:QI 99)) lex.yy.c:1920 -1
     (nil))
(insn 47 46 48 9 (parallel [
            (set (reg/v:DI 89 [ i ])
                (plus:DI (reg/v:DI 89 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1919 -1
     (nil))
(debug_insn 48 47 49 9 (var_location:DI i (reg/v:DI 89 [ i ])) lex.yy.c:1919 -1
     (nil))
(debug_insn 49 48 51 9 (var_location:DI i (reg/v:DI 89 [ i ])) -1
     (nil))
(insn 51 49 52 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 97 [ _yybytes_len ])
            (reg/v:DI 89 [ i ]))) lex.yy.c:1919 -1
     (nil))
(jump_insn 52 51 56 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) lex.yy.c:1919 -1
     (int_list:REG_BR_PROB 900 (nil))
 -> 50)
;;  succ:       5 [9.0%] 
;;              10 [91.0%]  (FALLTHRU,DFS_BACK)

;; basic block 10, loop depth 1, count 0, freq 8281, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [91.0%]  (FALLTHRU,DFS_BACK)
(note 56 52 54 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 54 56 55 10 (set (pc)
        (label_ref 53)) -1
     (nil)
 -> 53)
;;  succ:       9 [100.0%] 

(barrier 55 54 57)
;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [0.0%] 
(code_label 57 55 58 11 328 "" [1 uses])
(note 58 57 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f88bbcc7ab0 *.LC30>)) lex.yy.c:1926 -1
     (nil))
(call_insn 60 59 61 11 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1926 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      

(barrier 61 60 62)
;; basic block 12, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 11, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [100.0%] 
(code_label 62 61 63 12 329 "" [1 uses])
(note 63 62 64 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 12 (set (mem:SI (plus:DI (reg/v/f:DI 93 [ b ])
                (const_int 36 [0x24])) [2 b_20->yy_is_our_buffer+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:1931 -1
     (nil))
(insn 65 64 69 12 (set (reg:DI 95 [ <retval> ])
        (reg/v/f:DI 93 [ b ])) lex.yy.c:1933 -1
     (nil))
(insn 69 65 70 12 (set (reg/i:DI 0 ax)
        (reg:DI 95 [ <retval> ])) lex.yy.c:1934 -1
     (nil))
(insn 70 69 0 12 (use (reg/i:DI 0 ax)) lex.yy.c:1934 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function yy_buffer_state* yy_scan_string(const char*) (_Z14yy_scan_stringPKc, funcdef_no=102, decl_uid=4274, cgraph_uid=102, symbol_order=129)

yy_buffer_state* yy_scan_string(const char*) (const char * yystr)
{
  long unsigned int _3;
  struct yy_buffer_state * _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = strlen (yystr_2(D));
  _5 = yy_scan_bytes (yystr_2(D), _3); [tail call]
  return _5;
;;    succ:       EXIT

}



Partition map 

Partition 2 (yystr_2(D) - 2 )
Partition 3 (_3 - 3 )
Partition 5 (_5 - 5 )


Partition map 

Partition 0 (yystr_2(D) - 2 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (yystr_2(D) - 2 )

After Coalescing:

Partition map 

Partition 0 (yystr_2(D) - 2 )
Partition 1 (_3 - 3 )
Partition 2 (_5 - 5 )

yy_buffer_state* yy_scan_string(const char*) (const char * yystr)
{
  long unsigned int _3;
  struct yy_buffer_state * _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = strlen (yystr_2(D));
  _5 = yy_scan_bytes (yystr_2(D), _3); [tail call]
  return _5;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _3 = strlen (yystr_2(D));

(insn 6 5 7 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ yystr ])) lex.yy.c:1896 -1
     (nil))

(call_insn/i 7 6 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7f88bc2f60d8 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) lex.yy.c:1896 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7f88bc2f60d8 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 8 7 9 (set (reg:DI 92)
        (reg:DI 0 ax)) lex.yy.c:1896 -1
     (nil))

(insn 9 8 10 (set (reg:DI 93)
        (reg:DI 92)) lex.yy.c:1896 -1
     (nil))

(insn 10 9 0 (set (reg:DI 87 [ D.6842 ])
        (reg:DI 93)) lex.yy.c:1896 -1
     (nil))

;; _5 = yy_scan_bytes (yystr_2(D), _3); [tail call]

(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg:DI 87 [ D.6842 ])) lex.yy.c:1896 -1
     (nil))

(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ yystr ])) lex.yy.c:1896 -1
     (nil))

(call_insn/j 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z13yy_scan_bytesPKcm") [flags 0x3]  <function_decl 0x7f88bc07cbd0 yy_scan_bytes>) [0 yy_scan_bytes S1 A8])
            (const_int 0 [0]))) lex.yy.c:1896 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z13yy_scan_bytesPKcm") [flags 0x3]  <function_decl 0x7f88bc07cbd0 yy_scan_bytes>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(barrier 14 13 0)
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 90 [ yystr ])
        (reg:DI 5 di [ yystr ])) lex.yy.c:1894 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ yystr ])) lex.yy.c:1896 -1
     (nil))
(call_insn/i 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7f88bc2f60d8 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) lex.yy.c:1896 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7f88bc2f60d8 strlen>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg:DI 92)
        (reg:DI 0 ax)) lex.yy.c:1896 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 93)
        (reg:DI 92)) lex.yy.c:1896 -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 87 [ D.6842 ])
        (reg:DI 93)) lex.yy.c:1896 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg:DI 87 [ D.6842 ])) lex.yy.c:1896 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ yystr ])) lex.yy.c:1896 -1
     (nil))
(call_insn/j 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z13yy_scan_bytesPKcm") [flags 0x3]  <function_decl 0x7f88bc07cbd0 yy_scan_bytes>) [0 yy_scan_bytes S1 A8])
            (const_int 0 [0]))) lex.yy.c:1896 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z13yy_scan_bytesPKcm") [flags 0x3]  <function_decl 0x7f88bc07cbd0 yy_scan_bytes>)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)

(barrier 14 13 0)

;; Function int yyget_lineno() (_Z12yyget_linenov, funcdef_no=105, decl_uid=5475, cgraph_uid=105, symbol_order=132)

int yyget_lineno() ()
{
  int _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = yylineno;
  return _2;
;;    succ:       EXIT

}



Partition map 

Partition 2 (_2 - 2 )

After Coalescing:

Partition map 

Partition 0 (_2 - 2 )


Replacing Expressions
_2 replace with --> _2 = yylineno;


int yyget_lineno() ()
{
  int _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = yylineno;
  return _2;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; return _2;

(insn 5 4 6 (set (reg:SI 90)
        (mem/c:SI (symbol_ref:DI ("yylineno") [flags 0x2]  <var_decl 0x7f88bc0807e0 yylineno>) [2 yylineno+0 S4 A32])) lex.yy.c:1971 -1
     (nil))

(insn 6 5 7 (set (reg:SI 88 [ <retval> ])
        (reg:SI 90)) lex.yy.c:1971 -1
     (nil))

(jump_insn 7 6 8 (set (pc)
        (label_ref 0)) lex.yy.c:1971 -1
     (nil))

(barrier 8 7 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 7.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 90)
        (mem/c:SI (symbol_ref:DI ("yylineno") [flags 0x2]  <var_decl 0x7f88bc0807e0 yylineno>) [2 yylineno+0 S4 A32])) lex.yy.c:1971 -1
     (nil))
(insn 6 5 10 2 (set (reg:SI 88 [ <retval> ])
        (reg:SI 90)) lex.yy.c:1971 -1
     (nil))
(insn 10 6 11 2 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) lex.yy.c:1972 -1
     (nil))
(insn 11 10 0 2 (use (reg/i:SI 0 ax)) lex.yy.c:1972 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function FILE* yyget_in() (_Z8yyget_inv, funcdef_no=106, decl_uid=5467, cgraph_uid=106, symbol_order=133)

FILE* yyget_in() ()
{
  struct FILE * _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = yyin;
  return _2;
;;    succ:       EXIT

}



Partition map 

Partition 2 (_2 - 2 )

After Coalescing:

Partition map 

Partition 0 (_2 - 2 )


Replacing Expressions
_2 replace with --> _2 = yyin;


FILE* yyget_in() ()
{
  struct FILE * _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = yyin;
  return _2;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; return _2;

(insn 5 4 6 (set (reg/f:DI 90)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1979 -1
     (nil))

(insn 6 5 7 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 90)) lex.yy.c:1979 -1
     (nil))

(jump_insn 7 6 8 (set (pc)
        (label_ref 0)) lex.yy.c:1979 -1
     (nil))

(barrier 8 7 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 7.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 90)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1979 -1
     (nil))
(insn 6 5 10 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 90)) lex.yy.c:1979 -1
     (nil))
(insn 10 6 11 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) lex.yy.c:1980 -1
     (nil))
(insn 11 10 0 2 (use (reg/i:DI 0 ax)) lex.yy.c:1980 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function FILE* yyget_out() (_Z9yyget_outv, funcdef_no=107, decl_uid=5470, cgraph_uid=107, symbol_order=134)

FILE* yyget_out() ()
{
  struct FILE * _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = yyout;
  return _2;
;;    succ:       EXIT

}



Partition map 

Partition 2 (_2 - 2 )

After Coalescing:

Partition map 

Partition 0 (_2 - 2 )


Replacing Expressions
_2 replace with --> _2 = yyout;


FILE* yyget_out() ()
{
  struct FILE * _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = yyout;
  return _2;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; return _2;

(insn 5 4 6 (set (reg/f:DI 90)
        (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])) lex.yy.c:1987 -1
     (nil))

(insn 6 5 7 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 90)) lex.yy.c:1987 -1
     (nil))

(jump_insn 7 6 8 (set (pc)
        (label_ref 0)) lex.yy.c:1987 -1
     (nil))

(barrier 8 7 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 7.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 90)
        (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])) lex.yy.c:1987 -1
     (nil))
(insn 6 5 10 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 90)) lex.yy.c:1987 -1
     (nil))
(insn 10 6 11 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) lex.yy.c:1988 -1
     (nil))
(insn 11 10 0 2 (use (reg/i:DI 0 ax)) lex.yy.c:1988 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function yy_size_t yyget_leng() (_Z10yyget_lengv, funcdef_no=108, decl_uid=5473, cgraph_uid=108, symbol_order=135)

yy_size_t yyget_leng() ()
{
  yy_size_t _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = yyleng;
  return _2;
;;    succ:       EXIT

}



Partition map 

Partition 2 (_2 - 2 )

After Coalescing:

Partition map 

Partition 0 (_2 - 2 )


Replacing Expressions
_2 replace with --> _2 = yyleng;


yy_size_t yyget_leng() ()
{
  yy_size_t _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = yyleng;
  return _2;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; return _2;

(insn 5 4 6 (set (reg:DI 90)
        (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])) lex.yy.c:1995 -1
     (nil))

(insn 6 5 7 (set (reg:DI 88 [ <retval> ])
        (reg:DI 90)) lex.yy.c:1995 -1
     (nil))

(jump_insn 7 6 8 (set (pc)
        (label_ref 0)) lex.yy.c:1995 -1
     (nil))

(barrier 8 7 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 7.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 90)
        (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])) lex.yy.c:1995 -1
     (nil))
(insn 6 5 10 2 (set (reg:DI 88 [ <retval> ])
        (reg:DI 90)) lex.yy.c:1995 -1
     (nil))
(insn 10 6 11 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) lex.yy.c:1996 -1
     (nil))
(insn 11 10 0 2 (use (reg/i:DI 0 ax)) lex.yy.c:1996 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function char* yyget_text() (_Z10yyget_textv, funcdef_no=109, decl_uid=5474, cgraph_uid=109, symbol_order=136)

char* yyget_text() ()
{
  char * _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = yytext;
  return _2;
;;    succ:       EXIT

}



Partition map 

Partition 2 (_2 - 2 )

After Coalescing:

Partition map 

Partition 0 (_2 - 2 )


Replacing Expressions
_2 replace with --> _2 = yytext;


char* yyget_text() ()
{
  char * _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = yytext;
  return _2;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; return _2;

(insn 5 4 6 (set (reg/f:DI 90)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:2004 -1
     (nil))

(insn 6 5 7 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 90)) lex.yy.c:2004 -1
     (nil))

(jump_insn 7 6 8 (set (pc)
        (label_ref 0)) lex.yy.c:2004 -1
     (nil))

(barrier 8 7 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 7.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 90)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:2004 -1
     (nil))
(insn 6 5 10 2 (set (reg:DI 88 [ <retval> ])
        (reg/f:DI 90)) lex.yy.c:2004 -1
     (nil))
(insn 10 6 11 2 (set (reg/i:DI 0 ax)
        (reg:DI 88 [ <retval> ])) lex.yy.c:2005 -1
     (nil))
(insn 11 10 0 2 (use (reg/i:DI 0 ax)) lex.yy.c:2005 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void yyset_lineno(int) (_Z12yyset_linenoi, funcdef_no=110, decl_uid=5477, cgraph_uid=110, symbol_order=137)

void yyset_lineno(int) (int _line_number)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  yylineno = _line_number_2(D);
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (_line_number_2(D) - 2 )


Partition map 

Partition 0 (_line_number_2(D) - 2 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_line_number_2(D) - 2 )

After Coalescing:

Partition map 

Partition 0 (_line_number_2(D) - 2 )

void yyset_lineno(int) (int _line_number)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  yylineno = _line_number_2(D);
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; yylineno = _line_number_2(D);

(insn 6 5 0 (set (mem/c:SI (symbol_ref:DI ("yylineno") [flags 0x2]  <var_decl 0x7f88bc0807e0 yylineno>) [2 yylineno+0 S4 A32])
        (reg/v:SI 87 [ _line_number ])) lex.yy.c:2014 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v:SI 87 [ _line_number ])
        (reg:SI 5 di [ _line_number ])) lex.yy.c:2012 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 0 2 (set (mem/c:SI (symbol_ref:DI ("yylineno") [flags 0x2]  <var_decl 0x7f88bc0807e0 yylineno>) [2 yylineno+0 S4 A32])
        (reg/v:SI 87 [ _line_number ])) lex.yy.c:2014 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void yyset_in(FILE*) (_Z8yyset_inP8_IO_FILE, funcdef_no=111, decl_uid=5469, cgraph_uid=111, symbol_order=138)

void yyset_in(FILE*) (struct FILE * _in_str)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  yyin = _in_str_2(D);
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (_in_str_2(D) - 2 )


Partition map 

Partition 0 (_in_str_2(D) - 2 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_in_str_2(D) - 2 )

After Coalescing:

Partition map 

Partition 0 (_in_str_2(D) - 2 )

void yyset_in(FILE*) (struct FILE * _in_str)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  yyin = _in_str_2(D);
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; yyin = _in_str_2(D);

(insn 6 5 0 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/v/f:DI 87 [ _in_str ])) lex.yy.c:2025 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 87 [ _in_str ])
        (reg:DI 5 di [ _in_str ])) lex.yy.c:2024 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 0 2 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/v/f:DI 87 [ _in_str ])) lex.yy.c:2025 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void yyset_out(FILE*) (_Z9yyset_outP8_IO_FILE, funcdef_no=112, decl_uid=5472, cgraph_uid=112, symbol_order=139)

void yyset_out(FILE*) (struct FILE * _out_str)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  yyout = _out_str_2(D);
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (_out_str_2(D) - 2 )


Partition map 

Partition 0 (_out_str_2(D) - 2 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_out_str_2(D) - 2 )

After Coalescing:

Partition map 

Partition 0 (_out_str_2(D) - 2 )

void yyset_out(FILE*) (struct FILE * _out_str)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  yyout = _out_str_2(D);
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; yyout = _out_str_2(D);

(insn 6 5 0 (set (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])
        (reg/v/f:DI 87 [ _out_str ])) lex.yy.c:2030 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 87 [ _out_str ])
        (reg:DI 5 di [ _out_str ])) lex.yy.c:2029 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 0 2 (set (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])
        (reg/v/f:DI 87 [ _out_str ])) lex.yy.c:2030 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function int yyget_debug() (_Z11yyget_debugv, funcdef_no=113, decl_uid=5461, cgraph_uid=113, symbol_order=140)

int yyget_debug() ()
{
  int _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = yy_flex_debug;
  return _2;
;;    succ:       EXIT

}



Partition map 

Partition 2 (_2 - 2 )

After Coalescing:

Partition map 

Partition 0 (_2 - 2 )


Replacing Expressions
_2 replace with --> _2 = yy_flex_debug;


int yyget_debug() ()
{
  int _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = yy_flex_debug;
  return _2;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; return _2;

(insn 5 4 6 (set (reg:SI 90)
        (mem/c:SI (symbol_ref:DI ("yy_flex_debug") [flags 0x2]  <var_decl 0x7f88bc080ab0 yy_flex_debug>) [2 yy_flex_debug+0 S4 A32])) lex.yy.c:2035 -1
     (nil))

(insn 6 5 7 (set (reg:SI 88 [ <retval> ])
        (reg:SI 90)) lex.yy.c:2035 -1
     (nil))

(jump_insn 7 6 8 (set (pc)
        (label_ref 0)) lex.yy.c:2035 -1
     (nil))

(barrier 8 7 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 7.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 90)
        (mem/c:SI (symbol_ref:DI ("yy_flex_debug") [flags 0x2]  <var_decl 0x7f88bc080ab0 yy_flex_debug>) [2 yy_flex_debug+0 S4 A32])) lex.yy.c:2035 -1
     (nil))
(insn 6 5 10 2 (set (reg:SI 88 [ <retval> ])
        (reg:SI 90)) lex.yy.c:2035 -1
     (nil))
(insn 10 6 11 2 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) lex.yy.c:2036 -1
     (nil))
(insn 11 10 0 2 (use (reg/i:SI 0 ax)) lex.yy.c:2036 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void yyset_debug(int) (_Z11yyset_debugi, funcdef_no=114, decl_uid=5463, cgraph_uid=114, symbol_order=141)

void yyset_debug(int) (int _bdebug)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  yy_flex_debug = _bdebug_2(D);
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (_bdebug_2(D) - 2 )


Partition map 

Partition 0 (_bdebug_2(D) - 2 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_bdebug_2(D) - 2 )

After Coalescing:

Partition map 

Partition 0 (_bdebug_2(D) - 2 )

void yyset_debug(int) (int _bdebug)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  yy_flex_debug = _bdebug_2(D);
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; yy_flex_debug = _bdebug_2(D);

(insn 6 5 0 (set (mem/c:SI (symbol_ref:DI ("yy_flex_debug") [flags 0x2]  <var_decl 0x7f88bc080ab0 yy_flex_debug>) [2 yy_flex_debug+0 S4 A32])
        (reg/v:SI 87 [ _bdebug ])) lex.yy.c:2040 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v:SI 87 [ _bdebug ])
        (reg:SI 5 di [ _bdebug ])) lex.yy.c:2039 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 0 2 (set (mem/c:SI (symbol_ref:DI ("yy_flex_debug") [flags 0x2]  <var_decl 0x7f88bc080ab0 yy_flex_debug>) [2 yy_flex_debug+0 S4 A32])
        (reg/v:SI 87 [ _bdebug ])) lex.yy.c:2040 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function int yylex_destroy() (_Z13yylex_destroyv, funcdef_no=116, decl_uid=5460, cgraph_uid=116, symbol_order=143)

int yylex_destroy() ()
{
  long unsigned int yy_buffer_stack_top.112_5;
  long unsigned int _6;
  struct yy_buffer_state * * _7;
  struct yy_buffer_state * _8;
  struct yy_buffer_state * * yy_buffer_stack.111_10;
  struct yy_buffer_state * * yy_buffer_stack.111_11;
  struct yy_buffer_state * * _12;
  long unsigned int _13;
  long unsigned int yy_buffer_stack_top.112_26;
  struct yy_buffer_state * _27;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  yy_buffer_stack.111_11 = yy_buffer_stack;
  if (yy_buffer_stack.111_11 == 0B)
    goto <bb 5>;
  else
    goto <bb 3>;
;;    succ:       5
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  yy_buffer_stack_top.112_26 = yy_buffer_stack_top;
  _13 = yy_buffer_stack_top.112_26 * 8;
  _12 = yy_buffer_stack.111_11 + _13;
  _27 = *_12;
  if (_27 == 0B)
    goto <bb 5>;
  else
    goto <bb 7>;
;;    succ:       5
;;                7

;;   basic block 4, loop depth 1
;;    pred:       7
;;                6
  yy_buffer_stack_top.112_5 = yy_buffer_stack_top;
  _6 = yy_buffer_stack_top.112_5 * 8;
  _7 = yy_buffer_stack.111_11 + _6;
  _8 = *_7;
  if (_8 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
;;                2
  # yy_buffer_stack.111_10 = PHI <yy_buffer_stack.111_11(3), yy_buffer_stack.111_11(4), yy_buffer_stack.111_11(2)>
  # DEBUG ptr => yy_buffer_stack.111_10
  free (yy_buffer_stack.111_10);
  # DEBUG ptr => NULL
  yy_buffer_stack = 0B;
  yylineno = 1;
  yy_buffer_stack_top = 0;
  yy_buffer_stack_max = 0;
  yy_c_buf_p = 0B;
  yy_init = 0;
  yy_start = 0;
  yyin = 0B;
  yyout = 0B;
  return 0;
;;    succ:       EXIT

;;   basic block 6, loop depth 1
;;    pred:       4
  yy_delete_buffer (_8);
  *_7 = 0B;
  yypop_buffer_state ();
  goto <bb 4>;
;;    succ:       4

;;   basic block 7, loop depth 0
;;    pred:       3
  yy_delete_buffer (_27);
  *_12 = 0B;
  yypop_buffer_state ();
  goto <bb 4>;
;;    succ:       4

}



Partition map 

Partition 5 (yy_buffer_stack_top.112_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 10 (yy_buffer_stack.111_10 - 10 )
Partition 11 (yy_buffer_stack.111_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 26 (yy_buffer_stack_top.112_26 - 26 )
Partition 27 (_27 - 27 )


Partition map 

Partition 0 (yy_buffer_stack.111_10 - 10 )
Partition 1 (yy_buffer_stack.111_11 - 11 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(940) yy_buffer_stack.111_10 <-> yy_buffer_stack.111_11

Partition map 

Partition 0 (yy_buffer_stack.111_10 - 10 )
Partition 1 (yy_buffer_stack.111_11 - 11 )

Coalesce list: (10)yy_buffer_stack.111_10 & (11)yy_buffer_stack.111_11 [map: 0, 1] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (yy_buffer_stack_top.112_5 - 5 )
Partition 1 (_6 - 6 )
Partition 2 (_7 - 7 )
Partition 3 (_8 - 8 )
Partition 4 (yy_buffer_stack.111_10 - 10 11 )
Partition 5 (_12 - 12 )
Partition 6 (_13 - 13 )
Partition 7 (yy_buffer_stack_top.112_26 - 26 )
Partition 8 (_27 - 27 )


Replacing Expressions
yy_buffer_stack_top.112_5 replace with --> yy_buffer_stack_top.112_5 = yy_buffer_stack_top;

_6 replace with --> _6 = yy_buffer_stack_top.112_5 * 8;

_13 replace with --> _13 = yy_buffer_stack_top.112_26 * 8;

yy_buffer_stack_top.112_26 replace with --> yy_buffer_stack_top.112_26 = yy_buffer_stack_top;


int yylex_destroy() ()
{
  long unsigned int yy_buffer_stack_top.112_5;
  long unsigned int _6;
  struct yy_buffer_state * * _7;
  struct yy_buffer_state * _8;
  struct yy_buffer_state * * yy_buffer_stack.111_10;
  struct yy_buffer_state * * yy_buffer_stack.111_11;
  struct yy_buffer_state * * _12;
  long unsigned int _13;
  long unsigned int yy_buffer_stack_top.112_26;
  struct yy_buffer_state * _27;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  yy_buffer_stack.111_11 = yy_buffer_stack;
  if (yy_buffer_stack.111_11 == 0B)
    goto <bb 5>;
  else
    goto <bb 3>;
;;    succ:       5
;;                3

;;   basic block 3, loop depth 0
;;    pred:       2
  yy_buffer_stack_top.112_26 = yy_buffer_stack_top;
  _13 = yy_buffer_stack_top.112_26 * 8;
  _12 = yy_buffer_stack.111_11 + _13;
  _27 = *_12;
  if (_27 == 0B)
    goto <bb 5>;
  else
    goto <bb 7>;
;;    succ:       5
;;                7

;;   basic block 4, loop depth 1
;;    pred:       7
;;                6
  yy_buffer_stack_top.112_5 = yy_buffer_stack_top;
  _6 = yy_buffer_stack_top.112_5 * 8;
  _7 = yy_buffer_stack.111_11 + _6;
  _8 = *_7;
  if (_8 == 0B)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
;;                2
  # yy_buffer_stack.111_10 = PHI <yy_buffer_stack.111_11(3), yy_buffer_stack.111_11(4), yy_buffer_stack.111_11(2)>
  # DEBUG ptr => yy_buffer_stack.111_10
  free (yy_buffer_stack.111_10);
  # DEBUG ptr => NULL
  yy_buffer_stack = 0B;
  yylineno = 1;
  yy_buffer_stack_top = 0;
  yy_buffer_stack_max = 0;
  yy_c_buf_p = 0B;
  yy_init = 0;
  yy_start = 0;
  yyin = 0B;
  yyout = 0B;
  return 0;
;;    succ:       EXIT

;;   basic block 6, loop depth 1
;;    pred:       4
  yy_delete_buffer (_8);
  *_7 = 0B;
  yypop_buffer_state ();
  goto <bb 4>;
;;    succ:       4

;;   basic block 7, loop depth 0
;;    pred:       3
  yy_delete_buffer (_27);
  *_12 = 0B;
  yypop_buffer_state ();
  goto <bb 4>;
;;    succ:       4

}



;; Generating RTL for gimple basic block 2

;; _11 = yy_buffer_stack;

(insn 5 4 0 (set (reg/f:DI 91 [ D.6873 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:2079 -1
     (nil))

;; if (_11 == 0B)

(insn 6 5 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.6873 ])
            (const_int 0 [0]))) lex.yy.c:2079 -1
     (nil))

(jump_insn 7 6 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:2079 -1
     (int_list:REG_BR_PROB 450 (nil)))

;; Generating RTL for gimple basic block 3

;; _12 = _11 + _13;

(insn 9 8 10 (set (reg:DI 98)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:2079 -1
     (nil))

(insn 10 9 11 (parallel [
            (set (reg:DI 97 [ D.6872 ])
                (ashift:DI (reg:DI 98)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2079 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))

(insn 11 10 0 (parallel [
            (set (reg/f:DI 92 [ D.6873 ])
                (plus:DI (reg/f:DI 91 [ D.6873 ])
                    (reg:DI 97 [ D.6872 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2079 -1
     (nil))

;; _27 = *_12;

(insn 12 11 0 (set (reg/f:DI 95 [ D.6874 ])
        (mem/f:DI (reg/f:DI 92 [ D.6873 ]) [1 *_12+0 S8 A64])) lex.yy.c:2079 -1
     (nil))

;; if (_27 == 0B)

(insn 13 12 14 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 95 [ D.6874 ])
            (const_int 0 [0]))) lex.yy.c:2079 -1
     (nil))

(jump_insn 14 13 17 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:2079 -1
     (int_list:REG_BR_PROB 450 (nil)))

(note 17 14 15 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(jump_insn 15 17 16 9 (set (pc)
        (label_ref 0)) lex.yy.c:2079 -1
     (nil))

(barrier 16 15 0)

;; Generating RTL for gimple basic block 4

;; _7 = _11 + _6;

(insn 19 18 20 (set (reg:DI 100)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:2079 -1
     (nil))

(insn 20 19 21 (parallel [
            (set (reg:DI 99 [ D.6872 ])
                (ashift:DI (reg:DI 100)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2079 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))

(insn 21 20 0 (parallel [
            (set (reg/f:DI 89 [ D.6873 ])
                (plus:DI (reg/f:DI 91 [ D.6873 ])
                    (reg:DI 99 [ D.6872 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2079 -1
     (nil))

;; _8 = *_7;

(insn 22 21 0 (set (reg/f:DI 90 [ D.6874 ])
        (mem/f:DI (reg/f:DI 89 [ D.6873 ]) [1 *_7+0 S8 A64])) lex.yy.c:2079 -1
     (nil))

;; if (_8 == 0B)

(insn 23 22 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.6874 ])
            (const_int 0 [0]))) lex.yy.c:2079 -1
     (nil))

(jump_insn 24 23 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) lex.yy.c:2079 -1
     (int_list:REG_BR_PROB 9550 (nil)))

;; Generating RTL for gimple basic block 5

;; 

(code_label 25 24 26 350 "" [0 uses])

(note 26 25 0 NOTE_INSN_BASIC_BLOCK)

;; # DEBUG ptr => _10

(debug_insn 27 26 0 (var_location:DI ptr (const_int 0 [0])) lex.yy.c:2086 -1
     (nil))
;; free (_10);

(insn 28 27 29 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.6873 ])) lex.yy.c:2141 -1
     (nil))

(call_insn 29 28 0 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) lex.yy.c:2141 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; # DEBUG ptr => NULL

(debug_insn 30 29 0 (var_location:DI ptr (const_int 0 [0])) lex.yy.c:2086 -1
     (nil))
;; yy_buffer_stack = 0B;

(insn 31 30 0 (set (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2087 -1
     (nil))

;; yylineno = 1;

(insn 32 31 0 (set (mem/c:SI (symbol_ref:DI ("yylineno") [flags 0x2]  <var_decl 0x7f88bc0807e0 yylineno>) [2 yylineno+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:2050 -1
     (nil))

;; yy_buffer_stack_top = 0;

(insn 33 32 0 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2053 -1
     (nil))

;; yy_buffer_stack_max = 0;

(insn 34 33 0 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_max") [flags 0x2]  <var_decl 0x7f88bc0801b0 yy_buffer_stack_max>) [4 yy_buffer_stack_max+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2054 -1
     (nil))

;; yy_c_buf_p = 0B;

(insn 35 34 0 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2055 -1
     (nil))

;; yy_init = 0;

(insn 36 35 0 (set (mem/c:SI (symbol_ref:DI ("_ZL7yy_init") [flags 0x2]  <var_decl 0x7f88bc080510 yy_init>) [2 yy_init+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:2056 -1
     (nil))

;; yy_start = 0;

(insn 37 36 0 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:2057 -1
     (nil))

;; yyin = 0B;

(insn 38 37 0 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2064 -1
     (nil))

;; yyout = 0B;

(insn 39 38 0 (set (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2065 -1
     (nil))

;; return 0;

(insn 40 39 41 (set (reg:SI 96 [ <retval> ])
        (const_int 0 [0])) lex.yy.c:2093 -1
     (nil))

(jump_insn 41 40 42 (set (pc)
        (label_ref 0)) lex.yy.c:2093 -1
     (nil))

(barrier 42 41 0)

;; Generating RTL for gimple basic block 6

;; 

(code_label 43 42 44 352 "" [0 uses])

(note 44 43 0 NOTE_INSN_BASIC_BLOCK)

;; yy_delete_buffer (_8);

(insn 45 44 46 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.6874 ])) lex.yy.c:2080 -1
     (nil))

(call_insn 46 45 0 (call (mem:QI (symbol_ref:DI ("_Z16yy_delete_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c438 yy_delete_buffer>) [0 yy_delete_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:2080 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_delete_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c438 yy_delete_buffer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; *_7 = 0B;

(insn 47 46 0 (set (mem/f:DI (reg/f:DI 89 [ D.6873 ]) [1 *_7+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2081 -1
     (nil))

;; yypop_buffer_state ();

(call_insn 48 47 0 (call (mem:QI (symbol_ref:DI ("_Z18yypop_buffer_statev") [flags 0x3]  <function_decl 0x7f88bc07c6c0 yypop_buffer_state>) [0 yypop_buffer_state S1 A8])
        (const_int 0 [0])) lex.yy.c:2082 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z18yypop_buffer_statev") [flags 0x3]  <function_decl 0x7f88bc07c6c0 yypop_buffer_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 52 51 53 351 "" [0 uses])

(note 53 52 0 NOTE_INSN_BASIC_BLOCK)

;; yy_delete_buffer (_27);

(insn 54 53 55 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.6874 ])) lex.yy.c:2080 -1
     (nil))

(call_insn 55 54 0 (call (mem:QI (symbol_ref:DI ("_Z16yy_delete_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c438 yy_delete_buffer>) [0 yy_delete_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:2080 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_delete_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c438 yy_delete_buffer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; *_12 = 0B;

(insn 56 55 0 (set (mem/f:DI (reg/f:DI 92 [ D.6873 ]) [1 *_12+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2081 -1
     (nil))

;; yypop_buffer_state ();

(call_insn 57 56 0 (call (mem:QI (symbol_ref:DI ("_Z18yypop_buffer_statev") [flags 0x3]  <function_decl 0x7f88bc07c6c0 yypop_buffer_state>) [0 yypop_buffer_state S1 A8])
        (const_int 0 [0])) lex.yy.c:2082 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z18yypop_buffer_statev") [flags 0x3]  <function_decl 0x7f88bc07c6c0 yypop_buffer_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 4->5 to 9 failed.


try_optimize_cfg iteration 2

Forwarding edge 4->5 to 9 failed.


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 880, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 91 [ D.6873 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:2079 -1
     (nil))
(insn 6 5 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.6873 ])
            (const_int 0 [0]))) lex.yy.c:2079 -1
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) lex.yy.c:2079 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 25)
;;  succ:       7 [4.5%] 
;;              4 [95.5%]  (FALLTHRU)

;; basic block 4, loop depth 0, count 0, freq 840, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 [95.5%]  (FALLTHRU)
(note 8 7 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 4 (set (reg:DI 98)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:2079 -1
     (nil))
(insn 10 9 11 4 (parallel [
            (set (reg:DI 97 [ D.6872 ])
                (ashift:DI (reg:DI 98)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2079 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 11 10 12 4 (parallel [
            (set (reg/f:DI 92 [ D.6873 ])
                (plus:DI (reg/f:DI 91 [ D.6873 ])
                    (reg:DI 97 [ D.6872 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2079 -1
     (nil))
(insn 12 11 13 4 (set (reg/f:DI 95 [ D.6874 ])
        (mem/f:DI (reg/f:DI 92 [ D.6873 ]) [1 *_12+0 S8 A64])) lex.yy.c:2079 -1
     (nil))
(insn 13 12 14 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 95 [ D.6874 ])
            (const_int 0 [0]))) lex.yy.c:2079 -1
     (nil))
(jump_insn 14 13 17 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 25)
            (pc))) lex.yy.c:2079 -1
     (int_list:REG_BR_PROB 450 (nil))
 -> 25)
;;  succ:       7 [4.5%] 
;;              5 [95.5%]  (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 802, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [95.5%]  (FALLTHRU)
(note 17 14 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 15 17 16 5 (set (pc)
        (label_ref 52)) lex.yy.c:2079 -1
     (nil)
 -> 52)
;;  succ:       9 [100.0%] 

(barrier 16 15 49)
;; basic block 6, loop depth 1, count 0, freq 8710, maybe hot
;; Invalid sum of incoming frequencies 9120, should be 8710
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 [100.0%] 
;;              8 [100.0%]  (DFS_BACK)
(code_label 49 16 18 6 353 "" [2 uses])
(note 18 49 19 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 6 (set (reg:DI 100)
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:2079 -1
     (nil))
(insn 20 19 21 6 (parallel [
            (set (reg:DI 99 [ D.6872 ])
                (ashift:DI (reg:DI 100)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2079 -1
     (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (const_int 3 [0x3]))
        (nil)))
(insn 21 20 22 6 (parallel [
            (set (reg/f:DI 89 [ D.6873 ])
                (plus:DI (reg/f:DI 91 [ D.6873 ])
                    (reg:DI 99 [ D.6872 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2079 -1
     (nil))
(insn 22 21 23 6 (set (reg/f:DI 90 [ D.6874 ])
        (mem/f:DI (reg/f:DI 89 [ D.6873 ]) [1 *_7+0 S8 A64])) lex.yy.c:2079 -1
     (nil))
(insn 23 22 24 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.6874 ])
            (const_int 0 [0]))) lex.yy.c:2079 -1
     (nil))
(jump_insn 24 23 25 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) lex.yy.c:2079 -1
     (int_list:REG_BR_PROB 9550 (nil))
 -> 43)
;;  succ:       7 [4.5%]  (FALLTHRU)
;;              8 [95.5%] 

;; basic block 7, loop depth 0, count 0, freq 880, maybe hot
;; Invalid sum of incoming frequencies 470, should be 880
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 [4.5%] 
;;              6 [4.5%]  (FALLTHRU)
;;              2 [4.5%] 
(code_label 25 24 26 7 350 "" [2 uses])
(note 26 25 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 27 26 28 7 (var_location:DI ptr (reg/f:DI 91 [ D.6873 ])) lex.yy.c:2086 -1
     (nil))
(insn 28 27 29 7 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.6873 ])) lex.yy.c:2141 -1
     (nil))
(call_insn 29 28 30 7 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) lex.yy.c:2141 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(debug_insn 30 29 31 7 (var_location:DI ptr (clobber (const_int 0 [0]))) lex.yy.c:2086 -1
     (nil))
(insn 31 30 32 7 (set (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2087 -1
     (nil))
(insn 32 31 33 7 (set (mem/c:SI (symbol_ref:DI ("yylineno") [flags 0x2]  <var_decl 0x7f88bc0807e0 yylineno>) [2 yylineno+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:2050 -1
     (nil))
(insn 33 32 34 7 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2053 -1
     (nil))
(insn 34 33 35 7 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_max") [flags 0x2]  <var_decl 0x7f88bc0801b0 yy_buffer_stack_max>) [4 yy_buffer_stack_max+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2054 -1
     (nil))
(insn 35 34 36 7 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2055 -1
     (nil))
(insn 36 35 37 7 (set (mem/c:SI (symbol_ref:DI ("_ZL7yy_init") [flags 0x2]  <var_decl 0x7f88bc080510 yy_init>) [2 yy_init+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:2056 -1
     (nil))
(insn 37 36 38 7 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:2057 -1
     (nil))
(insn 38 37 39 7 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2064 -1
     (nil))
(insn 39 38 40 7 (set (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2065 -1
     (nil))
(insn 40 39 41 7 (set (reg:SI 96 [ <retval> ])
        (const_int 0 [0])) lex.yy.c:2093 -1
     (nil))
(jump_insn 41 40 42 7 (set (pc)
        (label_ref 60)) lex.yy.c:2093 -1
     (nil)
 -> 60)
;;  succ:       10 [100.0%] 

(barrier 42 41 43)
;; basic block 8, loop depth 1, count 0, freq 8318, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 [95.5%] 
(code_label 43 42 44 8 352 "" [1 uses])
(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 8 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.6874 ])) lex.yy.c:2080 -1
     (nil))
(call_insn 46 45 47 8 (call (mem:QI (symbol_ref:DI ("_Z16yy_delete_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c438 yy_delete_buffer>) [0 yy_delete_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:2080 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_delete_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c438 yy_delete_buffer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 47 46 48 8 (set (mem/f:DI (reg/f:DI 89 [ D.6873 ]) [1 *_7+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2081 -1
     (nil))
(call_insn 48 47 50 8 (call (mem:QI (symbol_ref:DI ("_Z18yypop_buffer_statev") [flags 0x3]  <function_decl 0x7f88bc07c6c0 yypop_buffer_state>) [0 yypop_buffer_state S1 A8])
        (const_int 0 [0])) lex.yy.c:2082 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z18yypop_buffer_statev") [flags 0x3]  <function_decl 0x7f88bc07c6c0 yypop_buffer_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(jump_insn 50 48 51 8 (set (pc)
        (label_ref 49)) lex.yy.c:2082 -1
     (nil)
 -> 49)
;;  succ:       6 [100.0%]  (DFS_BACK)

(barrier 51 50 52)
;; basic block 9, loop depth 0, count 0, freq 802, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 [100.0%] 
(code_label 52 51 53 9 351 "" [1 uses])
(note 53 52 54 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 9 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.6874 ])) lex.yy.c:2080 -1
     (nil))
(call_insn 55 54 56 9 (call (mem:QI (symbol_ref:DI ("_Z16yy_delete_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c438 yy_delete_buffer>) [0 yy_delete_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:2080 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_delete_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c438 yy_delete_buffer>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 56 55 57 9 (set (mem/f:DI (reg/f:DI 92 [ D.6873 ]) [1 *_12+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2081 -1
     (nil))
(call_insn 57 56 58 9 (call (mem:QI (symbol_ref:DI ("_Z18yypop_buffer_statev") [flags 0x3]  <function_decl 0x7f88bc07c6c0 yypop_buffer_state>) [0 yypop_buffer_state S1 A8])
        (const_int 0 [0])) lex.yy.c:2082 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z18yypop_buffer_statev") [flags 0x3]  <function_decl 0x7f88bc07c6c0 yypop_buffer_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(jump_insn 58 57 59 9 (set (pc)
        (label_ref 49)) lex.yy.c:2082 -1
     (nil)
 -> 49)
;;  succ:       6 [100.0%] 

(barrier 59 58 60)
;; basic block 10, loop depth 0, count 0, freq 880, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 [100.0%] 
(code_label 60 59 63 10 349 "" [1 uses])
(note 63 60 61 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 61 63 62 10 (set (reg/i:SI 0 ax)
        (reg:SI 96 [ <retval> ])) lex.yy.c:2094 -1
     (nil))
(insn 62 61 0 10 (use (reg/i:SI 0 ax)) lex.yy.c:2094 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void* yyalloc(yy_size_t) (_Z7yyallocm, funcdef_no=117, decl_uid=4279, cgraph_uid=117, symbol_order=144)

void* yyalloc(yy_size_t) (yy_size_t size)
{
  void * _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _4 = malloc (size_2(D)); [tail call]
  return _4;
;;    succ:       EXIT

}



Partition map 

Partition 2 (size_2(D) - 2 )
Partition 4 (_4 - 4 )


Partition map 

Partition 0 (size_2(D) - 2 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (size_2(D) - 2 )

After Coalescing:

Partition map 

Partition 0 (size_2(D) - 2 )
Partition 1 (_4 - 4 )

void* yyalloc(yy_size_t) (yy_size_t size)
{
  void * _4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _4 = malloc (size_2(D)); [tail call]
  return _4;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _4 = malloc (size_2(D)); [tail call]

(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg/v:DI 89 [ size ])) lex.yy.c:2123 -1
     (nil))

(call_insn/j 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 8 7 0)
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v:DI 89 [ size ])
        (reg:DI 5 di [ size ])) lex.yy.c:2122 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (reg/v:DI 89 [ size ])) lex.yy.c:2123 -1
     (nil))
(call_insn/j 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)

(barrier 8 7 0)

;; Function void* yyrealloc(void*, yy_size_t) (_Z9yyreallocPvm, funcdef_no=118, decl_uid=4282, cgraph_uid=118, symbol_order=145)

void* yyrealloc(void*, yy_size_t) (void * ptr, yy_size_t size)
{
  void * _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _5 = realloc (ptr_2(D), size_3(D)); [tail call]
  return _5;
;;    succ:       EXIT

}



Partition map 

Partition 2 (ptr_2(D) - 2 )
Partition 3 (size_3(D) - 3 )
Partition 5 (_5 - 5 )


Partition map 

Partition 0 (ptr_2(D) - 2 )
Partition 1 (size_3(D) - 3 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (ptr_2(D) - 2 )
Partition 1 (size_3(D) - 3 )

After Coalescing:

Partition map 

Partition 0 (ptr_2(D) - 2 )
Partition 1 (size_3(D) - 3 )
Partition 2 (_5 - 5 )

void* yyrealloc(void*, yy_size_t) (void * ptr, yy_size_t size)
{
  void * _5;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _5 = realloc (ptr_2(D), size_3(D)); [tail call]
  return _5;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _5 = realloc (ptr_2(D), size_3(D)); [tail call]

(insn 7 6 8 2 (set (reg:DI 4 si)
        (reg/v:DI 90 [ size ])) lex.yy.c:2136 -1
     (nil))

(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ ptr ])) lex.yy.c:2136 -1
     (nil))

(call_insn/j 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2136 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(barrier 10 9 0)
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 89 [ ptr ])
        (reg:DI 5 di [ ptr ])) lex.yy.c:2127 -1
     (nil))
(insn 3 2 4 2 (set (reg/v:DI 90 [ size ])
        (reg:DI 4 si [ size ])) lex.yy.c:2127 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 4 si)
        (reg/v:DI 90 [ size ])) lex.yy.c:2136 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ ptr ])) lex.yy.c:2136 -1
     (nil))
(call_insn/j 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2136 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)

(barrier 10 9 0)

;; Function void yyfree(void*) (_Z6yyfreePv, funcdef_no=119, decl_uid=4284, cgraph_uid=119, symbol_order=146)

void yyfree(void*) (void * ptr)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  free (ptr_2(D)); [tail call]
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (ptr_2(D) - 2 )


Partition map 

Partition 0 (ptr_2(D) - 2 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (ptr_2(D) - 2 )

After Coalescing:

Partition map 

Partition 0 (ptr_2(D) - 2 )

void yyfree(void*) (void * ptr)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  free (ptr_2(D)); [tail call]
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; free (ptr_2(D)); [tail call]

(insn 6 5 7 2 (set (reg:DI 5 di)
        (reg/v/f:DI 87 [ ptr ])) lex.yy.c:2141 -1
     (nil))

(call_insn/j 7 6 8 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) lex.yy.c:2141 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(barrier 8 7 0)
deleting block 4


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 87 [ ptr ])
        (reg:DI 5 di [ ptr ])) lex.yy.c:2140 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (reg/v/f:DI 87 [ ptr ])) lex.yy.c:2141 -1
     (nil))
(call_insn/j 7 6 8 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) lex.yy.c:2141 -1
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)

(barrier 8 7 0)
