
;; Function yy_state_type yy_get_previous_state() (_ZL21yy_get_previous_statev, funcdef_no=87, decl_uid=4292, cgraph_uid=87, symbol_order=114) (unlikely executed)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 23 count 29 (  1.7)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 103: def dominates all uses has unique first use
Reg 104: def dominates all uses has unique first use
Reg 127 uninteresting
Reg 129 uninteresting
Reg 131 uninteresting
Reg 133: local to bb 8 def dominates all uses has unique first use
Reg 134 uninteresting
Reg 136 uninteresting
Reg 137 uninteresting
Reg 141 uninteresting
Reg 146 uninteresting
Reg 103 not local to one basic block
Reg 104 not local to one basic block
Examining insn 67, def for 133
  all ok
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;;
;; Loop 1
;;  header 3, latch 11
;;  depth 1, outer 0
;;  nodes: 3 11 8 7 9 6 10 4 5
;;
;; Loop 2
;;  header 8, multiple latches: 9 10
;;  depth 2, outer 1
;;  nodes: 8 9 10
;; 2 succs { 3 }
;; 3 succs { 12 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 11 9 }
;; 9 succs { 10 8 }
;; 10 succs { 8 }
;; 11 succs { 3 }
;; 12 succs { 14 13 }
;; 13 succs { 14 }
;; 14 succs { 16 15 }
;; 15 succs { 16 }
;; 16 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a14 (r146,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a29 (r141,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a32 (r137,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a33 (r136,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a28 (r135,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a15 (r135,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a30 (r134,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a34 (r133,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a31 (r131,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a17 (r129,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a18 (r127,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a27 (r123,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a13 (r123,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a26 (r122,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a12 (r122,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a25 (r121,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a11 (r121,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a24 (r120,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r120,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a19 (r104,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a23 (r103,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a9 (r103,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a22 (r102,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a16 (r102,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a21 (r101,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a8 (r101,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a20 (r100,l2) best AREG, allocno AREG
    a7 (r100,l1) best AREG, allocno AREG
    a0 (r100,l0) best AREG, allocno AREG

  a0(r100,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,86000 NO_REX_SSE_REGS:20000,86000 SSE_REGS:20000,86000 MMX_REGS:25000,116000 INT_SSE_REGS:21000,92000 ALL_REGS:312000,1768000 MEM:7000,30000
  a1(r121,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,28000 NO_REX_SSE_REGS:20000,28000 SSE_REGS:20000,28000 MMX_REGS:25000,33000 INT_SSE_REGS:21000,29000 ALL_REGS:312000,412000 MEM:8000,9000
  a2(r120,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:5000,6000
  a3(r123,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,28000 NO_REX_SSE_REGS:20000,28000 SSE_REGS:20000,28000 MMX_REGS:25000,33000 INT_SSE_REGS:21000,29000 ALL_REGS:312000,412000 MEM:8000,9000
  a4(r122,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:5000,6000
  a5(r103,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12000,20000 NO_REX_SSE_REGS:12000,20000 SSE_REGS:12000,20000 MMX_REGS:12000,25000 INT_SSE_REGS:12000,21000 ALL_REGS:104000,312000 MEM:4000,7000
  a6(r101,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12000,57000 NO_REX_SSE_REGS:12000,57000 SSE_REGS:12000,57000 MMX_REGS:12000,77000 INT_SSE_REGS:12000,61000 ALL_REGS:104000,1144000 MEM:4000,20000
  a7(r100,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29000,66000 NO_REX_SSE_REGS:29000,66000 SSE_REGS:29000,66000 MMX_REGS:39000,91000 INT_SSE_REGS:31000,71000 ALL_REGS:624000,1456000 MEM:10000,23000
  a8(r101,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:45000,45000 NO_REX_SSE_REGS:45000,45000 SSE_REGS:45000,45000 MMX_REGS:65000,65000 INT_SSE_REGS:49000,49000 ALL_REGS:1040000,1040000 MEM:16000,16000
  a9(r103,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:13000,13000 INT_SSE_REGS:9000,9000 ALL_REGS:208000,208000 MEM:3000,3000
  a10(r120,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:1000,1000
  a11(r121,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:8000,8000 INT_SSE_REGS:8000,8000 ALL_REGS:100000,100000 MEM:1000,1000
  a12(r122,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:1000,1000
  a13(r123,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:8000,8000 INT_SSE_REGS:8000,8000 ALL_REGS:100000,100000 MEM:1000,1000
  a14(r146,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a15(r135,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8000,29000 NO_REX_SSE_REGS:8000,29000 SSE_REGS:8000,29000 MMX_REGS:8000,34000 INT_SSE_REGS:8000,30000 ALL_REGS:100000,516000 MEM:1000,7000
  a16(r102,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:5000,12000
  a17(r129,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a18(r127,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a19(r104,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:11000,11000
  a20(r100,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37000,37000 NO_REX_SSE_REGS:37000,37000 SSE_REGS:37000,37000 MMX_REGS:52000,52000 INT_SSE_REGS:40000,40000 ALL_REGS:832000,832000 MEM:13000,13000
  a21(r101,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a22(r102,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:7000,7000
  a23(r103,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a24(r120,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a25(r121,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a26(r122,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a27(r123,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a28(r135,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:6000,6000
  a29(r141,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000
  a30(r134,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29000,29000 NO_REX_SSE_REGS:29000,29000 SSE_REGS:29000,29000 MMX_REGS:34000,34000 INT_SSE_REGS:30000,30000 ALL_REGS:516000,516000 MEM:8000,8000
  a31(r131,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29000,29000 NO_REX_SSE_REGS:29000,29000 SSE_REGS:29000,29000 MMX_REGS:39000,39000 INT_SSE_REGS:31000,31000 ALL_REGS:624000,624000 MEM:12000,12000
  a32(r137,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a33(r136,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a34(r133,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000


Pass 1 for finding pseudo/allocno costs

    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a20 (r100,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a7 (r100,l1) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r100,l0) costs: AREG:0,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,87000 NO_REX_SSE_REGS:21000,87000 SSE_REGS:21000,87000 MMX_REGS:26000,117000 INT_SSE_REGS:22000,93000 ALL_REGS:316000,1772000 MEM:7000,30000
  a1(r121,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,33000 NO_REX_SSE_REGS:21000,33000 SSE_REGS:21000,33000 MMX_REGS:26000,38000 INT_SSE_REGS:22000,34000 ALL_REGS:316000,420000 MEM:8000,12000
  a2(r120,l0) costs: GENERAL_REGS:0,0 MEM:8000,12000
  a3(r123,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,33000 NO_REX_SSE_REGS:21000,33000 SSE_REGS:21000,33000 MMX_REGS:26000,38000 INT_SSE_REGS:22000,34000 ALL_REGS:316000,420000 MEM:8000,12000
  a4(r122,l0) costs: GENERAL_REGS:0,0 MEM:8000,12000
  a5(r103,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:13000,21000 NO_REX_SSE_REGS:13000,21000 SSE_REGS:13000,21000 MMX_REGS:13000,26000 INT_SSE_REGS:13000,22000 ALL_REGS:108000,316000 MEM:4000,7000
  a6(r101,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:13000,58000 NO_REX_SSE_REGS:13000,58000 SSE_REGS:13000,58000 MMX_REGS:13000,78000 INT_SSE_REGS:13000,62000 ALL_REGS:108000,1148000 MEM:4000,20000
  a7(r100,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29000,66000 NO_REX_SSE_REGS:29000,66000 SSE_REGS:29000,66000 MMX_REGS:39000,91000 INT_SSE_REGS:31000,71000 ALL_REGS:624000,1456000 MEM:10000,23000
  a8(r101,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:45000,45000 NO_REX_SSE_REGS:45000,45000 SSE_REGS:45000,45000 MMX_REGS:65000,65000 INT_SSE_REGS:49000,49000 ALL_REGS:1040000,1040000 MEM:16000,16000
  a9(r103,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8000,8000 NO_REX_SSE_REGS:8000,8000 SSE_REGS:8000,8000 MMX_REGS:13000,13000 INT_SSE_REGS:9000,9000 ALL_REGS:208000,208000 MEM:3000,3000
  a10(r120,l1) costs: GENERAL_REGS:0,0 MEM:4000,4000
  a11(r121,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:12000,12000 NO_REX_SSE_REGS:12000,12000 SSE_REGS:12000,12000 MMX_REGS:12000,12000 INT_SSE_REGS:12000,12000 ALL_REGS:104000,104000 MEM:4000,4000
  a12(r122,l1) costs: GENERAL_REGS:0,0 MEM:4000,4000
  a13(r123,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:12000,12000 NO_REX_SSE_REGS:12000,12000 SSE_REGS:12000,12000 MMX_REGS:12000,12000 INT_SSE_REGS:12000,12000 ALL_REGS:104000,104000 MEM:4000,4000
  a14(r146,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a15(r135,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8000,29000 NO_REX_SSE_REGS:8000,29000 SSE_REGS:8000,29000 MMX_REGS:13000,39000 INT_SSE_REGS:9000,31000 ALL_REGS:208000,624000 MEM:3000,9000
  a16(r102,l1) costs: GENERAL_REGS:0,0 MEM:8000,15000
  a17(r129,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a18(r127,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a19(r104,l1) costs: GENERAL_REGS:0,0 MEM:11000,11000
  a20(r100,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37000,37000 NO_REX_SSE_REGS:37000,37000 SSE_REGS:37000,37000 MMX_REGS:52000,52000 INT_SSE_REGS:40000,40000 ALL_REGS:832000,832000 MEM:13000,13000
  a21(r101,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a22(r102,l2) costs: GENERAL_REGS:0,0 MEM:7000,7000
  a23(r103,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a24(r120,l2) costs: GENERAL_REGS:0,0 MEM:0,0
  a25(r121,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a26(r122,l2) costs: GENERAL_REGS:0,0 MEM:0,0
  a27(r123,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a28(r135,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:6000,6000
  a29(r141,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a30(r134,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29000,29000 NO_REX_SSE_REGS:29000,29000 SSE_REGS:29000,29000 MMX_REGS:39000,39000 INT_SSE_REGS:31000,31000 ALL_REGS:624000,624000 MEM:10000,10000
  a31(r131,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29000,29000 NO_REX_SSE_REGS:29000,29000 SSE_REGS:29000,29000 MMX_REGS:39000,39000 INT_SSE_REGS:31000,31000 ALL_REGS:624000,624000 MEM:12000,12000
  a32(r137,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a33(r136,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a34(r133,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000

   Insn 124(l0): point = 0
   Insn 123(l0): point = 2
   Insn 116(l0): point = 5
   Insn 114(l0): point = 8
   Insn 113(l0): point = 10
   Insn 110(l0): point = 13
   Insn 108(l0): point = 16
   Insn 107(l0): point = 18
   Insn 17(l0): point = 21
   Insn 16(l0): point = 23
   Insn 31(l0): point = 25
   Insn 30(l0): point = 27
   Insn 29(l0): point = 29
   Insn 27(l0): point = 31
   Insn 25(l0): point = 33
   Insn 22(l1): point = 36
   Insn 21(l1): point = 38
   Insn 20(l1): point = 40
   Insn 19(l1): point = 42
   Insn 52(l1): point = 45
   Insn 51(l1): point = 47
   Insn 50(l1): point = 49
   Insn 45(l1): point = 52
   Insn 44(l1): point = 54
   Insn 40(l1): point = 57
   Insn 39(l1): point = 59
   Insn 18(l1): point = 61
   Insn 38(l1): point = 63
   Insn 36(l1): point = 66
   Insn 35(l1): point = 68
   Insn 147(l1): point = 71
   Insn 100(l1): point = 73
   Insn 98(l1): point = 75
   Insn 97(l1): point = 77
   Insn 73(l2): point = 80
   Insn 72(l2): point = 82
   Insn 71(l2): point = 84
   Insn 70(l2): point = 86
   Insn 69(l2): point = 88
   Insn 68(l2): point = 90
   Insn 67(l2): point = 92
   Insn 64(l2): point = 94
   Insn 82(l2): point = 97
   Insn 81(l2): point = 99
   Insn 78(l2): point = 101
   Insn 145(l2): point = 104
   Insn 87(l2): point = 106
   Insn 86(l2): point = 108
 a0(r100): [3..33]
 a1(r121): [6..25]
 a2(r120): [11..23]
 a3(r123): [14..27]
 a4(r122): [19..21]
 a5(r103): [21..29]
 a6(r101): [21..31]
 a7(r100): [36..75]
 a8(r101): [36..79]
 a9(r103): [36..79]
 a10(r120): [45..79] [36..38]
 a11(r121): [45..79] [36..42]
 a12(r122): [45..79] [36..36]
 a13(r123): [45..79] [36..40]
 a14(r146): [76..77]
 a15(r135): [78..79]
 a16(r102): [57..61] [36..52]
 a17(r129): [48..49]
 a18(r127): [53..54]
 a19(r104): [55..63]
 a20(r100): [104..110] [83..101]
 a21(r101): [80..110]
 a22(r102): [80..106]
 a23(r103): [80..110]
 a24(r120): [80..110]
 a25(r121): [80..110]
 a26(r122): [80..110]
 a27(r123): [80..110]
 a28(r135): [80..88]
 a29(r141): [107..108]
 a30(r134): [109..110] [97..103] [80..90]
 a31(r131): [102..103] [80..94]
 a32(r137): [83..84]
 a33(r136): [85..86]
 a34(r133): [89..92]
 Rebuilding regno allocno list for 146
 Rebuilding regno allocno list for 141
 Rebuilding regno allocno list for 137
 Rebuilding regno allocno list for 136
      Moving ranges of a28r135 to a15r135:  [80..88]
 Rebuilding regno allocno list for 135
 Rebuilding regno allocno list for 134
 Rebuilding regno allocno list for 133
 Rebuilding regno allocno list for 131
 Rebuilding regno allocno list for 129
 Rebuilding regno allocno list for 127
      Moving ranges of a27r123 to a13r123:  [80..110]
      Moving ranges of a13r123 to a3r123:  [45..110] [36..40]
      Moving ranges of a26r122 to a12r122:  [80..110]
      Moving ranges of a12r122 to a4r122:  [45..110] [36..36]
      Moving ranges of a25r121 to a11r121:  [80..110]
      Moving ranges of a11r121 to a1r121:  [45..110] [36..42]
      Moving ranges of a24r120 to a10r120:  [80..110]
      Moving ranges of a10r120 to a2r120:  [45..110] [36..38]
 Rebuilding regno allocno list for 104
      Moving ranges of a23r103 to a9r103:  [80..110]
      Moving ranges of a9r103 to a5r103:  [36..110]
      Moving ranges of a22r102 to a16r102:  [80..106]
 Rebuilding regno allocno list for 102
      Moving ranges of a21r101 to a8r101:  [80..110]
      Moving ranges of a8r101 to a6r101:  [36..110]
      Moving ranges of a20r100 to a7r100:  [104..110] [83..101]
      Moving ranges of a7r100 to a0r100:  [104..110] [83..101] [36..75]
Compressing live ranges: from 111 to 29 - 26%
Ranges after the compression:
 a0(r100): [23..28] [13..20] [0..10]
 a1(r121): [0..28]
 a2(r120): [0..28]
 a3(r123): [0..28]
 a4(r122): [5..28] [3..3] [0..1]
 a5(r103): [1..28]
 a6(r101): [1..28]
 a14(r146): [11..12]
 a15(r135): [13..16]
 a16(r102): [13..24] [9..10] [3..6]
 a17(r129): [5..6]
 a18(r127): [7..8]
 a19(r104): [9..10]
 a29(r141): [25..26]
 a30(r134): [27..28] [13..22]
 a31(r131): [21..22] [13..18]
 a32(r137): [13..14]
 a33(r136): [15..16]
 a34(r133): [17..18]
+++Allocating 152 bytes for conflict table (uncompressed size 280)
;; a0(r100,l0) conflicts: a1(r121,l0) a2(r120,l0) a3(r123,l0) a4(r122,l0) a5(r103,l0) a6(r101,l0) a16(r102,l0) a17(r129,l0) a18(r127,l0) a19(r104,l0) a32(r137,l0) a15(r135,l0) a31(r131,l0) a30(r134,l0) a33(r136,l0) a34(r133,l0) a29(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r121,l0) conflicts: a0(r100,l0) a2(r120,l0) a3(r123,l0) a4(r122,l0) a5(r103,l0) a6(r101,l0) a16(r102,l0) a17(r129,l0) a18(r127,l0) a19(r104,l0) a14(r146,l0) a32(r137,l0) a15(r135,l0) a31(r131,l0) a30(r134,l0) a33(r136,l0) a34(r133,l0) a29(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r120,l0) conflicts: a0(r100,l0) a1(r121,l0) a3(r123,l0) a4(r122,l0) a5(r103,l0) a6(r101,l0) a16(r102,l0) a17(r129,l0) a18(r127,l0) a19(r104,l0) a14(r146,l0) a32(r137,l0) a15(r135,l0) a31(r131,l0) a30(r134,l0) a33(r136,l0) a34(r133,l0) a29(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r123,l0) conflicts: a0(r100,l0) a1(r121,l0) a2(r120,l0) a4(r122,l0) a5(r103,l0) a6(r101,l0) a16(r102,l0) a17(r129,l0) a18(r127,l0) a19(r104,l0) a14(r146,l0) a32(r137,l0) a15(r135,l0) a31(r131,l0) a30(r134,l0) a33(r136,l0) a34(r133,l0) a29(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r122,l0) conflicts: a0(r100,l0) a1(r121,l0) a2(r120,l0) a3(r123,l0) a5(r103,l0) a6(r101,l0) a16(r102,l0) a17(r129,l0) a18(r127,l0) a19(r104,l0) a14(r146,l0) a32(r137,l0) a15(r135,l0) a31(r131,l0) a30(r134,l0) a33(r136,l0) a34(r133,l0) a29(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r103,l0) conflicts: a0(r100,l0) a1(r121,l0) a2(r120,l0) a3(r123,l0) a4(r122,l0) a6(r101,l0) a16(r102,l0) a17(r129,l0) a18(r127,l0) a19(r104,l0) a14(r146,l0) a32(r137,l0) a15(r135,l0) a31(r131,l0) a30(r134,l0) a33(r136,l0) a34(r133,l0) a29(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r101,l0) conflicts: a0(r100,l0) a1(r121,l0) a2(r120,l0) a3(r123,l0) a4(r122,l0) a5(r103,l0) a16(r102,l0) a17(r129,l0) a18(r127,l0) a19(r104,l0) a14(r146,l0) a32(r137,l0) a15(r135,l0) a31(r131,l0) a30(r134,l0) a33(r136,l0) a34(r133,l0) a29(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r146,l0) conflicts: a1(r121,l0) a2(r120,l0) a3(r123,l0) a4(r122,l0) a5(r103,l0) a6(r101,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r135,l0) conflicts: a0(r100,l0) a1(r121,l0) a2(r120,l0) a3(r123,l0) a4(r122,l0) a5(r103,l0) a6(r101,l0) a16(r102,l0) a32(r137,l0) a31(r131,l0) a30(r134,l0) a33(r136,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r102,l0) conflicts: a0(r100,l0) a1(r121,l0) a2(r120,l0) a3(r123,l0) a4(r122,l0) a5(r103,l0) a6(r101,l0) a17(r129,l0) a19(r104,l0) a32(r137,l0) a15(r135,l0) a31(r131,l0) a30(r134,l0) a33(r136,l0) a34(r133,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r129,l0) conflicts: a0(r100,l0) a1(r121,l0) a2(r120,l0) a3(r123,l0) a4(r122,l0) a5(r103,l0) a6(r101,l0) a16(r102,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r127,l0) conflicts: a0(r100,l0) a1(r121,l0) a2(r120,l0) a3(r123,l0) a4(r122,l0) a5(r103,l0) a6(r101,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a19(r104,l0) conflicts: a0(r100,l0) a1(r121,l0) a2(r120,l0) a3(r123,l0) a4(r122,l0) a5(r103,l0) a6(r101,l0) a16(r102,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r141,l0) conflicts: a0(r100,l0) a1(r121,l0) a2(r120,l0) a3(r123,l0) a4(r122,l0) a5(r103,l0) a6(r101,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r134,l0) conflicts: a0(r100,l0) a1(r121,l0) a2(r120,l0) a3(r123,l0) a4(r122,l0) a5(r103,l0) a6(r101,l0) a16(r102,l0) a32(r137,l0) a15(r135,l0) a31(r131,l0) a33(r136,l0) a34(r133,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a31(r131,l0) conflicts: a0(r100,l0) a1(r121,l0) a2(r120,l0) a3(r123,l0) a4(r122,l0) a5(r103,l0) a6(r101,l0) a16(r102,l0) a32(r137,l0) a15(r135,l0) a30(r134,l0) a33(r136,l0) a34(r133,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a32(r137,l0) conflicts: a0(r100,l0) a1(r121,l0) a2(r120,l0) a3(r123,l0) a4(r122,l0) a5(r103,l0) a6(r101,l0) a16(r102,l0) a15(r135,l0) a31(r131,l0) a30(r134,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a33(r136,l0) conflicts: a0(r100,l0) a1(r121,l0) a2(r120,l0) a3(r123,l0) a4(r122,l0) a5(r103,l0) a6(r101,l0) a16(r102,l0) a15(r135,l0) a31(r131,l0) a30(r134,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a34(r133,l0) conflicts: a0(r100,l0) a1(r121,l0) a2(r120,l0) a3(r123,l0) a4(r122,l0) a5(r103,l0) a6(r101,l0) a16(r102,l0) a31(r131,l0) a30(r134,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a14(r146)<->a15(r135)@125:shuffle
  cp1:a29(r141)<->a30(r134)@125:shuffle
  cp2:a15(r135)<->a34(r133)@125:shuffle
  cp3:a18(r127)<->a19(r104)@125:shuffle
  pref0:a0(r100)<-hr0@1500
  regions=3, blocks=17, points=29
    allocnos=35 (big 0), copies=4, conflicts=0, ranges=27

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r100 1r121 2r120 3r123 4r122 5r103 6r101 14r146 15r135 16r102 17r129 18r127 19r104 29r141 30r134 31r131 32r137 33r136 34r133
    modified regnos: 100 101 102 103 104 120 121 122 123 127 129 131 133 134 135 136 137 141 146
    border:
    Pressure: GENERAL_REGS=12
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@438000
      Allocno a0r100 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a1r121 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r120 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r123 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a4r122 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a5r103 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a6r101 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a14r146 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a15r135 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a16r102 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a17r129 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a18r127 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a19r104 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a29r141 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a30r134 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a31r131 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a32r137 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a33r136 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a34r133 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Forming thread by copy 0:a14r146-a15r135 (freq=125):
        Result (freq=5000): a14r146(2000) a15r135(3000)
      Forming thread by copy 1:a29r141-a30r134 (freq=125):
        Result (freq=5000): a29r141(2000) a30r134(3000)
      Forming thread by copy 2:a15r135-a34r133 (freq=125):
        Result (freq=7000): a14r146(2000) a34r133(2000) a15r135(3000)
      Forming thread by copy 3:a18r127-a19r104 (freq=125):
        Result (freq=5000): a18r127(2000) a19r104(3000)
      Pushing a33(r136,l0)(cost 0)
        Making a16(r102,l0) colorable
      Pushing a32(r137,l0)(cost 0)
      Pushing a17(r129,l0)(cost 0)
        Making a0(r100,l0) colorable
      Pushing a31(r131,l0)(cost 0)
        Making a1(r121,l0) colorable
        Making a2(r120,l0) colorable
        Making a3(r123,l0) colorable
        Making a4(r122,l0) colorable
        Making a5(r103,l0) colorable
        Making a6(r101,l0) colorable
      Pushing a5(r103,l0)(cost 7000)
      Pushing a4(r122,l0)(cost 12000)
      Pushing a3(r123,l0)(cost 12000)
      Pushing a2(r120,l0)(cost 12000)
      Pushing a1(r121,l0)(cost 12000)
      Pushing a16(r102,l0)(cost 15000)
      Pushing a29(r141,l0)(cost 0)
      Pushing a30(r134,l0)(cost 0)
      Pushing a18(r127,l0)(cost 0)
      Pushing a19(r104,l0)(cost 0)
      Pushing a6(r101,l0)(cost 20000)
      Pushing a34(r133,l0)(cost 0)
      Pushing a14(r146,l0)(cost 0)
      Pushing a15(r135,l0)(cost 0)
      Pushing a0(r100,l0)(cost 33000)
      Popping a0(r100,l0)  -- assign reg 0
      Popping a15(r135,l0)  -- assign reg 1
      Popping a14(r146,l0)  -- assign reg 1
      Popping a34(r133,l0)  -- assign reg 1
      Popping a6(r101,l0)  -- assign reg 2
      Popping a19(r104,l0)  -- assign reg 1
      Popping a18(r127,l0)  -- assign reg 1
      Popping a30(r134,l0)  -- assign reg 4
      Popping a29(r141,l0)  -- assign reg 4
      Popping a16(r102,l0)  -- assign reg 5
      Popping a1(r121,l0)  -- assign reg 37
      Popping a2(r120,l0)  -- assign reg 38
      Popping a3(r123,l0)  -- assign reg 39
      Popping a4(r122,l0)  -- assign reg 40
      Popping a5(r103,l0)  -- assign reg 3
      Popping a31(r131,l0)  -- assign reg 6
      Popping a17(r129,l0)  -- assign reg 1
      Popping a32(r137,l0)  -- assign reg 41
      Popping a33(r136,l0)  -- assign reg 41
Disposition:
    0:r100 l0     0    6:r101 l0     2   16:r102 l0     5    5:r103 l0     3
   19:r104 l0     1    2:r120 l0    38    1:r121 l0    37    4:r122 l0    40
    3:r123 l0    39   18:r127 l0     1   17:r129 l0     1   31:r131 l0     6
   34:r133 l0     1   30:r134 l0     4   15:r135 l0     1   33:r136 l0    41
   32:r137 l0    41   29:r141 l0     4   14:r146 l0     1
New iteration of spill/restore move
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


yy_state_type yy_get_previous_state()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,16u} r7={1d,16u} r16={1d,15u} r17={9d,7u} r20={1d,16u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r100={3d,11u} r101={2d,7u} r102={3d,4u} r103={1d,1u} r104={1d,2u} r120={2d,1u} r121={2d,1u} r122={2d,1u} r123={2d,1u} r127={1d,1u} r129={1d,1u} r131={1d,2u} r133={1d,1u} r134={1d,2u} r135={1d,2u} r136={1d,1u} r137={1d,1u} r141={1d,1u} r146={1d,1u} 
;;    total ref usage 171{57d,114u,0e} in 59{59 regular + 0 call} insns.
(note 14 0 23 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 89, probably never executed
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 100 101 103 120 121 122 123
(note 23 14 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 15 23 25 2 NOTE_INSN_FUNCTION_BEG)
(insn 25 15 26 2 (set (reg/v:SI 100 [ yy_current_state ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) lex.yy.c:1413 90 {*movsi_internal}
     (nil))
(debug_insn 26 25 27 2 (var_location:SI yy_current_state (reg/v:SI 100 [ yy_current_state ])) lex.yy.c:1413 -1
     (nil))
(insn 27 26 28 2 (set (reg/v/f:DI 101 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1415 89 {*movdi_internal}
     (nil))
(debug_insn 28 27 29 2 (var_location:DI yy_cp (reg/v/f:DI 101 [ yy_cp ])) lex.yy.c:1415 -1
     (nil))
(insn 29 28 30 2 (set (reg/f:DI 103 [ D.6587 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) lex.yy.c:1415 89 {*movdi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:SI 123 [ yy_last_accepting_state_lsm.160 ])
        (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 31 30 16 2 (set (reg/f:DI 121 [ yy_last_accepting_cpos_lsm.162 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 16 31 17 2 (set (reg:QI 120 [ yy_last_accepting_cpos_lsm.163 ])
        (const_int 0 [0])) lex.yy.c:1415 93 {*movqi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 17 16 102 2 (set (reg:QI 122 [ yy_last_accepting_state_lsm.161 ])
        (const_int 0 [0])) lex.yy.c:1415 93 {*movqi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 120 121 122 123

;; basic block 3, loop depth 1, count 0, freq 989, probably never executed
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [100.0%]  (FALLTHRU)
;;              11 [100.0%]  (DFS_BACK)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u6(6){ }u7(7){ }u8(16){ }u9(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 120 121 122 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103
;; lr  def 	 17 [flags]
(code_label 102 17 32 3 8 "" [1 uses])
(note 32 102 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 33 32 34 3 (var_location:DI yy_cp (reg/v/f:DI 101 [ yy_cp ])) -1
     (nil))
(debug_insn 34 33 35 3 (var_location:SI yy_current_state (reg/v:SI 100 [ yy_current_state ])) -1
     (nil))
(insn 35 34 36 3 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 101 [ yy_cp ])
            (reg/f:DI 103 [ D.6587 ]))) lex.yy.c:1415 8 {*cmpdi_1}
     (nil))
(jump_insn 36 35 37 3 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) lex.yy.c:1415 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 105)
;;  succ:       12 [9.0%]  (LOOP_EXIT)
;;              4 [91.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 120 121 122 123

;; basic block 4, loop depth 1, count 0, freq 900, probably never executed
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [91.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 120 121 122 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101
;; lr  def 	 17 [flags] 102 104
(note 37 36 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 18 4 (set (reg:QI 104 [ D.6588 ])
        (mem:QI (reg/v/f:DI 101 [ yy_cp ]) [0 MEM[base: yy_cp_3, offset: 0B]+0 S1 A8])) lex.yy.c:1417 93 {*movqi_internal}
     (nil))
(insn 18 38 39 4 (set (reg/v:QI 102 [ yy_c ])
        (const_int 1 [0x1])) lex.yy.c:1417 93 {*movqi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 39 18 40 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 104 [ D.6588 ])
            (const_int 0 [0]))) lex.yy.c:1417 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 40 39 41 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 46)
            (pc))) lex.yy.c:1417 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 46)
;;  succ:       5 [50.0%]  (FALLTHRU)
;;              6 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 104 120 121 122 123

;; basic block 5, loop depth 1, count 0, freq 450, probably never executed
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 [50.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(6){ }u23(7){ }u24(16){ }u25(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 104 120 121 122 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  def 	 102 127
(note 41 40 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 43 41 44 5 NOTE_INSN_DELETED)
(insn 44 43 45 5 (set (reg:DI 127 [ D.6590 ])
        (zero_extend:DI (reg:QI 104 [ D.6588 ]))) lex.yy.c:1417 134 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg:QI 104 [ D.6588 ])
        (nil)))
(insn 45 44 46 5 (set (reg/v:QI 102 [ yy_c ])
        (mem/u/j:QI (plus:DI (reg:DI 127 [ D.6590 ])
                (symbol_ref:DI ("_ZL5yy_ec") [flags 0x2]  <var_decl 0x7f88bc080b40 yy_ec>)) [0 yy_ec S1 A8])) lex.yy.c:1417 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 127 [ D.6590 ])
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123

;; basic block 6, loop depth 1, count 0, freq 900, probably never executed
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [50.0%] 
;;              5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u29(6){ }u30(7){ }u31(16){ }u32(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 17 [flags] 129
(code_label 46 45 47 6 3 "" [1 uses])
(note 47 46 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 48 47 50 6 (var_location:QI yy_c (reg/v:QI 102 [ yy_c ])) lex.yy.c:1417 -1
     (nil))
(insn 50 48 51 6 (set (reg:DI 129 [ yy_current_state ])
        (sign_extend:DI (reg/v:SI 100 [ yy_current_state ]))) lex.yy.c:1418 142 {*extendsidi2_rex64}
     (nil))
(insn 51 50 52 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/u:HI (plus:DI (mult:DI (reg:DI 129 [ yy_current_state ])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])
            (const_int 0 [0]))) lex.yy.c:1418 2 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 129 [ yy_current_state ])
        (nil)))
(jump_insn 52 51 53 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) lex.yy.c:1418 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 59)
;;  succ:       7 [50.0%]  (FALLTHRU)
;;              8 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123

;; basic block 7, loop depth 1, count 0, freq 450, probably never executed
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [50.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u37(6){ }u38(7){ }u39(16){ }u40(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; lr  def 	 120 121 122 123
(note 53 52 19 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 19 53 20 7 (set (reg/f:DI 121 [ yy_last_accepting_cpos_lsm.162 ])
        (reg/v/f:DI 101 [ yy_cp ])) lex.yy.c:1418 89 {*movdi_internal}
     (nil))
(insn 20 19 21 7 (set (reg:SI 123 [ yy_last_accepting_state_lsm.160 ])
        (reg/v:SI 100 [ yy_current_state ])) lex.yy.c:1418 90 {*movsi_internal}
     (nil))
(insn 21 20 22 7 (set (reg:QI 120 [ yy_last_accepting_cpos_lsm.163 ])
        (const_int 1 [0x1])) lex.yy.c:1418 93 {*movqi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 22 21 59 7 (set (reg:QI 122 [ yy_last_accepting_state_lsm.161 ])
        (const_int 1 [0x1])) lex.yy.c:1418 93 {*movqi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123

;; basic block 8, loop depth 2, count 0, freq 10000, probably never executed
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 [100.0%]  (FALLTHRU)
;;              9 [50.0%]  (DFS_BACK)
;;              6 [50.0%] 
;;              10 [100.0%]  (DFS_BACK)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u43(6){ }u44(7){ }u45(16){ }u46(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 102
;; lr  def 	 17 [flags] 131 133 134 135 136 137
(code_label 59 22 60 8 5 "" [3 uses])
(note 60 59 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 61 60 62 8 (var_location:QI yy_c (reg/v:QI 102 [ yy_c ])) -1
     (nil))
(debug_insn 62 61 64 8 (var_location:SI yy_current_state (reg/v:SI 100 [ yy_current_state ])) -1
     (nil))
(insn 64 62 65 8 (set (reg:DI 131 [ yy_current_state ])
        (sign_extend:DI (reg/v:SI 100 [ yy_current_state ]))) lex.yy.c:1423 142 {*extendsidi2_rex64}
     (nil))
(note 65 64 67 8 NOTE_INSN_DELETED)
(insn 67 65 68 8 (set (reg:SI 133 [ D.6593 ])
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 131 [ yy_current_state ])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16]))) lex.yy.c:1423 139 {*zero_extendhisi2}
     (nil))
(insn 68 67 69 8 (set (reg:SI 134 [ D.6593 ])
        (zero_extend:SI (reg/v:QI 102 [ yy_c ]))) lex.yy.c:1423 138 {*zero_extendqisi2}
     (nil))
(insn 69 68 70 8 (parallel [
            (set (reg:SI 135 [ D.6593 ])
                (plus:SI (reg:SI 133 [ D.6593 ])
                    (reg:SI 134 [ D.6593 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1423 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 133 [ D.6593 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 70 69 71 8 (set (reg:DI 136 [ D.6593 ])
        (sign_extend:DI (reg:SI 135 [ D.6593 ]))) lex.yy.c:1423 142 {*extendsidi2_rex64}
     (nil))
(insn 71 70 72 8 (set (reg:SI 137 [ D.6593 ])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 136 [ D.6593 ])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL6yy_chk") [flags 0x2]  <var_decl 0x7f88bc0806c0 yy_chk>)) [3 yy_chk S2 A16]))) lex.yy.c:1423 146 {extendhisi2}
     (expr_list:REG_DEAD (reg:DI 136 [ D.6593 ])
        (nil)))
(insn 72 71 73 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 100 [ yy_current_state ])
            (reg:SI 137 [ D.6593 ]))) lex.yy.c:1423 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 137 [ D.6593 ])
        (expr_list:REG_DEAD (reg/v:SI 100 [ yy_current_state ])
            (nil))))
(jump_insn 73 72 74 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) lex.yy.c:1423 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 91)
;;  succ:       11 [9.0%]  (LOOP_EXIT)
;;              9 [91.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 120 121 122 123 131 134 135

;; basic block 9, loop depth 2, count 0, freq 9100, probably never executed
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 [91.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u60(6){ }u61(7){ }u62(16){ }u63(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 120 121 122 123 131 134
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 17 [flags] 100
(note 74 73 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(note 77 74 78 9 NOTE_INSN_DELETED)
(insn 78 77 79 9 (set (reg/v:SI 100 [ yy_current_state ])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 131 [ yy_current_state ])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL6yy_def") [flags 0x2]  <var_decl 0x7f88bc080090 yy_def>)) [3 yy_def S2 A16]))) lex.yy.c:1425 146 {extendhisi2}
     (expr_list:REG_DEAD (reg:DI 131 [ yy_current_state ])
        (nil)))
(debug_insn 79 78 81 9 (var_location:SI yy_current_state (reg/v:SI 100 [ yy_current_state ])) lex.yy.c:1425 -1
     (nil))
(insn 81 79 82 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 100 [ yy_current_state ])
            (const_int 101 [0x65]))) lex.yy.c:1426 7 {*cmpsi_1}
     (nil))
(jump_insn 82 81 83 9 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) lex.yy.c:1426 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 59)
;;  succ:       10 [50.0%]  (FALLTHRU)
;;              8 [50.0%]  (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123 134

;; basic block 10, loop depth 2, count 0, freq 4550, probably never executed
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 [50.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u69(6){ }u70(7){ }u71(16){ }u72(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 120 121 122 123 134
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134
;; lr  def 	 102 141
(note 83 82 86 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 86 83 87 10 (set (reg:DI 141 [ D.6590 ])
        (zero_extend:DI (reg:SI 134 [ D.6593 ]))) lex.yy.c:1427 133 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:SI 134 [ D.6593 ])
        (nil)))
(insn 87 86 88 10 (set (reg/v:QI 102 [ yy_c ])
        (mem/u/j:QI (plus:DI (reg:DI 141 [ D.6590 ])
                (symbol_ref:DI ("_ZL7yy_meta") [flags 0x2]  <var_decl 0x7f88bc080cf0 yy_meta>)) [0 yy_meta S1 A8])) lex.yy.c:1427 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 141 [ D.6590 ])
        (nil)))
(debug_insn 88 87 145 10 (var_location:QI yy_c (reg/v:QI 102 [ yy_c ])) lex.yy.c:1427 -1
     (nil))
(jump_insn 145 88 146 10 (set (pc)
        (label_ref 59)) 654 {jump}
     (nil)
 -> 59)
;;  succ:       8 [100.0%]  (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123

(barrier 146 145 91)
;; basic block 11, loop depth 1, count 0, freq 900, probably never executed
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       8 [9.0%]  (LOOP_EXIT)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u76(6){ }u77(7){ }u78(16){ }u79(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103 120 121 122 123 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 135
;; lr  def 	 17 [flags] 100 101 146
(code_label 91 146 92 11 6 "" [1 uses])
(note 92 91 97 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 97 92 98 11 (set (reg:DI 146 [ D.6590 ])
        (zero_extend:DI (reg:SI 135 [ D.6593 ]))) lex.yy.c:1429 133 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:SI 135 [ D.6593 ])
        (nil)))
(insn 98 97 99 11 (set (reg/v:SI 100 [ yy_current_state ])
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 146 [ D.6590 ])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL6yy_nxt") [flags 0x2]  <var_decl 0x7f88bc0803f0 yy_nxt>)) [3 yy_nxt S2 A16]))) lex.yy.c:1429 139 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:DI 146 [ D.6590 ])
        (nil)))
(debug_insn 99 98 100 11 (var_location:SI yy_current_state (reg/v:SI 100 [ yy_current_state ])) lex.yy.c:1429 -1
     (nil))
(insn 100 99 101 11 (parallel [
            (set (reg/v/f:DI 101 [ yy_cp ])
                (plus:DI (reg/v/f:DI 101 [ yy_cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1415 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 101 100 147 11 (var_location:DI yy_cp (reg/v/f:DI 101 [ yy_cp ])) lex.yy.c:1415 -1
     (nil))
(jump_insn 147 101 148 11 (set (pc)
        (label_ref 102)) lex.yy.c:1415 654 {jump}
     (nil)
 -> 102)
;;  succ:       3 [100.0%]  (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 120 121 122 123

(barrier 148 147 105)
;; basic block 12, loop depth 0, count 0, freq 89, probably never executed
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       3 [9.0%]  (LOOP_EXIT)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u85(6){ }u86(7){ }u87(16){ }u88(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 120 121 122 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122
;; lr  def 	 17 [flags]
(code_label 105 148 106 12 2 "" [1 uses])
(note 106 105 107 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 122 [ yy_last_accepting_state_lsm.161 ])
            (const_int 0 [0]))) 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 122 [ yy_last_accepting_state_lsm.161 ])
        (nil)))
(jump_insn 108 107 109 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 111)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 111)
;;  succ:       14 [100.0%] 
;;              13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 120 121 123

;; basic block 13, loop depth 0, count 0, freq 0, probably never executed
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u91(6){ }u92(7){ }u93(16){ }u94(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 120 121 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  def 	
(note 109 108 110 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 13 (set (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])
        (reg:SI 123 [ yy_last_accepting_state_lsm.160 ])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 123 [ yy_last_accepting_state_lsm.160 ])
        (nil)))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 120 121

;; basic block 14, loop depth 0, count 0, freq 0, probably never executed
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [100.0%]  (FALLTHRU)
;;              12 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u96(6){ }u97(7){ }u98(16){ }u99(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 120 121
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120
;; lr  def 	 17 [flags]
(code_label 111 110 112 14 9 "" [1 uses])
(note 112 111 113 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 120 [ yy_last_accepting_cpos_lsm.163 ])
            (const_int 0 [0]))) 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 120 [ yy_last_accepting_cpos_lsm.163 ])
        (nil)))
(jump_insn 114 113 115 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 117)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 117)
;;  succ:       16 [100.0%] 
;;              15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 121

;; basic block 15, loop depth 0, count 0, freq 0, probably never executed
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u102(6){ }u103(7){ }u104(16){ }u105(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 121
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 121
;; lr  def 	
(note 115 114 116 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 15 (set (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])
        (reg/f:DI 121 [ yy_last_accepting_cpos_lsm.162 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 121 [ yy_last_accepting_cpos_lsm.162 ])
        (nil)))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100

;; basic block 16, loop depth 0, count 0, freq 89, probably never executed
;;  prev block 15, next block 1, flags: (RTL)
;;  pred:       15 [100.0%]  (FALLTHRU)
;;              14 [100.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u107(6){ }u108(7){ }u109(16){ }u110(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 0 [ax]
(code_label 117 116 118 16 10 "" [1 uses])
(note 118 117 123 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 123 118 124 16 (set (reg/i:SI 0 ax)
        (reg/v:SI 100 [ yy_current_state ])) lex.yy.c:1433 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 100 [ yy_current_state ])
        (nil)))
(insn 124 123 0 16 (use (reg/i:SI 0 ax)) lex.yy.c:1433 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void yy_fatal_error(const char*) (_ZL14yy_fatal_errorPKc, funcdef_no=104, decl_uid=4297, cgraph_uid=104, symbol_order=131) (executed once)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 88 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r88,l0) best CREG, allocno CREG

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:-1000,-1000 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000


Pass 1 for finding pseudo/allocno costs

    r88: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,-1000 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000

   Insn 17(l0): point = 0
   Insn 16(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 2(l0): point = 16
 a0(r88): [15..16]
Compressing live ranges: from 19 to 2 - 10%
Ranges after the compression:
 a0(r88): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r88,l0) conflicts:  pref0:a0(r88)<-hr2@1500
  pref1:a0(r88)<-hr5@1000
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r88
    modified regnos: 88
    border:
    Pressure: GENERAL_REGS=5
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@20000
      Allocno a0r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a0(r88,l0)(cost 0)
      Popping a0(r88,l0)  -- assign reg 2
Disposition:
    0:r88  l0     2
New iteration of spill/restore move
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void yy_fatal_error(const char*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={4d,1u} r1={4d,1u} r2={4d,1u} r4={4d,1u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r88={1d,1u} 
;;    total ref usage 187{170d,17u,0e} in 13{11 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 88 [ msg ])
        (reg:DI 5 di [ msg ])) lex.yy.c:1941 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ msg ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 6 3 7 2 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x7f88bc3c9ea0 stderr>) [1 stderr+0 S8 A64])) lex.yy.c:1942 -1
     (nil))
(debug_insn 7 6 8 2 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f88bbed7240 *.LC1>)) lex.yy.c:1942 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 2 cx)
        (reg/v/f:DI 88 [ msg ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 88 [ msg ])
        (nil)))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f88bbed7240 *.LC1>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 90 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x7f88bc3c9ea0 stderr>) [1 stderr+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 93 {*movqi_internal}
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f88bc333948 __fprintf_chk>) [0 __builtin___fprintf_chk S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f88bc333948 __fprintf_chk>)
                            (nil)))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(debug_insn 14 13 15 2 (var_location:DI __stream (clobber (const_int 0 [0]))) lex.yy.c:1942 -1
     (nil))
(debug_insn 15 14 16 2 (var_location:DI __fmt (clobber (const_int 0 [0]))) lex.yy.c:1942 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 5 di)
        (const_int 2 [0x2])) lex.yy.c:1943 90 {*movsi_internal}
     (nil))
(call_insn 17 16 18 2 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f88bc31bca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) lex.yy.c:1943 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f88bc31bca8 exit>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 18 17 0)

;; Function void yyensure_buffer_stack() (_ZL21yyensure_buffer_stackv, funcdef_no=100, decl_uid=4265, cgraph_uid=100, symbol_order=127)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 10 (    1)
scanning new insn with uid = 88.
verify found no changes in insn with uid = 88.
deleting insn with uid = 66.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 10 (    1)
Reg 87 uninteresting
Reg 97 uninteresting
Reg 89 uninteresting
Reg 88 uninteresting
Reg 100: local to bb 8 def dominates all uses has unique first use
Reg 102 uninteresting
Examining insn 64, def for 100
  all ok
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 6 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { 9 }
;; 6 succs { 7 9 }
;; 7 succs { 4 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 102: (insn_list:REG_DEP_TRUE 88 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r103,l0) best CREG, allocno CREG
    a4 (r102,l0) best AREG, allocno AREG
    a2 (r101,l0) best DIREG, allocno DIREG
    a3 (r100,l0) best DIREG, allocno DIREG
    a9 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r97,l0) best AREG, allocno AREG
    a5 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a8 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best AREG, allocno AREG
    a7 (r87,l0) best DIREG, allocno DIREG

  a0(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:10527,10527 NO_REX_SSE_REGS:10527,10527 SSE_REGS:10527,10527 MMX_REGS:14157,14157 INT_SSE_REGS:11253,11253 ALL_REGS:226512,226512 MEM:3993,3993
  a1(r103,l0) costs: AREG:1452,1452 DREG:1452,1452 CREG:0,0 BREG:1452,1452 SIREG:1452,1452 DIREG:1452,1452 AD_REGS:1452,1452 Q_REGS:1452,1452 NON_Q_REGS:1452,1452 GENERAL_REGS:1452,1452 SSE_FIRST_REG:10527,10527 NO_REX_SSE_REGS:10527,10527 SSE_REGS:10527,10527 MMX_REGS:12342,12342 INT_SSE_REGS:10890,10890 ALL_REGS:187308,187308 MEM:3267,3267
  a2(r101,l0) costs: AREG:726,726 DREG:726,726 CREG:726,726 BREG:726,726 SIREG:726,726 DIREG:0,0 AD_REGS:726,726 Q_REGS:726,726 NON_Q_REGS:726,726 GENERAL_REGS:726,726 SSE_FIRST_REG:4719,4719 NO_REX_SSE_REGS:4719,4719 SSE_REGS:4719,4719 MMX_REGS:4719,4719 INT_SSE_REGS:4719,4719 ALL_REGS:75504,75504 MEM:1452,1452
  a3(r100,l0) costs: AREG:726,726 DREG:726,726 CREG:726,726 BREG:726,726 SIREG:726,726 DIREG:0,0 AD_REGS:726,726 Q_REGS:726,726 NON_Q_REGS:726,726 GENERAL_REGS:726,726 SSE_FIRST_REG:7623,7623 NO_REX_SSE_REGS:7623,7623 SSE_REGS:7623,7623 MMX_REGS:9438,9438 INT_SSE_REGS:7986,7986 ALL_REGS:151008,151008 MEM:2904,2904
  a4(r102,l0) costs: AREG:0,0 DREG:726,726 CREG:726,726 BREG:726,726 SIREG:726,726 DIREG:726,726 AD_REGS:726,726 Q_REGS:726,726 NON_Q_REGS:726,726 GENERAL_REGS:726,726 SSE_FIRST_REG:5808,5808 NO_REX_SSE_REGS:5808,5808 SSE_REGS:5808,5808 MMX_REGS:7623,7623 INT_SSE_REGS:6171,6171 ALL_REGS:111804,111804 MEM:1815,1815
  a5(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:10527,10527 NO_REX_SSE_REGS:10527,10527 SSE_REGS:10527,10527 MMX_REGS:14157,14157 INT_SSE_REGS:11253,11253 ALL_REGS:226512,226512 MEM:3993,3993
  a6(r88,l0) costs: AREG:-363,-363 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11616,11616 NO_REX_SSE_REGS:11616,11616 SSE_REGS:11616,11616 MMX_REGS:17061,17061 INT_SSE_REGS:12705,12705 ALL_REGS:262812,262812 MEM:4719,4719
  a7(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-363,-363 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:22904,22904 NO_REX_SSE_REGS:22904,22904 SSE_REGS:22904,22904 MMX_REGS:29719,29719 INT_SSE_REGS:24267,24267 ALL_REGS:387504,387504 MEM:9089,9089
  a8(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21544,21544 NO_REX_SSE_REGS:21544,21544 SSE_REGS:21544,21544 MMX_REGS:28019,28019 INT_SSE_REGS:22839,22839 ALL_REGS:366288,366288 MEM:8545,8545
  a9(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19572,19572 NO_REX_SSE_REGS:19572,19572 SSE_REGS:19572,19572 MMX_REGS:24232,24232 INT_SSE_REGS:20504,20504 ALL_REGS:387712,387712 MEM:7456,7456
  a10(r97,l0) costs: AREG:-67,-67 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1608,1608 NO_REX_SSE_REGS:1608,1608 SSE_REGS:1608,1608 MMX_REGS:2278,2278 INT_SSE_REGS:1742,1742 ALL_REGS:34572,34572 MEM:603,603


Pass 1 for finding pseudo/allocno costs

    r103: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r97: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r88: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:10527,10527 NO_REX_SSE_REGS:10527,10527 SSE_REGS:10527,10527 MMX_REGS:14157,14157 INT_SSE_REGS:11253,11253 ALL_REGS:226512,226512 MEM:3993,3993
  a1(r103,l0) costs: AREG:1452,1452 DREG:1452,1452 CREG:1452,0 BREG:1452,1452 SIREG:1452,1452 DIREG:1452,1452 AD_REGS:1452,1452 Q_REGS:1452,1452 NON_Q_REGS:1452,1452 GENERAL_REGS:1452,1452 SSE_FIRST_REG:11979,11979 NO_REX_SSE_REGS:11979,11979 SSE_REGS:11979,11979 MMX_REGS:13794,13794 INT_SSE_REGS:12342,12342 ALL_REGS:188760,188760 MEM:4356,4356
  a2(r101,l0) costs: AREG:726,726 DREG:726,726 CREG:726,726 BREG:726,726 SIREG:726,726 DIREG:726,0 AD_REGS:726,726 Q_REGS:726,726 NON_Q_REGS:726,726 GENERAL_REGS:726,726 SSE_FIRST_REG:4719,4719 NO_REX_SSE_REGS:4719,4719 SSE_REGS:4719,4719 MMX_REGS:4719,4719 INT_SSE_REGS:4719,4719 ALL_REGS:75504,75504 MEM:1452,1452
  a3(r100,l0) costs: AREG:726,726 DREG:726,726 CREG:726,726 BREG:726,726 SIREG:726,726 DIREG:726,0 AD_REGS:726,726 Q_REGS:726,726 NON_Q_REGS:726,726 GENERAL_REGS:726,726 SSE_FIRST_REG:7623,7623 NO_REX_SSE_REGS:7623,7623 SSE_REGS:7623,7623 MMX_REGS:9438,9438 INT_SSE_REGS:7986,7986 ALL_REGS:151008,151008 MEM:2904,2904
  a4(r102,l0) costs: AREG:726,0 DREG:726,726 CREG:726,726 BREG:726,726 SIREG:726,726 DIREG:726,726 AD_REGS:726,726 Q_REGS:726,726 NON_Q_REGS:726,726 GENERAL_REGS:726,726 SSE_FIRST_REG:7260,7260 NO_REX_SSE_REGS:7260,7260 SSE_REGS:7260,7260 MMX_REGS:9075,9075 INT_SSE_REGS:7623,7623 ALL_REGS:113256,113256 MEM:2904,2904
  a5(r93,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:10527,10527 NO_REX_SSE_REGS:10527,10527 SSE_REGS:10527,10527 MMX_REGS:14157,14157 INT_SSE_REGS:11253,11253 ALL_REGS:226512,226512 MEM:3993,3993
  a6(r88,l0) costs: AREG:0,-363 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:13068,13068 NO_REX_SSE_REGS:13068,13068 SSE_REGS:13068,13068 MMX_REGS:18513,18513 INT_SSE_REGS:14157,14157 ALL_REGS:264264,264264 MEM:5808,5808
  a7(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-363 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23904,23904 NO_REX_SSE_REGS:23904,23904 SSE_REGS:23904,23904 MMX_REGS:30719,30719 INT_SSE_REGS:25267,25267 ALL_REGS:391504,391504 MEM:9089,9089
  a8(r89,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:22476,22476 NO_REX_SSE_REGS:22476,22476 SSE_REGS:22476,22476 MMX_REGS:28951,28951 INT_SSE_REGS:23771,23771 ALL_REGS:370016,370016 MEM:8545,8545
  a9(r98,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:19572,19572 NO_REX_SSE_REGS:19572,19572 SSE_REGS:19572,19572 MMX_REGS:24232,24232 INT_SSE_REGS:20504,20504 ALL_REGS:387712,387712 MEM:7456,7456
  a10(r97,l0) costs: AREG:0,-67 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1876,1876 NO_REX_SSE_REGS:1876,1876 SSE_REGS:1876,1876 MMX_REGS:2546,2546 INT_SSE_REGS:2010,2010 ALL_REGS:34840,34840 MEM:804,804

   Insn 72(l0): point = 1
   Insn 68(l0): point = 3
   Insn 88(l0): point = 5
   Insn 67(l0): point = 7
   Insn 64(l0): point = 9
   Insn 86(l0): point = 12
   Insn 33(l0): point = 14
   Insn 32(l0): point = 16
   Insn 22(l0): point = 19
   Insn 21(l0): point = 21
   Insn 58(l0): point = 24
   Insn 57(l0): point = 26
   Insn 55(l0): point = 28
   Insn 52(l0): point = 30
   Insn 51(l0): point = 32
   Insn 50(l0): point = 34
   Insn 49(l0): point = 36
   Insn 46(l0): point = 38
   Insn 44(l0): point = 40
   Insn 41(l0): point = 43
   Insn 40(l0): point = 45
   Insn 39(l0): point = 47
   Insn 38(l0): point = 49
   Insn 19(l0): point = 52
   Insn 18(l0): point = 54
   Insn 17(l0): point = 56
   Insn 14(l0): point = 58
   Insn 13(l0): point = 60
   Insn 12(l0): point = 62
   Insn 11(l0): point = 64
   Insn 7(l0): point = 67
   Insn 6(l0): point = 69
   Insn 5(l0): point = 71
 a0(r92): [24..40] [2..11]
 a1(r103): [3..7]
 a2(r101): [3..3]
 a3(r100): [3..9]
 a4(r102): [4..5]
 a5(r93): [24..38] [10..11]
 a6(r88): [24..30] [10..11]
 a7(r87): [67..71] [35..51]
 a8(r89): [41..49]
 a9(r98): [46..47]
 a10(r97): [55..58]
Compressing live ranges: from 74 to 16 - 21%
Ranges after the compression:
 a0(r92): [0..9]
 a1(r103): [1..3]
 a2(r101): [1..1]
 a3(r100): [1..3]
 a4(r102): [2..3]
 a5(r93): [4..9]
 a6(r88): [4..7]
 a7(r87): [14..15] [8..11]
 a8(r89): [10..11]
 a9(r98): [10..11]
 a10(r97): [12..13]
+++Allocating 88 bytes for conflict table (uncompressed size 88)
;; a0(r92,l0) conflicts: a2(r101,l0) a1(r103,l0) a3(r100,l0) a4(r102,l0) a6(r88,l0) a5(r93,l0) a7(r87,l0)
;;     total conflict hard regs: 0 2 4 5
;;     conflict hard regs: 0 2 4 5

;; a1(r103,l0) conflicts: a0(r92,l0) a2(r101,l0) a3(r100,l0) a4(r102,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a2(r101,l0) conflicts: a0(r92,l0) a1(r103,l0) a3(r100,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2

;; a3(r100,l0) conflicts: a0(r92,l0) a2(r101,l0) a1(r103,l0) a4(r102,l0)
;;     total conflict hard regs: 0 2 5
;;     conflict hard regs: 0 2 5

;; a4(r102,l0) conflicts: a0(r92,l0) a1(r103,l0) a3(r100,l0)
;;     total conflict hard regs: 2 5
;;     conflict hard regs: 2 5

;; a5(r93,l0) conflicts: a0(r92,l0) a6(r88,l0) a7(r87,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a6(r88,l0) conflicts: a0(r92,l0) a5(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r87,l0) conflicts: a0(r92,l0) a5(r93,l0) a8(r89,l0) a9(r98,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a8(r89,l0) conflicts: a7(r87,l0) a9(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r98,l0) conflicts: a7(r87,l0) a8(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r97,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a0(r92)<->a8(r89)@45:shuffle
  pref0:a1(r103)<-hr2@726
  pref1:a4(r102)<-hr0@363
  pref2:a2(r101)<-hr5@363
  pref3:a3(r100)<-hr5@363
  pref4:a10(r97)<-hr0@100
  pref5:a6(r88)<-hr0@544
  pref6:a7(r87)<-hr5@544
  pref7:a5(r93)<-hr4@363
  regions=1, blocks=10, points=16
    allocnos=11 (big 0), copies=1, conflicts=0, ranges=12

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 9 8 7 6 5 4 3 2
    all: 0r92 1r103 2r101 3r100 4r102 5r93 6r88 7r87 8r89 9r98 10r97
    modified regnos: 87 88 89 92 93 97 98 100 101 102 103
    border:
    Pressure: GENERAL_REGS=4
 Removing pref3:hr5@363
 Removing pref7:hr4@363
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@47806
          2:( 0-3 5 6 37-44)@20356
            3:( 1-3 6 37-44)@16698
              4:( 1 3 6 37-44)@19602
      Allocno a0r92 of GENERAL_REGS(15) has 11 avail. regs  1 3 6 37-44, node:  1 3 6 37-44 (confl regs =  0 2 4 5 7-36 45-79)
      Allocno a1r103 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, ^node:  0-6 37-44 (confl regs =  0 5 7-36 45-79)
      Allocno a2r101 of GENERAL_REGS(15) has 14 avail. regs  0 1 3-6 37-44, ^node:  0-6 37-44 (confl regs =  2 7-36 45-79)
      Allocno a3r100 of GENERAL_REGS(15) has 12 avail. regs  1 3 4 6 37-44, ^node:  0-6 37-44 (confl regs =  0 2 5 7-36 45-79)
      Allocno a4r102 of GENERAL_REGS(15) has 13 avail. regs  0 1 3 4 6 37-44, ^node:  0-6 37-44 (confl regs =  2 5 7-36 45-79)
      Allocno a5r93 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a6r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a7r87 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a8r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a9r98 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a10r97 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Forming thread by copy 0:a0r92-a8r89 (freq=45):
        Result (freq=3316): a0r92(1089) a8r89(2227)
      Pushing a10(r97,l0)(cost 0)
      Pushing a2(r101,l0)(cost 0)
      Pushing a4(r102,l0)(cost 0)
      Pushing a5(r93,l0)(cost 0)
      Pushing a3(r100,l0)(cost 0)
      Pushing a6(r88,l0)(cost 0)
      Pushing a1(r103,l0)(cost 0)
      Pushing a9(r98,l0)(cost 0)
      Pushing a7(r87,l0)(cost 0)
      Pushing a0(r92,l0)(cost 0)
      Pushing a8(r89,l0)(cost 0)
      Popping a8(r89,l0)  -- assign reg 0
      Popping a0(r92,l0)  -- assign reg 3
      Popping a7(r87,l0)  -- assign reg 5
      Popping a9(r98,l0)  -- assign reg 1
      Popping a1(r103,l0)  -- assign reg 2
      Popping a6(r88,l0)  -- assign reg 0
      Popping a3(r100,l0)  -- assign reg 1
      Popping a5(r93,l0)  -- assign reg 6
      Popping a4(r102,l0)  -- assign reg 0
      Popping a2(r101,l0)  -- assign reg 5
      Popping a10(r97,l0)  -- assign reg 0
Disposition:
    7:r87  l0     5    6:r88  l0     0    8:r89  l0     0    0:r92  l0     3
    5:r93  l0     6   10:r97  l0     0    9:r98  l0     1    3:r100 l0     1
    2:r101 l0     5    4:r102 l0     0    1:r103 l0     2
New iteration of spill/restore move
+++Costs: overall -1653, reg -1653, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void yyensure_buffer_stack()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={4d,2u} r1={4d} r2={4d} r4={6d,2u} r5={7d,3u} r6={1d,9u} r7={1d,12u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,8u} r17={10d,4u} r18={3d} r19={3d} r20={1d,9u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,3u} r88={1d,4u} r89={1d,2u} r92={1d,3u} r93={1d,4u} r97={1d,2u} r98={1d,1u} r100={1d,2u} r101={1d} r102={1d,1u} r103={2d,2u} 
;;    total ref usage 332{259d,73u,0e} in 51{48 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 87 [ D.6619 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1811 89 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.6619 ])
            (const_int 0 [0]))) lex.yy.c:1811 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) lex.yy.c:1811 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9328 (nil)))
 -> 36)
;;  succ:       3 [6.7%]  (FALLTHRU)
;;              6 [93.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 3, loop depth 0, count 0, freq 672, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [6.7%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u6(6){ }u7(7){ }u8(16){ }u9(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 97
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 9 8 10 3 (var_location:DI num_to_alloc (const_int 1 [0x1])) lex.yy.c:1817 -1
     (nil))
(debug_insn 10 9 11 3 (var_location:DI size (const_int 8 [0x8])) lex.yy.c:1819 -1
     (nil))
(insn 11 10 12 3 (set (reg:DI 4 si)
        (const_int 1 [0x1])) lex.yy.c:2123 89 {*movdi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:DI 5 di)
        (const_int 8 [0x8])) lex.yy.c:2123 89 {*movdi_internal}
     (nil))
(call_insn 13 12 14 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x7f88bc316438 __builtin_calloc>) [0 __builtin_calloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x7f88bc316438 __builtin_calloc>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 13 16 3 (set (reg/f:DI 97)
        (reg:DI 0 ax)) lex.yy.c:2123 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 97)
            (nil))))
(debug_insn 16 14 17 3 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1819 -1
     (nil))
(insn 17 16 18 3 (set (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (reg/f:DI 97)) lex.yy.c:1820 89 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 97)
            (const_int 0 [0]))) lex.yy.c:1821 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (nil)))
(jump_insn 19 18 56 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) lex.yy.c:1821 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 24)
;;  succ:       4 [0.0%]  (FALLTHRU)
;;              5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 1
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [0.0%]  (FALLTHRU)
;;              7 [0.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(6){ }u18(7){ }u19(16){ }u20(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 56 19 20 4 27 "" [1 uses])
(note 20 56 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f88bbee21b0 *.LC3>)) lex.yy.c:1822 89 {*movdi_internal}
     (nil))
(call_insn 22 21 23 4 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1822 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 23 22 24)
;; basic block 5, loop depth 0, count 0, freq 672, maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 24 23 25 5 25 "" [1 uses])
(note 25 24 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 29 25 30 5 (var_location:DI __dest (clobber (const_int 0 [0]))) lex.yy.c:1824 -1
     (nil))
(debug_insn 30 29 31 5 (var_location:SI __ch (clobber (const_int 0 [0]))) lex.yy.c:1824 -1
     (nil))
(debug_insn 31 30 32 5 (var_location:DI __len (clobber (const_int 0 [0]))) lex.yy.c:1824 -1
     (nil))
(insn 32 31 33 5 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_max") [flags 0x2]  <var_decl 0x7f88bc0801b0 yy_buffer_stack_max>) [4 yy_buffer_stack_max+0 S8 A64])
        (const_int 1 [0x1])) lex.yy.c:1826 89 {*movdi_internal}
     (nil))
(insn 33 32 86 5 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:1827 89 {*movdi_internal}
     (nil))
(jump_insn 86 33 87 5 (set (pc)
        (label_ref 75)) 654 {jump}
     (nil)
 -> 75)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 87 86 36)
;; basic block 6, loop depth 0, count 0, freq 9328, maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [93.3%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u27(6){ }u28(7){ }u29(16){ }u30(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89 98
(code_label 36 87 37 6 24 "" [1 uses])
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 6 (set (reg:DI 89 [ D.6621 ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_max") [flags 0x2]  <var_decl 0x7f88bc0801b0 yy_buffer_stack_max>) [4 yy_buffer_stack_max+0 S8 A64])) lex.yy.c:1831 89 {*movdi_internal}
     (nil))
(insn 39 38 40 6 (parallel [
            (set (reg:DI 98 [ D.6621 ])
                (plus:DI (reg:DI 89 [ D.6621 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1831 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 40 39 41 6 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 98 [ D.6621 ])
            (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64]))) lex.yy.c:1831 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 98 [ D.6621 ])
        (nil)))
(jump_insn 41 40 42 6 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 75)
            (pc))) lex.yy.c:1831 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 6102 (nil)))
 -> 75)
;;  succ:       7 [39.0%]  (FALLTHRU)
;;              9 [61.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89

;; basic block 7, loop depth 0, count 0, freq 3636, maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       6 [39.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u34(6){ }u35(7){ }u36(16){ }u37(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 92 93
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 43 42 44 7 (var_location:DI grow_size (const_int 8 [0x8])) lex.yy.c:1834 -1
     (nil))
(insn 44 43 45 7 (parallel [
            (set (reg/v:DI 92 [ num_to_alloc ])
                (plus:DI (reg:DI 89 [ D.6621 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1836 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 89 [ D.6621 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(debug_insn 45 44 46 7 (var_location:DI num_to_alloc (reg/v:DI 92 [ num_to_alloc ])) lex.yy.c:1836 -1
     (nil))
(insn 46 45 47 7 (parallel [
            (set (reg:DI 93 [ D.6621 ])
                (ashift:DI (reg/v:DI 92 [ num_to_alloc ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1838 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 47 46 48 7 (var_location:DI ptr (reg/f:DI 87 [ D.6619 ])) lex.yy.c:1838 -1
     (nil))
(debug_insn 48 47 49 7 (var_location:DI size (reg:DI 93 [ D.6621 ])) lex.yy.c:1838 -1
     (nil))
(insn 49 48 50 7 (set (reg:DI 4 si)
        (reg:DI 93 [ D.6621 ])) lex.yy.c:2136 89 {*movdi_internal}
     (nil))
(insn 50 49 51 7 (set (reg:DI 5 di)
        (reg/f:DI 87 [ D.6619 ])) lex.yy.c:2136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.6619 ])
        (nil)))
(call_insn 51 50 52 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2136 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 52 51 53 7 (set (reg/f:DI 88 [ D.6620 ])
        (reg:DI 0 ax)) lex.yy.c:2136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 53 52 54 7 (var_location:DI ptr (clobber (const_int 0 [0]))) lex.yy.c:1838 -1
     (nil))
(debug_insn 54 53 55 7 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1838 -1
     (nil))
(insn 55 54 57 7 (set (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (reg/f:DI 88 [ D.6620 ])) lex.yy.c:1840 89 {*movdi_internal}
     (nil))
(insn 57 55 58 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.6620 ])
            (const_int 0 [0]))) lex.yy.c:1841 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 58 57 59 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 56)
            (pc))) lex.yy.c:1841 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 56)
;;  succ:       4 [0.0%] 
;;              8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 92 93

;; basic block 8, loop depth 0, count 0, freq 3635, maybe hot
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u52(6){ }u53(7){ }u54(16){ }u55(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 92 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 92 93
;; lr  def 	 100 101 102 103
(note 59 58 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 60 59 61 8 (var_location:DI __dest (plus:DI (plus:DI (reg/f:DI 88 [ D.6620 ])
            (reg:DI 93 [ D.6621 ]))
        (const_int -64 [0xffffffffffffffc0]))) lex.yy.c:1845 -1
     (nil))
(debug_insn 61 60 62 8 (var_location:SI __ch (const_int 0 [0])) lex.yy.c:1845 -1
     (nil))
(debug_insn 62 61 63 8 (var_location:DI __len (const_int 64 [0x40])) lex.yy.c:1845 -1
     (nil))
(note 63 62 64 8 NOTE_INSN_DELETED)
(insn 64 63 67 8 (set (reg:DI 100 [ D.6619 ])
        (plus:DI (plus:DI (reg/f:DI 88 [ D.6620 ])
                (reg:DI 93 [ D.6621 ]))
            (const_int -64 [0xffffffffffffffc0]))) /usr/include/x86_64-linux-gnu/bits/string3.h:90 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 93 [ D.6621 ])
        (expr_list:REG_DEAD (reg/f:DI 88 [ D.6620 ])
            (nil))))
(insn 67 64 88 8 (set (reg:DI 103)
        (const_int 8 [0x8])) /usr/include/x86_64-linux-gnu/bits/string3.h:90 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))
(insn 88 67 68 8 (set (reg:DI 102)
        (const_int 0 [0])) /usr/include/x86_64-linux-gnu/bits/string3.h:90 89 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int 0 [0])
        (nil)))
(insn 68 88 69 8 (parallel [
            (set (reg:DI 103)
                (const_int 0 [0]))
            (set (reg/f:DI 101 [ D.6619 ])
                (plus:DI (ashift:DI (reg:DI 103)
                        (const_int 3 [0x3]))
                    (reg:DI 100 [ D.6619 ])))
            (set (mem:BLK (reg:DI 100 [ D.6619 ]) [0 MEM[(void *)_13]+0 S64 A64])
                (const_int 0 [0]))
            (use (reg:DI 102))
            (use (reg:DI 103))
        ]) /usr/include/x86_64-linux-gnu/bits/string3.h:90 935 {*rep_stosdi_rex64}
     (expr_list:REG_DEAD (reg:DI 102)
        (expr_list:REG_DEAD (reg:DI 100 [ D.6619 ])
            (expr_list:REG_UNUSED (reg:DI 103)
                (expr_list:REG_UNUSED (reg/f:DI 101 [ D.6619 ])
                    (nil))))))
(debug_insn 69 68 70 8 (var_location:DI __dest (clobber (const_int 0 [0]))) lex.yy.c:1845 -1
     (nil))
(debug_insn 70 69 71 8 (var_location:SI __ch (clobber (const_int 0 [0]))) lex.yy.c:1845 -1
     (nil))
(debug_insn 71 70 72 8 (var_location:DI __len (clobber (const_int 0 [0]))) lex.yy.c:1845 -1
     (nil))
(insn 72 71 75 8 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_max") [flags 0x2]  <var_decl 0x7f88bc0801b0 yy_buffer_stack_max>) [4 yy_buffer_stack_max+0 S8 A64])
        (reg/v:DI 92 [ num_to_alloc ])) lex.yy.c:1846 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 92 [ num_to_alloc ])
        (nil)))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 8, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       8 [100.0%]  (FALLTHRU)
;;              6 [61.0%] 
;;              5 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u67(6){ }u68(7){ }u69(16){ }u70(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 75 72 76 9 23 "" [2 uses])
(note 76 75 0 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void yy_switch_to_buffer(YY_BUFFER_STATE) (_Z19yy_switch_to_bufferP15yy_buffer_state, funcdef_no=92, decl_uid=4254, cgraph_uid=92, symbol_order=119)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 10 (    1)
scanning new insn with uid = 73.
verify found no changes in insn with uid = 73.
deleting insn with uid = 11.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 10 (    1)
Reg 88 uninteresting
Ignoring reg 106, has equiv memory
Reg 92 uninteresting
Ignoring reg 93, has equiv memory
Ignoring reg 107, has equiv memory
Ignoring reg 95, has equiv memory
Ignoring reg 108, has equiv memory
Ignoring reg 109, has equiv memory
Ignoring reg 110, has equiv memory
Reg 99 uninteresting
Reg 111 uninteresting
Ignoring reg 112, has equiv memory
Ignoring reg 113, has equiv memory
Ignoring reg 114, has equiv memory
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 7 }
;; 3 succs { 9 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 9 }
;; 7 succs { 9 8 }
;; 8 succs { 6 }
;; 9 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 93: (insn_list:REG_DEP_TRUE 21 (nil))
init_insns for 95: (insn_list:REG_DEP_TRUE 24 (nil))
init_insns for 106: (insn_list:REG_DEP_TRUE 73 (nil))
init_insns for 107: (insn_list:REG_DEP_TRUE 22 (nil))
init_insns for 108: (insn_list:REG_DEP_TRUE 26 (nil))
init_insns for 109: (insn_list:REG_DEP_TRUE 27 (nil))
init_insns for 110: (insn_list:REG_DEP_TRUE 32 (nil))
init_insns for 112: (insn_list:REG_DEP_TRUE 39 (nil))
init_insns for 113: (insn_list:REG_DEP_TRUE 41 (nil))
init_insns for 114: (insn_list:REG_DEP_TRUE 51 (nil))

Pass 0 for finding pseudo/allocno costs

    a1 (r114,l0) best NO_REGS, allocno NO_REGS
    a3 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a7 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a9 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a8 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a12 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a15 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r104,l0) best DIREG, allocno DIREG
    a4 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a11 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a13 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a14 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:54728,54728 NO_REX_SSE_REGS:54728,54728 SSE_REGS:54728,54728 MMX_REGS:80938,80938 INT_SSE_REGS:59970,59970 ALL_REGS:1295008,1295008 MEM:24770,24770
  a1(r114,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2680,2680 NO_REX_SSE_REGS:2680,2680 SSE_REGS:2680,2680 MMX_REGS:3350,3350 INT_SSE_REGS:2814,2814 ALL_REGS:41808,41808 MEM:-134,-134
  a2(r104,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:44736,44736 NO_REX_SSE_REGS:44736,44736 SSE_REGS:44736,44736 MMX_REGS:67696,67696 INT_SSE_REGS:49328,49328 ALL_REGS:1055136,1055136 MEM:18518,18518
  a3(r113,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a4(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:39512,39512 NO_REX_SSE_REGS:39512,39512 SSE_REGS:39512,39512 MMX_REGS:57472,57472 INT_SSE_REGS:43104,43104 ALL_REGS:840528,840528 MEM:17960,17960
  a5(r112,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:17960,17960 NO_REX_SSE_REGS:17960,17960 SSE_REGS:17960,17960 MMX_REGS:22450,22450 INT_SSE_REGS:18858,18858 ALL_REGS:280176,280176 MEM:0,0
  a6(r111,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:25144,25144 NO_REX_SSE_REGS:25144,25144 SSE_REGS:25144,25144 MMX_REGS:34124,34124 INT_SSE_REGS:26940,26940 ALL_REGS:466960,466960 MEM:10776,10776
  a7(r110,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:17960,17960 NO_REX_SSE_REGS:17960,17960 SSE_REGS:17960,17960 MMX_REGS:22450,22450 INT_SSE_REGS:18858,18858 ALL_REGS:280176,280176 MEM:0,0
  a8(r108,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12980,12980 NO_REX_SSE_REGS:12980,12980 SSE_REGS:12980,12980 MMX_REGS:16225,16225 INT_SSE_REGS:13629,13629 ALL_REGS:202488,202488 MEM:0,0
  a9(r109,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12980,12980 NO_REX_SSE_REGS:12980,12980 SSE_REGS:12980,12980 MMX_REGS:16225,16225 INT_SSE_REGS:13629,13629 ALL_REGS:202488,202488 MEM:0,0
  a10(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12980,12980 NO_REX_SSE_REGS:12980,12980 SSE_REGS:12980,12980 MMX_REGS:16225,16225 INT_SSE_REGS:13629,13629 ALL_REGS:202488,202488 MEM:0,0
  a11(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:18172,18172 NO_REX_SSE_REGS:18172,18172 SSE_REGS:18172,18172 MMX_REGS:24662,24662 INT_SSE_REGS:19470,19470 ALL_REGS:337480,337480 MEM:2596,2596
  a12(r107,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a13(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23104,23104 NO_REX_SSE_REGS:23104,23104 SSE_REGS:23104,23104 MMX_REGS:31169,31169 INT_SSE_REGS:24717,24717 ALL_REGS:423904,423904 MEM:9002,9002
  a14(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26800,26800 NO_REX_SSE_REGS:26800,26800 SSE_REGS:26800,26800 MMX_REGS:36050,36050 INT_SSE_REGS:28650,28650 ALL_REGS:488800,488800 MEM:11400,11400
  a15(r106,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:17000,17000 NO_REX_SSE_REGS:17000,17000 SSE_REGS:17000,17000 MMX_REGS:21250,21250 INT_SSE_REGS:17850,17850 ALL_REGS:265200,265200 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r114: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r104: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r91,l0) costs: GENERAL_REGS:536,536 SSE_FIRST_REG:55264,55264 NO_REX_SSE_REGS:55264,55264 SSE_REGS:55264,55264 MMX_REGS:81474,81474 INT_SSE_REGS:60506,60506 ALL_REGS:1295544,1295544 MEM:25440,25440
  a1(r114,l0) costs: GENERAL_REGS:1072,1072 SSE_FIRST_REG:3216,3216 NO_REX_SSE_REGS:3216,3216 SSE_REGS:3216,3216 MMX_REGS:3886,3886 INT_SSE_REGS:3350,3350 ALL_REGS:42344,42344 MEM:536,536
  a2(r104,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:48736,48736 NO_REX_SSE_REGS:48736,48736 SSE_REGS:48736,48736 MMX_REGS:71696,71696 INT_SSE_REGS:53328,53328 ALL_REGS:1059136,1059136 MEM:21518,21518
  a3(r113,l0) costs: GENERAL_REGS:0,0 MEM:0,0
  a4(r99,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:40410,40410 NO_REX_SSE_REGS:40410,40410 SSE_REGS:40410,40410 MMX_REGS:58370,58370 INT_SSE_REGS:44002,44002 ALL_REGS:844120,844120 MEM:17960,17960
  a5(r112,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:18858,18858 NO_REX_SSE_REGS:18858,18858 SSE_REGS:18858,18858 MMX_REGS:23348,23348 INT_SSE_REGS:19756,19756 ALL_REGS:283768,283768 MEM:0,0
  a6(r111,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:26042,26042 NO_REX_SSE_REGS:26042,26042 SSE_REGS:26042,26042 MMX_REGS:35022,35022 INT_SSE_REGS:27838,27838 ALL_REGS:470552,470552 MEM:10776,10776
  a7(r110,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:18858,18858 NO_REX_SSE_REGS:18858,18858 SSE_REGS:18858,18858 MMX_REGS:23348,23348 INT_SSE_REGS:19756,19756 ALL_REGS:283768,283768 MEM:0,0
  a8(r108,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:13629,13629 NO_REX_SSE_REGS:13629,13629 SSE_REGS:13629,13629 MMX_REGS:16874,16874 INT_SSE_REGS:14278,14278 ALL_REGS:205084,205084 MEM:0,0
  a9(r109,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:13629,13629 NO_REX_SSE_REGS:13629,13629 SSE_REGS:13629,13629 MMX_REGS:16874,16874 INT_SSE_REGS:14278,14278 ALL_REGS:205084,205084 MEM:0,0
  a10(r95,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:13629,13629 NO_REX_SSE_REGS:13629,13629 SSE_REGS:13629,13629 MMX_REGS:16874,16874 INT_SSE_REGS:14278,14278 ALL_REGS:205084,205084 MEM:0,0
  a11(r93,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:18821,18821 NO_REX_SSE_REGS:18821,18821 SSE_REGS:18821,18821 MMX_REGS:25311,25311 INT_SSE_REGS:20119,20119 ALL_REGS:340076,340076 MEM:2596,2596
  a12(r107,l0) costs: GENERAL_REGS:0,0 MEM:0,0
  a13(r92,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:23954,23954 NO_REX_SSE_REGS:23954,23954 SSE_REGS:23954,23954 MMX_REGS:32019,32019 INT_SSE_REGS:25567,25567 ALL_REGS:427304,427304 MEM:9002,9002
  a14(r88,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:27800,27800 NO_REX_SSE_REGS:27800,27800 SSE_REGS:27800,27800 MMX_REGS:37050,37050 INT_SSE_REGS:29650,29650 ALL_REGS:492800,492800 MEM:11400,11400
  a15(r106,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:17850,17850 NO_REX_SSE_REGS:17850,17850 SSE_REGS:17850,17850 MMX_REGS:22100,22100 INT_SSE_REGS:18700,18700 ALL_REGS:268600,268600 MEM:0,0

   Insn 69(l0): point = 1
   Insn 41(l0): point = 3
   Insn 40(l0): point = 5
   Insn 39(l0): point = 7
   Insn 38(l0): point = 9
   Insn 37(l0): point = 11
   Insn 36(l0): point = 13
   Insn 35(l0): point = 15
   Insn 34(l0): point = 17
   Insn 33(l0): point = 19
   Insn 32(l0): point = 21
   Insn 31(l0): point = 23
   Insn 71(l0): point = 26
   Insn 52(l0): point = 28
   Insn 51(l0): point = 30
   Insn 49(l0): point = 33
   Insn 48(l0): point = 35
   Insn 28(l0): point = 38
   Insn 27(l0): point = 40
   Insn 26(l0): point = 42
   Insn 25(l0): point = 44
   Insn 24(l0): point = 46
   Insn 23(l0): point = 48
   Insn 22(l0): point = 50
   Insn 21(l0): point = 52
   Insn 19(l0): point = 55
   Insn 18(l0): point = 57
   Insn 16(l0): point = 60
   Insn 15(l0): point = 62
   Insn 14(l0): point = 64
   Insn 13(l0): point = 66
   Insn 73(l0): point = 68
   Insn 9(l0): point = 71
   Insn 8(l0): point = 73
   Insn 7(l0): point = 75
   Insn 6(l0): point = 77
   Insn 2(l0): point = 79
 a0(r91): [38..66] [12..28]
 a1(r114): [29..30]
 a2(r104): [18..79]
 a3(r113): [4..5]
 a4(r99): [6..17]
 a5(r112): [8..9]
 a6(r111): [10..11]
 a7(r110): [20..21]
 a8(r108): [39..42]
 a9(r109): [39..40]
 a10(r95): [45..46]
 a11(r93): [45..52]
 a12(r107): [49..50]
 a13(r92): [58..64]
 a14(r88): [67..75]
 a15(r106): [67..68]
Compressing live ranges: from 82 to 22 - 26%
Ranges after the compression:
 a0(r91): [12..19] [6..9]
 a1(r114): [10..11]
 a2(r104): [8..21]
 a3(r113): [0..1]
 a4(r99): [2..7]
 a5(r112): [2..3]
 a6(r111): [4..5]
 a7(r110): [8..9]
 a8(r108): [12..13]
 a9(r109): [12..13]
 a10(r95): [14..15]
 a11(r93): [14..17]
 a12(r107): [16..17]
 a13(r92): [18..19]
 a14(r88): [20..21]
 a15(r106): [20..21]
+++Allocating 120 bytes for conflict table (uncompressed size 128)
;; a0(r91,l0) conflicts: a4(r99,l0) a7(r110,l0) a2(r104,l0) a8(r108,l0) a9(r109,l0) a10(r95,l0) a11(r93,l0) a12(r107,l0) a13(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r114,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r104,l0) conflicts: a0(r91,l0) a7(r110,l0) a8(r108,l0) a9(r109,l0) a10(r95,l0) a11(r93,l0) a12(r107,l0) a13(r92,l0) a14(r88,l0) a15(r106,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r113,l0) conflicts:;; a4(r99,l0) conflicts: a5(r112,l0) a6(r111,l0) a0(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r112,l0) conflicts: a4(r99,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r111,l0) conflicts: a4(r99,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r110,l0) conflicts: a0(r91,l0) a2(r104,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r108,l0) conflicts: a0(r91,l0) a2(r104,l0) a9(r109,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r109,l0) conflicts: a0(r91,l0) a2(r104,l0) a8(r108,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r95,l0) conflicts: a0(r91,l0) a2(r104,l0) a11(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r93,l0) conflicts: a0(r91,l0) a2(r104,l0) a10(r95,l0) a12(r107,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r107,l0) conflicts: a0(r91,l0) a2(r104,l0) a11(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r92,l0) conflicts: a0(r91,l0) a2(r104,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r88,l0) conflicts: a2(r104,l0) a15(r106,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r106,l0) conflicts: a2(r104,l0) a14(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a0(r91)<->a1(r114)@16:shuffle
  pref0:a2(r104)<-hr5@1500
  regions=1, blocks=10, points=22
    allocnos=16 (big 0), copies=1, conflicts=0, ranges=17

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 9 8 7 6 5 4 3 2
    all: 0r91 1r114 2r104 3r113 4r99 5r112 6r111 7r110 8r108 9r109 10r95 11r93 12r107 13r92 14r88 15r106
    modified regnos: 88 91 92 93 95 99 104 106 107 108 109 110 111 112 113 114
    border:
    Pressure: GENERAL_REGS=4
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@196312
      Spill a1(r114,l0)
      Allocno a0r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r104 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r113 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a4r99 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a5r112 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a6r111 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a7r110 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a8r108 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a9r109 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a10r95 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a11r93 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a12r107 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a13r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a14r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a15r106 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Forming thread by copy 0:a0r91-a1r114 (freq=16):
        Result (freq=5196): a0r91(4928) a1r114(268)
      Pushing a12(r107,l0)(cost 0)
      Pushing a10(r95,l0)(cost 0)
      Pushing a9(r109,l0)(cost 0)
      Pushing a8(r108,l0)(cost 0)
      Pushing a15(r106,l0)(cost 0)
      Pushing a7(r110,l0)(cost 0)
      Pushing a6(r111,l0)(cost 0)
      Pushing a5(r112,l0)(cost 0)
      Pushing a3(r113,l0)(cost 0)
      Pushing a11(r93,l0)(cost 0)
      Pushing a13(r92,l0)(cost 0)
      Pushing a14(r88,l0)(cost 0)
      Pushing a4(r99,l0)(cost 0)
      Pushing a2(r104,l0)(cost 0)
      Pushing a0(r91,l0)(cost 0)
      Popping a0(r91,l0)  -- assign reg 0
      Popping a2(r104,l0)  -- assign reg 3
      Popping a4(r99,l0)  -- assign reg 1
      Popping a14(r88,l0)  -- assign reg 0
      Popping a13(r92,l0)  -- assign reg 1
      Popping a11(r93,l0)  -- assign reg 1
      Popping a3(r113,l0)  -- assign reg 0
      Popping a5(r112,l0)  -- assign reg 0
      Popping a6(r111,l0)  -- assign reg 0
      Popping a7(r110,l0)  -- assign reg 1
      Popping a15(r106,l0)  -- assign reg 1
      Popping a8(r108,l0)  -- assign reg 1
      Popping a9(r109,l0)  -- assign reg 2
      Popping a10(r95,l0)  -- assign reg 2
      Popping a12(r107,l0)  -- assign reg 2
Disposition:
   14:r88  l0     0    0:r91  l0     0   13:r92  l0     1   11:r93  l0     1
   10:r95  l0     2    4:r99  l0     1    2:r104 l0     3   15:r106 l0     1
   12:r107 l0     2    8:r108 l0     1    9:r109 l0     2    7:r110 l0     1
    6:r111 l0     0    5:r112 l0     0    3:r113 l0     0    1:r114 l0   mem
New iteration of spill/restore move
+++Costs: overall 1072, reg 536, mem 536, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void yy_switch_to_buffer(YY_BUFFER_STATE)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={2d,1u} r6={1d,9u} r7={1d,10u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,8u} r17={6d,4u} r18={1d} r19={1d} r20={1d,9u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r88={1d,2u} r91={2d,5u,2e} r92={1d,2u} r93={1d,2u} r95={1d,1u} r99={1d,3u} r104={1d,5u,1e} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} 
;;    total ref usage 186{113d,70u,3e} in 37{36 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 104
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 104 [ new_buffer ])
        (reg:DI 5 di [ new_buffer ])) lex.yy.c:1610 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ new_buffer ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 3 7 2 (call (mem:QI (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>) [0 yyensure_buffer_stack S1 A8])
        (const_int 0 [0])) lex.yy.c:1617 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>)
        (nil))
    (nil))
(insn 7 6 8 2 (set (reg/f:DI 88 [ D.6626 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1618 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.6626 ])
            (const_int 0 [0]))) lex.yy.c:1618 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) lex.yy.c:1618 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 46)
;;  succ:       3 [85.0%]  (FALLTHRU)
;;              7 [15.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 104

;; basic block 3, loop depth 0, count 0, freq 8500, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [85.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 104
;; lr  def 	 17 [flags] 91 92 106
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 12 10 73 3 NOTE_INSN_DELETED)
(insn 73 12 13 3 (set (reg:DI 106 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1618 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 13 73 14 3 (set (reg/f:DI 91 [ D.6626 ])
        (plus:DI (mult:DI (reg:DI 106 [ yy_buffer_stack_top ])
                (const_int 8 [0x8]))
            (reg/f:DI 88 [ D.6626 ]))) lex.yy.c:1618 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 106 [ yy_buffer_stack_top ])
        (expr_list:REG_DEAD (reg/f:DI 88 [ D.6626 ])
            (nil))))
(insn 14 13 15 3 (set (reg/f:DI 92 [ D.6627 ])
        (mem/f:DI (reg/f:DI 91 [ D.6626 ]) [1 *_9+0 S8 A64])) lex.yy.c:1618 89 {*movdi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.6627 ])
            (reg/v/f:DI 104 [ new_buffer ]))) lex.yy.c:1618 8 {*cmpdi_1}
     (nil))
(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 55)
            (pc))) lex.yy.c:1618 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 55)
;;  succ:       9 [10.1%] 
;;              4 [89.9%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 104

;; basic block 4, loop depth 0, count 0, freq 7638, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [89.9%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(6){ }u20(7){ }u21(16){ }u22(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 17 [flags]
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.6627 ])
            (const_int 0 [0]))) lex.yy.c:1621 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.6627 ])
        (nil)))
(jump_insn 19 18 20 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 29)
            (pc))) lex.yy.c:1621 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 29)
;;  succ:       5 [85.0%]  (FALLTHRU)
;;              6 [15.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104

;; basic block 5, loop depth 0, count 0, freq 6492, maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [85.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(6){ }u26(7){ }u27(16){ }u28(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 93 95 107 108 109
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg/f:DI 93 [ D.6628 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) lex.yy.c:1624 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (nil)))
(insn 22 21 23 5 (set (reg:QI 107 [ yy_hold_char ])
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) lex.yy.c:1624 93 {*movqi_internal}
     (expr_list:REG_EQUIV (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (nil)))
(insn 23 22 24 5 (set (mem:QI (reg/f:DI 93 [ D.6628 ]) [0 *_16+0 S1 A8])
        (reg:QI 107 [ yy_hold_char ])) lex.yy.c:1624 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 107 [ yy_hold_char ])
        (nil)))
(insn 24 23 25 5 (set (reg/f:DI 95 [ D.6630 ])
        (mem/f:DI (reg/f:DI 91 [ D.6626 ]) [1 *_9+0 S8 A64])) lex.yy.c:1625 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 91 [ D.6626 ]) [1 *_9+0 S8 A64])
        (nil)))
(insn 25 24 26 5 (set (mem/f:DI (plus:DI (reg/f:DI 95 [ D.6630 ])
                (const_int 16 [0x10])) [1 _19->yy_buf_pos+0 S8 A64])
        (reg/f:DI 93 [ D.6628 ])) lex.yy.c:1625 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.6630 ])
        (expr_list:REG_DEAD (reg/f:DI 93 [ D.6628 ])
            (nil))))
(insn 26 25 27 5 (set (reg/f:DI 108 [ *_9 ])
        (mem/f:DI (reg/f:DI 91 [ D.6626 ]) [1 *_9+0 S8 A64])) lex.yy.c:1626 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 91 [ D.6626 ]) [1 *_9+0 S8 A64])
        (nil)))
(insn 27 26 28 5 (set (reg:SI 109 [ yy_n_chars ])
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) lex.yy.c:1626 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (nil)))
(insn 28 27 29 5 (set (mem:SI (plus:DI (reg/f:DI 108 [ *_9 ])
                (const_int 32 [0x20])) [2 _21->yy_n_chars+0 S4 A64])
        (reg:SI 109 [ yy_n_chars ])) lex.yy.c:1626 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 109 [ yy_n_chars ])
        (expr_list:REG_DEAD (reg/f:DI 108 [ *_9 ])
            (nil))))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104

;; basic block 6, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [100.0%]  (FALLTHRU)
;;              4 [15.0%] 
;;              8 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u37(6){ }u38(7){ }u39(16){ }u40(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104
;; lr  def 	 99 110 111 112 113
(code_label 29 28 30 6 37 "" [2 uses])
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (mem/f:DI (reg/f:DI 91 [ D.6626 ]) [1 *_29+0 S8 A64])
        (reg/v/f:DI 104 [ new_buffer ])) lex.yy.c:1629 89 {*movdi_internal}
     (nil))
(insn 32 31 33 6 (set (reg:SI 110 [ new_buffer_11(D)->yy_n_chars ])
        (mem:SI (plus:DI (reg/v/f:DI 104 [ new_buffer ])
                (const_int 32 [0x20])) [2 new_buffer_11(D)->yy_n_chars+0 S4 A64])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 104 [ new_buffer ])
                (const_int 32 [0x20])) [2 new_buffer_11(D)->yy_n_chars+0 S4 A64])
        (nil)))
(insn 33 32 34 6 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 110 [ new_buffer_11(D)->yy_n_chars ])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 110 [ new_buffer_11(D)->yy_n_chars ])
        (nil)))
(insn 34 33 35 6 (set (reg/f:DI 99 [ D.6628 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 104 [ new_buffer ])
                (const_int 16 [0x10])) [1 new_buffer_11(D)->yy_buf_pos+0 S8 A64])) lex.yy.c:1643 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 104 [ new_buffer ])
        (nil)))
(insn 35 34 36 6 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 99 [ D.6628 ])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 36 35 37 6 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 99 [ D.6628 ])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 37 36 38 6 (set (reg/f:DI 111 [ *_29 ])
        (mem/f:DI (reg/f:DI 91 [ D.6626 ]) [1 *_29+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.6626 ])
        (nil)))
(insn 38 37 39 6 (set (reg/f:DI 112 [ _32->yy_input_file ])
        (mem/f:DI (reg/f:DI 111 [ *_29 ]) [1 _32->yy_input_file+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111 [ *_29 ])
        (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
            (nil))))
(insn 39 38 40 6 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 112 [ _32->yy_input_file ])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 112 [ _32->yy_input_file ])
        (nil)))
(insn 40 39 41 6 (set (reg:QI 113 [ *_31 ])
        (mem:QI (reg/f:DI 99 [ D.6628 ]) [0 *_31+0 S1 A8])) lex.yy.c:1645 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ D.6628 ])
        (expr_list:REG_EQUIV (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
            (nil))))
(insn 41 40 69 6 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 113 [ *_31 ])) lex.yy.c:1645 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 113 [ *_31 ])
        (nil)))
(jump_insn 69 41 70 6 (set (pc)
        (label_ref 55)) 654 {jump}
     (nil)
 -> 55)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 70 69 46)
;; basic block 7, loop depth 0, count 0, freq 1500, maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [15.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u53(6){ }u54(7){ }u55(16){ }u56(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  def 	 17 [flags]
(code_label 46 70 47 7 35 "" [1 uses])
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 104 [ new_buffer ])
            (const_int 0 [0]))) lex.yy.c:1618 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 49 48 50 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 55)
            (pc))) lex.yy.c:1618 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 55)
;;  succ:       9 [10.1%] 
;;              8 [89.9%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104

;; basic block 8, loop depth 0, count 0, freq 1348, maybe hot
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [89.9%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u59(6){ }u60(7){ }u61(16){ }u62(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91 114
(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 8 (set (reg:DI 114 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 52 51 71 8 (parallel [
            (set (reg/f:DI 91 [ D.6626 ])
                (ashift:DI (reg:DI 114 [ yy_buffer_stack_top ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 114 [ yy_buffer_stack_top ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
                    (const_int 3 [0x3]))
                (nil)))))
(jump_insn 71 52 72 8 (set (pc)
        (label_ref 29)) 654 {jump}
     (nil)
 -> 29)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 104

(barrier 72 71 55)
;; basic block 9, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 8, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [10.1%] 
;;              3 [10.1%] 
;;              6 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u64(6){ }u65(7){ }u66(16){ }u67(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 55 72 56 9 34 "" [3 uses])
(note 56 55 0 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void yy_delete_buffer(YY_BUFFER_STATE) (_Z16yy_delete_bufferP15yy_buffer_state, funcdef_no=95, decl_uid=4259, cgraph_uid=95, symbol_order=122)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 9 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
;; 9 succs { 1 }
Will split live ranges of parameters at BB 6
      Creating newreg=100 from oldreg=94
scanning new insn with uid = 45.
Split live-range of register (reg/v/f:DI 94 [ b ])
rescanning insn with uid = 32.
rescanning insn with uid = 31.
rescanning insn with uid = 26.
rescanning insn with uid = 25.
rescanning insn with uid = 22.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 10 (    1)
scanning new insn with uid = 46.
verify found no changes in insn with uid = 46.
deleting insn with uid = 13.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 10 (    1)
Reg 94 uninteresting (no unique first use)
Reg 87 uninteresting
Ignoring reg 96, has equiv memory
Reg 90 uninteresting
Ignoring reg 97, has equiv memory
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 9 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
;; 9 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 96: (insn_list:REG_DEP_TRUE 46 (nil))
init_insns for 97: (insn_list:REG_DEP_TRUE 26 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r100,l0) best DIREG, allocno DIREG
    a1 (r97,l0) best DIREG, allocno DIREG
    a5 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r94,l0) best DIREG, allocno DIREG
    a3 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-898,-898 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:25712,25712 NO_REX_SSE_REGS:25712,25712 SSE_REGS:25712,25712 MMX_REGS:37292,37292 INT_SSE_REGS:28028,28028 ALL_REGS:571528,571528 MEM:9264,9264
  a1(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-260,-260 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5200,5200 NO_REX_SSE_REGS:5200,5200 SSE_REGS:5200,5200 MMX_REGS:6500,6500 INT_SSE_REGS:5460,5460 ALL_REGS:81120,81120 MEM:-260,-260
  a2(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29288,29288 NO_REX_SSE_REGS:29288,29288 SSE_REGS:29288,29288 MMX_REGS:42593,42593 INT_SSE_REGS:31949,31949 ALL_REGS:653488,653488 MEM:10746,10746
  a3(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:17095,17095 NO_REX_SSE_REGS:17095,17095 SSE_REGS:17095,17095 MMX_REGS:21580,21580 INT_SSE_REGS:17992,17992 ALL_REGS:345280,345280 MEM:6640,6640
  a4(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24064,24064 NO_REX_SSE_REGS:24064,24064 SSE_REGS:24064,24064 MMX_REGS:32369,32369 INT_SSE_REGS:25725,25725 ALL_REGS:438880,438880 MEM:10236,10236
  a5(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15260,15260 NO_REX_SSE_REGS:15260,15260 SSE_REGS:15260,15260 MMX_REGS:19075,19075 INT_SSE_REGS:16023,16023 ALL_REGS:238056,238056 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred DIREG, alternative NO_REGS, allocno DIREG
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r94: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-898 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29304,29304 NO_REX_SSE_REGS:29304,29304 SSE_REGS:29304,29304 MMX_REGS:40884,40884 INT_SSE_REGS:31620,31620 ALL_REGS:575120,575120 MEM:11958,11958
  a1(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-260,-260 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5460,5460 NO_REX_SSE_REGS:5460,5460 SSE_REGS:5460,5460 MMX_REGS:6760,6760 INT_SSE_REGS:5720,5720 ALL_REGS:82160,82160 MEM:-260,-260
  a2(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:33288,33288 NO_REX_SSE_REGS:33288,33288 SSE_REGS:33288,33288 MMX_REGS:46593,46593 INT_SSE_REGS:35949,35949 ALL_REGS:657488,657488 MEM:13746,13746
  a3(r90,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:17095,17095 NO_REX_SSE_REGS:17095,17095 SSE_REGS:17095,17095 MMX_REGS:21580,21580 INT_SSE_REGS:17992,17992 ALL_REGS:345280,345280 MEM:6640,6640
  a4(r87,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:24962,24962 NO_REX_SSE_REGS:24962,24962 SSE_REGS:24962,24962 MMX_REGS:33267,33267 INT_SSE_REGS:26623,26623 ALL_REGS:442472,442472 MEM:10236,10236
  a5(r96,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16023,16023 NO_REX_SSE_REGS:16023,16023 SSE_REGS:16023,16023 MMX_REGS:19838,19838 INT_SSE_REGS:16786,16786 ALL_REGS:241108,241108 MEM:0,0

   Insn 33(l0): point = 1
   Insn 32(l0): point = 3
   Insn 28(l0): point = 6
   Insn 27(l0): point = 8
   Insn 26(l0): point = 10
   Insn 23(l0): point = 13
   Insn 22(l0): point = 15
   Insn 45(l0): point = 17
   Insn 19(l0): point = 20
   Insn 17(l0): point = 23
   Insn 16(l0): point = 25
   Insn 15(l0): point = 27
   Insn 46(l0): point = 29
   Insn 11(l0): point = 32
   Insn 10(l0): point = 34
   Insn 9(l0): point = 36
   Insn 7(l0): point = 39
   Insn 6(l0): point = 41
   Insn 2(l0): point = 43
 a0(r100): [4..17]
 a1(r97): [9..10]
 a2(r94): [18..43]
 a3(r90): [21..27]
 a4(r87): [28..36]
 a5(r96): [28..29]
Compressing live ranges: from 46 to 6 - 13%
Ranges after the compression:
 a0(r100): [0..1]
 a1(r97): [0..1]
 a2(r94): [2..5]
 a3(r90): [2..3]
 a4(r87): [4..5]
 a5(r96): [4..5]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r100,l0) conflicts: a1(r97,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r97,l0) conflicts: a0(r100,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r94,l0) conflicts: a3(r90,l0) a4(r87,l0) a5(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r90,l0) conflicts: a2(r94,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r87,l0) conflicts: a2(r94,l0) a5(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r96,l0) conflicts: a2(r94,l0) a4(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a0(r100)<->a2(r94)@898:move
  pref0:a0(r100)<-hr5@1347
  pref1:a2(r94)<-hr5@1500
  pref2:a1(r97)<-hr5@260
  regions=1, blocks=10, points=6
    allocnos=6 (big 0), copies=1, conflicts=0, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 9 8 7 6 5 4 3 2
    all: 0r100 1r97 2r94 3r90 4r87 5r96
    modified regnos: 87 90 94 96 97 100
    border:
    Pressure: GENERAL_REGS=3
 Removing pref0:hr5@1347
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@67244
          2:( 0-4 6 37-44)@23916
          3:( 5)@520
      Allocno a0r100 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r97 of DIREG(1) has 1 avail. regs  5, node:  5 (confl regs =  0-4 6-79)
      Allocno a2r94 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a4r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a5r96 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Forming thread by copy 0:a0r100-a2r94 (freq=898):
        Result (freq=6615): a0r100(2954) a2r94(3661)
      Pushing a1(r97,l0)(cost 0)
      Pushing a5(r96,l0)(cost 0)
      Pushing a3(r90,l0)(cost 0)
      Pushing a4(r87,l0)(cost 0)
      Pushing a0(r100,l0)(cost 0)
      Pushing a2(r94,l0)(cost 0)
      Popping a2(r94,l0)  -- assign reg 5
      Popping a0(r100,l0)  -- assign reg 3
      Popping a4(r87,l0)  -- assign reg 0
      Popping a3(r90,l0)  -- assign reg 0
      Popping a5(r96,l0)  -- assign reg 1
      Popping a1(r97,l0)  -- assign reg 5
Disposition:
    4:r87  l0     0    3:r90  l0     0    2:r94  l0     5    5:r96  l0     1
    1:r97  l0     5    0:r100 l0     3
New iteration of spill/restore move
+++Costs: overall -3780, reg -3780, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void yy_delete_buffer(YY_BUFFER_STATE)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,9u} r7={1d,11u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,8u} r17={6d,4u} r18={2d} r19={2d} r20={1d,9u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,2u} r90={1d,2u} r94={1d,3u} r96={1d,1u} r97={1d,1u} r100={1d,5u,1e} 
;;    total ref usage 234{175d,58u,1e} in 21{19 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 94
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 94 [ b ])
        (reg:DI 5 di [ b ])) lex.yy.c:1683 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ b ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 94 [ b ])
            (const_int 0 [0]))) lex.yy.c:1685 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 37)
            (pc))) lex.yy.c:1685 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 37)
;;  succ:       9 [10.1%] 
;;              3 [89.9%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94

;; basic block 3, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [89.9%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ }u8(7){ }u9(16){ }u10(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg/f:DI 87 [ D.6635 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1688 89 {*movdi_internal}
     (nil))
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.6635 ])
            (const_int 0 [0]))) lex.yy.c:1688 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 20)
            (pc))) lex.yy.c:1688 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 20)
;;  succ:       4 [85.0%]  (FALLTHRU)
;;              6 [15.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 94

;; basic block 4, loop depth 0, count 0, freq 7638, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [85.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(6){ }u14(7){ }u15(16){ }u16(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 94
;; lr  def 	 17 [flags] 90 96
(note 12 11 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 14 12 46 4 NOTE_INSN_DELETED)
(insn 46 14 15 4 (set (reg:DI 96 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1688 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 15 46 16 4 (set (reg/f:DI 90 [ D.6635 ])
        (plus:DI (mult:DI (reg:DI 96 [ yy_buffer_stack_top ])
                (const_int 8 [0x8]))
            (reg/f:DI 87 [ D.6635 ]))) lex.yy.c:1688 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 96 [ yy_buffer_stack_top ])
        (expr_list:REG_DEAD (reg/f:DI 87 [ D.6635 ])
            (nil))))
(insn 16 15 17 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 94 [ b ])
            (mem/f:DI (reg/f:DI 90 [ D.6635 ]) [1 *_10+0 S8 A64]))) lex.yy.c:1688 8 {*cmpdi_1}
     (nil))
(jump_insn 17 16 18 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) lex.yy.c:1688 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8235 (nil)))
 -> 20)
;;  succ:       5 [17.6%]  (FALLTHRU)
;;              6 [82.3%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 94

;; basic block 5, loop depth 0, count 0, freq 1348, maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [17.6%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (mem/f:DI (reg/f:DI 90 [ D.6635 ]) [1 *_10+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:1689 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.6635 ])
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94

;; basic block 6, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [82.3%] 
;;              5 [100.0%]  (FALLTHRU)
;;              3 [15.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u28(6){ }u29(7){ }u30(16){ }u31(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 94
;; lr  def 	 17 [flags] 100
(code_label 20 19 21 6 47 "" [2 uses])
(note 21 20 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 45 21 22 6 (set (reg/v/f:DI 100 [orig:94 b ] [94])
        (reg/v/f:DI 94 [ b ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 94 [ b ])
        (nil)))
(insn 22 45 23 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/v/f:DI 100 [orig:94 b ] [94])
                    (const_int 36 [0x24])) [2 b_5(D)->yy_is_our_buffer+0 S4 A32])
            (const_int 0 [0]))) lex.yy.c:1691 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 23 22 24 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) lex.yy.c:1691 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 29)
;;  succ:       7 [29.0%]  (FALLTHRU)
;;              8 [71.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100

;; basic block 7, loop depth 0, count 0, freq 2606, maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       6 [29.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u34(6){ }u35(7){ }u36(16){ }u37(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 97
(note 24 23 25 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 25 24 26 7 (var_location:DI ptr (mem/f/j:DI (plus:DI (reg/v/f:DI 100 [orig:94 b ] [94])
            (const_int 8 [0x8])) [0 b_5(D)->yy_ch_buf+0 S8 A64])) lex.yy.c:1692 -1
     (nil))
(insn 26 25 27 7 (set (reg/f:DI 97 [ b_5(D)->yy_ch_buf ])
        (mem/f:DI (plus:DI (reg/v/f:DI 100 [orig:94 b ] [94])
                (const_int 8 [0x8])) [1 b_5(D)->yy_ch_buf+0 S8 A64])) lex.yy.c:2141 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 100 [orig:94 b ] [94])
                (const_int 8 [0x8])) [1 b_5(D)->yy_ch_buf+0 S8 A64])
        (nil)))
(insn 27 26 28 7 (set (reg:DI 5 di)
        (reg/f:DI 97 [ b_5(D)->yy_ch_buf ])) lex.yy.c:2141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ b_5(D)->yy_ch_buf ])
        (nil)))
(call_insn 28 27 29 7 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) lex.yy.c:2141 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100

;; basic block 8, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       6 [71.0%] 
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u43(6){ }u44(7){ }u45(16){ }u46(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 29 28 30 8 48 "" [1 uses])
(note 30 29 31 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 31 30 32 8 (var_location:DI ptr (reg/v/f:DI 100 [orig:94 b ] [94])) -1
     (nil))
(insn 32 31 33 8 (set (reg:DI 5 di)
        (reg/v/f:DI 100 [orig:94 b ] [94])) lex.yy.c:2141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 100 [orig:94 b ] [94])
        (nil)))
(call_insn/j 33 32 34 8 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) lex.yy.c:2141 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 34 33 37)
;; basic block 9, loop depth 0, count 0, freq 1014, maybe hot
;;  prev block 8, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [10.1%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u51(6){ }u52(7){ }u53(16){ }u54(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 37 34 38 9 45 "" [1 uses])
(note 38 37 0 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void yy_flush_buffer(YY_BUFFER_STATE) (_Z15yy_flush_bufferP15yy_buffer_state, funcdef_no=97, decl_uid=4261, cgraph_uid=97, symbol_order=124)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 9 count 7 (    1)
scanning new insn with uid = 55.
verify found no changes in insn with uid = 55.
deleting insn with uid = 27.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 9 count 7 (    1)
Ignoring reg 87, has equiv memory
Ignoring reg 88, has equiv memory
Reg 89 uninteresting
Reg 90 uninteresting
Ignoring reg 101, has equiv memory
Reg 93 uninteresting
Ignoring reg 102, has equiv memory
Reg 103 uninteresting
Ignoring reg 104, has equiv memory
Ignoring reg 105, has equiv memory
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 6 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 87: (insn_list:REG_DEP_TRUE 14 (nil))
init_insns for 88: (insn_list:REG_DEP_TRUE 16 (nil))
init_insns for 101: (insn_list:REG_DEP_TRUE 55 (nil))
init_insns for 102: (insn_list:REG_DEP_TRUE 34 (nil))
init_insns for 104: (insn_list:REG_DEP_TRUE 39 (nil))
init_insns for 105: (insn_list:REG_DEP_TRUE 41 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a8 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r99,l0) best DIREG, allocno DIREG
    a4 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a7 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a9 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r105,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a1(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24168,24168 NO_REX_SSE_REGS:24168,24168 SSE_REGS:24168,24168 MMX_REGS:32538,32538 INT_SSE_REGS:25842,25842 ALL_REGS:441584,441584 MEM:10288,10288
  a2(r104,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3880,3880 NO_REX_SSE_REGS:3880,3880 SSE_REGS:3880,3880 MMX_REGS:4850,4850 INT_SSE_REGS:4074,4074 ALL_REGS:60528,60528 MEM:0,0
  a3(r103,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:5432,5432 NO_REX_SSE_REGS:5432,5432 SSE_REGS:5432,5432 MMX_REGS:7372,7372 INT_SSE_REGS:5820,5820 ALL_REGS:100880,100880 MEM:2328,2328
  a4(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:17575,17575 NO_REX_SSE_REGS:17575,17575 SSE_REGS:17575,17575 MMX_REGS:22360,22360 INT_SSE_REGS:18532,18532 ALL_REGS:357760,357760 MEM:6880,6880
  a5(r102,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3880,3880 NO_REX_SSE_REGS:3880,3880 SSE_REGS:3880,3880 MMX_REGS:4850,4850 INT_SSE_REGS:4074,4074 ALL_REGS:60528,60528 MEM:0,0
  a6(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:89864,89864 NO_REX_SSE_REGS:89864,89864 SSE_REGS:89864,89864 MMX_REGS:141029,141029 INT_SSE_REGS:100097,100097 ALL_REGS:2228464,2228464 MEM:41932,41932
  a7(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24064,24064 NO_REX_SSE_REGS:24064,24064 SSE_REGS:24064,24064 MMX_REGS:32369,32369 INT_SSE_REGS:25725,25725 ALL_REGS:438880,438880 MEM:10236,10236
  a8(r101,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15260,15260 NO_REX_SSE_REGS:15260,15260 SSE_REGS:15260,15260 MMX_REGS:19075,19075 INT_SSE_REGS:16023,16023 ALL_REGS:238056,238056 MEM:0,0
  a9(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:17960,17960 NO_REX_SSE_REGS:17960,17960 SSE_REGS:17960,17960 MMX_REGS:22450,22450 INT_SSE_REGS:18858,18858 ALL_REGS:280176,280176 MEM:0,0
  a10(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:17960,17960 NO_REX_SSE_REGS:17960,17960 SSE_REGS:17960,17960 MMX_REGS:22450,22450 INT_SSE_REGS:18858,18858 ALL_REGS:280176,280176 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r105,l0) costs: GENERAL_REGS:0,0 MEM:0,0
  a1(r89,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:25066,25066 NO_REX_SSE_REGS:25066,25066 SSE_REGS:25066,25066 MMX_REGS:33436,33436 INT_SSE_REGS:26740,26740 ALL_REGS:445176,445176 MEM:10288,10288
  a2(r104,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4074,4074 NO_REX_SSE_REGS:4074,4074 SSE_REGS:4074,4074 MMX_REGS:5044,5044 INT_SSE_REGS:4268,4268 ALL_REGS:61304,61304 MEM:0,0
  a3(r103,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:5626,5626 NO_REX_SSE_REGS:5626,5626 SSE_REGS:5626,5626 MMX_REGS:7566,7566 INT_SSE_REGS:6014,6014 ALL_REGS:101656,101656 MEM:2328,2328
  a4(r93,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:17575,17575 NO_REX_SSE_REGS:17575,17575 SSE_REGS:17575,17575 MMX_REGS:22360,22360 INT_SSE_REGS:18532,18532 ALL_REGS:357760,357760 MEM:6880,6880
  a5(r102,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4074,4074 NO_REX_SSE_REGS:4074,4074 SSE_REGS:4074,4074 MMX_REGS:5044,5044 INT_SSE_REGS:4268,4268 ALL_REGS:61304,61304 MEM:0,0
  a6(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:93864,93864 NO_REX_SSE_REGS:93864,93864 SSE_REGS:93864,93864 MMX_REGS:145029,145029 INT_SSE_REGS:104097,104097 ALL_REGS:2232464,2232464 MEM:44932,44932
  a7(r90,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:24962,24962 NO_REX_SSE_REGS:24962,24962 SSE_REGS:24962,24962 MMX_REGS:33267,33267 INT_SSE_REGS:26623,26623 ALL_REGS:442472,442472 MEM:10236,10236
  a8(r101,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16023,16023 NO_REX_SSE_REGS:16023,16023 SSE_REGS:16023,16023 MMX_REGS:19838,19838 INT_SSE_REGS:16786,16786 ALL_REGS:241108,241108 MEM:0,0
  a9(r88,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:18858,18858 NO_REX_SSE_REGS:18858,18858 SSE_REGS:18858,18858 MMX_REGS:23348,23348 INT_SSE_REGS:19756,19756 ALL_REGS:283768,283768 MEM:0,0
  a10(r87,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:18858,18858 NO_REX_SSE_REGS:18858,18858 SSE_REGS:18858,18858 MMX_REGS:23348,23348 INT_SSE_REGS:19756,19756 ALL_REGS:283768,283768 MEM:0,0

   Insn 41(l0): point = 1
   Insn 40(l0): point = 3
   Insn 39(l0): point = 5
   Insn 38(l0): point = 7
   Insn 37(l0): point = 9
   Insn 36(l0): point = 11
   Insn 35(l0): point = 13
   Insn 34(l0): point = 15
   Insn 33(l0): point = 17
   Insn 31(l0): point = 20
   Insn 30(l0): point = 22
   Insn 29(l0): point = 24
   Insn 55(l0): point = 26
   Insn 25(l0): point = 29
   Insn 24(l0): point = 31
   Insn 22(l0): point = 33
   Insn 21(l0): point = 35
   Insn 20(l0): point = 37
   Insn 19(l0): point = 39
   Insn 18(l0): point = 41
   Insn 17(l0): point = 43
   Insn 16(l0): point = 45
   Insn 15(l0): point = 47
   Insn 14(l0): point = 49
   Insn 13(l0): point = 51
   Insn 7(l0): point = 54
   Insn 6(l0): point = 56
   Insn 2(l0): point = 58
 a0(r105): [2..3]
 a1(r89): [4..41]
 a2(r104): [6..7]
 a3(r103): [8..9]
 a4(r93): [10..24]
 a5(r102): [16..17]
 a6(r99): [18..58]
 a7(r90): [25..33]
 a8(r101): [25..26]
 a9(r88): [44..45]
 a10(r87): [48..49]
Compressing live ranges: from 61 to 16 - 26%
Ranges after the compression:
 a0(r105): [0..1]
 a1(r89): [2..11]
 a2(r104): [2..3]
 a3(r103): [4..5]
 a4(r93): [6..9]
 a5(r102): [6..7]
 a6(r99): [8..15]
 a7(r90): [10..11]
 a8(r101): [10..11]
 a9(r88): [12..13]
 a10(r87): [14..15]
+++Allocating 80 bytes for conflict table (uncompressed size 88)
;; a0(r105,l0) conflicts:;; a1(r89,l0) conflicts: a2(r104,l0) a3(r103,l0) a5(r102,l0) a4(r93,l0) a6(r99,l0) a7(r90,l0) a8(r101,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r104,l0) conflicts: a1(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r103,l0) conflicts: a1(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r93,l0) conflicts: a1(r89,l0) a5(r102,l0) a6(r99,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r102,l0) conflicts: a1(r89,l0) a4(r93,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r99,l0) conflicts: a1(r89,l0) a4(r93,l0) a7(r90,l0) a8(r101,l0) a9(r88,l0) a10(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r90,l0) conflicts: a1(r89,l0) a6(r99,l0) a8(r101,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r101,l0) conflicts: a1(r89,l0) a6(r99,l0) a7(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r88,l0) conflicts: a6(r99,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r87,l0) conflicts: a6(r99,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a6(r99)<-hr5@1500
  regions=1, blocks=7, points=16
    allocnos=11 (big 0), copies=0, conflicts=0, ranges=11

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 6 5 4 3 2
    all: 0r105 1r89 2r104 3r103 4r93 5r102 6r99 7r90 8r101 9r88 10r87
    modified regnos: 87 88 89 90 93 99 101 102 103 104 105
    border:
    Pressure: GENERAL_REGS=4
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@155328
      Allocno a0r105 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a1r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r104 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r103 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a4r93 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a5r102 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a6r99 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a7r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a8r101 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a9r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a10r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a5(r102,l0)(cost 0)
      Pushing a3(r103,l0)(cost 0)
      Pushing a2(r104,l0)(cost 0)
      Pushing a0(r105,l0)(cost 0)
      Pushing a8(r101,l0)(cost 0)
      Pushing a4(r93,l0)(cost 0)
      Pushing a10(r87,l0)(cost 0)
      Pushing a9(r88,l0)(cost 0)
      Pushing a1(r89,l0)(cost 0)
      Pushing a7(r90,l0)(cost 0)
      Pushing a6(r99,l0)(cost 0)
      Popping a6(r99,l0)  -- assign reg 5
      Popping a7(r90,l0)  -- assign reg 0
      Popping a1(r89,l0)  -- assign reg 1
      Popping a9(r88,l0)  -- assign reg 0
      Popping a10(r87,l0)  -- assign reg 0
      Popping a4(r93,l0)  -- assign reg 0
      Popping a8(r101,l0)  -- assign reg 2
      Popping a0(r105,l0)  -- assign reg 0
      Popping a2(r104,l0)  -- assign reg 0
      Popping a3(r103,l0)  -- assign reg 0
      Popping a5(r102,l0)  -- assign reg 2
Disposition:
   10:r87  l0     0    9:r88  l0     0    1:r89  l0     1    7:r90  l0     0
    4:r93  l0     0    6:r99  l0     5    8:r101 l0     2    5:r102 l0     2
    3:r103 l0     0    2:r104 l0     0    0:r105 l0     0
New iteration of spill/restore move
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void yy_flush_buffer(YY_BUFFER_STATE)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,6u} r7={1d,6u} r16={1d,5u} r17={3d,3u} r20={1d,6u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} r88={1d,1u} r89={1d,4u} r90={1d,2u} r93={1d,2u} r99={1d,10u,2e} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} 
;;    total ref usage 87{33d,52u,2e} in 28{28 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 99 [ b ])
        (reg:DI 5 di [ b ])) lex.yy.c:1730 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ b ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 99 [ b ])
            (const_int 0 [0]))) lex.yy.c:1731 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 44)
            (pc))) lex.yy.c:1731 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 44)
;;  succ:       6 [10.1%] 
;;              3 [89.9%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99

;; basic block 3, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [89.9%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ }u8(7){ }u9(16){ }u10(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99
;; lr  def 	 17 [flags] 87 88 89 90
(note 12 7 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (mem:SI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 32 [0x20])) [2 b_3(D)->yy_n_chars+0 S4 A64])
        (const_int 0 [0])) lex.yy.c:1734 90 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg/f:DI 87 [ D.6642 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 8 [0x8])) [1 b_3(D)->yy_ch_buf+0 S8 A64])) lex.yy.c:1740 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 8 [0x8])) [1 b_3(D)->yy_ch_buf+0 S8 A64])
        (nil)))
(insn 15 14 16 3 (set (mem:QI (reg/f:DI 87 [ D.6642 ]) [0 *_6+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1740 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.6642 ])
        (nil)))
(insn 16 15 17 3 (set (reg/f:DI 88 [ D.6642 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 8 [0x8])) [1 b_3(D)->yy_ch_buf+0 S8 A64])) lex.yy.c:1741 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 8 [0x8])) [1 b_3(D)->yy_ch_buf+0 S8 A64])
        (nil)))
(insn 17 16 18 3 (set (mem:QI (plus:DI (reg/f:DI 88 [ D.6642 ])
                (const_int 1 [0x1])) [0 MEM[(char *)_8 + 1B]+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1741 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.6642 ])
        (nil)))
(insn 18 17 19 3 (set (reg/f:DI 89 [ D.6642 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 8 [0x8])) [1 b_3(D)->yy_ch_buf+0 S8 A64])) lex.yy.c:1743 89 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (mem/f:DI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 16 [0x10])) [1 b_3(D)->yy_buf_pos+0 S8 A64])
        (reg/f:DI 89 [ D.6642 ])) lex.yy.c:1743 89 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (mem:SI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 44 [0x2c])) [2 b_3(D)->yy_at_bol+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:1745 90 {*movsi_internal}
     (nil))
(insn 21 20 22 3 (set (mem:SI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 60 [0x3c])) [2 b_3(D)->yy_buffer_status+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1746 90 {*movsi_internal}
     (nil))
(insn 22 21 24 3 (set (reg/f:DI 90 [ D.6643 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1748 89 {*movdi_internal}
     (nil))
(insn 24 22 25 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.6643 ])
            (const_int 0 [0]))) lex.yy.c:1748 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 25 24 26 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 44)
            (pc))) lex.yy.c:1748 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 44)
;;  succ:       4 [85.0%]  (FALLTHRU)
;;              6 [15.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 90 99

;; basic block 4, loop depth 0, count 0, freq 7638, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [85.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 90 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 99
;; lr  def 	 17 [flags] 93 101
(note 26 25 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 28 26 55 4 NOTE_INSN_DELETED)
(insn 55 28 29 4 (set (reg:DI 101 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1748 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 29 55 30 4 (set (reg/f:DI 93 [ D.6643 ])
        (plus:DI (mult:DI (reg:DI 101 [ yy_buffer_stack_top ])
                (const_int 8 [0x8]))
            (reg/f:DI 90 [ D.6643 ]))) lex.yy.c:1748 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 101 [ yy_buffer_stack_top ])
        (expr_list:REG_DEAD (reg/f:DI 90 [ D.6643 ])
            (nil))))
(insn 30 29 31 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 99 [ b ])
            (mem/f:DI (reg/f:DI 93 [ D.6643 ]) [1 *_17+0 S8 A64]))) lex.yy.c:1748 8 {*cmpdi_1}
     (nil))
(jump_insn 31 30 32 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 44)
            (pc))) lex.yy.c:1748 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7455 (nil)))
 -> 44)
;;  succ:       5 [25.4%]  (FALLTHRU)
;;              6 [74.5%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 93 99

;; basic block 5, loop depth 0, count 0, freq 1944, maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [25.4%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u33(6){ }u34(7){ }u35(16){ }u36(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 93 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 93 99
;; lr  def 	 102 103 104 105
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 5 (set (reg:SI 102 [ b_3(D)->yy_n_chars ])
        (mem:SI (plus:DI (reg/v/f:DI 99 [ b ])
                (const_int 32 [0x20])) [2 b_3(D)->yy_n_chars+0 S4 A64])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 99 [ b ])
        (expr_list:REG_EQUIV (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
            (nil))))
(insn 34 33 35 5 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 102 [ b_3(D)->yy_n_chars ])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102 [ b_3(D)->yy_n_chars ])
        (nil)))
(insn 35 34 36 5 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 89 [ D.6642 ])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 36 35 37 5 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 89 [ D.6642 ])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 37 36 38 5 (set (reg/f:DI 103 [ *_17 ])
        (mem/f:DI (reg/f:DI 93 [ D.6643 ]) [1 *_17+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.6643 ])
        (nil)))
(insn 38 37 39 5 (set (reg/f:DI 104 [ _26->yy_input_file ])
        (mem/f:DI (reg/f:DI 103 [ *_17 ]) [1 _26->yy_input_file+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ *_17 ])
        (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
            (nil))))
(insn 39 38 40 5 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 104 [ _26->yy_input_file ])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 104 [ _26->yy_input_file ])
        (nil)))
(insn 40 39 41 5 (set (reg:QI 105 [ *_10 ])
        (mem:QI (reg/f:DI 89 [ D.6642 ]) [0 *_10+0 S1 A8])) lex.yy.c:1645 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.6642 ])
        (expr_list:REG_EQUIV (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
            (nil))))
(insn 41 40 44 5 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 105 [ *_10 ])) lex.yy.c:1645 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 105 [ *_10 ])
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 5, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [100.0%]  (FALLTHRU)
;;              2 [10.1%] 
;;              3 [15.0%] 
;;              4 [74.5%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u46(6){ }u47(7){ }u48(16){ }u49(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 44 41 45 6 56 "" [3 uses])
(note 45 44 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void yy_init_buffer(YY_BUFFER_STATE, FILE*) (_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE, funcdef_no=96, decl_uid=4269, cgraph_uid=96, symbol_order=123)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 98 uninteresting (no unique first use)
Reg 99: def dominates all uses has unique first use
Reg 89 uninteresting
Reg 90: def dominates all uses has unique first use
Reg 91 uninteresting
Ignoring reg 100, has equiv memory
Reg 96 uninteresting
Reg 97 uninteresting
Reg 90 not local to one basic block
Reg 99 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 100: (insn_list:REG_DEP_TRUE 20 (nil))

Pass 0 for finding pseudo/allocno costs

    a8 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r99,l0) best SIREG, allocno SIREG
    a2 (r98,l0) best DIREG, allocno DIREG
    a4 (r97,l0) best AREG, allocno AREG
    a5 (r96,l0) best AREG, allocno AREG
    a7 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best AREG, allocno AREG
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:34000,34000 INT_SSE_REGS:26000,26000 ALL_REGS:516000,516000 MEM:9000,9000
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000
  a2(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:60400,60400 NO_REX_SSE_REGS:60400,60400 SSE_REGS:60400,60400 MMX_REGS:93150,93150 INT_SSE_REGS:66950,66950 ALL_REGS:1462400,1462400 MEM:26200,26200
  a3(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26179,26179 NO_REX_SSE_REGS:26179,26179 SSE_REGS:26179,26179 MMX_REGS:31179,31179 INT_SSE_REGS:27179,27179 ALL_REGS:470864,470864 MEM:8132,8132
  a4(r97,l0) costs: AREG:-783,-783 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12528,12528 NO_REX_SSE_REGS:12528,12528 SSE_REGS:12528,12528 MMX_REGS:16443,16443 INT_SSE_REGS:13311,13311 ALL_REGS:241164,241164 MEM:3915,3915
  a5(r96,l0) costs: AREG:-783,-783 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-783,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12528,12528 NO_REX_SSE_REGS:12528,12528 SSE_REGS:12528,12528 MMX_REGS:16443,16443 INT_SSE_REGS:13311,13311 ALL_REGS:241164,241164 MEM:3132,3132
  a6(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:-783,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:30264,30264 NO_REX_SSE_REGS:30264,30264 SSE_REGS:30264,30264 MMX_REGS:44179,44179 INT_SSE_REGS:33047,33047 ALL_REGS:678864,678864 MEM:11349,11349
  a7(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26800,26800 NO_REX_SSE_REGS:26800,26800 SSE_REGS:26800,26800 MMX_REGS:36050,36050 INT_SSE_REGS:28650,28650 ALL_REGS:488800,488800 MEM:11400,11400
  a8(r100,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:17000,17000 NO_REX_SSE_REGS:17000,17000 SSE_REGS:17000,17000 MMX_REGS:21250,21250 INT_SSE_REGS:17850,17850 ALL_REGS:265200,265200 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r99: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:12000,12000
  a1(r90,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:8000,8000
  a2(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:64400,64400 NO_REX_SSE_REGS:64400,64400 SSE_REGS:64400,64400 MMX_REGS:97150,97150 INT_SSE_REGS:70950,70950 ALL_REGS:1466400,1466400 MEM:29200,29200
  a3(r88,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:30179,30179 NO_REX_SSE_REGS:30179,30179 SSE_REGS:30179,30179 MMX_REGS:35179,35179 INT_SSE_REGS:31179,31179 ALL_REGS:474864,474864 MEM:11132,11132
  a4(r97,l0) costs: AREG:0,-783 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15660,15660 NO_REX_SSE_REGS:15660,15660 SSE_REGS:15660,15660 MMX_REGS:19575,19575 INT_SSE_REGS:16443,16443 ALL_REGS:244296,244296 MEM:6264,6264
  a5(r96,l0) costs: AREG:0,-783 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-783,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15660,15660 NO_REX_SSE_REGS:15660,15660 SSE_REGS:15660,15660 MMX_REGS:19575,19575 INT_SSE_REGS:16443,16443 ALL_REGS:244296,244296 MEM:5481,5481
  a6(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:-783,-783 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:34264,34264 NO_REX_SSE_REGS:34264,34264 SSE_REGS:34264,34264 MMX_REGS:48179,48179 INT_SSE_REGS:37047,37047 ALL_REGS:682864,682864 MEM:14349,14349
  a7(r91,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:27800,27800 NO_REX_SSE_REGS:27800,27800 SSE_REGS:27800,27800 MMX_REGS:37050,37050 INT_SSE_REGS:29650,29650 ALL_REGS:492800,492800 MEM:11400,11400
  a8(r100,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:17850,17850 NO_REX_SSE_REGS:17850,17850 SSE_REGS:17850,17850 MMX_REGS:22100,22100 INT_SSE_REGS:18700,18700 ALL_REGS:268600,268600 MEM:0,0

   Insn 45(l0): point = 0
   Insn 44(l0): point = 2
   Insn 40(l0): point = 5
   Insn 38(l0): point = 7
   Insn 37(l0): point = 9
   Insn 36(l0): point = 11
   Insn 35(l0): point = 13
   Insn 34(l0): point = 15
   Insn 33(l0): point = 17
   Insn 32(l0): point = 19
   Insn 30(l0): point = 22
   Insn 29(l0): point = 24
   Insn 5(l0): point = 26
   Insn 26(l0): point = 29
   Insn 25(l0): point = 31
   Insn 22(l0): point = 34
   Insn 21(l0): point = 36
   Insn 20(l0): point = 38
   Insn 18(l0): point = 41
   Insn 17(l0): point = 43
   Insn 16(l0): point = 45
   Insn 15(l0): point = 47
   Insn 14(l0): point = 49
   Insn 13(l0): point = 51
   Insn 12(l0): point = 53
   Insn 10(l0): point = 55
   Insn 9(l0): point = 57
   Insn 8(l0): point = 59
   Insn 3(l0): point = 61
   Insn 2(l0): point = 63
 a0(r89): [1..57]
 a1(r90): [1..55]
 a2(r98): [3..63]
 a3(r88): [22..26] [3..5]
 a4(r97): [8..9]
 a5(r96): [14..15]
 a6(r99): [20..61]
 a7(r91): [37..45]
 a8(r100): [37..38]
Compressing live ranges: from 66 to 10 - 15%
Ranges after the compression:
 a0(r89): [0..9]
 a1(r90): [0..9]
 a2(r98): [0..9]
 a3(r88): [6..7] [0..1]
 a4(r97): [2..3]
 a5(r96): [4..5]
 a6(r99): [6..9]
 a7(r91): [8..9]
 a8(r100): [8..9]
+++Allocating 72 bytes for conflict table (uncompressed size 72)
;; a0(r89,l0) conflicts: a3(r88,l0) a1(r90,l0) a2(r98,l0) a4(r97,l0) a5(r96,l0) a6(r99,l0) a7(r91,l0) a8(r100,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a1(r90,l0) conflicts: a3(r88,l0) a0(r89,l0) a2(r98,l0) a4(r97,l0) a5(r96,l0) a6(r99,l0) a7(r91,l0) a8(r100,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a2(r98,l0) conflicts: a3(r88,l0) a0(r89,l0) a1(r90,l0) a4(r97,l0) a5(r96,l0) a6(r99,l0) a7(r91,l0) a8(r100,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a3(r88,l0) conflicts: a0(r89,l0) a1(r90,l0) a2(r98,l0) a6(r99,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r97,l0) conflicts: a0(r89,l0) a1(r90,l0) a2(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r96,l0) conflicts: a0(r89,l0) a1(r90,l0) a2(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r99,l0) conflicts: a3(r88,l0) a0(r89,l0) a1(r90,l0) a2(r98,l0) a7(r91,l0) a8(r100,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a7(r91,l0) conflicts: a0(r89,l0) a1(r90,l0) a2(r98,l0) a6(r99,l0) a8(r100,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r100,l0) conflicts: a0(r89,l0) a1(r90,l0) a2(r98,l0) a6(r99,l0) a7(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a6(r99)<-hr4@1500
  pref1:a2(r98)<-hr5@2500
  pref2:a4(r97)<-hr0@1174
  pref3:a5(r96)<-hr0@1174
  pref4:a0(r89)<-hr0@1500
  pref5:a6(r99)<-hr5@783
  pref6:a5(r96)<-hr5@783
  regions=1, blocks=8, points=10
    allocnos=9 (big 0), copies=0, conflicts=0, ranges=10

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r89 1r90 2r98 3r88 4r97 5r96 6r99 7r91 8r100
    modified regnos: 88 89 90 91 96 97 98 99 100
    border:
    Pressure: GENERAL_REGS=6
 Removing pref4:hr0@1500
 Removing pref1:hr5@2500
 Removing pref5:hr5@783
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@77950
          2:( 1-4 6 37-44)@28698
            3:( 1-3 6 37-44)@58400
              4:( 3 6 41-44)@40000
      Allocno a0r89 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 5 7-36 45-79)
      Allocno a1r90 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 5 7-36 45-79)
      Allocno a2r98 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a3r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a4r97 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a5r96 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a6r99 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, node:  1-4 6 37-44 (confl regs =  0 5 7-36 45-79)
      Allocno a7r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a8r100 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a5(r96,l0)(cost 0)
      Pushing a4(r97,l0)(cost 0)
      Pushing a8(r100,l0)(cost 0)
        Making a0(r89,l0) colorable
        Making a1(r90,l0) colorable
      Pushing a1(r90,l0)(cost 8000)
      Pushing a3(r88,l0)(cost 0)
      Pushing a7(r91,l0)(cost 0)
      Pushing a0(r89,l0)(cost 12000)
      Pushing a6(r99,l0)(cost 0)
      Pushing a2(r98,l0)(cost 0)
      Popping a2(r98,l0)  -- assign reg 3
      Popping a6(r99,l0)  -- assign reg 6
      Popping a0(r89,l0)  -- assign reg 41
      Popping a7(r91,l0)  -- assign reg 0
      Popping a3(r88,l0)  -- assign reg 0
      Popping a1(r90,l0)  -- assign reg 42
      Popping a8(r100,l0)  -- assign reg 1
      Popping a4(r97,l0)  -- assign reg 0
      Popping a5(r96,l0)  -- assign reg 0
Disposition:
    3:r88  l0     0    0:r89  l0    41    1:r90  l0    42    7:r91  l0     0
    5:r96  l0     0    4:r97  l0     0    2:r98  l0     3    6:r99  l0     6
    8:r100 l0     1
New iteration of spill/restore move
+++Costs: overall -4698, reg -4698, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void yy_init_buffer(YY_BUFFER_STATE, FILE*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={5d,3u} r1={5d} r2={5d} r4={4d,1u} r5={7d,4u} r6={1d,7u} r7={1d,11u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,6u} r17={8d,4u} r18={4d} r19={4d} r20={1d,7u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r88={2d,1u} r89={1d,2u} r90={1d,2u} r91={1d,2u} r96={1d,1u} r97={1d,1u} r98={1d,7u} r99={1d,3u} r100={1d,1u} 
;;    total ref usage 357{294d,63u,0e} in 31{27 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90 91 98 99
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 98 [ b ])
        (reg:DI 5 di [ b ])) lex.yy.c:1703 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ b ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 99 [ file ])
        (reg:DI 4 si [ file ])) lex.yy.c:1703 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ file ])
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(call_insn/u 8 4 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f88bbffbca8 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) lex.yy.c:1704 669 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f88bbffbca8 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 9 8 10 2 (set (reg/f:DI 89 [ D.6654 ])
        (reg:DI 0 ax)) lex.yy.c:1704 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 10 9 11 2 (set (reg/v:SI 90 [ oerrno ])
        (mem:SI (reg/f:DI 89 [ D.6654 ]) [2 *_5+0 S4 A32])) lex.yy.c:1704 90 {*movsi_internal}
     (nil))
(debug_insn 11 10 12 2 (var_location:SI oerrno (reg/v:SI 90 [ oerrno ])) lex.yy.c:1704 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/v/f:DI 98 [ b ])) lex.yy.c:1706 89 {*movdi_internal}
     (nil))
(call_insn 13 12 14 2 (call (mem:QI (symbol_ref:DI ("_Z15yy_flush_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c510 yy_flush_buffer>) [0 yy_flush_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:1706 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z15yy_flush_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c510 yy_flush_buffer>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 14 13 15 2 (set (mem/f:DI (reg/v/f:DI 98 [ b ]) [1 b_8(D)->yy_input_file+0 S8 A64])
        (reg/v/f:DI 99 [ file ])) lex.yy.c:1708 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (mem:SI (plus:DI (reg/v/f:DI 98 [ b ])
                (const_int 56 [0x38])) [2 b_8(D)->yy_fill_buffer+0 S4 A64])
        (const_int 1 [0x1])) lex.yy.c:1709 90 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 91 [ D.6655 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1715 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.6655 ])
            (const_int 0 [0]))) lex.yy.c:1715 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 23)
            (pc))) lex.yy.c:1715 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 23)
;;  succ:       3 [85.0%]  (FALLTHRU)
;;              4 [15.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 90 91 98 99

;; basic block 3, loop depth 0, count 0, freq 8500, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [85.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(6){ }u19(7){ }u20(16){ }u21(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 90 91 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 98
;; lr  def 	 17 [flags] 100
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 3 (set (reg:DI 100 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1715 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 21 20 22 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 98 [ b ])
            (mem/f:DI (plus:DI (mult:DI (reg:DI 100 [ yy_buffer_stack_top ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 91 [ D.6655 ])) [1 *_16+0 S8 A64]))) lex.yy.c:1715 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 100 [ yy_buffer_stack_top ])
        (expr_list:REG_DEAD (reg/f:DI 91 [ D.6655 ])
            (nil))))
(jump_insn 22 21 23 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) lex.yy.c:1715 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1765 (nil)))
 -> 27)
;;  succ:       4 [82.3%]  (FALLTHRU)
;;              5 [17.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 90 98 99

;; basic block 4, loop depth 0, count 0, freq 8500, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [82.3%]  (FALLTHRU)
;;              2 [15.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u26(6){ }u27(7){ }u28(16){ }u29(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 90 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98
;; lr  def 	
(code_label 23 22 24 4 65 "" [1 uses])
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (mem:SI (plus:DI (reg/v/f:DI 98 [ b ])
                (const_int 48 [0x30])) [2 b_8(D)->yy_bs_lineno+0 S4 A64])
        (const_int 1 [0x1])) lex.yy.c:1716 90 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (set (mem:SI (plus:DI (reg/v/f:DI 98 [ b ])
                (const_int 52 [0x34])) [2 b_8(D)->yy_bs_column+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1717 90 {*movsi_internal}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 90 98 99

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [17.6%] 
;;              4 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u32(6){ }u33(7){ }u34(16){ }u35(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 90 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99
;; lr  def 	 17 [flags] 88
(code_label 27 26 28 5 66 "" [1 uses])
(note 28 27 5 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 5 28 29 5 (set (reg:SI 88 [ D.6653 ])
        (const_int 0 [0])) lex.yy.c:1720 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 29 5 30 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 99 [ file ])
            (const_int 0 [0]))) lex.yy.c:1720 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 30 29 31 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 42)
            (pc))) lex.yy.c:1720 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 42)
;;  succ:       6 [78.3%]  (FALLTHRU)
;;              7 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90 98 99

;; basic block 6, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [78.3%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(6){ }u39(7){ }u40(16){ }u41(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 90 98 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 96 97
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg/v/f:DI 99 [ file ])) lex.yy.c:1720 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 99 [ file ])
        (nil)))
(call_insn 33 32 34 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fileno") [flags 0x41]  <function_decl 0x7f88bbf95af8 fileno>) [0 fileno S1 A8])
            (const_int 0 [0]))) lex.yy.c:1720 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("fileno") [flags 0x41]  <function_decl 0x7f88bbf95af8 fileno>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 34 33 35 6 (set (reg:SI 96 [ D.6653 ])
        (reg:SI 0 ax)) lex.yy.c:1720 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 35 34 36 6 (set (reg:SI 5 di)
        (reg:SI 96 [ D.6653 ])) lex.yy.c:1720 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96 [ D.6653 ])
        (nil)))
(call_insn 36 35 37 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isatty") [flags 0x41]  <function_decl 0x7f88bc0d7e58 isatty>) [0 isatty S1 A8])
            (const_int 0 [0]))) lex.yy.c:1720 669 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("isatty") [flags 0x41]  <function_decl 0x7f88bc0d7e58 isatty>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 37 36 38 6 (set (reg:SI 97 [ D.6653 ])
        (reg:SI 0 ax)) lex.yy.c:1720 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 38 37 39 6 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 97 [ D.6653 ])
            (const_int 0 [0]))) lex.yy.c:1720 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 97 [ D.6653 ])
        (nil)))
(note 39 38 40 6 NOTE_INSN_DELETED)
(insn 40 39 42 6 (set (reg:SI 88 [ D.6653 ])
        (gt:SI (reg:CCNO 17 flags)
            (const_int 0 [0]))) lex.yy.c:1720 606 {*setcc_si_1_movzbl}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil)))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90 98

;; basic block 7, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 6, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [21.6%] 
;;              6 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u53(6){ }u54(7){ }u55(16){ }u56(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90 98
;; lr  def 	
(code_label 42 40 43 7 67 "" [1 uses])
(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 7 (set (mem:SI (plus:DI (reg/v/f:DI 98 [ b ])
                (const_int 40 [0x28])) [2 b_8(D)->yy_is_interactive+0 S4 A64])
        (reg:SI 88 [ D.6653 ])) lex.yy.c:1720 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 98 [ b ])
        (expr_list:REG_DEAD (reg:SI 88 [ D.6653 ])
            (nil))))
(insn 45 44 0 7 (set (mem:SI (reg/f:DI 89 [ D.6654 ]) [2 *_5+0 S4 A32])
        (reg/v:SI 90 [ oerrno ])) lex.yy.c:1722 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 90 [ oerrno ])
        (expr_list:REG_DEAD (reg/f:DI 89 [ D.6654 ])
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function yy_buffer_state* yy_create_buffer(FILE*, int) (_Z16yy_create_bufferP8_IO_FILEi, funcdef_no=94, decl_uid=4257, cgraph_uid=94, symbol_order=121)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 92: def dominates all uses has unique first use
Reg 93: def dominates all uses has unique first use
Reg 94 uninteresting
Reg 88 uninteresting
Reg 96 uninteresting
Reg 92 not local to one basic block
Reg 93 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a2 (r96,l0) best AREG, allocno AREG
    a3 (r95,l0) best DIREG, allocno DIREG
    a0 (r94,l0) best AREG, allocno AREG
    a5 (r93,l0) best SIREG, allocno SIREG
    a1 (r92,l0) best DIREG, allocno DIREG
    a4 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r94,l0) costs: AREG:-1999,-1999 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:55960,55960 NO_REX_SSE_REGS:55960,55960 SSE_REGS:55960,55960 MMX_REGS:85935,85935 INT_SSE_REGS:61955,61955 ALL_REGS:1346960,1346960 MEM:22982,22982
  a1(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-999,-999 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15992,15992 NO_REX_SSE_REGS:15992,15992 SSE_REGS:15992,15992 MMX_REGS:20987,20987 INT_SSE_REGS:16991,16991 ALL_REGS:307792,307792 MEM:3997,3997
  a2(r96,l0) costs: AREG:-999,-999 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23976,23976 NO_REX_SSE_REGS:23976,23976 SSE_REGS:23976,23976 MMX_REGS:33966,33966 INT_SSE_REGS:25974,25974 ALL_REGS:515484,515484 MEM:8991,8991
  a3(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-999,-999 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20979,20979 NO_REX_SSE_REGS:20979,20979 SSE_REGS:20979,20979 MMX_REGS:25974,25974 INT_SSE_REGS:21978,21978 ALL_REGS:415584,415584 MEM:5994,5994
  a4(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28971,28971 NO_REX_SSE_REGS:28971,28971 SSE_REGS:28971,28971 MMX_REGS:38961,38961 INT_SSE_REGS:30969,30969 ALL_REGS:623376,623376 MEM:10989,10989
  a5(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15992,15992 NO_REX_SSE_REGS:15992,15992 SSE_REGS:15992,15992 MMX_REGS:20987,20987 INT_SSE_REGS:16991,16991 ALL_REGS:307792,307792 MEM:3997,3997


Pass 1 for finding pseudo/allocno costs

    r96: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r94,l0) costs: AREG:0,-1999 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:59960,59960 NO_REX_SSE_REGS:59960,59960 SSE_REGS:59960,59960 MMX_REGS:89935,89935 INT_SSE_REGS:65955,65955 ALL_REGS:1350960,1350960 MEM:25982,25982
  a1(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-999,-999 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19992,19992 NO_REX_SSE_REGS:19992,19992 SSE_REGS:19992,19992 MMX_REGS:24987,24987 INT_SSE_REGS:20991,20991 ALL_REGS:311792,311792 MEM:6997,6997
  a2(r96,l0) costs: AREG:0,-999 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27972,27972 NO_REX_SSE_REGS:27972,27972 SSE_REGS:27972,27972 MMX_REGS:37962,37962 INT_SSE_REGS:29970,29970 ALL_REGS:519480,519480 MEM:11988,11988
  a3(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-999 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20979,20979 NO_REX_SSE_REGS:20979,20979 SSE_REGS:20979,20979 MMX_REGS:25974,25974 INT_SSE_REGS:21978,21978 ALL_REGS:415584,415584 MEM:5994,5994
  a4(r88,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:28971,28971 NO_REX_SSE_REGS:28971,28971 SSE_REGS:28971,28971 MMX_REGS:38961,38961 INT_SSE_REGS:30969,30969 ALL_REGS:623376,623376 MEM:10989,10989
  a5(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19992,19992 NO_REX_SSE_REGS:19992,19992 SSE_REGS:19992,19992 MMX_REGS:24987,24987 INT_SSE_REGS:20991,20991 ALL_REGS:311792,311792 MEM:6997,6997

   Insn 45(l0): point = 0
   Insn 44(l0): point = 2
   Insn 39(l0): point = 4
   Insn 38(l0): point = 6
   Insn 37(l0): point = 8
   Insn 36(l0): point = 10
   Insn 18(l0): point = 13
   Insn 17(l0): point = 15
   Insn 34(l0): point = 18
   Insn 33(l0): point = 20
   Insn 31(l0): point = 22
   Insn 28(l0): point = 24
   Insn 27(l0): point = 26
   Insn 26(l0): point = 28
   Insn 25(l0): point = 30
   Insn 23(l0): point = 32
   Insn 22(l0): point = 34
   Insn 15(l0): point = 37
   Insn 14(l0): point = 39
   Insn 10(l0): point = 41
   Insn 9(l0): point = 43
   Insn 8(l0): point = 45
   Insn 3(l0): point = 47
   Insn 2(l0): point = 49
 a0(r94): [18..41] [3..12]
 a1(r92): [18..49] [9..12]
 a2(r96): [21..24]
 a3(r95): [29..30]
 a4(r88): [31..34]
 a5(r93): [35..47]
Compressing live ranges: from 52 to 10 - 19%
Ranges after the compression:
 a0(r94): [0..9]
 a1(r92): [0..9]
 a2(r96): [2..3]
 a3(r95): [4..5]
 a4(r88): [6..7]
 a5(r93): [8..9]
+++Allocating 48 bytes for conflict table (uncompressed size 48)
;; a0(r94,l0) conflicts: a1(r92,l0) a2(r96,l0) a3(r95,l0) a4(r88,l0) a5(r93,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a1(r92,l0) conflicts: a0(r94,l0) a2(r96,l0) a3(r95,l0) a4(r88,l0) a5(r93,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a2(r96,l0) conflicts: a0(r94,l0) a1(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r95,l0) conflicts: a0(r94,l0) a1(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r88,l0) conflicts: a0(r94,l0) a1(r92,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r93,l0) conflicts: a0(r94,l0) a1(r92,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

  cp0:a4(r88)<->a5(r93)@124:shuffle
  cp1:a3(r95)<->a4(r88)@124:shuffle
  pref0:a2(r96)<-hr0@1498
  pref1:a3(r95)<-hr5@1498
  pref2:a0(r94)<-hr0@2998
  pref3:a5(r93)<-hr4@1500
  pref4:a1(r92)<-hr5@1500
  pref5:a1(r92)<-hr4@999
  pref6:a0(r94)<-hr5@999
  regions=1, blocks=6, points=10
    allocnos=6 (big 0), copies=2, conflicts=0, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 5 4 3 2
    all: 0r94 1r92 2r96 3r95 4r88 5r93
    modified regnos: 88 92 93 94 95 96
    border:
    Pressure: GENERAL_REGS=3
 Removing pref6:hr5@999
 Removing pref2:hr0@2998
 Removing pref5:hr4@999
 Removing pref4:hr5@1500
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@69930
          2:( 1-3 6 37-44)@51964
            3:( 3 6 41-44)@20991
      Allocno a0r94 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a1r92 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a2r96 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r95 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a4r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a5r93 of GENERAL_REGS(15) has 7 avail. regs  3 4 6 41-44, ^node:  0-6 37-44 (confl regs =  0 5 7-36 45-79)
      Forming thread by copy 0:a4r88-a5r93 (freq=124):
        Result (freq=4996): a4r88(2997) a5r93(1999)
      Forming thread by copy 1:a3r95-a4r88 (freq=124):
        Result (freq=6994): a3r95(1998) a4r88(2997) a5r93(1999)
      Pushing a1(r92,l0)(cost 0)
      Pushing a2(r96,l0)(cost 0)
      Pushing a3(r95,l0)(cost 0)
      Pushing a5(r93,l0)(cost 0)
      Pushing a4(r88,l0)(cost 0)
      Pushing a0(r94,l0)(cost 0)
      Popping a0(r94,l0)  -- assign reg 3
      Popping a4(r88,l0)  -- assign reg 4
      Popping a5(r93,l0)  -- assign reg 6
      Popping a3(r95,l0)  -- assign reg 5
      Popping a2(r96,l0)  -- assign reg 0
      Popping a1(r92,l0)  -- assign reg 41
Disposition:
    4:r88  l0     4    1:r92  l0    41    5:r93  l0     6    0:r94  l0     3
    3:r95  l0     5    2:r96  l0     0
New iteration of spill/restore move
+++Costs: overall -5994, reg -5994, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


yy_buffer_state* yy_create_buffer(FILE*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={6d,4u} r1={5d} r2={5d} r4={6d,2u} r5={9d,5u} r6={1d,5u} r7={1d,9u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,4u} r17={7d,2u} r18={4d} r19={4d} r20={1d,5u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r88={1d,3u} r92={1d,1u} r93={1d,1u} r94={1d,6u} r95={1d,1u} r96={1d,2u} 
;;    total ref usage 372{322d,50u,0e} in 29{25 regular + 4 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 93 94
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 92 [ file ])
        (reg:DI 5 di [ file ])) lex.yy.c:1655 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ file ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 93 [ size ])
        (reg:SI 4 si [ size ])) lex.yy.c:1655 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ size ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 8 2 (var_location:DI size (const_int 64 [0x40])) -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (const_int 64 [0x40])) lex.yy.c:2123 89 {*movdi_internal}
     (nil))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 12 2 (set (reg/f:DI 94)
        (reg:DI 0 ax)) lex.yy.c:2123 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 94)
            (nil))))
(debug_insn 12 10 13 2 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1658 -1
     (nil))
(debug_insn 13 12 14 2 (var_location:DI b (clobber (const_int 0 [0]))) lex.yy.c:1658 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94)
            (const_int 0 [0]))) lex.yy.c:1659 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 15 14 32 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) lex.yy.c:1659 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 20)
;;  succ:       3 [0.0%]  (FALLTHRU)
;;              4 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 94

;; basic block 3, loop depth 0, count 0, freq 8
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [0.0%]  (FALLTHRU)
;;              4 [0.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(6){ }u12(7){ }u13(16){ }u14(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 32 15 16 3 76 "" [1 uses])
(note 16 32 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f88bbf1aa20 *.LC9>)) lex.yy.c:1660 89 {*movdi_internal}
     (nil))
(call_insn 18 17 19 3 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1660 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 19 18 20)
;; basic block 4, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(6){ }u18(7){ }u19(16){ }u20(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 93 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93 94
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 95 96
(code_label 20 19 21 4 75 "" [1 uses])
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 4 (set (reg:DI 88 [ D.6665 ])
        (sign_extend:DI (reg/v:SI 93 [ size ]))) lex.yy.c:1662 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 93 [ size ])
        (nil)))
(insn 23 22 24 4 (set (mem:DI (plus:DI (reg/f:DI 94)
                (const_int 24 [0x18])) [4 MEM[(struct yy_buffer_state *)_14].yy_buf_size+0 S8 A64])
        (reg:DI 88 [ D.6665 ])) lex.yy.c:1662 89 {*movdi_internal}
     (nil))
(debug_insn 24 23 25 4 (var_location:DI size (plus:DI (reg:DI 88 [ D.6665 ])
        (const_int 2 [0x2]))) lex.yy.c:1667 -1
     (nil))
(insn 25 24 26 4 (parallel [
            (set (reg:DI 95 [ D.6665 ])
                (plus:DI (reg:DI 88 [ D.6665 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2123 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 88 [ D.6665 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 27 4 (set (reg:DI 5 di)
        (reg:DI 95 [ D.6665 ])) lex.yy.c:2123 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95 [ D.6665 ])
        (nil)))
(call_insn 27 26 28 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 28 27 30 4 (set (reg/f:DI 96)
        (reg:DI 0 ax)) lex.yy.c:2123 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 96)
            (nil))))
(debug_insn 30 28 31 4 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1667 -1
     (nil))
(insn 31 30 33 4 (set (mem/f:DI (plus:DI (reg/f:DI 94)
                (const_int 8 [0x8])) [1 MEM[(struct yy_buffer_state *)_14].yy_ch_buf+0 S8 A64])
        (reg/f:DI 96)) lex.yy.c:1667 89 {*movdi_internal}
     (nil))
(insn 33 31 34 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 96)
            (const_int 0 [0]))) lex.yy.c:1668 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (nil)))
(jump_insn 34 33 35 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 32)
            (pc))) lex.yy.c:1668 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 32)
;;  succ:       3 [0.0%] 
;;              5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 94

;; basic block 5, loop depth 0, count 0, freq 9992, maybe hot
;;  prev block 4, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(6){ }u35(7){ }u36(16){ }u37(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 94
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 94
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 5 (set (mem:SI (plus:DI (reg/f:DI 94)
                (const_int 36 [0x24])) [2 MEM[(struct yy_buffer_state *)_14].yy_is_our_buffer+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:1671 90 {*movsi_internal}
     (nil))
(insn 37 36 38 5 (set (reg:DI 4 si)
        (reg/v/f:DI 92 [ file ])) lex.yy.c:1673 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 92 [ file ])
        (nil)))
(insn 38 37 39 5 (set (reg:DI 5 di)
        (reg/f:DI 94)) lex.yy.c:1673 89 {*movdi_internal}
     (nil))
(call_insn 39 38 44 5 (call (mem:QI (symbol_ref:DI ("_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c948 yy_init_buffer>) [0 yy_init_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:1673 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c948 yy_init_buffer>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 44 39 45 5 (set (reg/i:DI 0 ax)
        (reg/f:DI 94)) lex.yy.c:1676 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94)
        (nil)))
(insn 45 44 0 5 (use (reg/i:DI 0 ax)) lex.yy.c:1676 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void yyrestart(FILE*) (_Z9yyrestartP8_IO_FILE, funcdef_no=91, decl_uid=4252, cgraph_uid=91, symbol_order=118)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 72.
verify found no changes in insn with uid = 72.
deleting insn with uid = 40.
scanning new insn with uid = 73.
verify found no changes in insn with uid = 73.
deleting insn with uid = 18.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 9 count 7 (    1)
Reg 112: def dominates all uses has unique first use
Reg 87 uninteresting
Ignoring reg 113, has equiv memory
Ignoring reg 116, has equiv memory
Ignoring reg 115, has equiv memory
Ignoring reg 97, has equiv memory
Reg 98: def dominates all uses has unique first use
Ignoring reg 117, has equiv memory
Ignoring reg 120, has equiv memory
Ignoring reg 119, has equiv memory
Ignoring reg 121, has equiv memory
Reg 105 uninteresting
Reg 122 uninteresting
Ignoring reg 123, has equiv memory
Ignoring reg 124, has equiv memory
Reg 98 not local to one basic block
Reg 112 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 4 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 97: (insn_list:REG_DEP_TRUE 26 (nil))
init_insns for 103: (insn_list:REG_DEP_TRUE 44 (nil))
init_insns for 113: (insn_list:REG_DEP_TRUE 11 (nil))
init_insns for 115: (insn_list:REG_DEP_TRUE 73 (nil))
init_insns for 116: (insn_list:REG_DEP_TRUE 20 (nil))
init_insns for 117: (insn_list:REG_DEP_TRUE 31 (nil))
init_insns for 119: (insn_list:REG_DEP_TRUE 72 (nil))
init_insns for 120: (insn_list:REG_DEP_TRUE 42 (nil))
init_insns for 121: (insn_list:REG_DEP_TRUE 45 (nil))
init_insns for 123: (insn_list:REG_DEP_TRUE 52 (nil))
init_insns for 124: (insn_list:REG_DEP_TRUE 54 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r121,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a7 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a8 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a12 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a15 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a16 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a18 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r112,l0) best SIREG, allocno SIREG
    a1 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a11 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a14 (r97,l0) best AREG, allocno AREG
    a13 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a9 (r91,l0) best DIREG, allocno DIREG
    a17 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r124,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a1(r105,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:44000,44000 NO_REX_SSE_REGS:44000,44000 SSE_REGS:44000,44000 MMX_REGS:64000,64000 INT_SSE_REGS:48000,48000 ALL_REGS:936000,936000 MEM:20000,20000
  a2(r123,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a3(r122,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:12000,12000
  a4(r102,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37000,37000 NO_REX_SSE_REGS:37000,37000 SSE_REGS:37000,37000 MMX_REGS:52000,52000 INT_SSE_REGS:40000,40000 ALL_REGS:832000,832000 MEM:16000,16000
  a5(r103,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36000,36000 NO_REX_SSE_REGS:36000,36000 SSE_REGS:36000,36000 MMX_REGS:51000,51000 INT_SSE_REGS:39000,39000 ALL_REGS:728000,728000 MEM:8000,8000
  a6(r121,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a7(r120,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a8(r119,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:0,0
  a9(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29556,29556 NO_REX_SSE_REGS:29556,29556 SSE_REGS:29556,29556 MMX_REGS:39216,39216 INT_SSE_REGS:31488,31488 ALL_REGS:530404,530404 MEM:11083,11083
  a10(r112,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000
  a11(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4980,4980 NO_REX_SSE_REGS:4980,4980 SSE_REGS:4980,4980 MMX_REGS:6540,6540 INT_SSE_REGS:5292,5292 ALL_REGS:86424,86424 MEM:2076,2076
  a12(r117,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2100,2100 NO_REX_SSE_REGS:2100,2100 SSE_REGS:2100,2100 MMX_REGS:2625,2625 INT_SSE_REGS:2205,2205 ALL_REGS:32760,32760 MEM:0,0
  a13(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4347,4347 NO_REX_SSE_REGS:4347,4347 SSE_REGS:4347,4347 MMX_REGS:5382,5382 INT_SSE_REGS:4554,4554 ALL_REGS:86112,86112 MEM:1656,1656
  a14(r97,l0) costs: AREG:-207,-207 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3312,3312 NO_REX_SSE_REGS:3312,3312 SSE_REGS:3312,3312 MMX_REGS:4347,4347 INT_SSE_REGS:3519,3519 ALL_REGS:63756,63756 MEM:1035,1035
  a15(r116,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4140,4140 NO_REX_SSE_REGS:4140,4140 SSE_REGS:4140,4140 MMX_REGS:5175,5175 INT_SSE_REGS:4347,4347 ALL_REGS:64584,64584 MEM:0,0
  a16(r115,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4140,4140 NO_REX_SSE_REGS:4140,4140 SSE_REGS:4140,4140 MMX_REGS:5175,5175 INT_SSE_REGS:4347,4347 ALL_REGS:64584,64584 MEM:0,0
  a17(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27456,27456 NO_REX_SSE_REGS:27456,27456 SSE_REGS:27456,27456 MMX_REGS:37116,37116 INT_SSE_REGS:29388,29388 ALL_REGS:505856,505856 MEM:11728,11728
  a18(r113,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:18640,18640 NO_REX_SSE_REGS:18640,18640 SSE_REGS:18640,18640 MMX_REGS:23300,23300 INT_SSE_REGS:19572,19572 ALL_REGS:290784,290784 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r112: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r97: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r124,l0) costs: GENERAL_REGS:0,0 MEM:0,0
  a1(r105,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:45000,45000 NO_REX_SSE_REGS:45000,45000 SSE_REGS:45000,45000 MMX_REGS:65000,65000 INT_SSE_REGS:49000,49000 ALL_REGS:940000,940000 MEM:20000,20000
  a2(r123,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a3(r122,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29000,29000 NO_REX_SSE_REGS:29000,29000 SSE_REGS:29000,29000 MMX_REGS:39000,39000 INT_SSE_REGS:31000,31000 ALL_REGS:524000,524000 MEM:12000,12000
  a4(r102,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:37000,37000 NO_REX_SSE_REGS:37000,37000 SSE_REGS:37000,37000 MMX_REGS:52000,52000 INT_SSE_REGS:40000,40000 ALL_REGS:832000,832000 MEM:16000,16000
  a5(r103,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:37000,37000 NO_REX_SSE_REGS:37000,37000 SSE_REGS:37000,37000 MMX_REGS:52000,52000 INT_SSE_REGS:40000,40000 ALL_REGS:732000,732000 MEM:8000,8000
  a6(r121,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a7(r120,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a8(r119,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:316000,316000 MEM:0,0
  a9(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:31421,31421 NO_REX_SSE_REGS:31421,31421 SSE_REGS:31421,31421 MMX_REGS:41081,41081 INT_SSE_REGS:33353,33353 ALL_REGS:535380,535380 MEM:11704,11704
  a10(r112,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a11(r98,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:5187,5187 NO_REX_SSE_REGS:5187,5187 SSE_REGS:5187,5187 MMX_REGS:6747,6747 INT_SSE_REGS:5499,5499 ALL_REGS:87252,87252 MEM:2076,2076
  a12(r117,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2205,2205 NO_REX_SSE_REGS:2205,2205 SSE_REGS:2205,2205 MMX_REGS:2730,2730 INT_SSE_REGS:2310,2310 ALL_REGS:33180,33180 MEM:0,0
  a13(r95,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4347,4347 NO_REX_SSE_REGS:4347,4347 SSE_REGS:4347,4347 MMX_REGS:5382,5382 INT_SSE_REGS:4554,4554 ALL_REGS:86112,86112 MEM:1656,1656
  a14(r97,l0) costs: AREG:0,-207 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:4140,4140 NO_REX_SSE_REGS:4140,4140 SSE_REGS:4140,4140 MMX_REGS:5175,5175 INT_SSE_REGS:4347,4347 ALL_REGS:64584,64584 MEM:1656,1656
  a15(r116,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4347,4347 NO_REX_SSE_REGS:4347,4347 SSE_REGS:4347,4347 MMX_REGS:5382,5382 INT_SSE_REGS:4554,4554 ALL_REGS:65412,65412 MEM:0,0
  a16(r115,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:4347,4347 NO_REX_SSE_REGS:4347,4347 SSE_REGS:4347,4347 MMX_REGS:5382,5382 INT_SSE_REGS:4554,4554 ALL_REGS:65412,65412 MEM:0,0
  a17(r87,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:28456,28456 NO_REX_SSE_REGS:28456,28456 SSE_REGS:28456,28456 MMX_REGS:38116,38116 INT_SSE_REGS:30388,30388 ALL_REGS:509856,509856 MEM:11728,11728
  a18(r113,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:19572,19572 NO_REX_SSE_REGS:19572,19572 SSE_REGS:19572,19572 MMX_REGS:24232,24232 INT_SSE_REGS:20504,20504 ALL_REGS:294512,294512 MEM:0,0

   Insn 54(l0): point = 0
   Insn 53(l0): point = 2
   Insn 52(l0): point = 4
   Insn 51(l0): point = 6
   Insn 50(l0): point = 8
   Insn 49(l0): point = 10
   Insn 48(l0): point = 12
   Insn 47(l0): point = 14
   Insn 46(l0): point = 16
   Insn 45(l0): point = 18
   Insn 44(l0): point = 20
   Insn 43(l0): point = 22
   Insn 72(l0): point = 24
   Insn 42(l0): point = 26
   Insn 39(l0): point = 28
   Insn 38(l0): point = 30
   Insn 37(l0): point = 32
   Insn 32(l0): point = 35
   Insn 31(l0): point = 37
   Insn 29(l0): point = 40
   Insn 28(l0): point = 42
   Insn 4(l0): point = 44
   Insn 27(l0): point = 46
   Insn 26(l0): point = 48
   Insn 25(l0): point = 50
   Insn 24(l0): point = 52
   Insn 23(l0): point = 54
   Insn 22(l0): point = 56
   Insn 21(l0): point = 58
   Insn 73(l0): point = 60
   Insn 20(l0): point = 62
   Insn 17(l0): point = 64
   Insn 14(l0): point = 67
   Insn 13(l0): point = 69
   Insn 12(l0): point = 71
   Insn 11(l0): point = 73
   Insn 9(l0): point = 76
   Insn 8(l0): point = 78
   Insn 7(l0): point = 80
   Insn 2(l0): point = 82
 a0(r124): [1..2]
 a1(r105): [3..14]
 a2(r123): [5..6]
 a3(r122): [7..8]
 a4(r102): [9..22]
 a5(r103): [15..20]
 a6(r121): [17..18]
 a7(r120): [23..26]
 a8(r119): [23..24]
 a9(r91): [67..71] [40..44] [31..35]
 a10(r112): [33..82]
 a11(r98): [36..46]
 a12(r117): [36..37]
 a13(r95): [49..58]
 a14(r97): [49..50]
 a15(r116): [59..62]
 a16(r115): [59..60]
 a17(r87): [72..80]
 a18(r113): [72..73]
Compressing live ranges: from 85 to 26 - 30%
Ranges after the compression:
 a0(r124): [0..1]
 a1(r105): [2..7]
 a2(r123): [2..3]
 a3(r122): [4..5]
 a4(r102): [6..9]
 a5(r103): [8..9]
 a6(r121): [8..9]
 a7(r120): [10..11]
 a8(r119): [10..11]
 a9(r91): [22..23] [16..17] [12..13]
 a10(r112): [12..25]
 a11(r98): [14..17]
 a12(r117): [14..15]
 a13(r95): [18..19]
 a14(r97): [18..19]
 a15(r116): [20..21]
 a16(r115): [20..21]
 a17(r87): [24..25]
 a18(r113): [24..25]
+++Allocating 144 bytes for conflict table (uncompressed size 152)
;; a0(r124,l0) conflicts:;; a1(r105,l0) conflicts: a2(r123,l0) a3(r122,l0) a4(r102,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r123,l0) conflicts: a1(r105,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r122,l0) conflicts: a1(r105,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r102,l0) conflicts: a1(r105,l0) a5(r103,l0) a6(r121,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r103,l0) conflicts: a4(r102,l0) a6(r121,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r121,l0) conflicts: a4(r102,l0) a5(r103,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r120,l0) conflicts: a8(r119,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r119,l0) conflicts: a7(r120,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r91,l0) conflicts: a10(r112,l0) a11(r98,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a10(r112,l0) conflicts: a9(r91,l0) a12(r117,l0) a11(r98,l0) a13(r95,l0) a14(r97,l0) a15(r116,l0) a16(r115,l0) a17(r87,l0) a18(r113,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a11(r98,l0) conflicts: a9(r91,l0) a10(r112,l0) a12(r117,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r117,l0) conflicts: a10(r112,l0) a11(r98,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r95,l0) conflicts: a10(r112,l0) a14(r97,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a14(r97,l0) conflicts: a10(r112,l0) a13(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r116,l0) conflicts: a10(r112,l0) a16(r115,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r115,l0) conflicts: a10(r112,l0) a15(r116,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r87,l0) conflicts: a10(r112,l0) a18(r113,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r113,l0) conflicts: a10(r112,l0) a17(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a10(r112)<-hr4@1500
  pref1:a14(r97)<-hr0@310
  pref2:a9(r91)<-hr5@1500
  pref3:a10(r112)<-hr5@1000
  regions=1, blocks=7, points=26
    allocnos=19 (big 0), copies=0, conflicts=0, ranges=21

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 6 5 4 3 2
    all: 0r124 1r105 2r123 3r122 4r102 5r103 6r121 7r120 8r119 9r91 10r112 11r98 12r117 13r95 14r97 15r116 16r115 17r87 18r113
    modified regnos: 87 91 95 97 98 102 103 105 112 113 115 116 117 119 120 121 122 123 124
    border:
    Pressure: GENERAL_REGS=4
 Removing pref3:hr5@1000
 Removing pref0:hr4@1500
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@144162
          2:( 0-3 5 6 37-44)@29408
            3:( 1-3 6 37-44)@17312
      Allocno a0r124 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a1r105 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r123 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r122 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a4r102 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a5r103 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a6r121 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a7r120 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a8r119 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a9r91 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a10r112 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a11r98 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a12r117 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a13r95 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a14r97 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a15r116 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a16r115 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a17r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a18r113 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a12(r117,l0)(cost 0)
      Pushing a16(r115,l0)(cost 0)
      Pushing a15(r116,l0)(cost 0)
      Pushing a14(r97,l0)(cost 0)
      Pushing a13(r95,l0)(cost 0)
      Pushing a11(r98,l0)(cost 0)
      Pushing a18(r113,l0)(cost 0)
      Pushing a10(r112,l0)(cost 0)
      Pushing a8(r119,l0)(cost 0)
      Pushing a7(r120,l0)(cost 0)
      Pushing a6(r121,l0)(cost 0)
      Pushing a3(r122,l0)(cost 0)
      Pushing a2(r123,l0)(cost 0)
      Pushing a0(r124,l0)(cost 0)
      Pushing a17(r87,l0)(cost 0)
      Pushing a5(r103,l0)(cost 0)
      Pushing a4(r102,l0)(cost 0)
      Pushing a9(r91,l0)(cost 0)
      Pushing a1(r105,l0)(cost 0)
      Popping a1(r105,l0)  -- assign reg 0
      Popping a9(r91,l0)  -- assign reg 5
      Popping a4(r102,l0)  -- assign reg 1
      Popping a5(r103,l0)  -- assign reg 0
      Popping a17(r87,l0)  -- assign reg 0
      Popping a0(r124,l0)  -- assign reg 0
      Popping a2(r123,l0)  -- assign reg 1
      Popping a3(r122,l0)  -- assign reg 1
      Popping a6(r121,l0)  -- assign reg 2
      Popping a7(r120,l0)  -- assign reg 0
      Popping a8(r119,l0)  -- assign reg 1
      Popping a10(r112,l0)  -- assign reg 3
      Popping a18(r113,l0)  -- assign reg 1
      Popping a11(r98,l0)  -- assign reg 0
      Popping a13(r95,l0)  -- assign reg 6
      Popping a14(r97,l0)  -- assign reg 0
      Popping a15(r116,l0)  -- assign reg 0
      Popping a16(r115,l0)  -- assign reg 1
      Popping a12(r117,l0)  -- assign reg 1
Disposition:
   17:r87  l0     0    9:r91  l0     5   13:r95  l0     6   14:r97  l0     0
   11:r98  l0     0    4:r102 l0     1    5:r103 l0     0    1:r105 l0     0
   10:r112 l0     3   18:r113 l0     1   16:r115 l0     1   15:r116 l0     0
   12:r117 l0     1    8:r119 l0     1    7:r120 l0     0    6:r121 l0     2
    3:r122 l0     1    2:r123 l0     1    0:r124 l0     0
New iteration of spill/restore move
+++Costs: overall -3621, reg -3621, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void yyrestart(FILE*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={4d,1u} r1={4d} r2={4d} r4={6d,2u} r5={6d,3u} r6={1d,6u} r7={1d,9u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,5u} r17={6d,3u} r18={3d} r19={3d} r20={1d,6u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,2u} r91={3d,2u} r95={1d,1u,1e} r97={1d,1u} r98={1d,2u} r102={1d,2u,1e} r103={1d,2u,1e} r105={1d,3u} r112={1d,1u} r113={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} 
;;    total ref usage 327{263d,61u,3e} in 40{37 regular + 3 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 112
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 112 [ input_file ])
        (reg:DI 5 di [ input_file ])) lex.yy.c:1593 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ input_file ])
        (nil)))
(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 3 8 2 (set (reg/f:DI 87 [ D.6669 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1595 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.6669 ])
            (const_int 0 [0]))) lex.yy.c:1595 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 15)
            (pc))) lex.yy.c:1595 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 672 (nil)))
 -> 15)
;;  succ:       4 [6.7%] 
;;              3 [93.3%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 112

;; basic block 3, loop depth 0, count 0, freq 9328, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [93.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ }u8(7){ }u9(16){ }u10(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 112
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 17 [flags] 91 113
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:DI 113 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1595 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 12 11 13 3 (set (reg/f:DI 91 [ D.6671 ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 113 [ yy_buffer_stack_top ])
                    (const_int 8 [0x8]))
                (reg/f:DI 87 [ D.6669 ])) [1 *_7+0 S8 A64])) lex.yy.c:1595 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 113 [ yy_buffer_stack_top ])
        (expr_list:REG_DEAD (reg/f:DI 87 [ D.6669 ])
            (nil))))
(insn 13 12 14 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.6671 ])
            (const_int 0 [0]))) lex.yy.c:1595 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 14 13 15 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 35)
            (pc))) lex.yy.c:1595 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8500 (nil)))
 -> 35)
;;  succ:       4 [15.0%]  (FALLTHRU)
;;              6 [85.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112

;; basic block 4, loop depth 0, count 0, freq 2071, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [15.0%]  (FALLTHRU)
;;              2 [6.7%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 112
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 95 97 98 115 116
(code_label 15 14 16 4 82 "" [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 17 16 19 4 (call (mem:QI (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>) [0 yyensure_buffer_stack S1 A8])
        (const_int 0 [0])) lex.yy.c:1596 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>)
        (nil))
    (nil))
(note 19 17 20 4 NOTE_INSN_DELETED)
(insn 20 19 73 4 (set (reg/f:DI 116 [ yy_buffer_stack ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1597 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (nil)))
(insn 73 20 21 4 (set (reg:DI 115 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1597 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 21 73 22 4 (set (reg/f:DI 95 [ D.6669 ])
        (plus:DI (mult:DI (reg:DI 115 [ yy_buffer_stack_top ])
                (const_int 8 [0x8]))
            (reg/f:DI 116 [ yy_buffer_stack ]))) lex.yy.c:1597 214 {*leadi}
     (expr_list:REG_DEAD (reg/f:DI 116 [ yy_buffer_stack ])
        (expr_list:REG_DEAD (reg:DI 115 [ yy_buffer_stack_top ])
            (nil))))
(insn 22 21 23 4 (set (reg:SI 4 si)
        (const_int 16384 [0x4000])) lex.yy.c:1598 90 {*movsi_internal}
     (nil))
(insn 23 22 24 4 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1598 89 {*movdi_internal}
     (nil))
(call_insn 24 23 25 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>) [0 yy_create_buffer S1 A8])
            (const_int 0 [0]))) lex.yy.c:1598 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 25 24 26 4 (set (reg/f:DI 97 [ D.6671 ])
        (reg:DI 0 ax)) lex.yy.c:1598 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 95 [ D.6669 ]) [1 *_13+0 S8 A64])
            (nil))))
(insn 26 25 27 4 (set (mem/f:DI (reg/f:DI 95 [ D.6669 ]) [1 *_13+0 S8 A64])
        (reg/f:DI 97 [ D.6671 ])) lex.yy.c:1598 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ D.6671 ])
        (expr_list:REG_DEAD (reg/f:DI 95 [ D.6669 ])
            (nil))))
(insn 27 26 4 4 (set (reg/f:DI 98 [ D.6669 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1601 89 {*movdi_internal}
     (nil))
(insn 4 27 28 4 (set (reg/f:DI 91 [ D.6671 ])
        (const_int 0 [0])) lex.yy.c:1601 89 {*movdi_internal}
     (nil))
(insn 28 4 29 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 98 [ D.6669 ])
            (const_int 0 [0]))) lex.yy.c:1601 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 29 28 30 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 35)
            (pc))) lex.yy.c:1601 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4896 (nil)))
 -> 35)
;;  succ:       5 [51.0%]  (FALLTHRU)
;;              6 [49.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 98 112

;; basic block 5, loop depth 0, count 0, freq 1057, maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [51.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u32(6){ }u33(7){ }u34(16){ }u35(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98 112
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 98
;; lr  def 	 91 117
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg:DI 117 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 32 31 35 5 (set (reg/f:DI 91 [ D.6671 ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 117 [ yy_buffer_stack_top ])
                    (const_int 8 [0x8]))
                (reg/f:DI 98 [ D.6669 ])) [1 *_50+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 117 [ yy_buffer_stack_top ])
        (expr_list:REG_DEAD (reg/f:DI 98 [ D.6669 ])
            (nil))))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112

;; basic block 6, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 5, next block 1, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [49.0%] 
;;              5 [100.0%]  (FALLTHRU)
;;              3 [85.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(6){ }u39(7){ }u40(16){ }u41(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 112
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 102 103 105 119 120 121 122 123 124
(code_label 35 32 36 6 84 "" [2 uses])
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (set (reg:DI 4 si)
        (reg/v/f:DI 112 [ input_file ])) lex.yy.c:1601 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 112 [ input_file ])
        (nil)))
(insn 38 37 39 6 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.6671 ])) lex.yy.c:1601 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.6671 ])
        (nil)))
(call_insn 39 38 41 6 (call (mem:QI (symbol_ref:DI ("_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c948 yy_init_buffer>) [0 yy_init_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:1601 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c948 yy_init_buffer>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(note 41 39 42 6 NOTE_INSN_DELETED)
(insn 42 41 72 6 (set (reg/f:DI 120 [ yy_buffer_stack ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1642 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (nil)))
(insn 72 42 43 6 (set (reg:DI 119 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1642 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 43 72 44 6 (set (reg/f:DI 102 [ D.6669 ])
        (plus:DI (mult:DI (reg:DI 119 [ yy_buffer_stack_top ])
                (const_int 8 [0x8]))
            (reg/f:DI 120 [ yy_buffer_stack ]))) lex.yy.c:1642 214 {*leadi}
     (expr_list:REG_DEAD (reg/f:DI 120 [ yy_buffer_stack ])
        (expr_list:REG_DEAD (reg:DI 119 [ yy_buffer_stack_top ])
            (nil))))
(insn 44 43 45 6 (set (reg/f:DI 103 [ D.6671 ])
        (mem/f:DI (reg/f:DI 102 [ D.6669 ]) [1 *_29+0 S8 A64])) lex.yy.c:1642 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 102 [ D.6669 ]) [1 *_29+0 S8 A64])
        (nil)))
(insn 45 44 46 6 (set (reg:SI 121 [ _30->yy_n_chars ])
        (mem:SI (plus:DI (reg/f:DI 103 [ D.6671 ])
                (const_int 32 [0x20])) [2 _30->yy_n_chars+0 S4 A64])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 103 [ D.6671 ])
                (const_int 32 [0x20])) [2 _30->yy_n_chars+0 S4 A64])
        (nil)))
(insn 46 45 47 6 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 121 [ _30->yy_n_chars ])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 121 [ _30->yy_n_chars ])
        (nil)))
(insn 47 46 48 6 (set (reg/f:DI 105 [ D.6674 ])
        (mem/f:DI (plus:DI (reg/f:DI 103 [ D.6671 ])
                (const_int 16 [0x10])) [1 _30->yy_buf_pos+0 S8 A64])) lex.yy.c:1643 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.6671 ])
        (nil)))
(insn 48 47 49 6 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 105 [ D.6674 ])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 49 48 50 6 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 105 [ D.6674 ])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 50 49 51 6 (set (reg/f:DI 122 [ *_29 ])
        (mem/f:DI (reg/f:DI 102 [ D.6669 ]) [1 *_29+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ D.6669 ])
        (nil)))
(insn 51 50 52 6 (set (reg/f:DI 123 [ _33->yy_input_file ])
        (mem/f:DI (reg/f:DI 122 [ *_29 ]) [1 _33->yy_input_file+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 122 [ *_29 ])
        (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
            (nil))))
(insn 52 51 53 6 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 123 [ _33->yy_input_file ])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 123 [ _33->yy_input_file ])
        (nil)))
(insn 53 52 54 6 (set (reg:QI 124 [ *_32 ])
        (mem:QI (reg/f:DI 105 [ D.6674 ]) [0 *_32+0 S1 A8])) lex.yy.c:1645 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105 [ D.6674 ])
        (expr_list:REG_EQUIV (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
            (nil))))
(insn 54 53 0 6 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 124 [ *_32 ])) lex.yy.c:1645 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 124 [ *_32 ])
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void yypush_buffer_state(YY_BUFFER_STATE) (_Z19yypush_buffer_stateP15yy_buffer_state, funcdef_no=98, decl_uid=4263, cgraph_uid=98, symbol_order=125)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 9 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 8 3 }
;; 3 succs { 5 4 }
;; 4 succs { 7 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
Will split live ranges of parameters at BB 3
      Creating newreg=117 from oldreg=106
scanning new insn with uid = 63.
Split live-range of register (reg/v/f:DI 106 [ new_buffer ])
rescanning insn with uid = 43.
rescanning insn with uid = 41.
rescanning insn with uid = 40.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 9 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 106 uninteresting
Reg 87 uninteresting
Ignoring reg 107, has equiv memory
Reg 88 uninteresting
Ignoring reg 91, has equiv memory
Ignoring reg 108, has equiv memory
Ignoring reg 93, has equiv memory
Reg 109: local to bb 6 def dominates all uses has unique first use
Ignoring reg 110, has equiv memory
Ignoring reg 113, has equiv memory
Reg 99 uninteresting
Reg 114 uninteresting
Ignoring reg 115, has equiv memory
Ignoring reg 116, has equiv memory
Found def insn 31 for 109 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 8 3 }
;; 3 succs { 5 4 }
;; 4 succs { 7 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 91: (insn_list:REG_DEP_TRUE 26 (nil))
init_insns for 93: (insn_list:REG_DEP_TRUE 29 (nil))
init_insns for 107: (insn_list:REG_DEP_TRUE 14 (nil))
init_insns for 108: (insn_list:REG_DEP_TRUE 27 (nil))
init_insns for 110: (insn_list:REG_DEP_TRUE 32 (nil))
init_insns for 111: (insn_list:REG_DEP_TRUE 35 (nil))
init_insns for 113: (insn_list:REG_DEP_TRUE 41 (nil))
init_insns for 115: (insn_list:REG_DEP_TRUE 48 (nil))
init_insns for 116: (insn_list:REG_DEP_TRUE 50 (nil))

Pass 0 for finding pseudo/allocno costs

    a5 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a9 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a12 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a11 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a15 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a16 (r107,l0) best NO_REGS, allocno NO_REGS
    a17 (r106,l0) best DIREG, allocno DIREG
    a4 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a13 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a14 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a7 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a8 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r116,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a1(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:34452,34452 NO_REX_SSE_REGS:34452,34452 SSE_REGS:34452,34452 MMX_REGS:50112,50112 INT_SSE_REGS:37584,37584 ALL_REGS:732888,732888 MEM:15660,15660
  a2(r115,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15660,15660 NO_REX_SSE_REGS:15660,15660 SSE_REGS:15660,15660 MMX_REGS:19575,19575 INT_SSE_REGS:16443,16443 ALL_REGS:244296,244296 MEM:0,0
  a3(r114,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21924,21924 NO_REX_SSE_REGS:21924,21924 SSE_REGS:21924,21924 MMX_REGS:29754,29754 INT_SSE_REGS:23490,23490 ALL_REGS:407160,407160 MEM:9396,9396
  a4(r103,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:48977,48977 NO_REX_SSE_REGS:48977,48977 SSE_REGS:48977,48977 MMX_REGS:68627,68627 INT_SSE_REGS:52907,52907 ALL_REGS:1098032,1098032 MEM:20999,20999
  a5(r117,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:31320,31320 NO_REX_SSE_REGS:31320,31320 SSE_REGS:31320,31320 MMX_REGS:46980,46980 INT_SSE_REGS:34452,34452 ALL_REGS:729756,729756 MEM:13311,13311
  a6(r113,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15660,15660 NO_REX_SSE_REGS:15660,15660 SSE_REGS:15660,15660 MMX_REGS:19575,19575 INT_SSE_REGS:16443,16443 ALL_REGS:244296,244296 MEM:0,0
  a7(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:18514,18514 NO_REX_SSE_REGS:18514,18514 SSE_REGS:18514,18514 MMX_REGS:24674,24674 INT_SSE_REGS:19746,19746 ALL_REGS:394784,394784 MEM:7592,7592
  a8(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:25516,25516 NO_REX_SSE_REGS:25516,25516 SSE_REGS:25516,25516 MMX_REGS:35591,35591 INT_SSE_REGS:27531,27531 ALL_REGS:500552,500552 MEM:11192,11192
  a9(r111,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11886,11886 NO_REX_SSE_REGS:11886,11886 SSE_REGS:11886,11886 MMX_REGS:14716,14716 INT_SSE_REGS:12452,12452 ALL_REGS:235456,235456 MEM:3962,3962
  a10(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:17848,17848 NO_REX_SSE_REGS:17848,17848 SSE_REGS:17848,17848 MMX_REGS:24008,24008 INT_SSE_REGS:19080,19080 ALL_REGS:325520,325520 MEM:7026,7026
  a11(r109,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11320,11320 NO_REX_SSE_REGS:11320,11320 SSE_REGS:11320,11320 MMX_REGS:14150,14150 INT_SSE_REGS:11886,11886 ALL_REGS:176592,176592 MEM:4528,4528
  a12(r110,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11320,11320 NO_REX_SSE_REGS:11320,11320 SSE_REGS:11320,11320 MMX_REGS:14150,14150 INT_SSE_REGS:11886,11886 ALL_REGS:176592,176592 MEM:0,0
  a13(r93,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11320,11320 NO_REX_SSE_REGS:11320,11320 SSE_REGS:11320,11320 MMX_REGS:14150,14150 INT_SSE_REGS:11886,11886 ALL_REGS:176592,176592 MEM:0,0
  a14(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15848,15848 NO_REX_SSE_REGS:15848,15848 SSE_REGS:15848,15848 MMX_REGS:21508,21508 INT_SSE_REGS:16980,16980 ALL_REGS:294320,294320 MEM:2264,2264
  a15(r108,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a16(r107,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2340,2340 NO_REX_SSE_REGS:2340,2340 SSE_REGS:2340,2340 MMX_REGS:2925,2925 INT_SSE_REGS:2457,2457 ALL_REGS:36504,36504 MEM:-117,-117
  a17(r106,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:22264,22264 NO_REX_SSE_REGS:22264,22264 SSE_REGS:22264,22264 MMX_REGS:31179,31179 INT_SSE_REGS:24047,24047 ALL_REGS:470864,470864 MEM:7349,7349


Pass 1 for finding pseudo/allocno costs

    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r107: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    r106: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r116,l0) costs: GENERAL_REGS:0,0 MEM:0,0
  a1(r99,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:35235,35235 NO_REX_SSE_REGS:35235,35235 SSE_REGS:35235,35235 MMX_REGS:50895,50895 INT_SSE_REGS:38367,38367 ALL_REGS:736020,736020 MEM:15660,15660
  a2(r115,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16443,16443 NO_REX_SSE_REGS:16443,16443 SSE_REGS:16443,16443 MMX_REGS:20358,20358 INT_SSE_REGS:17226,17226 ALL_REGS:247428,247428 MEM:0,0
  a3(r114,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:22707,22707 NO_REX_SSE_REGS:22707,22707 SSE_REGS:22707,22707 MMX_REGS:30537,30537 INT_SSE_REGS:24273,24273 ALL_REGS:410292,410292 MEM:9396,9396
  a4(r103,l0) costs: GENERAL_REGS:468,468 SSE_FIRST_REG:49445,49445 NO_REX_SSE_REGS:49445,49445 SSE_REGS:49445,49445 MMX_REGS:69095,69095 INT_SSE_REGS:53375,53375 ALL_REGS:1098500,1098500 MEM:21584,21584
  a5(r117,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:34452,34452 NO_REX_SSE_REGS:34452,34452 SSE_REGS:34452,34452 MMX_REGS:50112,50112 INT_SSE_REGS:37584,37584 ALL_REGS:732888,732888 MEM:15660,15660
  a6(r113,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16443,16443 NO_REX_SSE_REGS:16443,16443 SSE_REGS:16443,16443 MMX_REGS:20358,20358 INT_SSE_REGS:17226,17226 ALL_REGS:247428,247428 MEM:0,0
  a7(r89,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:18514,18514 NO_REX_SSE_REGS:18514,18514 SSE_REGS:18514,18514 MMX_REGS:24674,24674 INT_SSE_REGS:19746,19746 ALL_REGS:394784,394784 MEM:7592,7592
  a8(r87,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:26299,26299 NO_REX_SSE_REGS:26299,26299 SSE_REGS:26299,26299 MMX_REGS:36374,36374 INT_SSE_REGS:28314,28314 ALL_REGS:503684,503684 MEM:11192,11192
  a9(r111,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11886,11886 NO_REX_SSE_REGS:11886,11886 SSE_REGS:11886,11886 MMX_REGS:14716,14716 INT_SSE_REGS:12452,12452 ALL_REGS:235456,235456 MEM:3962,3962
  a10(r88,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:18514,18514 NO_REX_SSE_REGS:18514,18514 SSE_REGS:18514,18514 MMX_REGS:24674,24674 INT_SSE_REGS:19746,19746 ALL_REGS:328184,328184 MEM:7026,7026
  a11(r109,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11886,11886 NO_REX_SSE_REGS:11886,11886 SSE_REGS:11886,11886 MMX_REGS:14716,14716 INT_SSE_REGS:12452,12452 ALL_REGS:178856,178856 MEM:4528,4528
  a12(r110,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11886,11886 NO_REX_SSE_REGS:11886,11886 SSE_REGS:11886,11886 MMX_REGS:14716,14716 INT_SSE_REGS:12452,12452 ALL_REGS:178856,178856 MEM:0,0
  a13(r93,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11886,11886 NO_REX_SSE_REGS:11886,11886 SSE_REGS:11886,11886 MMX_REGS:14716,14716 INT_SSE_REGS:12452,12452 ALL_REGS:178856,178856 MEM:0,0
  a14(r91,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16414,16414 NO_REX_SSE_REGS:16414,16414 SSE_REGS:16414,16414 MMX_REGS:22074,22074 INT_SSE_REGS:17546,17546 ALL_REGS:296584,296584 MEM:2264,2264
  a15(r108,l0) costs: GENERAL_REGS:0,0 MEM:0,0
  a16(r107,l0) costs: GENERAL_REGS:936,936 SSE_FIRST_REG:2808,2808 NO_REX_SSE_REGS:2808,2808 SSE_REGS:2808,2808 MMX_REGS:3393,3393 INT_SSE_REGS:2925,2925 ALL_REGS:36972,36972 MEM:468,468
  a17(r106,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:26264,26264 NO_REX_SSE_REGS:26264,26264 SSE_REGS:26264,26264 MMX_REGS:35179,35179 INT_SSE_REGS:28047,28047 ALL_REGS:474864,474864 MEM:10349,10349

   Insn 50(l0): point = 1
   Insn 49(l0): point = 3
   Insn 48(l0): point = 5
   Insn 47(l0): point = 7
   Insn 46(l0): point = 9
   Insn 45(l0): point = 11
   Insn 44(l0): point = 13
   Insn 43(l0): point = 15
   Insn 42(l0): point = 17
   Insn 41(l0): point = 19
   Insn 40(l0): point = 21
   Insn 37(l0): point = 24
   Insn 35(l0): point = 26
   Insn 34(l0): point = 28
   Insn 33(l0): point = 30
   Insn 32(l0): point = 32
   Insn 31(l0): point = 34
   Insn 30(l0): point = 36
   Insn 29(l0): point = 38
   Insn 28(l0): point = 40
   Insn 27(l0): point = 42
   Insn 26(l0): point = 44
   Insn 24(l0): point = 47
   Insn 23(l0): point = 49
   Insn 22(l0): point = 51
   Insn 21(l0): point = 53
   Insn 20(l0): point = 55
   Insn 61(l0): point = 58
   Insn 15(l0): point = 60
   Insn 14(l0): point = 62
   Insn 12(l0): point = 65
   Insn 11(l0): point = 67
   Insn 10(l0): point = 69
   Insn 9(l0): point = 71
   Insn 63(l0): point = 73
   Insn 7(l0): point = 76
   Insn 6(l0): point = 78
   Insn 2(l0): point = 80
 a0(r116): [2..3]
 a1(r99): [4..15]
 a2(r115): [6..7]
 a3(r114): [8..9]
 a4(r103): [58..60] [35..51] [10..24]
 a5(r117): [16..73]
 a6(r113): [18..19]
 a7(r89): [25..53]
 a8(r87): [65..69] [25..57]
 a9(r111): [27..28]
 a10(r88): [29..55]
 a11(r109): [31..34]
 a12(r110): [31..32]
 a13(r93): [37..38]
 a14(r91): [37..44]
 a15(r108): [41..42]
 a16(r107): [61..62]
 a17(r106): [74..80]
Compressing live ranges: from 83 to 26 - 31%
Ranges after the compression:
 a0(r116): [0..1]
 a1(r99): [2..7]
 a2(r115): [2..3]
 a3(r114): [4..5]
 a4(r103): [14..19] [6..9]
 a5(r117): [8..23]
 a6(r113): [8..9]
 a7(r89): [10..17]
 a8(r87): [22..23] [10..17]
 a9(r111): [10..11]
 a10(r88): [12..17]
 a11(r109): [12..13]
 a12(r110): [12..13]
 a13(r93): [14..15]
 a14(r91): [14..17]
 a15(r108): [16..17]
 a16(r107): [20..21]
 a17(r106): [24..25]
+++Allocating 128 bytes for conflict table (uncompressed size 144)
;; a0(r116,l0) conflicts:;; a1(r99,l0) conflicts: a2(r115,l0) a3(r114,l0) a4(r103,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r115,l0) conflicts: a1(r99,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r114,l0) conflicts: a1(r99,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r103,l0) conflicts: a1(r99,l0) a6(r113,l0) a5(r117,l0) a7(r89,l0) a8(r87,l0) a10(r88,l0) a13(r93,l0) a14(r91,l0) a15(r108,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r117,l0) conflicts: a4(r103,l0) a6(r113,l0) a9(r111,l0) a7(r89,l0) a8(r87,l0) a11(r109,l0) a12(r110,l0) a10(r88,l0) a13(r93,l0) a14(r91,l0) a15(r108,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r113,l0) conflicts: a4(r103,l0) a5(r117,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r89,l0) conflicts: a4(r103,l0) a5(r117,l0) a9(r111,l0) a8(r87,l0) a11(r109,l0) a12(r110,l0) a10(r88,l0) a13(r93,l0) a14(r91,l0) a15(r108,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r87,l0) conflicts: a4(r103,l0) a5(r117,l0) a9(r111,l0) a7(r89,l0) a11(r109,l0) a12(r110,l0) a10(r88,l0) a13(r93,l0) a14(r91,l0) a15(r108,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r111,l0) conflicts: a5(r117,l0) a7(r89,l0) a8(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r88,l0) conflicts: a4(r103,l0) a5(r117,l0) a7(r89,l0) a8(r87,l0) a11(r109,l0) a12(r110,l0) a13(r93,l0) a14(r91,l0) a15(r108,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r109,l0) conflicts: a5(r117,l0) a7(r89,l0) a8(r87,l0) a12(r110,l0) a10(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r110,l0) conflicts: a5(r117,l0) a7(r89,l0) a8(r87,l0) a11(r109,l0) a10(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r93,l0) conflicts: a4(r103,l0) a5(r117,l0) a7(r89,l0) a8(r87,l0) a10(r88,l0) a14(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r91,l0) conflicts: a4(r103,l0) a5(r117,l0) a7(r89,l0) a8(r87,l0) a10(r88,l0) a13(r93,l0) a15(r108,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r108,l0) conflicts: a4(r103,l0) a5(r117,l0) a7(r89,l0) a8(r87,l0) a10(r88,l0) a14(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r107,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r106,l0) conflicts:  cp0:a9(r111)<->a10(r88)@70:shuffle
  cp1:a4(r103)<->a16(r107)@14:shuffle
  cp2:a5(r117)<->a17(r106)@783:move
  pref0:a17(r106)<-hr5@1500
  regions=1, blocks=9, points=26
    allocnos=18 (big 0), copies=3, conflicts=0, ranges=20

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 8 7 6 5 4 3 2
    all: 0r116 1r99 2r115 3r114 4r103 5r117 6r113 7r89 8r87 9r111 10r88 11r109 12r110 13r93 14r91 15r108 16r107 17r106
    modified regnos: 87 88 89 91 93 99 103 106 107 108 109 110 111 113 114 115 116 117
    border:
    Pressure: GENERAL_REGS=7
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@223490
      Spill a16(r107,l0)
      Allocno a0r116 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a1r99 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r115 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r114 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a4r103 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a5r117 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a6r113 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a7r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a8r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a9r111 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a10r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a11r109 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a12r110 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a13r93 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a14r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a15r108 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a17r106 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Forming thread by copy 2:a5r117-a17r106 (freq=783):
        Result (freq=5915): a5r117(3132) a17r106(2783)
      Forming thread by copy 0:a9r111-a10r88 (freq=70):
        Result (freq=3030): a9r111(1132) a10r88(1898)
      Forming thread by copy 1:a4r103-a16r107 (freq=14):
        Result (freq=4947): a4r103(4713) a16r107(234)
      Pushing a15(r108,l0)(cost 0)
      Pushing a13(r93,l0)(cost 0)
      Pushing a12(r110,l0)(cost 0)
      Pushing a11(r109,l0)(cost 0)
      Pushing a6(r113,l0)(cost 0)
      Pushing a3(r114,l0)(cost 0)
      Pushing a2(r115,l0)(cost 0)
      Pushing a0(r116,l0)(cost 0)
      Pushing a14(r91,l0)(cost 0)
      Pushing a7(r89,l0)(cost 0)
      Pushing a8(r87,l0)(cost 0)
      Pushing a9(r111,l0)(cost 0)
      Pushing a10(r88,l0)(cost 0)
      Pushing a1(r99,l0)(cost 0)
      Pushing a4(r103,l0)(cost 0)
      Pushing a17(r106,l0)(cost 0)
      Pushing a5(r117,l0)(cost 0)
      Popping a5(r117,l0)  -- assign reg 3
      Popping a17(r106,l0)  -- assign reg 5
      Popping a4(r103,l0)  -- assign reg 0
      Popping a1(r99,l0)  -- assign reg 1
      Popping a10(r88,l0)  -- assign reg 1
      Popping a9(r111,l0)  -- assign reg 1
      Popping a8(r87,l0)  -- assign reg 2
      Popping a7(r89,l0)  -- assign reg 4
      Popping a14(r91,l0)  -- assign reg 5
      Popping a0(r116,l0)  -- assign reg 0
      Popping a2(r115,l0)  -- assign reg 0
      Popping a3(r114,l0)  -- assign reg 0
      Popping a6(r113,l0)  -- assign reg 1
      Popping a11(r109,l0)  -- assign reg 0
      Popping a12(r110,l0)  -- assign reg 5
      Popping a13(r93,l0)  -- assign reg 37
      Popping a15(r108,l0)  -- assign reg 37
Disposition:
    8:r87  l0     2   10:r88  l0     1    7:r89  l0     4   14:r91  l0     5
   13:r93  l0    37    1:r99  l0     1    4:r103 l0     0   17:r106 l0     5
   16:r107 l0   mem   15:r108 l0    37   11:r109 l0     0   12:r110 l0     5
    9:r111 l0     1    6:r113 l0     1    3:r114 l0     0    2:r115 l0     0
    0:r116 l0     0    5:r117 l0     3
New iteration of spill/restore move
+++Costs: overall -2064, reg -2532, mem 468, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void yypush_buffer_state(YY_BUFFER_STATE)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={2d,1u} r6={1d,8u} r7={1d,9u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,7u} r17={8d,3u} r18={1d} r19={1d} r20={1d,8u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,3u} r88={1d,2u} r89={1d,2u} r91={1d,2u} r93={1d,1u} r99={1d,3u} r103={3d,5u,1e} r106={1d,2u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,3u,1e} 
;;    total ref usage 188{118d,68u,2e} in 38{37 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 106
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 106 [ new_buffer ])
        (reg:DI 5 di [ new_buffer ])) lex.yy.c:1759 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ new_buffer ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 106 [ new_buffer ])
            (const_int 0 [0]))) lex.yy.c:1760 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 53)
            (pc))) lex.yy.c:1760 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2164 (nil)))
 -> 53)
;;  succ:       8 [21.6%] 
;;              3 [78.4%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106

;; basic block 3, loop depth 0, count 0, freq 7836, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [78.4%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(6){ }u8(7){ }u9(16){ }u10(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 106
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 117
(note 8 7 63 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 63 8 9 3 (set (reg/v/f:DI 117 [orig:106 new_buffer ] [106])
        (reg/v/f:DI 106 [ new_buffer ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 106 [ new_buffer ])
        (nil)))
(call_insn 9 63 10 3 (call (mem:QI (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>) [0 yyensure_buffer_stack S1 A8])
        (const_int 0 [0])) lex.yy.c:1763 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>)
        (nil))
    (nil))
(insn 10 9 11 3 (set (reg/f:DI 87 [ D.6678 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1766 89 {*movdi_internal}
     (nil))
(insn 11 10 12 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 87 [ D.6678 ])
            (const_int 0 [0]))) lex.yy.c:1766 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 12 11 13 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) lex.yy.c:1766 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8500 (nil)))
 -> 18)
;;  succ:       5 [85.0%] 
;;              4 [15.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 117

;; basic block 4, loop depth 0, count 0, freq 1175, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [15.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(6){ }u15(7){ }u16(16){ }u17(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 103 107
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg:DI 107 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 15 14 61 4 (parallel [
            (set (reg/f:DI 103 [ D.6678 ])
                (ashift:DI (reg:DI 107 [ yy_buffer_stack_top ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 512 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 107 [ yy_buffer_stack_top ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
                    (const_int 3 [0x3]))
                (nil)))))
(jump_insn 61 15 62 4 (set (pc)
        (label_ref 38)) 654 {jump}
     (nil)
 -> 38)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 117

(barrier 62 61 18)
;; basic block 5, loop depth 0, count 0, freq 6661, maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [85.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u19(6){ }u20(7){ }u21(16){ }u22(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 17 [flags] 88 89 103
(code_label 18 62 19 5 93 "" [1 uses])
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg:DI 88 [ D.6679 ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1766 89 {*movdi_internal}
     (nil))
(insn 21 20 22 5 (parallel [
            (set (reg:DI 89 [ D.6679 ])
                (ashift:DI (reg:DI 88 [ D.6679 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1766 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 22 21 23 5 (parallel [
            (set (reg/f:DI 103 [ D.6678 ])
                (plus:DI (reg/f:DI 87 [ D.6678 ])
                    (reg:DI 89 [ D.6679 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1766 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 103 [ D.6678 ]) [1 *_10+0 S8 A64])
            (const_int 0 [0]))) lex.yy.c:1766 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) lex.yy.c:1766 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 38)
;;  succ:       6 [85.0%]  (FALLTHRU)
;;              7 [15.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 103 117

;; basic block 6, loop depth 0, count 0, freq 5662, maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [85.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u28(6){ }u29(7){ }u30(16){ }u31(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 103 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 103
;; lr  def 	 17 [flags] 91 93 103 108 109 110 111
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 91 [ D.6681 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) lex.yy.c:1769 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (nil)))
(insn 27 26 28 6 (set (reg:QI 108 [ yy_hold_char ])
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) lex.yy.c:1769 93 {*movqi_internal}
     (expr_list:REG_EQUIV (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (nil)))
(insn 28 27 29 6 (set (mem:QI (reg/f:DI 91 [ D.6681 ]) [0 *_12+0 S1 A8])
        (reg:QI 108 [ yy_hold_char ])) lex.yy.c:1769 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 108 [ yy_hold_char ])
        (nil)))
(insn 29 28 30 6 (set (reg/f:DI 93 [ D.6680 ])
        (mem/f:DI (reg/f:DI 103 [ D.6678 ]) [1 *_10+0 S8 A64])) lex.yy.c:1770 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 103 [ D.6678 ]) [1 *_10+0 S8 A64])
        (nil)))
(insn 30 29 31 6 (set (mem/f:DI (plus:DI (reg/f:DI 93 [ D.6680 ])
                (const_int 16 [0x10])) [1 _15->yy_buf_pos+0 S8 A64])
        (reg/f:DI 91 [ D.6681 ])) lex.yy.c:1770 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.6680 ])
        (expr_list:REG_DEAD (reg/f:DI 91 [ D.6681 ])
            (nil))))
(insn 31 30 32 6 (set (reg/f:DI 109 [ *_10 ])
        (mem/f:DI (reg/f:DI 103 [ D.6678 ]) [1 *_10+0 S8 A64])) lex.yy.c:1771 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.6678 ])
        (nil)))
(insn 32 31 33 6 (set (reg:SI 110 [ yy_n_chars ])
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) lex.yy.c:1771 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (nil)))
(insn 33 32 34 6 (set (mem:SI (plus:DI (reg/f:DI 109 [ *_10 ])
                (const_int 32 [0x20])) [2 _17->yy_n_chars+0 S4 A64])
        (reg:SI 110 [ yy_n_chars ])) lex.yy.c:1771 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 110 [ yy_n_chars ])
        (expr_list:REG_DEAD (reg/f:DI 109 [ *_10 ])
            (nil))))
(insn 34 33 35 6 (parallel [
            (set (reg:DI 111)
                (plus:DI (reg:DI 88 [ D.6679 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1776 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 88 [ D.6679 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
                (nil)))))
(insn 35 34 36 6 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (reg:DI 111)) lex.yy.c:1776 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 111)
        (nil)))
(note 36 35 37 6 NOTE_INSN_DELETED)
(insn 37 36 38 6 (set (reg/f:DI 103 [ D.6678 ])
        (plus:DI (plus:DI (reg/f:DI 87 [ D.6678 ])
                (reg:DI 89 [ D.6679 ]))
            (const_int 8 [0x8]))) 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 89 [ D.6679 ])
        (expr_list:REG_DEAD (reg/f:DI 87 [ D.6678 ])
            (nil))))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 117

;; basic block 7, loop depth 0, count 0, freq 7836, maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;;              5 [15.0%] 
;;              4 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u45(6){ }u46(7){ }u47(16){ }u48(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 117
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103 117
;; lr  def 	 99 113 114 115 116
(code_label 38 37 39 7 94 "" [2 uses])
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 7 (set (mem/f:DI (reg/f:DI 103 [ D.6678 ]) [1 *_41+0 S8 A64])
        (reg/v/f:DI 117 [orig:106 new_buffer ] [106])) lex.yy.c:1777 89 {*movdi_internal}
     (nil))
(insn 41 40 42 7 (set (reg:SI 113 [ new_buffer_4(D)->yy_n_chars ])
        (mem:SI (plus:DI (reg/v/f:DI 117 [orig:106 new_buffer ] [106])
                (const_int 32 [0x20])) [2 new_buffer_4(D)->yy_n_chars+0 S4 A64])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 117 [orig:106 new_buffer ] [106])
                (const_int 32 [0x20])) [2 new_buffer_4(D)->yy_n_chars+0 S4 A64])
        (nil)))
(insn 42 41 43 7 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 113 [ new_buffer_4(D)->yy_n_chars ])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 113 [ new_buffer_4(D)->yy_n_chars ])
        (nil)))
(insn 43 42 44 7 (set (reg/f:DI 99 [ D.6681 ])
        (mem/f:DI (plus:DI (reg/v/f:DI 117 [orig:106 new_buffer ] [106])
                (const_int 16 [0x10])) [1 new_buffer_4(D)->yy_buf_pos+0 S8 A64])) lex.yy.c:1643 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 117 [orig:106 new_buffer ] [106])
        (nil)))
(insn 44 43 45 7 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 99 [ D.6681 ])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 45 44 46 7 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 99 [ D.6681 ])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 46 45 47 7 (set (reg/f:DI 114 [ *_41 ])
        (mem/f:DI (reg/f:DI 103 [ D.6678 ]) [1 *_41+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.6678 ])
        (nil)))
(insn 47 46 48 7 (set (reg/f:DI 115 [ _34->yy_input_file ])
        (mem/f:DI (reg/f:DI 114 [ *_41 ]) [1 _34->yy_input_file+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 114 [ *_41 ])
        (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
            (nil))))
(insn 48 47 49 7 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 115 [ _34->yy_input_file ])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 115 [ _34->yy_input_file ])
        (nil)))
(insn 49 48 50 7 (set (reg:QI 116 [ *_33 ])
        (mem:QI (reg/f:DI 99 [ D.6681 ]) [0 *_33+0 S1 A8])) lex.yy.c:1645 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ D.6681 ])
        (expr_list:REG_EQUIV (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
            (nil))))
(insn 50 49 53 7 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 116 [ *_33 ])) lex.yy.c:1645 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 116 [ *_33 ])
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 7, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [100.0%]  (FALLTHRU)
;;              2 [21.6%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u61(6){ }u62(7){ }u63(16){ }u64(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 53 50 54 8 91 "" [1 uses])
(note 54 53 0 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void yypop_buffer_state() (_Z18yypop_buffer_statev, funcdef_no=99, decl_uid=4264, cgraph_uid=99, symbol_order=126)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 12 count 9 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 88 uninteresting
Reg 89 uninteresting
Reg 91 uninteresting
Reg 92 uninteresting
Reg 87 uninteresting
Ignoring reg 103, has equiv memory
Reg 97 uninteresting
Reg 104 uninteresting
Ignoring reg 105, has equiv memory
Ignoring reg 106, has equiv memory
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 8 3 }
;; 3 succs { 4 7 }
;; 4 succs { 8 }
;; 5 succs { 6 8 }
;; 6 succs { 8 }
;; 7 succs { 5 8 }
;; 8 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 103: (insn_list:REG_DEP_TRUE 32 (nil))
init_insns for 105: (insn_list:REG_DEP_TRUE 39 (nil))
init_insns for 106: (insn_list:REG_DEP_TRUE 41 (nil))

Pass 0 for finding pseudo/allocno costs

    a4 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a7 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a9 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a11 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r92,l0) best DIREG, allocno DIREG
    a1 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a8 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:27640,27640 NO_REX_SSE_REGS:27640,27640 SSE_REGS:27640,27640 MMX_REGS:38180,38180 INT_SSE_REGS:29748,29748 ALL_REGS:531856,531856 MEM:11621,11621
  a1(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:25314,25314 NO_REX_SSE_REGS:25314,25314 SSE_REGS:25314,25314 MMX_REGS:33839,33839 INT_SSE_REGS:27019,27019 ALL_REGS:541424,541424 MEM:10412,10412
  a2(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-807,-807 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24416,24416 NO_REX_SSE_REGS:24416,24416 SSE_REGS:24416,24416 MMX_REGS:32941,32941 INT_SSE_REGS:26121,26121 ALL_REGS:448032,448032 MEM:9605,9605
  a3(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:30408,30408 NO_REX_SSE_REGS:30408,30408 SSE_REGS:30408,30408 MMX_REGS:41913,41913 INT_SSE_REGS:32709,32709 ALL_REGS:582608,582608 MEM:13204,13204
  a4(r106,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a5(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28688,28688 NO_REX_SSE_REGS:28688,28688 SSE_REGS:28688,28688 MMX_REGS:41728,41728 INT_SSE_REGS:31296,31296 ALL_REGS:610272,610272 MEM:13040,13040
  a6(r105,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:13040,13040 NO_REX_SSE_REGS:13040,13040 SSE_REGS:13040,13040 MMX_REGS:16300,16300 INT_SSE_REGS:13692,13692 ALL_REGS:203424,203424 MEM:0,0
  a7(r104,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:18256,18256 NO_REX_SSE_REGS:18256,18256 SSE_REGS:18256,18256 MMX_REGS:24776,24776 INT_SSE_REGS:19560,19560 ALL_REGS:339040,339040 MEM:7824,7824
  a8(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:13679,13679 NO_REX_SSE_REGS:13679,13679 SSE_REGS:13679,13679 MMX_REGS:18954,18954 INT_SSE_REGS:14734,14734 ALL_REGS:303264,303264 MEM:5832,5832
  a9(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23708,23708 NO_REX_SSE_REGS:23708,23708 SSE_REGS:23708,23708 MMX_REGS:35503,35503 INT_SSE_REGS:26067,26067 ALL_REGS:532584,532584 MEM:11048,11048
  a10(r103,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:13040,13040 NO_REX_SSE_REGS:13040,13040 SSE_REGS:13040,13040 MMX_REGS:16300,16300 INT_SSE_REGS:13692,13692 ALL_REGS:203424,203424 MEM:0,0
  a11(r94,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:11687,11687 NO_REX_SSE_REGS:11687,11687 SSE_REGS:11687,11687 MMX_REGS:15717,15717 INT_SSE_REGS:12493,12493 ALL_REGS:251472,251472 MEM:4433,4433


Pass 1 for finding pseudo/allocno costs

    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:28538,28538 NO_REX_SSE_REGS:28538,28538 SSE_REGS:28538,28538 MMX_REGS:39078,39078 INT_SSE_REGS:30646,30646 ALL_REGS:535448,535448 MEM:11621,11621
  a1(r91,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:25314,25314 NO_REX_SSE_REGS:25314,25314 SSE_REGS:25314,25314 MMX_REGS:33839,33839 INT_SSE_REGS:27019,27019 ALL_REGS:541424,541424 MEM:10412,10412
  a2(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-807 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:25314,25314 NO_REX_SSE_REGS:25314,25314 SSE_REGS:25314,25314 MMX_REGS:33839,33839 INT_SSE_REGS:27019,27019 ALL_REGS:451624,451624 MEM:9605,9605
  a3(r88,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:31408,31408 NO_REX_SSE_REGS:31408,31408 SSE_REGS:31408,31408 MMX_REGS:42913,42913 INT_SSE_REGS:33709,33709 ALL_REGS:586608,586608 MEM:13204,13204
  a4(r106,l0) costs: GENERAL_REGS:0,0 MEM:0,0
  a5(r97,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29340,29340 NO_REX_SSE_REGS:29340,29340 SSE_REGS:29340,29340 MMX_REGS:42380,42380 INT_SSE_REGS:31948,31948 ALL_REGS:612880,612880 MEM:13040,13040
  a6(r105,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:13692,13692 NO_REX_SSE_REGS:13692,13692 SSE_REGS:13692,13692 MMX_REGS:16952,16952 INT_SSE_REGS:14344,14344 ALL_REGS:206032,206032 MEM:0,0
  a7(r104,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:18908,18908 NO_REX_SSE_REGS:18908,18908 SSE_REGS:18908,18908 MMX_REGS:25428,25428 INT_SSE_REGS:20212,20212 ALL_REGS:341648,341648 MEM:7824,7824
  a8(r87,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:13679,13679 NO_REX_SSE_REGS:13679,13679 SSE_REGS:13679,13679 MMX_REGS:18954,18954 INT_SSE_REGS:14734,14734 ALL_REGS:303264,303264 MEM:5832,5832
  a9(r95,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:24111,24111 NO_REX_SSE_REGS:24111,24111 SSE_REGS:24111,24111 MMX_REGS:35906,35906 INT_SSE_REGS:26470,26470 ALL_REGS:534196,534196 MEM:11048,11048
  a10(r103,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:13692,13692 NO_REX_SSE_REGS:13692,13692 SSE_REGS:13692,13692 MMX_REGS:16952,16952 INT_SSE_REGS:14344,14344 ALL_REGS:206032,206032 MEM:0,0
  a11(r94,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:11687,11687 NO_REX_SSE_REGS:11687,11687 SSE_REGS:11687,11687 MMX_REGS:15717,15717 INT_SSE_REGS:12493,12493 ALL_REGS:251472,251472 MEM:4433,4433

   Insn 81(l0): point = 1
   Insn 41(l0): point = 3
   Insn 40(l0): point = 5
   Insn 39(l0): point = 7
   Insn 38(l0): point = 9
   Insn 37(l0): point = 11
   Insn 36(l0): point = 13
   Insn 35(l0): point = 15
   Insn 34(l0): point = 17
   Insn 33(l0): point = 19
   Insn 32(l0): point = 21
   Insn 30(l0): point = 24
   Insn 29(l0): point = 26
   Insn 28(l0): point = 28
   Insn 27(l0): point = 30
   Insn 25(l0): point = 32
   Insn 24(l0): point = 34
   Insn 53(l0): point = 37
   Insn 52(l0): point = 39
   Insn 50(l0): point = 41
   Insn 49(l0): point = 43
   Insn 48(l0): point = 45
   Insn 79(l0): point = 48
   Insn 19(l0): point = 51
   Insn 18(l0): point = 53
   Insn 16(l0): point = 55
   Insn 15(l0): point = 57
   Insn 13(l0): point = 59
   Insn 7(l0): point = 62
   Insn 6(l0): point = 64
   Insn 5(l0): point = 66
 a0(r89): [51..59] [35..47]
 a1(r91): [51..57] [42..47]
 a2(r92): [51..55] [46..47]
 a3(r88): [51..66] [31..47]
 a4(r106): [4..5]
 a5(r97): [6..17]
 a6(r105): [8..9]
 a7(r104): [10..11]
 a8(r87): [12..30]
 a9(r95): [18..28]
 a10(r103): [20..21]
 a11(r94): [31..34]
Compressing live ranges: from 69 to 16 - 23%
Ranges after the compression:
 a0(r89): [12..15]
 a1(r91): [12..15]
 a2(r92): [12..15]
 a3(r88): [10..15]
 a4(r106): [0..1]
 a5(r97): [2..7]
 a6(r105): [2..3]
 a7(r104): [4..5]
 a8(r87): [6..9]
 a9(r95): [8..9]
 a10(r103): [8..9]
 a11(r94): [10..11]
+++Allocating 88 bytes for conflict table (uncompressed size 96)
;; a0(r89,l0) conflicts: a3(r88,l0) a1(r91,l0) a2(r92,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r91,l0) conflicts: a3(r88,l0) a0(r89,l0) a2(r92,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a2(r92,l0) conflicts: a3(r88,l0) a0(r89,l0) a1(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r88,l0) conflicts: a11(r94,l0) a0(r89,l0) a1(r91,l0) a2(r92,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a4(r106,l0) conflicts:;; a5(r97,l0) conflicts: a6(r105,l0) a7(r104,l0) a8(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r105,l0) conflicts: a5(r97,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r104,l0) conflicts: a5(r97,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r87,l0) conflicts: a5(r97,l0) a9(r95,l0) a10(r103,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r95,l0) conflicts: a8(r87,l0) a10(r103,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a10(r103,l0) conflicts: a8(r87,l0) a9(r95,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r94,l0) conflicts: a3(r88,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a0(r89)<->a11(r94)@50:shuffle
  pref0:a2(r92)<-hr5@1210
  regions=1, blocks=9, points=16
    allocnos=12 (big 0), copies=1, conflicts=0, ranges=12

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 8 7 6 5 4 3 2
    all: 0r89 1r91 2r92 3r88 4r106 5r97 6r105 7r104 8r87 9r95 10r103 11r94
    modified regnos: 87 88 89 91 92 94 95 97 103 104 105 106
    border:
    Pressure: GENERAL_REGS=4
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@108406
          2:( 0-4 6 37-44)@70474
      Allocno a0r89 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r91 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a2r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r88 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a4r106 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a5r97 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a6r105 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a7r104 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a8r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a9r95 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a10r103 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a11r94 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Forming thread by copy 0:a0r89-a11r94 (freq=50):
        Result (freq=4215): a0r89(3006) a11r94(1209)
      Pushing a10(r103,l0)(cost 0)
      Pushing a7(r104,l0)(cost 0)
      Pushing a6(r105,l0)(cost 0)
      Pushing a4(r106,l0)(cost 0)
      Pushing a8(r87,l0)(cost 0)
      Pushing a9(r95,l0)(cost 0)
      Pushing a2(r92,l0)(cost 0)
      Pushing a1(r91,l0)(cost 0)
      Pushing a5(r97,l0)(cost 0)
      Pushing a3(r88,l0)(cost 0)
      Pushing a11(r94,l0)(cost 0)
      Pushing a0(r89,l0)(cost 0)
      Popping a0(r89,l0)  -- assign reg 3
      Popping a11(r94,l0)  -- assign reg 3
      Popping a3(r88,l0)  -- assign reg 6
      Popping a5(r97,l0)  -- assign reg 0
      Popping a1(r91,l0)  -- assign reg 41
      Popping a2(r92,l0)  -- assign reg 5
      Popping a9(r95,l0)  -- assign reg 0
      Popping a8(r87,l0)  -- assign reg 1
      Popping a4(r106,l0)  -- assign reg 0
      Popping a6(r105,l0)  -- assign reg 1
      Popping a7(r104,l0)  -- assign reg 1
      Popping a10(r103,l0)  -- assign reg 2
Disposition:
    8:r87  l0     1    3:r88  l0     6    0:r89  l0     3    1:r91  l0    41
    2:r92  l0     5   11:r94  l0     3    9:r95  l0     0    5:r97  l0     0
   10:r103 l0     2    7:r104 l0     1    6:r105 l0     1    4:r106 l0     0
New iteration of spill/restore move
+++Costs: overall -2421, reg -2421, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void yypop_buffer_state()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,1u} r6={1d,8u} r7={1d,9u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,7u} r17={6d,4u} r18={1d} r19={1d} r20={1d,8u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,2u} r88={1d,3u} r89={1d,3u} r91={1d,2u} r92={1d,2u} r94={1d,2u} r95={1d,3u,1e} r97={1d,3u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} 
;;    total ref usage 171{109d,61u,1e} in 31{30 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 88
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 88 [ D.6687 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1790 89 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 88 [ D.6687 ])
            (const_int 0 [0]))) lex.yy.c:1790 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 57)
            (pc))) lex.yy.c:1790 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 57)
;;  succ:       8 [10.1%] 
;;              3 [89.9%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88

;; basic block 3, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [89.9%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u6(6){ }u7(7){ }u8(16){ }u9(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 17 [flags] 89 91 92
(note 12 7 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:DI 89 [ D.6688 ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1790 89 {*movdi_internal}
     (nil))
(note 14 13 15 3 NOTE_INSN_DELETED)
(insn 15 14 16 3 (set (reg/f:DI 91 [ D.6687 ])
        (plus:DI (mult:DI (reg:DI 89 [ D.6688 ])
                (const_int 8 [0x8]))
            (reg/f:DI 88 [ D.6687 ]))) lex.yy.c:1790 214 {*leadi}
     (nil))
(insn 16 15 18 3 (set (reg/f:DI 92 [ D.6689 ])
        (mem/f:DI (reg/f:DI 91 [ D.6687 ]) [1 *_8+0 S8 A64])) lex.yy.c:1790 89 {*movdi_internal}
     (nil))
(insn 18 16 19 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 92 [ D.6689 ])
            (const_int 0 [0]))) lex.yy.c:1790 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 19 18 78 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 77)
            (pc))) lex.yy.c:1790 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8986 (nil)))
 -> 77)
;;  succ:       4 [10.1%]  (FALLTHRU)
;;              7 [89.9%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 91 92

;; basic block 4, loop depth 0, count 0, freq 911, maybe hot
;;  prev block 3, next block 5, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [10.1%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 78 19 79 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 79 78 80 4 (set (pc)
        (label_ref 57)) 654 {jump}
     (nil)
 -> 57)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 80 79 51)
;; basic block 5, loop depth 0, count 0, freq 4037, maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       7 [50.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u16(6){ }u17(7){ }u18(16){ }u19(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89
;; lr  def 	 17 [flags] 87 94 95
(code_label 51 80 23 5 106 "" [1 uses])
(note 23 51 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (parallel [
            (set (reg:DI 94 [ D.6688 ])
                (plus:DI (reg:DI 89 [ D.6688 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1796 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 89 [ D.6688 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 25 24 26 5 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (reg:DI 94 [ D.6688 ])) lex.yy.c:1796 89 {*movdi_internal}
     (nil))
(note 26 25 27 5 NOTE_INSN_DELETED)
(insn 27 26 28 5 (set (reg/f:DI 87 [ D.6687 ])
        (plus:DI (mult:DI (reg:DI 94 [ D.6688 ])
                (const_int 8 [0x8]))
            (reg/f:DI 88 [ D.6687 ]))) 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 94 [ D.6688 ])
        (expr_list:REG_DEAD (reg/f:DI 88 [ D.6687 ])
            (nil))))
(insn 28 27 29 5 (set (reg/f:DI 95 [ D.6689 ])
        (mem/f:DI (reg/f:DI 87 [ D.6687 ]) [1 *_1+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 95 [ D.6689 ])
            (const_int 0 [0]))) lex.yy.c:1798 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 30 29 31 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 57)
            (pc))) lex.yy.c:1798 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 0 (nil)))
 -> 57)
;;  succ:       6 [100.0%]  (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 95

;; basic block 6, loop depth 0, count 0, freq 6520, maybe hot
;; Invalid sum of incoming frequencies 4037, should be 6520
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u28(6){ }u29(7){ }u30(16){ }u31(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 95
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 95
;; lr  def 	 97 103 104 105 106
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 6 (set (reg:SI 103 [ _23->yy_n_chars ])
        (mem:SI (plus:DI (reg/f:DI 95 [ D.6689 ])
                (const_int 32 [0x20])) [2 _23->yy_n_chars+0 S4 A64])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 95 [ D.6689 ])
                (const_int 32 [0x20])) [2 _23->yy_n_chars+0 S4 A64])
        (nil)))
(insn 33 32 34 6 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 103 [ _23->yy_n_chars ])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 103 [ _23->yy_n_chars ])
        (nil)))
(insn 34 33 35 6 (set (reg/f:DI 97 [ D.6691 ])
        (mem/f:DI (plus:DI (reg/f:DI 95 [ D.6689 ])
                (const_int 16 [0x10])) [1 _23->yy_buf_pos+0 S8 A64])) lex.yy.c:1643 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.6689 ])
        (nil)))
(insn 35 34 36 6 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 97 [ D.6691 ])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 36 35 37 6 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 97 [ D.6691 ])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 37 36 38 6 (set (reg/f:DI 104 [ *_1 ])
        (mem/f:DI (reg/f:DI 87 [ D.6687 ]) [1 *_1+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.6687 ])
        (nil)))
(insn 38 37 39 6 (set (reg/f:DI 105 [ _26->yy_input_file ])
        (mem/f:DI (reg/f:DI 104 [ *_1 ]) [1 _26->yy_input_file+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 104 [ *_1 ])
        (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
            (nil))))
(insn 39 38 40 6 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 105 [ _26->yy_input_file ])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105 [ _26->yy_input_file ])
        (nil)))
(insn 40 39 41 6 (set (reg:QI 106 [ *_25 ])
        (mem:QI (reg/f:DI 97 [ D.6691 ]) [0 *_25+0 S1 A8])) lex.yy.c:1645 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ D.6691 ])
        (expr_list:REG_EQUIV (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
            (nil))))
(insn 41 40 81 6 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 106 [ *_25 ])) lex.yy.c:1645 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 106 [ *_25 ])
        (nil)))
(jump_insn 81 41 82 6 (set (pc)
        (label_ref 57)) 654 {jump}
     (nil)
 -> 57)
;;  succ:       8 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 82 81 77)
;; basic block 7, loop depth 0, count 0, freq 8075, maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [89.9%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u42(6){ }u43(7){ }u44(16){ }u45(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 91 92
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 91 92
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 77 82 47 7 113 "" [1 uses])
(note 47 77 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 7 (set (reg:DI 5 di)
        (reg/f:DI 92 [ D.6689 ])) lex.yy.c:1793 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.6689 ])
        (nil)))
(call_insn 49 48 50 7 (call (mem:QI (symbol_ref:DI ("_Z16yy_delete_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c438 yy_delete_buffer>) [0 yy_delete_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:1793 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_delete_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c438 yy_delete_buffer>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 50 49 52 7 (set (mem/f:DI (reg/f:DI 91 [ D.6687 ]) [1 *_8+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:1794 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.6687 ])
        (nil)))
(insn 52 50 53 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 89 [ D.6688 ])
            (const_int 0 [0]))) lex.yy.c:1795 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 53 52 57 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) lex.yy.c:1795 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 51)
;;  succ:       5 [50.0%] 
;;              8 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89

;; basic block 8, loop depth 0, count 0, freq 10000, maybe hot
;; Invalid sum of incoming frequencies 12483, should be 10000
;;  prev block 7, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [100.0%] 
;;              2 [10.1%] 
;;              7 [50.0%]  (FALLTHRU)
;;              5
;;              6 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u52(6){ }u53(7){ }u54(16){ }u55(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 57 53 58 8 101 "" [4 uses])
(note 58 57 0 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int yylex() (_Z5yylexv, funcdef_no=85, decl_uid=5394, cgraph_uid=85, symbol_order=112)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 173 n_edges 270 count 359 (  2.1)
scanning new insn with uid = 1659.
verify found no changes in insn with uid = 1659.
deleting insn with uid = 1061.
scanning new insn with uid = 1660.
verify found no changes in insn with uid = 1660.
deleting insn with uid = 1040.
scanning new insn with uid = 1661.
verify found no changes in insn with uid = 1661.
deleting insn with uid = 123.
scanning new insn with uid = 1662.
verify found no changes in insn with uid = 1662.
deleting insn with uid = 114.
scanning new insn with uid = 1663.
verify found no changes in insn with uid = 1663.
deleting insn with uid = 105.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 173 n_edges 270 count 359 (  2.1)
Ignoring reg 349, has equiv memory
Ignoring reg 350, has equiv memory
Reg 99 uninteresting
Ignoring reg 352, has equiv memory
Ignoring reg 355, has equiv memory
Ignoring reg 354, has equiv memory
Ignoring reg 109, has equiv memory
Ignoring reg 358, has equiv memory
Ignoring reg 357, has equiv memory
Ignoring reg 359, has equiv memory
Reg 360 uninteresting
Ignoring reg 361, has equiv memory
Reg 363 uninteresting
Reg 564: def dominates all uses has unique first use
Reg 367 uninteresting
Reg 562: def dominates all uses has unique first use
Reg 371 uninteresting
Reg 376: local to bb 21 def dominates all uses has unique first use
Reg 378 uninteresting
Reg 380 uninteresting
Reg 383 uninteresting
Reg 384 uninteresting
Reg 386 uninteresting
Reg 388 uninteresting
Reg 393 uninteresting
Reg 538 uninteresting (no unique first use)
Reg 401 uninteresting
Ignoring reg 404, has equiv memory
Reg 406 uninteresting
Ignoring reg 307, has equiv memory
Reg 407 uninteresting
Ignoring reg 342, has equiv memory
Reg 411 uninteresting
Ignoring reg 414, has equiv memory
Reg 416 uninteresting
Reg 419 uninteresting
Reg 136 uninteresting
Reg 137 uninteresting
Reg 168 uninteresting
Ignoring reg 422, has equiv memory
Ignoring reg 200, has equiv memory
Reg 202 uninteresting
Reg 203 uninteresting
Reg 204 uninteresting
Ignoring reg 429, has equiv memory
Ignoring reg 431, has equiv memory
Reg 176 uninteresting
Reg 433 uninteresting
Ignoring reg 435, has equiv memory
Ignoring reg 436, has equiv memory
Reg 438 uninteresting
Reg 442 uninteresting
Ignoring reg 446, has equiv memory
Reg 152 uninteresting (no unique first use)
Ignoring reg 450, has equiv memory
Reg 156: def dominates all uses has unique first use
Reg 157 uninteresting
Reg 451 uninteresting
Reg 460 uninteresting
Reg 461 uninteresting
Reg 469 uninteresting
Reg 470 uninteresting
Reg 474 uninteresting
Reg 476 uninteresting
Ignoring reg 226, has equiv memory
Reg 479 uninteresting
Reg 232 uninteresting
Reg 237 uninteresting
Reg 242 uninteresting
Reg 484 uninteresting
Reg 485 uninteresting
Reg 309 uninteresting (no unique first use)
Reg 251 uninteresting
Reg 270 uninteresting
Reg 274 uninteresting
Reg 277 uninteresting
Ignoring reg 491, has equiv memory
Ignoring reg 490, has equiv memory
Ignoring reg 494, has equiv memory
Ignoring reg 493, has equiv memory
Reg 289 uninteresting
Reg 500: local to bb 146 def dominates all uses has unique first use
Ignoring reg 501, has equiv memory
Ignoring reg 297, has equiv memory
Ignoring reg 502, has equiv memory
Ignoring reg 503, has equiv memory
Reg 504 uninteresting
Ignoring reg 505, has equiv memory
Reg 506 uninteresting
Ignoring reg 509, has equiv memory
Reg 514 uninteresting
Reg 160: local to bb 155 def dominates all uses has unique first use
Reg 516 uninteresting
Ignoring reg 521, has equiv memory
Ignoring reg 531, has equiv memory
Reg 268 uninteresting
Reg 156 not local to one basic block
Found def insn 1208 for 160 to be not moveable
Examining insn 191, def for 376
  all ok
Examining insn 1092, def for 500
  all ok
Reg 562 not local to one basic block
Reg 564 not local to one basic block
;; 14 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes
;;
;; Loop 1
;;  header 17, latch 16
;;  depth 1, outer 0
;;  nodes: 17 16 50 47 46 48 95 49 15 96 42 41 40 37 35 36 153 152 149 148 146 145 141 144 143 142 118 117 116 113 110 108 100 99 98 97 115 114 135 165 137 139 138 136 140 166 129 128 119 124 123 122 121 120 164 168 170 169 131 130 163 132 133 111 33 34 32 105 45 106 155 112 151 150 104 103 101 102 31 30 29 28 26 23 22 21 20 27 19 18 44 107 154 24 25 38 39 52 51
;;
;; Loop 2
;;  header 18, latch 44
;;  depth 2, outer 1
;;  nodes: 18 44 42 41 40 37 35 36 153 152 149 148 146 145 141 144 143 142 118 117 116 113 110 108 100 99 98 97 115 114 135 165 137 139 138 136 140 166 129 128 119 124 123 122 121 120 164 168 170 169 131 130 163 132 133 111 33 34 32 105 45 106 155 112 151 150 104 103 101 102 31 30 29 28 26 23 22 21 20 27 19 107 154 24 25 38 39
;;
;; Loop 3
;;  header 20, latch 19
;;  depth 3, outer 2
;;  nodes: 20 19 107 154 150 149 148 146 145 141 144 143 142 118 117 116 113 110 108 100 99 98 97 42 41 40 37 35 36 153 152 111 33 34 32 105 45 106 155 112 151 104 103 101 102 31 30 29 28 26 23 22 21 27 24 25 38 39 115 114 135 165 137 139 138 136 140 166 129 128 119 124 123 122 121 120 164 168 170 169 131 130 163 132 133
;;
;; Loop 6
;;  header 33, multiple latches: 105 45 106 155
;;  depth 4, outer 3
;;  nodes: 33 105 45 106 155 112 151 150 149 148 146 145 141 144 143 142 118 117 116 113 110 108 100 99 98 97 42 41 40 37 35 36 153 152 111 34 38 39 115 114 135 165 137 139 138 136 140 166 129 128 119 124 123 122 121 120 164 168 170 169 131 130 163 132 133 104 103 101 102
;;
;; Loop 13
;;  header 104, latch 104
;;  depth 5, outer 6
;;  nodes: 104
;;
;; Loop 8
;;  header 41, latch 153
;;  depth 5, outer 6
;;  nodes: 41 153 152 149 148 146 145 141 144 143 142 118 117 116 113 110 108 100 99 98 97 42 115 114 135 165 137 139 138 136 140 166 129 128 119 124 123 122 121 120 164 168 170 169 131 130 163 132 133 111
;;
;; Loop 12
;;  header 131, latch 163
;;  depth 6, outer 8
;;  nodes: 131 163 132
;;
;; Loop 11
;;  header 137, latch 140
;;  depth 6, outer 8
;;  nodes: 137 140 166 138
;;
;; Loop 10
;;  header 120, latch 128
;;  depth 6, outer 8
;;  nodes: 120 128 124 123 122 121
;;
;; Loop 9
;;  header 115, latch 115
;;  depth 6, outer 8
;;  nodes: 115
;;
;; Loop 7
;;  header 38, latch 40
;;  depth 5, outer 6
;;  nodes: 38 40 39
;;
;; Loop 4
;;  header 21, latch 27
;;  depth 4, outer 3
;;  nodes: 21 27 26 23 22 24 25
;;
;; Loop 5
;;  header 23, latch 22
;;  depth 5, outer 4
;;  nodes: 23 22 24 25
;; 2 succs { 4 3 }
;; 3 succs { 14 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 12 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 }
;; 14 succs { 17 }
;; 15 succs { 16 }
;; 16 succs { 17 }
;; 17 succs { 18 }
;; 18 succs { 20 }
;; 19 succs { 20 }
;; 20 succs { 21 }
;; 21 succs { 23 }
;; 22 succs { 23 }
;; 23 succs { 26 24 }
;; 24 succs { 25 22 }
;; 25 succs { 22 }
;; 26 succs { 28 27 }
;; 27 succs { 21 }
;; 28 succs { 30 29 }
;; 29 succs { 30 }
;; 30 succs { 32 31 }
;; 31 succs { 32 }
;; 32 succs { 33 }
;; 33 succs { 34 35 }
;; 34 succs { 35 }
;; 35 succs { 36 41 }
;; 36 succs { 37 41 }
;; 37 succs { 41 38 }
;; 38 succs { 39 40 }
;; 39 succs { 40 }
;; 40 succs { 41 38 }
;; 41 succs { 156 42 }
;; 42 succs { 94 45 46 44 51 47 48 49 97 50 96 95 54 57 62 65 68 69 70 157 158 43 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 }
;; 43 succs { 161 }
;; 44 succs { 18 }
;; 45 succs { 33 }
;; 46 succs { 16 }
;; 47 succs { 16 }
;; 48 succs { 16 }
;; 49 succs { 16 }
;; 50 succs { 16 }
;; 51 succs { 159 52 }
;; 52 succs { 53 15 }
;; 53 succs { 160 }
;; 54 succs { 55 56 }
;; 55 succs { 56 }
;; 56 succs { 161 }
;; 57 succs { 58 59 }
;; 58 succs { 161 }
;; 59 succs { 60 61 }
;; 60 succs { 161 }
;; 61 succs { 161 }
;; 62 succs { 58 63 }
;; 63 succs { 64 61 }
;; 64 succs { 60 }
;; 65 succs { 58 66 }
;; 66 succs { 67 61 }
;; 67 succs { 60 }
;; 68 succs { 161 }
;; 69 succs { 161 }
;; 70 succs { 71 161 }
;; 71 succs { 161 }
;; 72 succs { 161 }
;; 73 succs { 161 }
;; 74 succs { 161 }
;; 75 succs { 161 }
;; 76 succs { 161 }
;; 77 succs { 161 }
;; 78 succs { 161 }
;; 79 succs { 161 }
;; 80 succs { 161 }
;; 81 succs { 161 }
;; 82 succs { 161 }
;; 83 succs { 161 }
;; 84 succs { 161 }
;; 85 succs { 161 }
;; 86 succs { 161 }
;; 87 succs { 161 }
;; 88 succs { 161 }
;; 89 succs { 161 }
;; 90 succs { 161 }
;; 91 succs { 161 }
;; 92 succs { 161 }
;; 93 succs { 161 }
;; 94 succs { 161 }
;; 95 succs { 16 }
;; 96 succs { 16 }
;; 97 succs { 99 98 }
;; 98 succs { 100 }
;; 99 succs { 100 }
;; 100 succs { 101 108 }
;; 101 succs { 102 103 }
;; 102 succs { 103 }
;; 103 succs { 105 104 }
;; 104 succs { 105 104 }
;; 105 succs { 106 33 }
;; 106 succs { 107 33 }
;; 107 succs { 19 }
;; 108 succs { 109 110 }
;; 109 succs { }
;; 110 succs { 111 113 }
;; 111 succs { 152 112 }
;; 112 succs { 155 }
;; 113 succs { 117 114 }
;; 114 succs { 115 }
;; 115 succs { 116 115 }
;; 116 succs { 117 }
;; 117 succs { 118 119 }
;; 118 succs { 142 }
;; 119 succs { 129 120 }
;; 120 succs { 121 126 }
;; 121 succs { 122 123 }
;; 122 succs { 124 }
;; 123 succs { 124 }
;; 124 succs { 125 128 }
;; 125 succs { 127 }
;; 126 succs { 127 }
;; 127 succs { }
;; 128 succs { 129 120 }
;; 129 succs { 130 136 }
;; 130 succs { 131 }
;; 131 succs { 132 169 }
;; 132 succs { 163 133 }
;; 133 succs { 168 }
;; 134 succs { }
;; 135 succs { 141 }
;; 136 succs { 137 }
;; 137 succs { 138 165 }
;; 138 succs { 166 139 }
;; 139 succs { 165 }
;; 140 succs { 137 }
;; 141 succs { 142 145 }
;; 142 succs { 143 144 }
;; 143 succs { 145 }
;; 144 succs { 145 }
;; 145 succs { 146 148 }
;; 146 succs { 147 149 }
;; 147 succs { }
;; 148 succs { 149 }
;; 149 succs { 153 150 }
;; 150 succs { 151 154 }
;; 151 succs { 155 }
;; 152 succs { 153 }
;; 153 succs { 41 }
;; 154 succs { 19 }
;; 155 succs { 33 }
;; 156 succs { }
;; 157 succs { 161 }
;; 158 succs { 161 }
;; 159 succs { 161 }
;; 160 succs { 161 }
;; 161 succs { 172 162 }
;; 162 succs { 171 }
;; 163 succs { 131 164 }
;; 164 succs { 135 }
;; 165 succs { 141 }
;; 166 succs { 167 140 }
;; 167 succs { 134 }
;; 168 succs { 135 }
;; 169 succs { 134 170 }
;; 170 succs { 135 }
;; 171 succs { }
;; 172 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 109: (insn_list:REG_DEP_TRUE 122 (nil))
init_insns for 200: (insn_list:REG_DEP_TRUE 468 (nil))
init_insns for 226: (insn_list:REG_DEP_TRUE 868 (nil))
init_insns for 297: (insn_list:REG_DEP_TRUE 1100 (nil))
init_insns for 307: (insn_list:REG_DEP_TRUE 317 (nil))
init_insns for 342: (insn_list:REG_DEP_TRUE 367 (nil))
init_insns for 349: (insn_list:REG_DEP_TRUE 90 (nil))
init_insns for 350: (insn_list:REG_DEP_TRUE 97 (nil))
init_insns for 352: (insn_list:REG_DEP_TRUE 1663 (nil))
init_insns for 354: (insn_list:REG_DEP_TRUE 1662 (nil))
init_insns for 355: (insn_list:REG_DEP_TRUE 116 (nil))
init_insns for 357: (insn_list:REG_DEP_TRUE 1661 (nil))
init_insns for 358: (insn_list:REG_DEP_TRUE 125 (nil))
init_insns for 359: (insn_list:REG_DEP_TRUE 130 (nil))
init_insns for 361: (insn_list:REG_DEP_TRUE 137 (nil))
init_insns for 403: (insn_list:REG_DEP_TRUE 303 (nil))
init_insns for 404: (insn_list:REG_DEP_TRUE 304 (nil))
init_insns for 414: (insn_list:REG_DEP_TRUE 381 (nil))
init_insns for 422: (insn_list:REG_DEP_TRUE 444 (nil))
init_insns for 423: (insn_list:REG_DEP_TRUE 467 (nil))
init_insns for 427: (insn_list:REG_DEP_TRUE 537 (nil))
init_insns for 429: (insn_list:REG_DEP_TRUE 538 (nil))
init_insns for 431: (insn_list:REG_DEP_TRUE 547 (nil))
init_insns for 435: (insn_list:REG_DEP_TRUE 574 (nil))
init_insns for 436: (insn_list:REG_DEP_TRUE 674 (nil))
init_insns for 446: (insn_list:REG_DEP_TRUE 713 (nil))
init_insns for 450: (insn_list:REG_DEP_TRUE 730 (nil))
init_insns for 490: (insn_list:REG_DEP_TRUE 1660 (nil))
init_insns for 491: (insn_list:REG_DEP_TRUE 1041 (nil))
init_insns for 493: (insn_list:REG_DEP_TRUE 1659 (nil))
init_insns for 494: (insn_list:REG_DEP_TRUE 1063 (nil))
init_insns for 501: (insn_list:REG_DEP_TRUE 1093 (nil))
init_insns for 502: (insn_list:REG_DEP_TRUE 1101 (nil))
init_insns for 503: (insn_list:REG_DEP_TRUE 1116 (nil))
init_insns for 505: (insn_list:REG_DEP_TRUE 1119 (nil))
init_insns for 509: (insn_list:REG_DEP_TRUE 1162 (nil))
init_insns for 521: (insn_list:REG_DEP_TRUE 1247 (nil))
init_insns for 531: (insn_list:REG_DEP_TRUE 1291 (nil))
init_insns for 562: (insn_list:REG_DEP_TRUE 970 (nil))
init_insns for 564: (insn_list:REG_DEP_TRUE 1438 (nil))
Reg 427 has equivalence, initial gains 4

Pass 0 for finding pseudo/allocno costs

    a287 (r564,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a271 (r564,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a259 (r564,l7) best GENERAL_REGS, allocno GENERAL_REGS
    a251 (r564,l9) best GENERAL_REGS, allocno GENERAL_REGS
    a227 (r564,l10) best GENERAL_REGS, allocno GENERAL_REGS
    a212 (r564,l12) best GENERAL_REGS, allocno GENERAL_REGS
    a198 (r564,l11) best GENERAL_REGS, allocno GENERAL_REGS
    a137 (r564,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a127 (r564,l13) best GENERAL_REGS, allocno GENERAL_REGS
    a92 (r564,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a76 (r564,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a64 (r564,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a45 (r564,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a18 (r564,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a286 (r562,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a270 (r562,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a258 (r562,l7) best GENERAL_REGS, allocno GENERAL_REGS
    a250 (r562,l9) best GENERAL_REGS, allocno GENERAL_REGS
    a226 (r562,l10) best GENERAL_REGS, allocno GENERAL_REGS
    a211 (r562,l12) best GENERAL_REGS, allocno GENERAL_REGS
    a197 (r562,l11) best GENERAL_REGS, allocno GENERAL_REGS
    a136 (r562,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a126 (r562,l13) best GENERAL_REGS, allocno GENERAL_REGS
    a91 (r562,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a75 (r562,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a63 (r562,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a54 (r562,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a125 (r543,l13) best GENERAL_REGS, allocno GENERAL_REGS
    a111 (r543,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a128 (r542,l13) best GENERAL_REGS, allocno GENERAL_REGS
    a106 (r542,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a249 (r541,l9) best GENERAL_REGS, allocno GENERAL_REGS
    a215 (r541,l12) best GENERAL_REGS, allocno GENERAL_REGS
    a145 (r541,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a248 (r540,l9) best GENERAL_REGS, allocno GENERAL_REGS
    a214 (r540,l12) best GENERAL_REGS, allocno GENERAL_REGS
    a146 (r540,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a285 (r539,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a275 (r539,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a272 (r538,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a82 (r538,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a150 (r533,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a151 (r531,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a216 (r523,l12) best GENERAL_REGS, allocno GENERAL_REGS
    a218 (r521,l12) best GENERAL_REGS, allocno GENERAL_REGS
    a97 (r516,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a78 (r514,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a153 (r513,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a154 (r512,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a156 (r511,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a157 (r509,l8) best NO_REGS, allocno NO_REGS
    a155 (r508,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a100 (r506,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a159 (r505,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a160 (r504,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a161 (r503,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a165 (r502,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a167 (r501,l8) best DIREG, allocno DIREG
    a168 (r500,l8) best SIREG, allocno SIREG
    a169 (r499,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a170 (r498,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a171 (r494,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a172 (r493,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a200 (r491,l11) best GENERAL_REGS, allocno GENERAL_REGS
    a201 (r490,l11) best GENERAL_REGS, allocno GENERAL_REGS
    a204 (r488,l11) best DIREG, allocno DIREG
    a229 (r485,l10) best GENERAL_REGS, allocno GENERAL_REGS
    a230 (r484,l10) best GENERAL_REGS, allocno GENERAL_REGS
    a234 (r483,l10) best SIREG, allocno SIREG
    a238 (r482,l10) best GENERAL_REGS, allocno GENERAL_REGS
    a232 (r481,l10) best GENERAL_REGS, allocno GENERAL_REGS
    a176 (r479,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a181 (r478,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a182 (r477,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a183 (r476,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a104 (r474,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a105 (r473,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a130 (r470,l13) best GENERAL_REGS, allocno GENERAL_REGS
    a131 (r469,l13) best GENERAL_REGS, allocno GENERAL_REGS
    a132 (r468,l13) best GENERAL_REGS, allocno GENERAL_REGS
    a107 (r461,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a109 (r460,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a110 (r459,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a112 (r451,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a186 (r450,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a187 (r446,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a188 (r445,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a47 (r442,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a48 (r438,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r436,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r435,l0) best NO_REGS, allocno NO_REGS
    a5 (r434,l0) best SIREG, allocno SIREG
    a4 (r433,l0) best AREG, allocno AREG
    a7 (r432,l0) best DIREG, allocno DIREG
    a8 (r431,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a11 (r429,l0) best NO_REGS, allocno NO_REGS
    a9 (r428,l0) best DIREG, allocno DIREG
    a10 (r427,l0) best NO_REGS, allocno NO_REGS
    a17 (r423,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a50 (r422,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a53 (r419,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a113 (r416,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a114 (r414,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a67 (r411,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a189 (r407,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a119 (r406,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a120 (r404,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a121 (r403,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a122 (r401,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a273 (r393,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a289 (r388,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a290 (r386,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a291 (r384,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a292 (r383,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a288 (r382,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a274 (r382,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a293 (r380,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a294 (r378,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a276 (r376,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a87 (r371,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a57 (r367,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a20 (r363,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a25 (r361,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a26 (r360,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a29 (r359,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a30 (r358,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a31 (r357,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a34 (r355,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a35 (r354,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a37 (r352,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a38 (r350,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a39 (r349,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a213 (r347,l12) best GENERAL_REGS, allocno GENERAL_REGS
    a142 (r347,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a101 (r347,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a269 (r343,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a74 (r343,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a62 (r343,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a44 (r343,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a21 (r343,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a66 (r342,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a43 (r341,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a22 (r341,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a257 (r327,l7) best GENERAL_REGS, allocno GENERAL_REGS
    a116 (r327,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a284 (r321,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a268 (r321,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a73 (r321,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a61 (r321,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a42 (r321,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a19 (r321,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a267 (r320,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a72 (r320,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a60 (r320,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a41 (r320,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a24 (r320,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a40 (r318,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a23 (r318,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a283 (r316,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a266 (r316,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a85 (r316,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a282 (r315,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a265 (r315,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a86 (r315,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a281 (r314,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a264 (r314,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a83 (r314,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a280 (r313,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a263 (r313,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a84 (r313,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a256 (r311,l7) best GENERAL_REGS, allocno GENERAL_REGS
    a117 (r311,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a210 (r309,l12) best GENERAL_REGS, allocno GENERAL_REGS
    a196 (r309,l11) best GENERAL_REGS, allocno GENERAL_REGS
    a174 (r309,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a141 (r308,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a102 (r308,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a115 (r307,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a140 (r306,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a94 (r306,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a79 (r306,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a162 (r299,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a166 (r297,l8) best AREG, allocno AREG
    a139 (r289,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a99 (r289,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a163 (r287,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a164 (r280,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a202 (r277,l11) best AREG, allocno AREG
    a199 (r275,l11) best GENERAL_REGS, allocno GENERAL_REGS
    a152 (r275,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a203 (r274,l11) best AREG, allocno AREG
    a195 (r270,l11) best AREG, allocno AREG
    a173 (r270,l8) best AREG, allocno AREG
    a149 (r268,l8) best AREG, allocno AREG
    a217 (r251,l12) best AREG, allocno AREG
    a225 (r245,l10) best GENERAL_REGS, allocno GENERAL_REGS
    a194 (r245,l11) best GENERAL_REGS, allocno GENERAL_REGS
    a143 (r245,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a95 (r245,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a77 (r245,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a65 (r245,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a46 (r245,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r245,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a247 (r244,l9) best GENERAL_REGS, allocno GENERAL_REGS
    a224 (r244,l10) best GENERAL_REGS, allocno GENERAL_REGS
    a178 (r244,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a231 (r242,l10) best AREG, allocno AREG
    a235 (r240,l10) best GENERAL_REGS, allocno GENERAL_REGS
    a236 (r238,l10) best GENERAL_REGS, allocno GENERAL_REGS
    a237 (r237,l10) best GENERAL_REGS, allocno GENERAL_REGS
    a233 (r232,l10) best DIREG, allocno DIREG
    a228 (r230,l10) best GENERAL_REGS, allocno GENERAL_REGS
    a175 (r230,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a246 (r227,l9) best GENERAL_REGS, allocno GENERAL_REGS
    a179 (r227,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a252 (r226,l9) best GENERAL_REGS, allocno GENERAL_REGS
    a245 (r224,l9) best GENERAL_REGS, allocno GENERAL_REGS
    a223 (r224,l10) best GENERAL_REGS, allocno GENERAL_REGS
    a209 (r224,l12) best GENERAL_REGS, allocno GENERAL_REGS
    a193 (r224,l11) best GENERAL_REGS, allocno GENERAL_REGS
    a148 (r224,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a244 (r213,l9) best GENERAL_REGS, allocno GENERAL_REGS
    a158 (r213,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a208 (r212,l12) best GENERAL_REGS, allocno GENERAL_REGS
    a147 (r212,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a12 (r204,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a13 (r203,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a14 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a16 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a15 (r198,l0) best AREG, allocno AREG
    a129 (r193,l13) best AREG, allocno AREG
    a108 (r193,l6) best AREG, allocno AREG
    a124 (r186,l13) best GENERAL_REGS, allocno GENERAL_REGS
    a90 (r186,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a81 (r186,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a49 (r168,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a98 (r160,l6) best AREG, allocno AREG
    a144 (r158,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a103 (r158,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a184 (r157,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a243 (r156,l9) best GENERAL_REGS, allocno GENERAL_REGS
    a180 (r156,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a185 (r154,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a242 (r152,l9) best GENERAL_REGS, allocno GENERAL_REGS
    a222 (r152,l10) best GENERAL_REGS, allocno GENERAL_REGS
    a177 (r152,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a241 (r147,l9) best GENERAL_REGS, allocno GENERAL_REGS
    a221 (r147,l10) best GENERAL_REGS, allocno GENERAL_REGS
    a207 (r147,l12) best GENERAL_REGS, allocno GENERAL_REGS
    a192 (r147,l11) best GENERAL_REGS, allocno GENERAL_REGS
    a138 (r147,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a93 (r147,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a80 (r147,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a51 (r137,l1) best AREG, allocno AREG
    a52 (r136,l1) best AREG, allocno AREG
    a33 (r109,l0) best AREG, allocno AREG
    a32 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a28 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a27 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a36 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r92,l0) best AREG, allocno AREG
    a255 (r90,l7) best GENERAL_REGS, allocno GENERAL_REGS
    a135 (r90,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a118 (r90,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a279 (r89,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a262 (r89,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a254 (r89,l7) best GENERAL_REGS, allocno GENERAL_REGS
    a240 (r89,l9) best GENERAL_REGS, allocno GENERAL_REGS
    a220 (r89,l10) best GENERAL_REGS, allocno GENERAL_REGS
    a206 (r89,l12) best GENERAL_REGS, allocno GENERAL_REGS
    a191 (r89,l11) best GENERAL_REGS, allocno GENERAL_REGS
    a134 (r89,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a89 (r89,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a71 (r89,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a68 (r89,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a278 (r88,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a261 (r88,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a253 (r88,l7) best GENERAL_REGS, allocno GENERAL_REGS
    a239 (r88,l9) best GENERAL_REGS, allocno GENERAL_REGS
    a219 (r88,l10) best GENERAL_REGS, allocno GENERAL_REGS
    a205 (r88,l12) best GENERAL_REGS, allocno GENERAL_REGS
    a190 (r88,l11) best GENERAL_REGS, allocno GENERAL_REGS
    a133 (r88,l8) best GENERAL_REGS, allocno GENERAL_REGS
    a123 (r88,l13) best GENERAL_REGS, allocno GENERAL_REGS
    a88 (r88,l6) best GENERAL_REGS, allocno GENERAL_REGS
    a70 (r88,l3) best GENERAL_REGS, allocno GENERAL_REGS
    a59 (r88,l2) best GENERAL_REGS, allocno GENERAL_REGS
    a55 (r88,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a277 (r87,l5) best AREG, allocno AREG
    a260 (r87,l4) best AREG, allocno AREG
    a96 (r87,l6) best AREG, allocno AREG
    a69 (r87,l3) best AREG, allocno AREG
    a58 (r87,l2) best AREG, allocno AREG
    a56 (r87,l1) best AREG, allocno AREG

  a0(r92,l0) costs: AREG:-6,-6 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:337,337 NO_REX_SSE_REGS:337,337 SSE_REGS:337,337 MMX_REGS:367,367 INT_SSE_REGS:343,343 ALL_REGS:4860,4860 MEM:59,59
  a1(r245,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8,212 NO_REX_SSE_REGS:8,212 SSE_REGS:8,212 MMX_REGS:13,307 INT_SSE_REGS:9,231 ALL_REGS:208,4472 MEM:4,96
  a2(r436,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:0,0
  a3(r176,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:12,12
  a4(r433,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:40,40 NO_REX_SSE_REGS:40,40 SSE_REGS:40,40 MMX_REGS:60,60 INT_SSE_REGS:44,44 ALL_REGS:932,932 MEM:16,16
  a5(r434,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1,-1 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a6(r435,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:-1,-1
  a7(r432,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a8(r431,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:8,8
  a9(r428,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a10(r427,l0) costs: AREG:0,0 DREG:-1,-1 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a11(r429,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:-1,-1
  a12(r204,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:10,10
  a13(r203,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:10,10
  a14(r202,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:10,10
  a15(r198,l0) costs: AREG:-2,-2 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:56,56 NO_REX_SSE_REGS:56,56 SSE_REGS:56,56 MMX_REGS:81,81 INT_SSE_REGS:61,61 ALL_REGS:1240,1240 MEM:22,22
  a16(r200,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:4,4
  a17(r423,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:8,8
  a18(r564,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6,726
  a19(r321,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:24,7322
  a20(r363,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:174,174 NO_REX_SSE_REGS:174,174 SSE_REGS:174,174 MMX_REGS:234,234 INT_SSE_REGS:186,186 ALL_REGS:3744,3744 MEM:72,72
  a21(r343,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:24,1816
  a22(r341,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:120,288 NO_REX_SSE_REGS:120,288 SSE_REGS:120,288 MMX_REGS:150,373 INT_SSE_REGS:126,305 ALL_REGS:1872,4976 MEM:42,95
  a23(r318,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:144,212 NO_REX_SSE_REGS:144,212 SSE_REGS:144,212 MMX_REGS:189,292 INT_SSE_REGS:153,228 ALL_REGS:2496,4056 MEM:60,85
  a24(r320,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:36,674
  a25(r361,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:60,60 NO_REX_SSE_REGS:60,60 SSE_REGS:60,60 MMX_REGS:75,75 INT_SSE_REGS:63,63 ALL_REGS:936,936 MEM:0,0
  a26(r360,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:84,84 NO_REX_SSE_REGS:84,84 SSE_REGS:84,84 MMX_REGS:114,114 INT_SSE_REGS:90,90 ALL_REGS:1560,1560 MEM:36,36
  a27(r102,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:108,108 NO_REX_SSE_REGS:108,108 SSE_REGS:108,108 MMX_REGS:143,143 INT_SSE_REGS:115,115 ALL_REGS:2288,2288 MEM:44,44
  a28(r103,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:144,144 NO_REX_SSE_REGS:144,144 SSE_REGS:144,144 MMX_REGS:204,204 INT_SSE_REGS:156,156 ALL_REGS:2912,2912 MEM:64,64
  a29(r359,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:60,60 NO_REX_SSE_REGS:60,60 SSE_REGS:60,60 MMX_REGS:75,75 INT_SSE_REGS:63,63 ALL_REGS:936,936 MEM:0,0
  a30(r358,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:0,0
  a31(r357,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:0,0
  a32(r107,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:8,8
  a33(r109,l0) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:5,5
  a34(r355,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:0,0
  a35(r354,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:0,0
  a36(r99,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:84,84 NO_REX_SSE_REGS:84,84 SSE_REGS:84,84 MMX_REGS:114,114 INT_SSE_REGS:90,90 ALL_REGS:1560,1560 MEM:36,36
  a37(r352,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:60,60 NO_REX_SSE_REGS:60,60 SSE_REGS:60,60 MMX_REGS:75,75 INT_SSE_REGS:63,63 ALL_REGS:936,936 MEM:0,0
  a38(r350,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:0,0
  a39(r349,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:0,0
  a40(r318,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:68,68 NO_REX_SSE_REGS:68,68 SSE_REGS:68,68 MMX_REGS:103,103 INT_SSE_REGS:75,75 ALL_REGS:1560,1560 MEM:25,25
  a41(r320,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:4,638
  a42(r321,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:20,7298
  a43(r341,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:168,168 NO_REX_SSE_REGS:168,168 SSE_REGS:168,168 MMX_REGS:223,223 INT_SSE_REGS:179,179 ALL_REGS:3104,3104 MEM:53,53
  a44(r343,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:20,1792
  a45(r564,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,720
  a46(r245,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,204 NO_REX_SSE_REGS:0,204 SSE_REGS:0,204 MMX_REGS:0,294 INT_SSE_REGS:0,222 ALL_REGS:0,4264 MEM:0,92
  a47(r442,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:12,12
  a48(r438,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:12,12
  a49(r168,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:12,12
  a50(r422,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:0,0
  a51(r137,l1) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:4,4
  a52(r136,l1) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24,24 NO_REX_SSE_REGS:24,24 SSE_REGS:24,24 MMX_REGS:34,34 INT_SSE_REGS:26,26 ALL_REGS:516,516 MEM:8,8
  a53(r419,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:12,12
  a54(r562,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:56,64 NO_REX_SSE_REGS:56,64 SSE_REGS:56,64 MMX_REGS:56,69 INT_SSE_REGS:56,65 ALL_REGS:700,908 MEM:7,10
  a55(r88,l1) costs: AREG:0,18 DREG:0,18 CREG:0,18 BREG:0,18 SIREG:0,18 DIREG:0,18 AD_REGS:0,18 Q_REGS:0,18 NON_Q_REGS:0,18 GENERAL_REGS:0,18 SSE_FIRST_REG:56,3992 NO_REX_SSE_REGS:56,3992 SSE_REGS:56,3992 MMX_REGS:56,5627 INT_SSE_REGS:56,4319 ALL_REGS:700,89010 MEM:7,1445
  a56(r87,l1) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:56,44389 NO_REX_SSE_REGS:56,44389 SSE_REGS:56,44389 MMX_REGS:56,63954 INT_SSE_REGS:56,48302 ALL_REGS:700,1023012 MEM:7,15753
  a57(r367,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:12,12
  a58(r87,l2) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8,44333 NO_REX_SSE_REGS:8,44333 SSE_REGS:8,44333 MMX_REGS:8,63898 INT_SSE_REGS:8,48246 ALL_REGS:100,1022312 MEM:1,15746
  a59(r88,l2) costs: AREG:0,18 DREG:0,18 CREG:0,18 BREG:0,18 SIREG:0,18 DIREG:0,18 AD_REGS:0,18 Q_REGS:0,18 NON_Q_REGS:0,18 GENERAL_REGS:0,18 SSE_FIRST_REG:140,3936 NO_REX_SSE_REGS:140,3936 SSE_REGS:140,3936 MMX_REGS:220,5571 INT_SSE_REGS:156,4263 ALL_REGS:3432,88310 MEM:60,1438
  a60(r320,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:36,634
  a61(r321,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:4,7278
  a62(r343,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:4,1772
  a63(r562,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,8 NO_REX_SSE_REGS:0,8 SSE_REGS:0,8 MMX_REGS:0,13 INT_SSE_REGS:0,9 ALL_REGS:0,208 MEM:0,3
  a64(r564,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,720
  a65(r245,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,204 NO_REX_SSE_REGS:0,204 SSE_REGS:0,204 MMX_REGS:0,294 INT_SSE_REGS:0,222 ALL_REGS:0,4264 MEM:0,92
  a66(r342,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:2,2
  a67(r411,l2) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:12,12
  a68(r89,l2) costs: AREG:0,16 DREG:0,16 CREG:0,16 BREG:0,16 SIREG:0,16 DIREG:0,16 AD_REGS:0,16 Q_REGS:0,16 NON_Q_REGS:0,16 GENERAL_REGS:0,16 SSE_FIRST_REG:64,256 NO_REX_SSE_REGS:64,256 SSE_REGS:64,256 MMX_REGS:64,336 INT_SSE_REGS:64,272 ALL_REGS:800,4560 MEM:8,96
  a69(r87,l3) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,44325 NO_REX_SSE_REGS:16,44325 SSE_REGS:16,44325 MMX_REGS:21,63890 INT_SSE_REGS:17,48238 ALL_REGS:308,1022212 MEM:4,15745
  a70(r88,l3) costs: AREG:0,18 DREG:0,18 CREG:0,18 BREG:0,18 SIREG:0,18 DIREG:0,18 AD_REGS:0,18 Q_REGS:0,18 NON_Q_REGS:0,18 GENERAL_REGS:0,18 SSE_FIRST_REG:58,3796 NO_REX_SSE_REGS:58,3796 SSE_REGS:58,3796 MMX_REGS:78,5351 INT_SSE_REGS:62,4107 ALL_REGS:1248,84878 MEM:21,1378
  a71(r89,l3) costs: AREG:0,16 DREG:0,16 CREG:0,16 BREG:0,16 SIREG:0,16 DIREG:0,16 AD_REGS:0,16 Q_REGS:0,16 NON_Q_REGS:0,16 GENERAL_REGS:0,16 SSE_FIRST_REG:12,192 NO_REX_SSE_REGS:12,192 SSE_REGS:12,192 MMX_REGS:12,272 INT_SSE_REGS:12,208 ALL_REGS:104,3760 MEM:4,88
  a72(r320,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:4,598
  a73(r321,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:4,7274
  a74(r343,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:4,1768
  a75(r562,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,8 NO_REX_SSE_REGS:0,8 SSE_REGS:0,8 MMX_REGS:0,13 INT_SSE_REGS:0,9 ALL_REGS:0,208 MEM:0,3
  a76(r564,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,720
  a77(r245,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,204 NO_REX_SSE_REGS:0,204 SSE_REGS:0,204 MMX_REGS:0,294 INT_SSE_REGS:0,222 ALL_REGS:0,4264 MEM:0,92
  a78(r514,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a79(r306,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8,44 NO_REX_SSE_REGS:8,44 SSE_REGS:8,44 MMX_REGS:13,59 INT_SSE_REGS:9,47 ALL_REGS:208,828 MEM:3,16
  a80(r147,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8,29 NO_REX_SSE_REGS:8,29 SSE_REGS:8,29 MMX_REGS:13,39 INT_SSE_REGS:9,31 ALL_REGS:208,624 MEM:3,9
  a81(r186,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:32,72
  a82(r538,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:64,2602 NO_REX_SSE_REGS:64,2602 SSE_REGS:64,2602 MMX_REGS:104,3497 INT_SSE_REGS:72,2781 ALL_REGS:1664,55952 MEM:32,1076
  a83(r314,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:104,1994 NO_REX_SSE_REGS:104,1994 SSE_REGS:104,1994 MMX_REGS:109,2449 INT_SSE_REGS:105,2085 ALL_REGS:1040,38480 MEM:36,756
  a84(r313,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:12,732
  a85(r316,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:104,1994 NO_REX_SSE_REGS:104,1994 SSE_REGS:104,1994 MMX_REGS:109,2449 INT_SSE_REGS:105,2085 ALL_REGS:1040,38480 MEM:36,756
  a86(r315,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:40,760
  a87(r371,l3) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:12,12
  a88(r88,l6) costs: AREG:16,18 DREG:16,18 CREG:16,18 BREG:16,18 SIREG:16,18 DIREG:16,18 AD_REGS:16,18 Q_REGS:16,18 NON_Q_REGS:16,18 GENERAL_REGS:16,18 SSE_FIRST_REG:462,480 NO_REX_SSE_REGS:462,480 SSE_REGS:462,480 MMX_REGS:682,710 INT_SSE_REGS:506,526 ALL_REGS:10204,10622 MEM:213,223
  a89(r89,l6) costs: AREG:16,16 DREG:16,16 CREG:16,16 BREG:16,16 SIREG:16,16 DIREG:16,16 AD_REGS:16,16 Q_REGS:16,16 NON_Q_REGS:16,16 GENERAL_REGS:16,16 SSE_FIRST_REG:180,180 NO_REX_SSE_REGS:180,180 SSE_REGS:180,180 MMX_REGS:260,260 INT_SSE_REGS:196,196 ALL_REGS:3656,3656 MEM:84,84
  a90(r186,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:40,40
  a91(r562,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,8 NO_REX_SSE_REGS:0,8 SSE_REGS:0,8 MMX_REGS:0,13 INT_SSE_REGS:0,9 ALL_REGS:0,208 MEM:0,3
  a92(r564,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a93(r147,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8,21 NO_REX_SSE_REGS:8,21 SSE_REGS:8,21 MMX_REGS:13,26 INT_SSE_REGS:9,22 ALL_REGS:208,416 MEM:3,6
  a94(r306,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,36 NO_REX_SSE_REGS:0,36 SSE_REGS:0,36 MMX_REGS:0,46 INT_SSE_REGS:0,38 ALL_REGS:0,620 MEM:0,13
  a95(r245,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,204 NO_REX_SSE_REGS:0,204 SSE_REGS:0,204 MMX_REGS:0,294 INT_SSE_REGS:0,222 ALL_REGS:0,4264 MEM:0,92
  a96(r87,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:11,11
  a97(r516,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:8,8
  a98(r160,l6) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:4,4
  a99(r289,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8,45 NO_REX_SSE_REGS:8,45 SSE_REGS:8,45 MMX_REGS:13,65 INT_SSE_REGS:9,49 ALL_REGS:208,1040 MEM:4,20
  a100(r506,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:8,8
  a101(r347,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8,190 NO_REX_SSE_REGS:8,190 SSE_REGS:8,190 MMX_REGS:13,260 INT_SSE_REGS:9,204 ALL_REGS:208,4160 MEM:4,80
  a102(r308,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8,40 NO_REX_SSE_REGS:8,40 SSE_REGS:8,40 MMX_REGS:13,50 INT_SSE_REGS:9,42 ALL_REGS:208,716 MEM:3,9
  a103(r158,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8,29 NO_REX_SSE_REGS:8,29 SSE_REGS:8,29 MMX_REGS:13,39 INT_SSE_REGS:9,31 ALL_REGS:208,624 MEM:3,10
  a104(r474,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:5,5
  a105(r473,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:21,21 INT_SSE_REGS:21,21 ALL_REGS:308,308 MEM:4,4
  a106(r542,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,50 NO_REX_SSE_REGS:29,50 SSE_REGS:29,50 MMX_REGS:39,65 INT_SSE_REGS:31,53 ALL_REGS:624,1040 MEM:11,19
  a107(r461,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a108(r193,l6) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32,32 NO_REX_SSE_REGS:32,32 SSE_REGS:32,32 MMX_REGS:47,47 INT_SSE_REGS:35,35 ALL_REGS:724,724 MEM:11,11
  a109(r460,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:8,8
  a110(r459,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a111(r543,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,58 NO_REX_SSE_REGS:29,58 SSE_REGS:29,58 MMX_REGS:39,78 INT_SSE_REGS:31,62 ALL_REGS:624,1248 MEM:12,24
  a112(r451,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:8,8
  a113(r416,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:8,8
  a114(r414,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a115(r307,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:84,84 NO_REX_SSE_REGS:84,84 SSE_REGS:84,84 MMX_REGS:114,114 INT_SSE_REGS:90,90 ALL_REGS:1560,1560 MEM:12,12
  a116(r327,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:39,279 NO_REX_SSE_REGS:39,279 SSE_REGS:39,279 MMX_REGS:39,429 INT_SSE_REGS:39,309 ALL_REGS:624,6864 MEM:12,102
  a117(r311,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:60,1170 NO_REX_SSE_REGS:60,1170 SSE_REGS:60,1170 MMX_REGS:75,1635 INT_SSE_REGS:63,1263 ALL_REGS:936,25896 MEM:24,414
  a118(r90,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:332,473 NO_REX_SSE_REGS:332,473 SSE_REGS:332,473 MMX_REGS:442,623 INT_SSE_REGS:354,503 ALL_REGS:7072,9744 MEM:122,157
  a119(r406,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:126,126 NO_REX_SSE_REGS:126,126 SSE_REGS:126,126 MMX_REGS:156,156 INT_SSE_REGS:132,132 ALL_REGS:2496,2496 MEM:48,48
  a120(r404,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a121(r403,l6) costs: AREG:16,16 DREG:16,16 CREG:16,16 BREG:16,16 SIREG:16,16 DIREG:16,16 AD_REGS:16,16 Q_REGS:16,16 NON_Q_REGS:16,16 GENERAL_REGS:16,16 SSE_FIRST_REG:184,184 NO_REX_SSE_REGS:184,184 SSE_REGS:184,184 MMX_REGS:224,224 INT_SSE_REGS:192,192 ALL_REGS:3344,3344 MEM:72,72
  a122(r401,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:84,84 NO_REX_SSE_REGS:84,84 SSE_REGS:84,84 MMX_REGS:104,104 INT_SSE_REGS:88,88 ALL_REGS:1664,1664 MEM:32,32
  a123(r88,l13) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a124(r186,l13) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a125(r543,l13) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:12,12
  a126(r562,l13) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a127(r564,l13) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a128(r542,l13) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:8,8
  a129(r193,l13) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:10,10
  a130(r470,l13) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a131(r469,l13) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:8,8
  a132(r468,l13) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a133(r88,l8) costs: AREG:2,2 DREG:2,2 CREG:2,2 BREG:2,2 SIREG:2,2 DIREG:2,2 AD_REGS:2,2 Q_REGS:2,2 NON_Q_REGS:2,2 GENERAL_REGS:2,2 SSE_FIRST_REG:18,18 NO_REX_SSE_REGS:18,18 SSE_REGS:18,18 MMX_REGS:28,28 INT_SSE_REGS:20,20 ALL_REGS:418,418 MEM:10,10
  a134(r89,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a135(r90,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:141,141 NO_REX_SSE_REGS:141,141 SSE_REGS:141,141 MMX_REGS:181,181 INT_SSE_REGS:149,149 ALL_REGS:2672,2672 MEM:35,35
  a136(r562,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8,8 NO_REX_SSE_REGS:8,8 SSE_REGS:8,8 MMX_REGS:13,13 INT_SSE_REGS:9,9 ALL_REGS:208,208 MEM:3,3
  a137(r564,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a138(r147,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:13,13 NO_REX_SSE_REGS:13,13 SSE_REGS:13,13 MMX_REGS:13,13 INT_SSE_REGS:13,13 ALL_REGS:208,208 MEM:3,3
  a139(r289,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37,37 NO_REX_SSE_REGS:37,37 SSE_REGS:37,37 MMX_REGS:52,52 INT_SSE_REGS:40,40 ALL_REGS:832,832 MEM:16,16
  a140(r306,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36,36 NO_REX_SSE_REGS:36,36 SSE_REGS:36,36 MMX_REGS:46,46 INT_SSE_REGS:38,38 ALL_REGS:620,620 MEM:13,13
  a141(r308,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32,32 NO_REX_SSE_REGS:32,32 SSE_REGS:32,32 MMX_REGS:37,37 INT_SSE_REGS:33,33 ALL_REGS:508,508 MEM:6,6
  a142(r347,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:153,182 NO_REX_SSE_REGS:153,182 SSE_REGS:153,182 MMX_REGS:208,247 INT_SSE_REGS:164,195 ALL_REGS:3328,3952 MEM:64,76
  a143(r245,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:116,204 NO_REX_SSE_REGS:116,204 SSE_REGS:116,204 MMX_REGS:166,294 INT_SSE_REGS:126,222 ALL_REGS:2392,4264 MEM:52,92
  a144(r158,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a145(r541,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:88,108 NO_REX_SSE_REGS:88,108 SSE_REGS:88,108 MMX_REGS:113,138 INT_SSE_REGS:93,114 ALL_REGS:1456,1768 MEM:36,44
  a146(r540,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:88,108 NO_REX_SSE_REGS:88,108 SSE_REGS:88,108 MMX_REGS:113,138 INT_SSE_REGS:93,114 ALL_REGS:1456,1768 MEM:36,44
  a147(r212,l8) costs: AREG:2,4 DREG:2,4 CREG:2,4 BREG:2,4 SIREG:2,4 DIREG:2,4 AD_REGS:2,4 Q_REGS:2,4 NON_Q_REGS:2,4 GENERAL_REGS:2,4 SSE_FIRST_REG:55,94 NO_REX_SSE_REGS:55,94 SSE_REGS:55,94 MMX_REGS:75,129 INT_SSE_REGS:59,101 ALL_REGS:1142,1976 MEM:22,37
  a148(r224,l8) costs: AREG:2,6 DREG:2,6 CREG:2,6 BREG:2,6 SIREG:2,6 DIREG:2,6 AD_REGS:2,6 Q_REGS:2,6 NON_Q_REGS:2,6 GENERAL_REGS:2,6 SSE_FIRST_REG:47,83 NO_REX_SSE_REGS:47,83 SSE_REGS:47,83 MMX_REGS:66,121 INT_SSE_REGS:50,89 ALL_REGS:1042,1878 MEM:19,37
  a149(r268,l8) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:5,5
  a150(r533,l8) costs: AREG:2,2 DREG:2,2 CREG:2,2 BREG:2,2 SIREG:2,2 DIREG:2,2 AD_REGS:2,2 Q_REGS:2,2 NON_Q_REGS:2,2 GENERAL_REGS:2,2 SSE_FIRST_REG:23,23 NO_REX_SSE_REGS:23,23 SSE_REGS:23,23 MMX_REGS:27,27 INT_SSE_REGS:23,23 ALL_REGS:418,418 MEM:10,10
  a151(r531,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:0,0
  a152(r275,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:76,84 NO_REX_SSE_REGS:76,84 SSE_REGS:76,84 MMX_REGS:96,104 INT_SSE_REGS:80,88 ALL_REGS:1244,1344 MEM:27,28
  a153(r513,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a154(r512,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a155(r508,l8) costs: AREG:2,2 DREG:2,2 CREG:2,2 BREG:2,2 SIREG:2,2 DIREG:2,2 AD_REGS:2,2 Q_REGS:2,2 NON_Q_REGS:2,2 GENERAL_REGS:2,2 SSE_FIRST_REG:31,31 NO_REX_SSE_REGS:31,31 SSE_REGS:31,31 MMX_REGS:41,41 INT_SSE_REGS:33,33 ALL_REGS:626,626 MEM:11,11
  a156(r511,l8) costs: AREG:2,2 DREG:2,2 CREG:2,2 BREG:2,2 SIREG:2,2 DIREG:2,2 AD_REGS:2,2 Q_REGS:2,2 NON_Q_REGS:2,2 GENERAL_REGS:2,2 SSE_FIRST_REG:23,23 NO_REX_SSE_REGS:23,23 SSE_REGS:23,23 MMX_REGS:28,28 INT_SSE_REGS:24,24 ALL_REGS:418,418 MEM:8,8
  a157(r509,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:-1,-1
  a158(r213,l8) costs: AREG:2,2 DREG:2,2 CREG:2,2 BREG:2,2 SIREG:2,2 DIREG:2,2 AD_REGS:2,2 Q_REGS:2,2 NON_Q_REGS:2,2 GENERAL_REGS:2,2 SSE_FIRST_REG:38,54 NO_REX_SSE_REGS:38,54 SSE_REGS:38,54 MMX_REGS:53,79 INT_SSE_REGS:41,59 ALL_REGS:730,1146 MEM:15,23
  a159(r505,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:0,0
  a160(r504,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:8,8
  a161(r503,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:0,0
  a162(r299,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:40,40 NO_REX_SSE_REGS:40,40 SSE_REGS:40,40 MMX_REGS:50,50 INT_SSE_REGS:42,42 ALL_REGS:624,624 MEM:16,16
  a163(r287,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37,37 NO_REX_SSE_REGS:37,37 SSE_REGS:37,37 MMX_REGS:52,52 INT_SSE_REGS:40,40 ALL_REGS:832,832 MEM:13,13
  a164(r280,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:92,92 NO_REX_SSE_REGS:92,92 SSE_REGS:92,92 MMX_REGS:127,127 INT_SSE_REGS:99,99 ALL_REGS:1768,1768 MEM:40,40
  a165(r502,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:0,0
  a166(r297,l8) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:5,5
  a167(r501,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:-1,-1
  a168(r500,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1,-1 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a169(r499,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a170(r498,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a171(r494,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:0,0
  a172(r493,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:0,0
  a173(r270,l8) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,32 NO_REX_SSE_REGS:16,32 SSE_REGS:16,32 MMX_REGS:21,47 INT_SSE_REGS:17,35 ALL_REGS:308,724 MEM:5,13
  a174(r309,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:13,29 NO_REX_SSE_REGS:13,29 SSE_REGS:13,29 MMX_REGS:13,39 INT_SSE_REGS:13,31 ALL_REGS:208,624 MEM:4,10
  a175(r230,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,42 NO_REX_SSE_REGS:29,42 SSE_REGS:29,42 MMX_REGS:39,52 INT_SSE_REGS:31,44 ALL_REGS:624,832 MEM:11,15
  a176(r479,l8) costs: AREG:2,2 DREG:2,2 CREG:2,2 BREG:2,2 SIREG:2,2 DIREG:2,2 AD_REGS:2,2 Q_REGS:2,2 NON_Q_REGS:2,2 GENERAL_REGS:2,2 SSE_FIRST_REG:23,23 NO_REX_SSE_REGS:23,23 SSE_REGS:23,23 MMX_REGS:28,28 INT_SSE_REGS:24,24 ALL_REGS:418,418 MEM:9,9
  a177(r152,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37,45 NO_REX_SSE_REGS:37,45 SSE_REGS:37,45 MMX_REGS:52,65 INT_SSE_REGS:40,49 ALL_REGS:832,1040 MEM:16,20
  a178(r244,l8) costs: AREG:2,2 DREG:2,2 CREG:2,2 BREG:2,2 SIREG:2,2 DIREG:2,2 AD_REGS:2,2 Q_REGS:2,2 NON_Q_REGS:2,2 GENERAL_REGS:2,2 SSE_FIRST_REG:46,75 NO_REX_SSE_REGS:46,75 SSE_REGS:46,75 MMX_REGS:66,105 INT_SSE_REGS:50,81 ALL_REGS:938,1562 MEM:18,28
  a179(r227,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8,61 NO_REX_SSE_REGS:8,61 SSE_REGS:8,61 MMX_REGS:8,86 INT_SSE_REGS:8,66 ALL_REGS:100,1348 MEM:1,22
  a180(r156,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,36 NO_REX_SSE_REGS:28,36 SSE_REGS:28,36 MMX_REGS:38,51 INT_SSE_REGS:30,39 ALL_REGS:520,728 MEM:12,16
  a181(r478,l8) costs: AREG:2,2 DREG:2,2 CREG:2,2 BREG:2,2 SIREG:2,2 DIREG:2,2 AD_REGS:2,2 Q_REGS:2,2 NON_Q_REGS:2,2 GENERAL_REGS:2,2 SSE_FIRST_REG:23,23 NO_REX_SSE_REGS:23,23 SSE_REGS:23,23 MMX_REGS:28,28 INT_SSE_REGS:24,24 ALL_REGS:418,418 MEM:8,8
  a182(r477,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a183(r476,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a184(r157,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:12,12
  a185(r154,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:40,40 NO_REX_SSE_REGS:40,40 SSE_REGS:40,40 MMX_REGS:50,50 INT_SSE_REGS:42,42 ALL_REGS:624,624 MEM:15,15
  a186(r450,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:0,0
  a187(r446,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a188(r445,l8) costs: AREG:2,2 DREG:2,2 CREG:2,2 BREG:2,2 SIREG:2,2 DIREG:2,2 AD_REGS:2,2 Q_REGS:2,2 NON_Q_REGS:2,2 GENERAL_REGS:2,2 SSE_FIRST_REG:23,23 NO_REX_SSE_REGS:23,23 SSE_REGS:23,23 MMX_REGS:28,28 INT_SSE_REGS:24,24 ALL_REGS:418,418 MEM:9,9
  a189(r407,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:128,128 NO_REX_SSE_REGS:128,128 SSE_REGS:128,128 MMX_REGS:168,168 INT_SSE_REGS:136,136 ALL_REGS:2464,2464 MEM:40,40
  a190(r88,l11) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a191(r89,l11) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a192(r147,l11) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a193(r224,l11) costs: AREG:2,2 DREG:2,2 CREG:2,2 BREG:2,2 SIREG:2,2 DIREG:2,2 AD_REGS:2,2 Q_REGS:2,2 NON_Q_REGS:2,2 GENERAL_REGS:2,2 SSE_FIRST_REG:10,10 NO_REX_SSE_REGS:10,10 SSE_REGS:10,10 MMX_REGS:15,15 INT_SSE_REGS:11,11 ALL_REGS:210,210 MEM:6,6
  a194(r245,l11) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:8,8
  a195(r270,l11) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:26,26 INT_SSE_REGS:18,18 ALL_REGS:416,416 MEM:8,8
  a196(r309,l11) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8,8 NO_REX_SSE_REGS:8,8 SSE_REGS:8,8 MMX_REGS:13,13 INT_SSE_REGS:9,9 ALL_REGS:208,208 MEM:3,3
  a197(r562,l11) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a198(r564,l11) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a199(r275,l11) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8,8 NO_REX_SSE_REGS:8,8 SSE_REGS:8,8 MMX_REGS:8,8 INT_SSE_REGS:8,8 ALL_REGS:100,100 MEM:1,1
  a200(r491,l11) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:0,0
  a201(r490,l11) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:0,0
  a202(r277,l11) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:21,21 INT_SSE_REGS:17,17 ALL_REGS:308,308 MEM:5,5
  a203(r274,l11) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32,32 NO_REX_SSE_REGS:32,32 SSE_REGS:32,32 MMX_REGS:47,47 INT_SSE_REGS:35,35 ALL_REGS:724,724 MEM:12,12
  a204(r488,l11) costs: AREG:2,2 DREG:2,2 CREG:2,2 BREG:2,2 SIREG:2,2 DIREG:1,1 AD_REGS:2,2 Q_REGS:2,2 NON_Q_REGS:2,2 GENERAL_REGS:2,2 SSE_FIRST_REG:23,23 NO_REX_SSE_REGS:23,23 SSE_REGS:23,23 MMX_REGS:28,28 INT_SSE_REGS:24,24 ALL_REGS:418,418 MEM:9,9
  a205(r88,l12) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a206(r89,l12) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a207(r147,l12) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a208(r212,l12) costs: AREG:2,2 DREG:2,2 CREG:2,2 BREG:2,2 SIREG:2,2 DIREG:2,2 AD_REGS:2,2 Q_REGS:2,2 NON_Q_REGS:2,2 GENERAL_REGS:2,2 SSE_FIRST_REG:39,39 NO_REX_SSE_REGS:39,39 SSE_REGS:39,39 MMX_REGS:54,54 INT_SSE_REGS:42,42 ALL_REGS:834,834 MEM:15,15
  a209(r224,l12) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8,8 NO_REX_SSE_REGS:8,8 SSE_REGS:8,8 MMX_REGS:12,12 INT_SSE_REGS:8,8 ALL_REGS:208,208 MEM:4,4
  a210(r309,l12) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8,8 NO_REX_SSE_REGS:8,8 SSE_REGS:8,8 MMX_REGS:13,13 INT_SSE_REGS:9,9 ALL_REGS:208,208 MEM:3,3
  a211(r562,l12) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a212(r564,l12) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a213(r347,l12) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:12,12
  a214(r540,l12) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:8,8
  a215(r541,l12) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:8,8
  a216(r523,l12) costs: AREG:2,2 DREG:2,2 CREG:2,2 BREG:2,2 SIREG:2,2 DIREG:2,2 AD_REGS:2,2 Q_REGS:2,2 NON_Q_REGS:2,2 GENERAL_REGS:2,2 SSE_FIRST_REG:23,23 NO_REX_SSE_REGS:23,23 SSE_REGS:23,23 MMX_REGS:27,27 INT_SSE_REGS:23,23 ALL_REGS:418,418 MEM:10,10
  a217(r251,l12) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:11,11
  a218(r521,l12) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:0,0
  a219(r88,l10) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a220(r89,l10) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a221(r147,l10) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a222(r152,l10) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8,8 NO_REX_SSE_REGS:8,8 SSE_REGS:8,8 MMX_REGS:13,13 INT_SSE_REGS:9,9 ALL_REGS:208,208 MEM:4,4
  a223(r224,l10) costs: AREG:2,2 DREG:2,2 CREG:2,2 BREG:2,2 SIREG:2,2 DIREG:2,2 AD_REGS:2,2 Q_REGS:2,2 NON_Q_REGS:2,2 GENERAL_REGS:2,2 SSE_FIRST_REG:10,10 NO_REX_SSE_REGS:10,10 SSE_REGS:10,10 MMX_REGS:15,15 INT_SSE_REGS:11,11 ALL_REGS:210,210 MEM:5,5
  a224(r244,l10) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:10,10
  a225(r245,l10) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:68,68 NO_REX_SSE_REGS:68,68 SSE_REGS:68,68 MMX_REGS:103,103 INT_SSE_REGS:75,75 ALL_REGS:1560,1560 MEM:32,32
  a226(r562,l10) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a227(r564,l10) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a228(r230,l10) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:13,13 NO_REX_SSE_REGS:13,13 SSE_REGS:13,13 MMX_REGS:13,13 INT_SSE_REGS:13,13 ALL_REGS:208,208 MEM:4,4
  a229(r485,l10) costs: AREG:2,2 DREG:2,2 CREG:2,2 BREG:2,2 SIREG:2,2 DIREG:2,2 AD_REGS:2,2 Q_REGS:2,2 NON_Q_REGS:2,2 GENERAL_REGS:2,2 SSE_FIRST_REG:23,23 NO_REX_SSE_REGS:23,23 SSE_REGS:23,23 MMX_REGS:28,28 INT_SSE_REGS:24,24 ALL_REGS:418,418 MEM:9,9
  a230(r484,l10) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a231(r242,l10) costs: AREG:-1,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32,32 NO_REX_SSE_REGS:32,32 SSE_REGS:32,32 MMX_REGS:47,47 INT_SSE_REGS:35,35 ALL_REGS:724,724 MEM:12,12
  a232(r481,l10) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a233(r232,l10) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:10,10
  a234(r483,l10) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1,-1 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a235(r240,l10) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:37,37 NO_REX_SSE_REGS:37,37 SSE_REGS:37,37 MMX_REGS:47,47 INT_SSE_REGS:39,39 ALL_REGS:724,724 MEM:11,11
  a236(r238,l10) costs: AREG:2,2 DREG:2,2 CREG:2,2 BREG:2,2 SIREG:2,2 DIREG:2,2 AD_REGS:2,2 Q_REGS:2,2 NON_Q_REGS:2,2 GENERAL_REGS:2,2 SSE_FIRST_REG:31,31 NO_REX_SSE_REGS:31,31 SSE_REGS:31,31 MMX_REGS:41,41 INT_SSE_REGS:33,33 ALL_REGS:626,626 MEM:12,12
  a237(r237,l10) costs: AREG:4,4 DREG:4,4 CREG:4,4 BREG:4,4 SIREG:4,4 DIREG:4,4 AD_REGS:4,4 Q_REGS:4,4 NON_Q_REGS:4,4 GENERAL_REGS:4,4 SSE_FIRST_REG:40,40 NO_REX_SSE_REGS:40,40 SSE_REGS:40,40 MMX_REGS:55,55 INT_SSE_REGS:43,43 ALL_REGS:732,732 MEM:17,17
  a238(r482,l10) costs: AREG:2,2 DREG:2,2 CREG:2,2 BREG:2,2 SIREG:2,2 DIREG:2,2 AD_REGS:2,2 Q_REGS:2,2 NON_Q_REGS:2,2 GENERAL_REGS:2,2 SSE_FIRST_REG:23,23 NO_REX_SSE_REGS:23,23 SSE_REGS:23,23 MMX_REGS:28,28 INT_SSE_REGS:24,24 ALL_REGS:418,418 MEM:8,8
  a239(r88,l9) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a240(r89,l9) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a241(r147,l9) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a242(r152,l9) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a243(r156,l9) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8,8 NO_REX_SSE_REGS:8,8 SSE_REGS:8,8 MMX_REGS:13,13 INT_SSE_REGS:9,9 ALL_REGS:208,208 MEM:4,4
  a244(r213,l9) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:26,26 INT_SSE_REGS:18,18 ALL_REGS:416,416 MEM:8,8
  a245(r224,l9) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:8,8 NO_REX_SSE_REGS:8,8 SSE_REGS:8,8 MMX_REGS:13,13 INT_SSE_REGS:9,9 ALL_REGS:208,208 MEM:3,3
  a246(r227,l9) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:53,53 NO_REX_SSE_REGS:53,53 SSE_REGS:53,53 MMX_REGS:78,78 INT_SSE_REGS:58,58 ALL_REGS:1248,1248 MEM:21,21
  a247(r244,l9) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a248(r540,l9) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a249(r541,l9) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a250(r562,l9) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a251(r564,l9) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a252(r226,l9) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a253(r88,l7) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a254(r89,l7) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a255(r90,l7) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a256(r311,l7) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1110,1110 NO_REX_SSE_REGS:1110,1110 SSE_REGS:1110,1110 MMX_REGS:1560,1560 INT_SSE_REGS:1200,1200 ALL_REGS:24960,24960 MEM:390,390
  a257(r327,l7) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:240,240 NO_REX_SSE_REGS:240,240 SSE_REGS:240,240 MMX_REGS:390,390 INT_SSE_REGS:270,270 ALL_REGS:6240,6240 MEM:90,90
  a258(r562,l7) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a259(r564,l7) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a260(r87,l4) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2610,44280 NO_REX_SSE_REGS:2610,44280 SSE_REGS:2610,44280 MMX_REGS:3510,63830 INT_SSE_REGS:2790,48190 ALL_REGS:56160,1021280 MEM:900,15730
  a261(r88,l4) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3258,3258 NO_REX_SSE_REGS:3258,3258 SSE_REGS:3258,3258 MMX_REGS:4563,4563 INT_SSE_REGS:3519,3519 ALL_REGS:73008,73008 MEM:1134,1134
  a262(r89,l4) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a263(r313,l4) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:720,720
  a264(r314,l4) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1890,1890 NO_REX_SSE_REGS:1890,1890 SSE_REGS:1890,1890 MMX_REGS:2340,2340 INT_SSE_REGS:1980,1980 ALL_REGS:37440,37440 MEM:720,720
  a265(r315,l4) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:720,720
  a266(r316,l4) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1890,1890 NO_REX_SSE_REGS:1890,1890 SSE_REGS:1890,1890 MMX_REGS:2340,2340 INT_SSE_REGS:1980,1980 ALL_REGS:37440,37440 MEM:720,720
  a267(r320,l4) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:594,594
  a268(r321,l4) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:630,7270
  a269(r343,l4) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:1764,1764
  a270(r562,l4) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a271(r564,l4) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:720,720
  a272(r538,l4) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2538,2538 NO_REX_SSE_REGS:2538,2538 SSE_REGS:2538,2538 MMX_REGS:3393,3393 INT_SSE_REGS:2709,2709 ALL_REGS:54288,54288 MEM:1044,1044
  a273(r393,l4) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1440,1440 NO_REX_SSE_REGS:1440,1440 SSE_REGS:1440,1440 MMX_REGS:1890,1890 INT_SSE_REGS:1530,1530 ALL_REGS:27720,27720 MEM:450,450
  a274(r382,l4) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:720,21720 NO_REX_SSE_REGS:720,21720 SSE_REGS:720,21720 MMX_REGS:720,26720 INT_SSE_REGS:720,22720 ALL_REGS:9000,425000 MEM:90,6090
  a275(r539,l4) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1170,18725 NO_REX_SSE_REGS:1170,18725 SSE_REGS:1170,18725 MMX_REGS:1170,23725 INT_SSE_REGS:1170,19725 ALL_REGS:18720,366860 MEM:360,5635
  a276(r376,l4) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1890,1890 NO_REX_SSE_REGS:1890,1890 SSE_REGS:1890,1890 MMX_REGS:2340,2340 INT_SSE_REGS:1980,1980 ALL_REGS:37440,37440 MEM:720,720
  a277(r87,l5) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:41670,41670 NO_REX_SSE_REGS:41670,41670 SSE_REGS:41670,41670 MMX_REGS:60320,60320 INT_SSE_REGS:45400,45400 ALL_REGS:965120,965120 MEM:14830,14830
  a278(r88,l5) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a279(r89,l5) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a280(r313,l5) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a281(r314,l5) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a282(r315,l5) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a283(r316,l5) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a284(r321,l5) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:6640,6640
  a285(r539,l5) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:17555,17555 NO_REX_SSE_REGS:17555,17555 SSE_REGS:17555,17555 MMX_REGS:22555,22555 INT_SSE_REGS:18555,18555 ALL_REGS:348140,348140 MEM:5275,5275
  a286(r562,l5) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a287(r564,l5) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0
  a288(r382,l5) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:6000,6000
  a289(r388,l5) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7280,7280 NO_REX_SSE_REGS:7280,7280 SSE_REGS:7280,7280 MMX_REGS:9555,9555 INT_SSE_REGS:7735,7735 ALL_REGS:140140,140140 MEM:2275,2275
  a290(r386,l5) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19110,19110 NO_REX_SSE_REGS:19110,19110 SSE_REGS:19110,19110 MMX_REGS:23660,23660 INT_SSE_REGS:20020,20020 ALL_REGS:378560,378560 MEM:7280,7280
  a291(r384,l5) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a292(r383,l5) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a293(r380,l5) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a294(r378,l5) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19110,19110 NO_REX_SSE_REGS:19110,19110 SSE_REGS:19110,19110 MMX_REGS:23660,23660 INT_SSE_REGS:20020,20020 ALL_REGS:378560,378560 MEM:7280,7280


Pass 1 for finding pseudo/allocno costs

    r564: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r562: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r543: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r542: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r541: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r540: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r539: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r538: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r533: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r531: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r523: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r521: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r516: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r514: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r513: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r512: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r511: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r509: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    r508: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r506: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r505: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r504: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r503: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r502: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r501: preferred DIREG, alternative NO_REGS, allocno DIREG
    r500: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r499: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r498: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r494: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r493: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r491: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r490: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r488: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r485: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r484: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r483: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r482: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r481: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r479: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r478: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r477: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r476: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r474: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r473: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r470: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r469: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r468: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r461: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r460: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r459: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r451: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r450: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r446: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r445: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r442: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r438: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r436: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r435: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    r434: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r433: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r432: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r431: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r429: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    r428: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r427: preferred NO_REGS, alternative NO_REGS, allocno NO_REGS
    r423: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r422: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r419: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r416: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r414: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r411: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r407: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r406: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r404: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r403: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r401: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r393: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r388: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r386: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r384: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r383: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r382: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r380: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r378: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r376: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r371: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r367: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r363: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r361: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r360: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r359: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r358: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r357: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r355: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r354: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r352: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r350: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r349: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r347: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r343: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r342: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r341: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r327: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r321: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r320: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r318: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r316: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r315: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r314: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r313: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r311: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r309: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r308: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r307: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r306: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r299: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r297: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r289: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r287: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r280: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r277: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r275: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r274: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r270: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a195 (r270,l11) best GENERAL_REGS, allocno GENERAL_REGS
    r268: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r251: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r245: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r242: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r232: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r226: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r212: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r198: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a129 (r193,l13) best GENERAL_REGS, allocno GENERAL_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r160: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r137: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a277 (r87,l5) best GENERAL_REGS, allocno GENERAL_REGS
    a260 (r87,l4) best GENERAL_REGS, allocno GENERAL_REGS
    a96 (r87,l6) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0,-6 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:470,470 NO_REX_SSE_REGS:470,470 SSE_REGS:470,470 MMX_REGS:500,500 INT_SSE_REGS:476,476 ALL_REGS:4996,4996 MEM:158,158
  a1(r245,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8,217 NO_REX_SSE_REGS:8,217 SSE_REGS:8,217 MMX_REGS:13,312 INT_SSE_REGS:9,236 ALL_REGS:208,4492 MEM:4,96
  a2(r436,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:0,0
  a3(r176,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:12,12
  a4(r433,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:44,44 NO_REX_SSE_REGS:44,44 SSE_REGS:44,44 MMX_REGS:64,64 INT_SSE_REGS:48,48 ALL_REGS:936,936 MEM:19,19
  a5(r434,l0) costs: AREG:4,4 DREG:4,4 CREG:4,4 BREG:4,4 SIREG:4,3 DIREG:4,4 AD_REGS:4,4 Q_REGS:4,4 NON_Q_REGS:4,4 GENERAL_REGS:4,4 SSE_FIRST_REG:25,25 NO_REX_SSE_REGS:25,25 SSE_REGS:25,25 MMX_REGS:30,30 INT_SSE_REGS:26,26 ALL_REGS:420,420 MEM:11,11
  a6(r435,l0) costs: GENERAL_REGS:8,8 SSE_FIRST_REG:24,24 NO_REX_SSE_REGS:24,24 SSE_REGS:24,24 MMX_REGS:29,29 INT_SSE_REGS:25,25 ALL_REGS:316,316 MEM:4,4
  a7(r432,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a8(r431,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:8,8
  a9(r428,l0) costs: AREG:4,4 DREG:4,4 CREG:4,4 BREG:4,4 SIREG:4,4 DIREG:4,3 AD_REGS:4,4 Q_REGS:4,4 NON_Q_REGS:4,4 GENERAL_REGS:4,4 SSE_FIRST_REG:25,25 NO_REX_SSE_REGS:25,25 SSE_REGS:25,25 MMX_REGS:30,30 INT_SSE_REGS:26,26 ALL_REGS:420,420 MEM:11,11
  a10(r427,l0) costs: AREG:8,8 DREG:3,3 CREG:8,8 BREG:8,8 SIREG:8,8 DIREG:8,8 AD_REGS:8,8 Q_REGS:8,8 NON_Q_REGS:8,8 GENERAL_REGS:8,8 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:34,34 INT_SSE_REGS:30,30 ALL_REGS:424,424 MEM:15,15
  a11(r429,l0) costs: GENERAL_REGS:8,8 SSE_FIRST_REG:24,24 NO_REX_SSE_REGS:24,24 SSE_REGS:24,24 MMX_REGS:29,29 INT_SSE_REGS:25,25 ALL_REGS:316,316 MEM:4,4
  a12(r204,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:10,10
  a13(r203,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:10,10
  a14(r202,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:10,10
  a15(r198,l0) costs: AREG:0,-2 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:64,64 NO_REX_SSE_REGS:64,64 SSE_REGS:64,64 MMX_REGS:89,89 INT_SSE_REGS:69,69 ALL_REGS:1248,1248 MEM:28,28
  a16(r200,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:4,4
  a17(r423,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:8,8
  a18(r564,l0) costs: GENERAL_REGS:0,0 MEM:24,744
  a19(r321,l0) costs: GENERAL_REGS:0,0 MEM:24,7334
  a20(r363,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:174,174 NO_REX_SSE_REGS:174,174 SSE_REGS:174,174 MMX_REGS:234,234 INT_SSE_REGS:186,186 ALL_REGS:3744,3744 MEM:72,72
  a21(r343,l0) costs: GENERAL_REGS:0,0 MEM:24,1828
  a22(r341,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:126,314 NO_REX_SSE_REGS:126,314 SSE_REGS:126,314 MMX_REGS:156,399 INT_SSE_REGS:132,331 ALL_REGS:1896,5032 MEM:42,107
  a23(r318,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:150,219 NO_REX_SSE_REGS:150,219 SSE_REGS:150,219 MMX_REGS:195,299 INT_SSE_REGS:159,235 ALL_REGS:2520,4084 MEM:60,85
  a24(r320,l0) costs: GENERAL_REGS:0,0 MEM:36,674
  a25(r361,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:63,63 NO_REX_SSE_REGS:63,63 SSE_REGS:63,63 MMX_REGS:78,78 INT_SSE_REGS:66,66 ALL_REGS:948,948 MEM:0,0
  a26(r360,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:87,87 NO_REX_SSE_REGS:87,87 SSE_REGS:87,87 MMX_REGS:117,117 INT_SSE_REGS:93,93 ALL_REGS:1572,1572 MEM:36,36
  a27(r102,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:108,108 NO_REX_SSE_REGS:108,108 SSE_REGS:108,108 MMX_REGS:143,143 INT_SSE_REGS:115,115 ALL_REGS:2288,2288 MEM:44,44
  a28(r103,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:148,148 NO_REX_SSE_REGS:148,148 SSE_REGS:148,148 MMX_REGS:208,208 INT_SSE_REGS:160,160 ALL_REGS:2928,2928 MEM:64,64
  a29(r359,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:63,63 NO_REX_SSE_REGS:63,63 SSE_REGS:63,63 MMX_REGS:78,78 INT_SSE_REGS:66,66 ALL_REGS:948,948 MEM:0,0
  a30(r358,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:0,0
  a31(r357,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:0,0
  a32(r107,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:8,8
  a33(r109,l0) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:8,8
  a34(r355,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:0,0
  a35(r354,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:0,0
  a36(r99,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:87,87 NO_REX_SSE_REGS:87,87 SSE_REGS:87,87 MMX_REGS:117,117 INT_SSE_REGS:93,93 ALL_REGS:1572,1572 MEM:36,36
  a37(r352,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:63,63 NO_REX_SSE_REGS:63,63 SSE_REGS:63,63 MMX_REGS:78,78 INT_SSE_REGS:66,66 ALL_REGS:948,948 MEM:0,0
  a38(r350,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:0,0
  a39(r349,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:0,0
  a40(r318,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:69,69 NO_REX_SSE_REGS:69,69 SSE_REGS:69,69 MMX_REGS:104,104 INT_SSE_REGS:76,76 ALL_REGS:1564,1564 MEM:25,25
  a41(r320,l1) costs: GENERAL_REGS:0,0 MEM:4,638
  a42(r321,l1) costs: GENERAL_REGS:0,0 MEM:32,7310
  a43(r341,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:188,188 NO_REX_SSE_REGS:188,188 SSE_REGS:188,188 MMX_REGS:243,243 INT_SSE_REGS:199,199 ALL_REGS:3136,3136 MEM:65,65
  a44(r343,l1) costs: GENERAL_REGS:0,0 MEM:32,1804
  a45(r564,l1) costs: GENERAL_REGS:0,0 MEM:0,720
  a46(r245,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,209 NO_REX_SSE_REGS:0,209 SSE_REGS:0,209 MMX_REGS:0,299 INT_SSE_REGS:0,227 ALL_REGS:0,4284 MEM:0,92
  a47(r442,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:12,12
  a48(r438,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:12,12
  a49(r168,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:12,12
  a50(r422,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:0,0
  a51(r137,l1) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:7,7
  a52(r136,l1) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28,28 NO_REX_SSE_REGS:28,28 SSE_REGS:28,28 MMX_REGS:38,38 INT_SSE_REGS:30,30 ALL_REGS:520,520 MEM:11,11
  a53(r419,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:12,12
  a54(r562,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:84,92 NO_REX_SSE_REGS:84,92 SSE_REGS:84,92 MMX_REGS:84,97 INT_SSE_REGS:84,93 ALL_REGS:728,936 MEM:28,31
  a55(r88,l1) costs: GENERAL_REGS:0,18 SSE_FIRST_REG:84,4030 NO_REX_SSE_REGS:84,4030 SSE_REGS:84,4030 MMX_REGS:84,5665 INT_SSE_REGS:84,4357 ALL_REGS:728,89066 MEM:28,1469
  a56(r87,l1) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:84,44425 NO_REX_SSE_REGS:84,44425 SSE_REGS:84,44425 MMX_REGS:84,63990 INT_SSE_REGS:84,48338 ALL_REGS:728,1023048 MEM:28,15780
  a57(r367,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:12,12
  a58(r87,l2) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12,44341 NO_REX_SSE_REGS:12,44341 SSE_REGS:12,44341 MMX_REGS:12,63906 INT_SSE_REGS:12,48254 ALL_REGS:104,1022320 MEM:4,15752
  a59(r88,l2) costs: GENERAL_REGS:0,18 SSE_FIRST_REG:141,3946 NO_REX_SSE_REGS:141,3946 SSE_REGS:141,3946 MMX_REGS:221,5581 INT_SSE_REGS:157,4273 ALL_REGS:3436,88338 MEM:60,1441
  a60(r320,l2) costs: GENERAL_REGS:0,0 MEM:36,634
  a61(r321,l2) costs: GENERAL_REGS:0,0 MEM:4,7278
  a62(r343,l2) costs: GENERAL_REGS:0,0 MEM:4,1772
  a63(r562,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,8 NO_REX_SSE_REGS:0,8 SSE_REGS:0,8 MMX_REGS:0,13 INT_SSE_REGS:0,9 ALL_REGS:0,208 MEM:0,3
  a64(r564,l2) costs: GENERAL_REGS:0,0 MEM:0,720
  a65(r245,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,209 NO_REX_SSE_REGS:0,209 SSE_REGS:0,209 MMX_REGS:0,299 INT_SSE_REGS:0,227 ALL_REGS:0,4284 MEM:0,92
  a66(r342,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:2,2
  a67(r411,l2) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:12,12
  a68(r89,l2) costs: GENERAL_REGS:0,16 SSE_FIRST_REG:96,292 NO_REX_SSE_REGS:96,292 SSE_REGS:96,292 MMX_REGS:96,372 INT_SSE_REGS:96,308 ALL_REGS:832,4608 MEM:32,120
  a69(r87,l3) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,44329 NO_REX_SSE_REGS:20,44329 SSE_REGS:20,44329 MMX_REGS:25,63894 INT_SSE_REGS:21,48242 ALL_REGS:312,1022216 MEM:7,15748
  a70(r88,l3) costs: GENERAL_REGS:0,18 SSE_FIRST_REG:58,3805 NO_REX_SSE_REGS:58,3805 SSE_REGS:58,3805 MMX_REGS:78,5360 INT_SSE_REGS:62,4116 ALL_REGS:1248,84902 MEM:21,1381
  a71(r89,l3) costs: GENERAL_REGS:0,16 SSE_FIRST_REG:13,196 NO_REX_SSE_REGS:13,196 SSE_REGS:13,196 MMX_REGS:13,276 INT_SSE_REGS:13,212 ALL_REGS:108,3776 MEM:4,88
  a72(r320,l3) costs: GENERAL_REGS:0,0 MEM:4,598
  a73(r321,l3) costs: GENERAL_REGS:0,0 MEM:4,7274
  a74(r343,l3) costs: GENERAL_REGS:0,0 MEM:4,1768
  a75(r562,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,8 NO_REX_SSE_REGS:0,8 SSE_REGS:0,8 MMX_REGS:0,13 INT_SSE_REGS:0,9 ALL_REGS:0,208 MEM:0,3
  a76(r564,l3) costs: GENERAL_REGS:0,0 MEM:0,720
  a77(r245,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,209 NO_REX_SSE_REGS:0,209 SSE_REGS:0,209 MMX_REGS:0,299 INT_SSE_REGS:0,227 ALL_REGS:0,4284 MEM:0,92
  a78(r514,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a79(r306,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8,49 NO_REX_SSE_REGS:8,49 SSE_REGS:8,49 MMX_REGS:13,64 INT_SSE_REGS:9,52 ALL_REGS:208,836 MEM:3,19
  a80(r147,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8,29 NO_REX_SSE_REGS:8,29 SSE_REGS:8,29 MMX_REGS:13,39 INT_SSE_REGS:9,31 ALL_REGS:208,624 MEM:3,9
  a81(r186,l3) costs: GENERAL_REGS:0,0 MEM:32,72
  a82(r538,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:64,2602 NO_REX_SSE_REGS:64,2602 SSE_REGS:64,2602 MMX_REGS:104,3497 INT_SSE_REGS:72,2781 ALL_REGS:1664,55952 MEM:32,1076
  a83(r314,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:112,2002 NO_REX_SSE_REGS:112,2002 SSE_REGS:112,2002 MMX_REGS:117,2457 INT_SSE_REGS:113,2093 ALL_REGS:1072,38512 MEM:36,756
  a84(r313,l3) costs: GENERAL_REGS:0,0 MEM:36,756
  a85(r316,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:112,2002 NO_REX_SSE_REGS:112,2002 SSE_REGS:112,2002 MMX_REGS:117,2457 INT_SSE_REGS:113,2093 ALL_REGS:1072,38512 MEM:36,756
  a86(r315,l3) costs: GENERAL_REGS:0,0 MEM:64,784
  a87(r371,l3) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:12,12
  a88(r88,l6) costs: GENERAL_REGS:16,18 SSE_FIRST_REG:471,489 NO_REX_SSE_REGS:471,489 SSE_REGS:471,489 MMX_REGS:691,719 INT_SSE_REGS:515,535 ALL_REGS:10228,10646 MEM:216,226
  a89(r89,l6) costs: GENERAL_REGS:16,16 SSE_FIRST_REG:183,183 NO_REX_SSE_REGS:183,183 SSE_REGS:183,183 MMX_REGS:263,263 INT_SSE_REGS:199,199 ALL_REGS:3668,3668 MEM:84,84
  a90(r186,l6) costs: GENERAL_REGS:0,0 MEM:40,40
  a91(r562,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,8 NO_REX_SSE_REGS:0,8 SSE_REGS:0,8 MMX_REGS:0,13 INT_SSE_REGS:0,9 ALL_REGS:0,208 MEM:0,3
  a92(r564,l6) costs: GENERAL_REGS:0,0 MEM:0,0
  a93(r147,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8,21 NO_REX_SSE_REGS:8,21 SSE_REGS:8,21 MMX_REGS:13,26 INT_SSE_REGS:9,22 ALL_REGS:208,416 MEM:3,6
  a94(r306,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,41 NO_REX_SSE_REGS:0,41 SSE_REGS:0,41 MMX_REGS:0,51 INT_SSE_REGS:0,43 ALL_REGS:0,628 MEM:0,16
  a95(r245,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,209 NO_REX_SSE_REGS:0,209 SSE_REGS:0,209 MMX_REGS:0,299 INT_SSE_REGS:0,227 ALL_REGS:0,4284 MEM:0,92
  a96(r87,l6) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:11,11
  a97(r516,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:8,8
  a98(r160,l6) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:7,7
  a99(r289,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8,45 NO_REX_SSE_REGS:8,45 SSE_REGS:8,45 MMX_REGS:13,65 INT_SSE_REGS:9,49 ALL_REGS:208,1040 MEM:4,20
  a100(r506,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:8,8
  a101(r347,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8,190 NO_REX_SSE_REGS:8,190 SSE_REGS:8,190 MMX_REGS:13,260 INT_SSE_REGS:9,204 ALL_REGS:208,4160 MEM:4,80
  a102(r308,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8,52 NO_REX_SSE_REGS:8,52 SSE_REGS:8,52 MMX_REGS:13,62 INT_SSE_REGS:9,54 ALL_REGS:208,728 MEM:3,18
  a103(r158,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8,29 NO_REX_SSE_REGS:8,29 SSE_REGS:8,29 MMX_REGS:13,39 INT_SSE_REGS:9,31 ALL_REGS:208,624 MEM:3,10
  a104(r474,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:8,8
  a105(r473,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a106(r542,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29,50 NO_REX_SSE_REGS:29,50 SSE_REGS:29,50 MMX_REGS:39,65 INT_SSE_REGS:31,53 ALL_REGS:624,1040 MEM:11,19
  a107(r461,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a108(r193,l6) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36,36 NO_REX_SSE_REGS:36,36 SSE_REGS:36,36 MMX_REGS:51,51 INT_SSE_REGS:39,39 ALL_REGS:728,728 MEM:14,14
  a109(r460,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:8,8
  a110(r459,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a111(r543,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29,58 NO_REX_SSE_REGS:29,58 SSE_REGS:29,58 MMX_REGS:39,78 INT_SSE_REGS:31,62 ALL_REGS:624,1248 MEM:12,24
  a112(r451,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:8,8
  a113(r416,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:8,8
  a114(r414,l6) costs: GENERAL_REGS:0,0 MEM:0,0
  a115(r307,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:87,87 NO_REX_SSE_REGS:87,87 SSE_REGS:87,87 MMX_REGS:117,117 INT_SSE_REGS:93,93 ALL_REGS:1572,1572 MEM:12,12
  a116(r327,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:39,279 NO_REX_SSE_REGS:39,279 SSE_REGS:39,279 MMX_REGS:39,429 INT_SSE_REGS:39,309 ALL_REGS:624,6864 MEM:12,102
  a117(r311,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:63,1173 NO_REX_SSE_REGS:63,1173 SSE_REGS:63,1173 MMX_REGS:78,1638 INT_SSE_REGS:66,1266 ALL_REGS:948,25908 MEM:24,414
  a118(r90,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:332,473 NO_REX_SSE_REGS:332,473 SSE_REGS:332,473 MMX_REGS:442,663 INT_SSE_REGS:354,511 ALL_REGS:7072,10608 MEM:122,173
  a119(r406,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:126,126 NO_REX_SSE_REGS:126,126 SSE_REGS:126,126 MMX_REGS:156,156 INT_SSE_REGS:132,132 ALL_REGS:2496,2496 MEM:48,48
  a120(r404,l6) costs: GENERAL_REGS:0,0 MEM:0,0
  a121(r403,l6) costs: GENERAL_REGS:16,16 SSE_FIRST_REG:184,184 NO_REX_SSE_REGS:184,184 SSE_REGS:184,184 MMX_REGS:224,224 INT_SSE_REGS:192,192 ALL_REGS:3344,3344 MEM:72,72
  a122(r401,l6) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:84,84 NO_REX_SSE_REGS:84,84 SSE_REGS:84,84 MMX_REGS:104,104 INT_SSE_REGS:88,88 ALL_REGS:1664,1664 MEM:32,32
  a123(r88,l13) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a124(r186,l13) costs: GENERAL_REGS:0,0 MEM:0,0
  a125(r543,l13) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:12,12
  a126(r562,l13) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a127(r564,l13) costs: GENERAL_REGS:0,0 MEM:0,0
  a128(r542,l13) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:8,8
  a129(r193,l13) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:10,10
  a130(r470,l13) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a131(r469,l13) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:8,8
  a132(r468,l13) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a133(r88,l8) costs: GENERAL_REGS:2,2 SSE_FIRST_REG:18,18 NO_REX_SSE_REGS:18,18 SSE_REGS:18,18 MMX_REGS:28,28 INT_SSE_REGS:20,20 ALL_REGS:418,418 MEM:10,10
  a134(r89,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a135(r90,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:141,141 NO_REX_SSE_REGS:141,141 SSE_REGS:141,141 MMX_REGS:221,221 INT_SSE_REGS:157,157 ALL_REGS:3536,3536 MEM:51,51
  a136(r562,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8,8 NO_REX_SSE_REGS:8,8 SSE_REGS:8,8 MMX_REGS:13,13 INT_SSE_REGS:9,9 ALL_REGS:208,208 MEM:3,3
  a137(r564,l8) costs: GENERAL_REGS:0,0 MEM:0,0
  a138(r147,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:13,13 NO_REX_SSE_REGS:13,13 SSE_REGS:13,13 MMX_REGS:13,13 INT_SSE_REGS:13,13 ALL_REGS:208,208 MEM:3,3
  a139(r289,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:37,37 NO_REX_SSE_REGS:37,37 SSE_REGS:37,37 MMX_REGS:52,52 INT_SSE_REGS:40,40 ALL_REGS:832,832 MEM:16,16
  a140(r306,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:41,41 NO_REX_SSE_REGS:41,41 SSE_REGS:41,41 MMX_REGS:51,51 INT_SSE_REGS:43,43 ALL_REGS:628,628 MEM:16,16
  a141(r308,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:44,44 NO_REX_SSE_REGS:44,44 SSE_REGS:44,44 MMX_REGS:49,49 INT_SSE_REGS:45,45 ALL_REGS:520,520 MEM:15,15
  a142(r347,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:153,182 NO_REX_SSE_REGS:153,182 SSE_REGS:153,182 MMX_REGS:208,247 INT_SSE_REGS:164,195 ALL_REGS:3328,3952 MEM:64,76
  a143(r245,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:119,209 NO_REX_SSE_REGS:119,209 SSE_REGS:119,209 MMX_REGS:169,299 INT_SSE_REGS:129,227 ALL_REGS:2404,4284 MEM:52,92
  a144(r158,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a145(r541,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:92,113 NO_REX_SSE_REGS:92,113 SSE_REGS:92,113 MMX_REGS:117,143 INT_SSE_REGS:97,119 ALL_REGS:1472,1788 MEM:36,44
  a146(r540,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:92,113 NO_REX_SSE_REGS:92,113 SSE_REGS:92,113 MMX_REGS:117,143 INT_SSE_REGS:97,119 ALL_REGS:1472,1788 MEM:36,44
  a147(r212,l8) costs: GENERAL_REGS:2,4 SSE_FIRST_REG:59,98 NO_REX_SSE_REGS:59,98 SSE_REGS:59,98 MMX_REGS:79,133 INT_SSE_REGS:63,105 ALL_REGS:1146,1980 MEM:25,40
  a148(r224,l8) costs: GENERAL_REGS:2,6 SSE_FIRST_REG:47,83 NO_REX_SSE_REGS:47,83 SSE_REGS:47,83 MMX_REGS:66,121 INT_SSE_REGS:50,89 ALL_REGS:1042,1878 MEM:19,37
  a149(r268,l8) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:8,8
  a150(r533,l8) costs: GENERAL_REGS:2,2 SSE_FIRST_REG:23,23 NO_REX_SSE_REGS:23,23 SSE_REGS:23,23 MMX_REGS:27,27 INT_SSE_REGS:23,23 ALL_REGS:418,418 MEM:10,10
  a151(r531,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:0,0
  a152(r275,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:83,95 NO_REX_SSE_REGS:83,95 SSE_REGS:83,95 MMX_REGS:103,115 INT_SSE_REGS:87,99 ALL_REGS:1260,1364 MEM:30,34
  a153(r513,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a154(r512,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a155(r508,l8) costs: GENERAL_REGS:6,6 SSE_FIRST_REG:35,35 NO_REX_SSE_REGS:35,35 SSE_REGS:35,35 MMX_REGS:45,45 INT_SSE_REGS:37,37 ALL_REGS:630,630 MEM:16,16
  a156(r511,l8) costs: GENERAL_REGS:2,2 SSE_FIRST_REG:23,23 NO_REX_SSE_REGS:23,23 SSE_REGS:23,23 MMX_REGS:28,28 INT_SSE_REGS:24,24 ALL_REGS:418,418 MEM:8,8
  a157(r509,l8) costs: GENERAL_REGS:8,8 SSE_FIRST_REG:24,24 NO_REX_SSE_REGS:24,24 SSE_REGS:24,24 MMX_REGS:29,29 INT_SSE_REGS:25,25 ALL_REGS:316,316 MEM:4,4
  a158(r213,l8) costs: GENERAL_REGS:2,2 SSE_FIRST_REG:39,55 NO_REX_SSE_REGS:39,55 SSE_REGS:39,55 MMX_REGS:54,80 INT_SSE_REGS:42,60 ALL_REGS:734,1150 MEM:15,23
  a159(r505,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:0,0
  a160(r504,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:8,8
  a161(r503,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:0,0
  a162(r299,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:42,42 NO_REX_SSE_REGS:42,42 SSE_REGS:42,42 MMX_REGS:52,52 INT_SSE_REGS:44,44 ALL_REGS:632,632 MEM:16,16
  a163(r287,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:37,37 NO_REX_SSE_REGS:37,37 SSE_REGS:37,37 MMX_REGS:52,52 INT_SSE_REGS:40,40 ALL_REGS:832,832 MEM:13,13
  a164(r280,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:95,95 NO_REX_SSE_REGS:95,95 SSE_REGS:95,95 MMX_REGS:130,130 INT_SSE_REGS:102,102 ALL_REGS:1780,1780 MEM:40,40
  a165(r502,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:0,0
  a166(r297,l8) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:8,8
  a167(r501,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:-1,-1
  a168(r500,l8) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a169(r499,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a170(r498,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a171(r494,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:0,0
  a172(r493,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:0,0
  a173(r270,l8) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,36 NO_REX_SSE_REGS:20,36 SSE_REGS:20,36 MMX_REGS:25,51 INT_SSE_REGS:21,39 ALL_REGS:312,728 MEM:8,16
  a174(r309,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:13,29 NO_REX_SSE_REGS:13,29 SSE_REGS:13,29 MMX_REGS:13,39 INT_SSE_REGS:13,31 ALL_REGS:208,624 MEM:4,10
  a175(r230,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29,42 NO_REX_SSE_REGS:29,42 SSE_REGS:29,42 MMX_REGS:39,52 INT_SSE_REGS:31,44 ALL_REGS:624,832 MEM:11,15
  a176(r479,l8) costs: GENERAL_REGS:2,2 SSE_FIRST_REG:23,23 NO_REX_SSE_REGS:23,23 SSE_REGS:23,23 MMX_REGS:28,28 INT_SSE_REGS:24,24 ALL_REGS:418,418 MEM:9,9
  a177(r152,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:37,45 NO_REX_SSE_REGS:37,45 SSE_REGS:37,45 MMX_REGS:52,65 INT_SSE_REGS:40,49 ALL_REGS:832,1040 MEM:16,20
  a178(r244,l8) costs: GENERAL_REGS:2,2 SSE_FIRST_REG:47,76 NO_REX_SSE_REGS:47,76 SSE_REGS:47,76 MMX_REGS:67,106 INT_SSE_REGS:51,82 ALL_REGS:942,1566 MEM:18,28
  a179(r227,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:12,65 NO_REX_SSE_REGS:12,65 SSE_REGS:12,65 MMX_REGS:12,90 INT_SSE_REGS:12,70 ALL_REGS:104,1352 MEM:4,25
  a180(r156,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29,37 NO_REX_SSE_REGS:29,37 SSE_REGS:29,37 MMX_REGS:39,52 INT_SSE_REGS:31,40 ALL_REGS:524,732 MEM:12,16
  a181(r478,l8) costs: GENERAL_REGS:2,2 SSE_FIRST_REG:23,23 NO_REX_SSE_REGS:23,23 SSE_REGS:23,23 MMX_REGS:28,28 INT_SSE_REGS:24,24 ALL_REGS:418,418 MEM:8,8
  a182(r477,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a183(r476,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a184(r157,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:12,12
  a185(r154,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:42,42 NO_REX_SSE_REGS:42,42 SSE_REGS:42,42 MMX_REGS:52,52 INT_SSE_REGS:44,44 ALL_REGS:632,632 MEM:15,15
  a186(r450,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:0,0
  a187(r446,l8) costs: GENERAL_REGS:0,0 MEM:0,0
  a188(r445,l8) costs: GENERAL_REGS:2,2 SSE_FIRST_REG:23,23 NO_REX_SSE_REGS:23,23 SSE_REGS:23,23 MMX_REGS:28,28 INT_SSE_REGS:24,24 ALL_REGS:418,418 MEM:9,9
  a189(r407,l8) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:168,168 NO_REX_SSE_REGS:168,168 SSE_REGS:168,168 MMX_REGS:208,208 INT_SSE_REGS:176,176 ALL_REGS:3328,3328 MEM:64,64
  a190(r88,l11) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a191(r89,l11) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a192(r147,l11) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a193(r224,l11) costs: GENERAL_REGS:2,2 SSE_FIRST_REG:10,10 NO_REX_SSE_REGS:10,10 SSE_REGS:10,10 MMX_REGS:15,15 INT_SSE_REGS:11,11 ALL_REGS:210,210 MEM:6,6
  a194(r245,l11) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:8,8
  a195(r270,l11) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:26,26 INT_SSE_REGS:18,18 ALL_REGS:416,416 MEM:8,8
  a196(r309,l11) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8,8 NO_REX_SSE_REGS:8,8 SSE_REGS:8,8 MMX_REGS:13,13 INT_SSE_REGS:9,9 ALL_REGS:208,208 MEM:3,3
  a197(r562,l11) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a198(r564,l11) costs: GENERAL_REGS:0,0 MEM:0,0
  a199(r275,l11) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:12,12 NO_REX_SSE_REGS:12,12 SSE_REGS:12,12 MMX_REGS:12,12 INT_SSE_REGS:12,12 ALL_REGS:104,104 MEM:4,4
  a200(r491,l11) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:0,0
  a201(r490,l11) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:0,0
  a202(r277,l11) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20,20 NO_REX_SSE_REGS:20,20 SSE_REGS:20,20 MMX_REGS:25,25 INT_SSE_REGS:21,21 ALL_REGS:312,312 MEM:8,8
  a203(r274,l11) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36,36 NO_REX_SSE_REGS:36,36 SSE_REGS:36,36 MMX_REGS:51,51 INT_SSE_REGS:39,39 ALL_REGS:728,728 MEM:15,15
  a204(r488,l11) costs: AREG:2,2 DREG:2,2 CREG:2,2 BREG:2,2 SIREG:2,2 DIREG:2,1 AD_REGS:2,2 Q_REGS:2,2 NON_Q_REGS:2,2 GENERAL_REGS:2,2 SSE_FIRST_REG:23,23 NO_REX_SSE_REGS:23,23 SSE_REGS:23,23 MMX_REGS:28,28 INT_SSE_REGS:24,24 ALL_REGS:418,418 MEM:9,9
  a205(r88,l12) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a206(r89,l12) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a207(r147,l12) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a208(r212,l12) costs: GENERAL_REGS:2,2 SSE_FIRST_REG:39,39 NO_REX_SSE_REGS:39,39 SSE_REGS:39,39 MMX_REGS:54,54 INT_SSE_REGS:42,42 ALL_REGS:834,834 MEM:15,15
  a209(r224,l12) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8,8 NO_REX_SSE_REGS:8,8 SSE_REGS:8,8 MMX_REGS:12,12 INT_SSE_REGS:8,8 ALL_REGS:208,208 MEM:4,4
  a210(r309,l12) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8,8 NO_REX_SSE_REGS:8,8 SSE_REGS:8,8 MMX_REGS:13,13 INT_SSE_REGS:9,9 ALL_REGS:208,208 MEM:3,3
  a211(r562,l12) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a212(r564,l12) costs: GENERAL_REGS:0,0 MEM:0,0
  a213(r347,l12) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:12,12
  a214(r540,l12) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:8,8
  a215(r541,l12) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:8,8
  a216(r523,l12) costs: GENERAL_REGS:2,2 SSE_FIRST_REG:23,23 NO_REX_SSE_REGS:23,23 SSE_REGS:23,23 MMX_REGS:27,27 INT_SSE_REGS:23,23 ALL_REGS:418,418 MEM:10,10
  a217(r251,l12) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:14,14
  a218(r521,l12) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:316,316 MEM:0,0
  a219(r88,l10) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a220(r89,l10) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a221(r147,l10) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a222(r152,l10) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8,8 NO_REX_SSE_REGS:8,8 SSE_REGS:8,8 MMX_REGS:13,13 INT_SSE_REGS:9,9 ALL_REGS:208,208 MEM:4,4
  a223(r224,l10) costs: GENERAL_REGS:2,2 SSE_FIRST_REG:10,10 NO_REX_SSE_REGS:10,10 SSE_REGS:10,10 MMX_REGS:15,15 INT_SSE_REGS:11,11 ALL_REGS:210,210 MEM:5,5
  a224(r244,l10) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:624,624 MEM:10,10
  a225(r245,l10) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:69,69 NO_REX_SSE_REGS:69,69 SSE_REGS:69,69 MMX_REGS:104,104 INT_SSE_REGS:76,76 ALL_REGS:1564,1564 MEM:32,32
  a226(r562,l10) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a227(r564,l10) costs: GENERAL_REGS:0,0 MEM:0,0
  a228(r230,l10) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:13,13 NO_REX_SSE_REGS:13,13 SSE_REGS:13,13 MMX_REGS:13,13 INT_SSE_REGS:13,13 ALL_REGS:208,208 MEM:4,4
  a229(r485,l10) costs: GENERAL_REGS:2,2 SSE_FIRST_REG:23,23 NO_REX_SSE_REGS:23,23 SSE_REGS:23,23 MMX_REGS:28,28 INT_SSE_REGS:24,24 ALL_REGS:418,418 MEM:9,9
  a230(r484,l10) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:7,7
  a231(r242,l10) costs: AREG:0,-1 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:36,36 NO_REX_SSE_REGS:36,36 SSE_REGS:36,36 MMX_REGS:51,51 INT_SSE_REGS:39,39 ALL_REGS:728,728 MEM:15,15
  a232(r481,l10) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a233(r232,l10) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:29,29 NO_REX_SSE_REGS:29,29 SSE_REGS:29,29 MMX_REGS:39,39 INT_SSE_REGS:31,31 ALL_REGS:524,524 MEM:10,10
  a234(r483,l10) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21,21 NO_REX_SSE_REGS:21,21 SSE_REGS:21,21 MMX_REGS:26,26 INT_SSE_REGS:22,22 ALL_REGS:416,416 MEM:6,6
  a235(r240,l10) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:41,41 NO_REX_SSE_REGS:41,41 SSE_REGS:41,41 MMX_REGS:51,51 INT_SSE_REGS:43,43 ALL_REGS:728,728 MEM:14,14
  a236(r238,l10) costs: GENERAL_REGS:2,2 SSE_FIRST_REG:31,31 NO_REX_SSE_REGS:31,31 SSE_REGS:31,31 MMX_REGS:41,41 INT_SSE_REGS:33,33 ALL_REGS:626,626 MEM:12,12
  a237(r237,l10) costs: GENERAL_REGS:4,4 SSE_FIRST_REG:41,41 NO_REX_SSE_REGS:41,41 SSE_REGS:41,41 MMX_REGS:56,56 INT_SSE_REGS:44,44 ALL_REGS:736,736 MEM:17,17
  a238(r482,l10) costs: GENERAL_REGS:2,2 SSE_FIRST_REG:23,23 NO_REX_SSE_REGS:23,23 SSE_REGS:23,23 MMX_REGS:28,28 INT_SSE_REGS:24,24 ALL_REGS:418,418 MEM:8,8
  a239(r88,l9) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a240(r89,l9) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a241(r147,l9) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a242(r152,l9) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a243(r156,l9) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8,8 NO_REX_SSE_REGS:8,8 SSE_REGS:8,8 MMX_REGS:13,13 INT_SSE_REGS:9,9 ALL_REGS:208,208 MEM:4,4
  a244(r213,l9) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:16,16 NO_REX_SSE_REGS:16,16 SSE_REGS:16,16 MMX_REGS:26,26 INT_SSE_REGS:18,18 ALL_REGS:416,416 MEM:8,8
  a245(r224,l9) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:8,8 NO_REX_SSE_REGS:8,8 SSE_REGS:8,8 MMX_REGS:13,13 INT_SSE_REGS:9,9 ALL_REGS:208,208 MEM:3,3
  a246(r227,l9) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:53,53 NO_REX_SSE_REGS:53,53 SSE_REGS:53,53 MMX_REGS:78,78 INT_SSE_REGS:58,58 ALL_REGS:1248,1248 MEM:21,21
  a247(r244,l9) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a248(r540,l9) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a249(r541,l9) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a250(r562,l9) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a251(r564,l9) costs: GENERAL_REGS:0,0 MEM:0,0
  a252(r226,l9) costs: GENERAL_REGS:0,0 MEM:0,0
  a253(r88,l7) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a254(r89,l7) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a255(r90,l7) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a256(r311,l7) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1110,1110 NO_REX_SSE_REGS:1110,1110 SSE_REGS:1110,1110 MMX_REGS:1560,1560 INT_SSE_REGS:1200,1200 ALL_REGS:24960,24960 MEM:390,390
  a257(r327,l7) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:240,240 NO_REX_SSE_REGS:240,240 SSE_REGS:240,240 MMX_REGS:390,390 INT_SSE_REGS:270,270 ALL_REGS:6240,6240 MEM:90,90
  a258(r562,l7) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a259(r564,l7) costs: GENERAL_REGS:0,0 MEM:0,0
  a260(r87,l4) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2610,44280 NO_REX_SSE_REGS:2610,44280 SSE_REGS:2610,44280 MMX_REGS:3510,63830 INT_SSE_REGS:2790,48190 ALL_REGS:56160,1021280 MEM:900,15730
  a261(r88,l4) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:3258,3258 NO_REX_SSE_REGS:3258,3258 SSE_REGS:3258,3258 MMX_REGS:4563,4563 INT_SSE_REGS:3519,3519 ALL_REGS:73008,73008 MEM:1134,1134
  a262(r89,l4) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a263(r313,l4) costs: GENERAL_REGS:0,0 MEM:720,720
  a264(r314,l4) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1890,1890 NO_REX_SSE_REGS:1890,1890 SSE_REGS:1890,1890 MMX_REGS:2340,2340 INT_SSE_REGS:1980,1980 ALL_REGS:37440,37440 MEM:720,720
  a265(r315,l4) costs: GENERAL_REGS:0,0 MEM:720,720
  a266(r316,l4) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1890,1890 NO_REX_SSE_REGS:1890,1890 SSE_REGS:1890,1890 MMX_REGS:2340,2340 INT_SSE_REGS:1980,1980 ALL_REGS:37440,37440 MEM:720,720
  a267(r320,l4) costs: GENERAL_REGS:0,0 MEM:594,594
  a268(r321,l4) costs: GENERAL_REGS:0,0 MEM:630,7270
  a269(r343,l4) costs: GENERAL_REGS:0,0 MEM:1764,1764
  a270(r562,l4) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a271(r564,l4) costs: GENERAL_REGS:0,0 MEM:720,720
  a272(r538,l4) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2538,2538 NO_REX_SSE_REGS:2538,2538 SSE_REGS:2538,2538 MMX_REGS:3393,3393 INT_SSE_REGS:2709,2709 ALL_REGS:54288,54288 MEM:1044,1044
  a273(r393,l4) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1890,1890 NO_REX_SSE_REGS:1890,1890 SSE_REGS:1890,1890 MMX_REGS:2340,2340 INT_SSE_REGS:1980,1980 ALL_REGS:37440,37440 MEM:720,720
  a274(r382,l4) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:720,21720 NO_REX_SSE_REGS:720,21720 SSE_REGS:720,21720 MMX_REGS:1170,27170 INT_SSE_REGS:810,22810 ALL_REGS:18720,434720 MEM:270,6270
  a275(r539,l4) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1170,18725 NO_REX_SSE_REGS:1170,18725 SSE_REGS:1170,18725 MMX_REGS:1170,26000 INT_SSE_REGS:1170,20180 ALL_REGS:18720,416000 MEM:360,6545
  a276(r376,l4) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1890,1890 NO_REX_SSE_REGS:1890,1890 SSE_REGS:1890,1890 MMX_REGS:2340,2340 INT_SSE_REGS:1980,1980 ALL_REGS:37440,37440 MEM:720,720
  a277(r87,l5) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:41670,41670 NO_REX_SSE_REGS:41670,41670 SSE_REGS:41670,41670 MMX_REGS:60320,60320 INT_SSE_REGS:45400,45400 ALL_REGS:965120,965120 MEM:14830,14830
  a278(r88,l5) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a279(r89,l5) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a280(r313,l5) costs: GENERAL_REGS:0,0 MEM:0,0
  a281(r314,l5) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a282(r315,l5) costs: GENERAL_REGS:0,0 MEM:0,0
  a283(r316,l5) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a284(r321,l5) costs: GENERAL_REGS:0,0 MEM:6640,6640
  a285(r539,l5) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:17555,17555 NO_REX_SSE_REGS:17555,17555 SSE_REGS:17555,17555 MMX_REGS:24830,24830 INT_SSE_REGS:19010,19010 ALL_REGS:397280,397280 MEM:6185,6185
  a286(r562,l5) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a287(r564,l5) costs: GENERAL_REGS:0,0 MEM:0,0
  a288(r382,l5) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:6000,6000
  a289(r388,l5) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:9555,9555 NO_REX_SSE_REGS:9555,9555 SSE_REGS:9555,9555 MMX_REGS:11830,11830 INT_SSE_REGS:10010,10010 ALL_REGS:189280,189280 MEM:3640,3640
  a290(r386,l5) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:19110,19110 NO_REX_SSE_REGS:19110,19110 SSE_REGS:19110,19110 MMX_REGS:23660,23660 INT_SSE_REGS:20020,20020 ALL_REGS:378560,378560 MEM:7280,7280
  a291(r384,l5) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a292(r383,l5) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:8000,8000
  a293(r380,l5) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21000,21000 NO_REX_SSE_REGS:21000,21000 SSE_REGS:21000,21000 MMX_REGS:26000,26000 INT_SSE_REGS:22000,22000 ALL_REGS:416000,416000 MEM:7000,7000
  a294(r378,l5) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:19110,19110 NO_REX_SSE_REGS:19110,19110 SSE_REGS:19110,19110 MMX_REGS:23660,23660 INT_SSE_REGS:20020,20020 ALL_REGS:378560,378560 MEM:7280,7280

   Insn 1325(l0): point = 0
   Insn 1322(l0): point = 3
   Insn 1644(l0): point = 6
   Insn 1321(l0): point = 9
   Insn 1320(l0): point = 11
   Insn 1319(l0): point = 13
   Insn 67(l0): point = 16
   Insn 1640(l0): point = 19
   Insn 68(l0): point = 21
   Insn 1638(l0): point = 24
   Insn 43(l0): point = 26
   Insn 1636(l0): point = 29
   Insn 42(l0): point = 31
   Insn 1221(l0): point = 34
   Insn 1220(l0): point = 36
   Insn 1107(l0): point = 39
   Insn 1106(l0): point = 41
   Insn 993(l0): point = 44
   Insn 992(l0): point = 46
   Insn 1653(l0): point = 49
   Insn 951(l0): point = 52
   Insn 950(l0): point = 54
   Insn 947(l0): point = 57
   Insn 1613(l0): point = 60
   Insn 836(l0): point = 63
   Insn 835(l0): point = 65
   Insn 1595(l0): point = 68
   Insn 675(l0): point = 70
   Insn 674(l0): point = 72
   Insn 1593(l0): point = 75
   Insn 66(l0): point = 77
   Insn 1591(l0): point = 80
   Insn 65(l0): point = 82
   Insn 1589(l0): point = 85
   Insn 64(l0): point = 87
   Insn 1587(l0): point = 90
   Insn 63(l0): point = 92
   Insn 1585(l0): point = 95
   Insn 62(l0): point = 97
   Insn 1583(l0): point = 100
   Insn 61(l0): point = 102
   Insn 1581(l0): point = 105
   Insn 60(l0): point = 107
   Insn 1579(l0): point = 110
   Insn 59(l0): point = 112
   Insn 1577(l0): point = 115
   Insn 58(l0): point = 117
   Insn 1575(l0): point = 120
   Insn 57(l0): point = 122
   Insn 1573(l0): point = 125
   Insn 56(l0): point = 127
   Insn 1571(l0): point = 130
   Insn 55(l0): point = 132
   Insn 1569(l0): point = 135
   Insn 54(l0): point = 137
   Insn 1567(l0): point = 140
   Insn 53(l0): point = 142
   Insn 1565(l0): point = 145
   Insn 52(l0): point = 147
   Insn 1563(l0): point = 150
   Insn 51(l0): point = 152
   Insn 1561(l0): point = 155
   Insn 50(l0): point = 157
   Insn 1559(l0): point = 160
   Insn 49(l0): point = 162
   Insn 1557(l0): point = 165
   Insn 48(l0): point = 167
   Insn 1555(l0): point = 170
   Insn 47(l0): point = 172
   Insn 1553(l0): point = 175
   Insn 46(l0): point = 177
   Insn 1551(l0): point = 180
   Insn 45(l0): point = 182
   Insn 1549(l0): point = 185
   Insn 581(l0): point = 187
   Insn 578(l0): point = 189
   Insn 577(l0): point = 191
   Insn 576(l0): point = 193
   Insn 575(l0): point = 195
   Insn 574(l0): point = 197
   Insn 570(l0): point = 200
   Insn 569(l0): point = 202
   Insn 38(l0): point = 204
   Insn 568(l0): point = 206
   Insn 566(l0): point = 208
   Insn 565(l0): point = 210
   Insn 564(l0): point = 212
   Insn 563(l0): point = 214
   Insn 562(l0): point = 216
   Insn 1547(l0): point = 219
   Insn 40(l0): point = 221
   Insn 557(l0): point = 223
   Insn 556(l0): point = 225
   Insn 555(l0): point = 227
   Insn 554(l0): point = 229
   Insn 553(l0): point = 231
   Insn 1545(l0): point = 234
   Insn 39(l0): point = 236
   Insn 547(l0): point = 238
   Insn 546(l0): point = 240
   Insn 544(l0): point = 242
   Insn 543(l0): point = 244
   Insn 542(l0): point = 246
   Insn 541(l0): point = 248
   Insn 540(l0): point = 250
   Insn 539(l0): point = 252
   Insn 538(l0): point = 254
   Insn 537(l0): point = 256
   Insn 1537(l0): point = 259
   Insn 35(l0): point = 261
   Insn 1535(l0): point = 264
   Insn 36(l0): point = 266
   Insn 1540(l0): point = 269
   Insn 514(l0): point = 272
   Insn 513(l0): point = 274
   Insn 1543(l0): point = 277
   Insn 531(l0): point = 280
   Insn 530(l0): point = 282
   Insn 491(l0): point = 285
   Insn 490(l0): point = 287
   Insn 1533(l0): point = 290
   Insn 37(l0): point = 292
   Insn 510(l0): point = 295
   Insn 509(l0): point = 297
   Insn 507(l0): point = 299
   Insn 505(l0): point = 301
   Insn 504(l0): point = 303
   Insn 503(l0): point = 305
   Insn 502(l0): point = 307
   Insn 501(l0): point = 309
   Insn 528(l0): point = 312
   Insn 527(l0): point = 314
   Insn 526(l0): point = 316
   Insn 524(l0): point = 318
   Insn 523(l0): point = 320
   Insn 522(l0): point = 322
   Insn 521(l0): point = 324
   Insn 520(l0): point = 326
   Insn 484(l0): point = 329
   Insn 483(l0): point = 331
   Insn 482(l0): point = 333
   Insn 480(l0): point = 335
   Insn 479(l0): point = 337
   Insn 478(l0): point = 339
   Insn 477(l0): point = 341
   Insn 476(l0): point = 343
   Insn 1531(l0): point = 346
   Insn 471(l0): point = 348
   Insn 468(l0): point = 351
   Insn 467(l0): point = 353
   Insn 466(l0): point = 355
   Insn 465(l0): point = 357
   Insn 464(l0): point = 359
   Insn 463(l0): point = 361
   Insn 462(l0): point = 363
   Insn 461(l0): point = 365
   Insn 460(l0): point = 367
   Insn 458(l0): point = 370
   Insn 457(l0): point = 372
   Insn 456(l0): point = 374
   Insn 455(l0): point = 376
   Insn 454(l0): point = 378
   Insn 453(l0): point = 380
   Insn 1529(l0): point = 383
   Insn 1511(l0): point = 386
   Insn 44(l0): point = 388
   Insn 1501(l0): point = 391
   Insn 1438(l0): point = 393
   Insn 148(l0): point = 395
   Insn 145(l0): point = 397
   Insn 144(l0): point = 399
   Insn 142(l0): point = 401
   Insn 139(l0): point = 404
   Insn 138(l0): point = 406
   Insn 137(l0): point = 408
   Insn 136(l0): point = 410
   Insn 135(l0): point = 412
   Insn 134(l0): point = 414
   Insn 133(l0): point = 416
   Insn 132(l0): point = 418
   Insn 131(l0): point = 420
   Insn 130(l0): point = 422
   Insn 127(l0): point = 425
   Insn 126(l0): point = 427
   Insn 1661(l0): point = 429
   Insn 125(l0): point = 431
   Insn 122(l0): point = 433
   Insn 121(l0): point = 435
   Insn 120(l0): point = 437
   Insn 119(l0): point = 439
   Insn 118(l0): point = 441
   Insn 117(l0): point = 443
   Insn 1662(l0): point = 445
   Insn 116(l0): point = 447
   Insn 113(l0): point = 449
   Insn 110(l0): point = 452
   Insn 109(l0): point = 454
   Insn 108(l0): point = 456
   Insn 107(l0): point = 458
   Insn 1663(l0): point = 460
   Insn 103(l0): point = 463
   Insn 102(l0): point = 465
   Insn 101(l0): point = 467
   Insn 98(l0): point = 470
   Insn 97(l0): point = 472
   Insn 95(l0): point = 475
   Insn 94(l0): point = 477
   Insn 91(l0): point = 480
   Insn 90(l0): point = 482
   Insn 88(l0): point = 485
   Insn 87(l0): point = 487
   Insn 84(l0): point = 490
   Insn 82(l0): point = 493
   Insn 81(l0): point = 495
   Insn 80(l0): point = 497
   Insn 1499(l0): point = 500
   Insn 75(l0): point = 502
   Insn 74(l0): point = 504
   Insn 72(l0): point = 507
   Insn 71(l0): point = 509
   Insn 3(l0): point = 511
   Insn 970(l1): point = 514
   Insn 17(l1): point = 516
   Insn 16(l1): point = 518
   Insn 161(l1): point = 521
   Insn 160(l1): point = 523
   Insn 1525(l1): point = 526
   Insn 15(l1): point = 528
   Insn 14(l1): point = 530
   Insn 13(l1): point = 532
   Insn 434(l1): point = 534
   Insn 433(l1): point = 536
   Insn 432(l1): point = 538
   Insn 431(l1): point = 540
   Insn 430(l1): point = 542
   Insn 429(l1): point = 544
   Insn 428(l1): point = 546
   Insn 427(l1): point = 548
   Insn 426(l1): point = 550
   Insn 425(l1): point = 552
   Insn 424(l1): point = 554
   Insn 423(l1): point = 556
   Insn 1519(l1): point = 559
   Insn 408(l1): point = 561
   Insn 405(l1): point = 563
   Insn 404(l1): point = 565
   Insn 402(l1): point = 567
   Insn 401(l1): point = 569
   Insn 1517(l1): point = 572
   Insn 6(l1): point = 574
   Insn 5(l1): point = 576
   Insn 4(l1): point = 578
   Insn 395(l1): point = 580
   Insn 1521(l1): point = 583
   Insn 9(l1): point = 585
   Insn 8(l1): point = 587
   Insn 7(l1): point = 589
   Insn 413(l1): point = 591
   Insn 1597(l1): point = 594
   Insn 688(l1): point = 596
   Insn 685(l1): point = 598
   Insn 684(l1): point = 600
   Insn 682(l1): point = 602
   Insn 681(l1): point = 604
   Insn 680(l1): point = 606
   Insn 1523(l1): point = 609
   Insn 12(l1): point = 611
   Insn 11(l1): point = 613
   Insn 10(l1): point = 615
   Insn 418(l1): point = 617
   Insn 1599(l1): point = 620
   Insn 704(l1): point = 622
   Insn 701(l1): point = 624
   Insn 700(l1): point = 626
   Insn 698(l1): point = 628
   Insn 697(l1): point = 630
   Insn 696(l1): point = 632
   Insn 695(l1): point = 634
   Insn 694(l1): point = 636
   Insn 693(l1): point = 638
   Insn 158(l1): point = 641
   Insn 155(l1): point = 643
   Insn 154(l1): point = 645
   Insn 152(l1): point = 647
   Insn 446(l1): point = 650
   Insn 445(l1): point = 652
   Insn 444(l1): point = 654
   Insn 442(l1): point = 657
   Insn 441(l1): point = 659
   Insn 440(l1): point = 661
   Insn 439(l1): point = 663
   Insn 1503(l2): point = 666
   Insn 18(l2): point = 668
   Insn 167(l2): point = 670
   Insn 1513(l2): point = 673
   Insn 375(l2): point = 675
   Insn 374(l2): point = 677
   Insn 373(l2): point = 679
   Insn 370(l2): point = 681
   Insn 369(l2): point = 683
   Insn 367(l2): point = 685
   Insn 366(l2): point = 687
   Insn 274(l3): point = 690
   Insn 269(l3): point = 693
   Insn 267(l3): point = 696
   Insn 266(l3): point = 698
   Insn 263(l3): point = 701
   Insn 261(l3): point = 704
   Insn 260(l3): point = 706
   Insn 20(l3): point = 709
   Insn 19(l3): point = 711
   Insn 184(l3): point = 713
   Insn 183(l3): point = 715
   Insn 180(l3): point = 718
   Insn 177(l3): point = 720
   Insn 176(l3): point = 722
   Insn 174(l3): point = 724
   Insn 1603(l3): point = 727
   Insn 819(l3): point = 729
   Insn 818(l3): point = 731
   Insn 1632(l3): point = 734
   Insn 1180(l3): point = 736
   Insn 1177(l3): point = 738
   Insn 1176(l3): point = 740
   Insn 1175(l3): point = 742
   Insn 1174(l3): point = 744
   Insn 1173(l3): point = 746
   Insn 319(l6): point = 749
   Insn 318(l6): point = 751
   Insn 328(l6): point = 753
   Insn 326(l6): point = 755
   Insn 317(l6): point = 757
   Insn 314(l6): point = 760
   Insn 313(l6): point = 762
   Insn 312(l6): point = 764
   Insn 309(l6): point = 767
   Insn 308(l6): point = 769
   Insn 307(l6): point = 771
   Insn 306(l6): point = 773
   Insn 305(l6): point = 775
   Insn 304(l6): point = 777
   Insn 303(l6): point = 779
   Insn 302(l6): point = 781
   Insn 300(l6): point = 783
   Insn 294(l6): point = 786
   Insn 293(l6): point = 788
   Insn 288(l6): point = 790
   Insn 286(l6): point = 793
   Insn 285(l6): point = 795
   Insn 283(l6): point = 797
   Insn 808(l6): point = 800
   Insn 807(l6): point = 802
   Insn 1235(l6): point = 804
   Insn 803(l6): point = 806
   Insn 802(l6): point = 808
   Insn 801(l6): point = 810
   Insn 774(l6): point = 813
   Insn 773(l6): point = 815
   Insn 772(l6): point = 817
   Insn 771(l6): point = 819
   Insn 770(l6): point = 821
   Insn 769(l6): point = 823
   Insn 757(l6): point = 826
   Insn 756(l6): point = 828
   Insn 755(l6): point = 830
   Insn 754(l6): point = 832
   Insn 748(l6): point = 834
   Insn 747(l6): point = 836
   Insn 746(l6): point = 838
   Insn 745(l6): point = 840
   Insn 743(l6): point = 842
   Insn 760(l6): point = 845
   Insn 759(l6): point = 847
   Insn 1515(l6): point = 850
   Insn 389(l6): point = 852
   Insn 388(l6): point = 854
   Insn 383(l6): point = 856
   Insn 382(l6): point = 858
   Insn 381(l6): point = 860
   Insn 816(l6): point = 863
   Insn 815(l6): point = 865
   Insn 813(l6): point = 867
   Insn 1634(l6): point = 870
   Insn 1215(l6): point = 872
   Insn 1214(l6): point = 874
   Insn 1211(l6): point = 876
   Insn 1208(l6): point = 878
   Insn 1207(l6): point = 880
   Insn 1206(l6): point = 882
   Insn 1605(l6): point = 885
   Insn 34(l6): point = 887
   Insn 1628(l6): point = 890
   Insn 33(l6): point = 892
   Insn 1142(l6): point = 894
   Insn 1137(l6): point = 897
   Insn 1136(l6): point = 899
   Insn 796(l13): point = 902
   Insn 795(l13): point = 904
   Insn 794(l13): point = 906
   Insn 793(l13): point = 908
   Insn 792(l13): point = 910
   Insn 791(l13): point = 912
   Insn 787(l13): point = 914
   Insn 782(l13): point = 916
   Insn 1004(l8): point = 919
   Insn 1003(l8): point = 921
   Insn 1002(l8): point = 923
   Insn 27(l8): point = 926
   Insn 974(l8): point = 929
   Insn 973(l8): point = 931
   Insn 971(l8): point = 933
   Insn 969(l8): point = 935
   Insn 897(l8): point = 938
   Insn 896(l8): point = 940
   Insn 892(l8): point = 942
   Insn 25(l8): point = 945
   Insn 351(l8): point = 948
   Insn 350(l8): point = 950
   Insn 1630(l8): point = 953
   Insn 1167(l8): point = 955
   Insn 1166(l8): point = 957
   Insn 1165(l8): point = 959
   Insn 1164(l8): point = 961
   Insn 1163(l8): point = 963
   Insn 1162(l8): point = 965
   Insn 1161(l8): point = 967
   Insn 32(l8): point = 970
   Insn 845(l8): point = 973
   Insn 844(l8): point = 975
   Insn 843(l8): point = 977
   Insn 1135(l8): point = 980
   Insn 1134(l8): point = 982
   Insn 1121(l8): point = 984
   Insn 1120(l8): point = 986
   Insn 1119(l8): point = 988
   Insn 1118(l8): point = 990
   Insn 1117(l8): point = 992
   Insn 1116(l8): point = 994
   Insn 1115(l8): point = 996
   Insn 1114(l8): point = 998
   Insn 1111(l8): point = 1001
   Insn 1104(l8): point = 1004
   Insn 1103(l8): point = 1006
   Insn 1102(l8): point = 1008
   Insn 1101(l8): point = 1010
   Insn 1100(l8): point = 1012
   Insn 1097(l8): point = 1014
   Insn 1096(l8): point = 1016
   Insn 1095(l8): point = 1018
   Insn 1094(l8): point = 1020
   Insn 1093(l8): point = 1022
   Insn 1092(l8): point = 1024
   Insn 1091(l8): point = 1026
   Insn 1090(l8): point = 1028
   Insn 1085(l8): point = 1031
   Insn 1084(l8): point = 1033
   Insn 1083(l8): point = 1035
   Insn 1081(l8): point = 1037
   Insn 1051(l8): point = 1040
   Insn 1050(l8): point = 1042
   Insn 29(l8): point = 1044
   Insn 1049(l8): point = 1046
   Insn 1048(l8): point = 1048
   Insn 1619(l8): point = 1051
   Insn 997(l8): point = 1053
   Insn 996(l8): point = 1055
   Insn 1647(l8): point = 1058
   Insn 1655(l8): point = 1061
   Insn 28(l8): point = 1063
   Insn 1295(l8): point = 1065
   Insn 1293(l8): point = 1067
   Insn 1291(l8): point = 1069
   Insn 1288(l8): point = 1071
   Insn 1287(l8): point = 1073
   Insn 1285(l8): point = 1075
   Insn 1617(l8): point = 1078
   Insn 1657(l8): point = 1081
   Insn 1314(l8): point = 1083
   Insn 1313(l8): point = 1085
   Insn 1311(l8): point = 1087
   Insn 1309(l8): point = 1090
   Insn 1308(l8): point = 1092
   Insn 1307(l8): point = 1094
   Insn 1306(l8): point = 1096
   Insn 1305(l8): point = 1098
   Insn 1649(l8): point = 1101
   Insn 1268(l8): point = 1103
   Insn 1267(l8): point = 1105
   Insn 1265(l8): point = 1107
   Insn 1621(l8): point = 1110
   Insn 1033(l8): point = 1112
   Insn 31(l8): point = 1115
   Insn 1077(l8): point = 1117
   Insn 1076(l8): point = 1119
   Insn 1075(l8): point = 1121
   Insn 1074(l8): point = 1123
   Insn 1625(l8): point = 1126
   Insn 30(l8): point = 1128
   Insn 1065(l8): point = 1130
   Insn 1064(l8): point = 1132
   Insn 1659(l8): point = 1134
   Insn 1063(l8): point = 1136
   Insn 1060(l8): point = 1138
   Insn 1059(l8): point = 1140
   Insn 1058(l8): point = 1142
   Insn 1055(l8): point = 1145
   Insn 1054(l8): point = 1147
   Insn 1607(l8): point = 1150
   Insn 886(l8): point = 1152
   Insn 885(l8): point = 1154
   Insn 883(l8): point = 1157
   Insn 882(l8): point = 1159
   Insn 879(l8): point = 1162
   Insn 859(l8): point = 1165
   Insn 858(l8): point = 1167
   Insn 851(l8): point = 1169
   Insn 841(l8): point = 1172
   Insn 840(l8): point = 1174
   Insn 833(l8): point = 1177
   Insn 832(l8): point = 1179
   Insn 831(l8): point = 1181
   Insn 828(l8): point = 1183
   Insn 741(l8): point = 1186
   Insn 740(l8): point = 1188
   Insn 739(l8): point = 1190
   Insn 738(l8): point = 1192
   Insn 737(l8): point = 1194
   Insn 736(l8): point = 1196
   Insn 733(l8): point = 1199
   Insn 732(l8): point = 1201
   Insn 731(l8): point = 1203
   Insn 730(l8): point = 1205
   Insn 729(l8): point = 1207
   Insn 728(l8): point = 1209
   Insn 1601(l8): point = 1212
   Insn 723(l8): point = 1214
   Insn 721(l8): point = 1217
   Insn 720(l8): point = 1219
   Insn 719(l8): point = 1221
   Insn 718(l8): point = 1223
   Insn 717(l8): point = 1225
   Insn 715(l8): point = 1227
   Insn 714(l8): point = 1229
   Insn 713(l8): point = 1231
   Insn 711(l8): point = 1233
   Insn 710(l8): point = 1235
   Insn 355(l8): point = 1238
   Insn 352(l8): point = 1240
   Insn 1025(l11): point = 1243
   Insn 1024(l11): point = 1245
   Insn 1023(l11): point = 1247
   Insn 1022(l11): point = 1249
   Insn 1017(l11): point = 1251
   Insn 1016(l11): point = 1253
   Insn 1015(l11): point = 1255
   Insn 1014(l11): point = 1257
   Insn 1013(l11): point = 1259
   Insn 1012(l11): point = 1261
   Insn 1011(l11): point = 1263
   Insn 1623(l11): point = 1266
   Insn 1042(l11): point = 1268
   Insn 1660(l11): point = 1270
   Insn 1041(l11): point = 1272
   Insn 1039(l11): point = 1274
   Insn 1038(l11): point = 1276
   Insn 1037(l11): point = 1278
   Insn 1275(l11): point = 1281
   Insn 1274(l11): point = 1283
   Insn 1031(l11): point = 1286
   Insn 1030(l11): point = 1288
   Insn 1029(l11): point = 1290
   Insn 1028(l11): point = 1292
   Insn 1027(l11): point = 1294
   Insn 984(l12): point = 1297
   Insn 983(l12): point = 1299
   Insn 981(l12): point = 1301
   Insn 980(l12): point = 1303
   Insn 979(l12): point = 1305
   Insn 1258(l12): point = 1308
   Insn 1257(l12): point = 1310
   Insn 1252(l12): point = 1312
   Insn 1251(l12): point = 1314
   Insn 1249(l12): point = 1316
   Insn 1247(l12): point = 1318
   Insn 1246(l12): point = 1320
   Insn 1245(l12): point = 1322
   Insn 1243(l12): point = 1324
   Insn 987(l12): point = 1327
   Insn 986(l12): point = 1329
   Insn 912(l10): point = 1332
   Insn 911(l10): point = 1334
   Insn 908(l10): point = 1336
   Insn 907(l10): point = 1338
   Insn 966(l10): point = 1341
   Insn 965(l10): point = 1343
   Insn 960(l10): point = 1345
   Insn 958(l10): point = 1347
   Insn 957(l10): point = 1349
   Insn 956(l10): point = 1351
   Insn 955(l10): point = 1353
   Insn 941(l10): point = 1356
   Insn 940(l10): point = 1358
   Insn 939(l10): point = 1360
   Insn 936(l10): point = 1362
   Insn 935(l10): point = 1364
   Insn 934(l10): point = 1366
   Insn 933(l10): point = 1368
   Insn 932(l10): point = 1370
   Insn 26(l10): point = 1373
   Insn 927(l10): point = 1375
   Insn 1609(l10): point = 1378
   Insn 922(l10): point = 1380
   Insn 921(l10): point = 1382
   Insn 920(l10): point = 1384
   Insn 918(l10): point = 1387
   Insn 917(l10): point = 1389
   Insn 914(l10): point = 1391
   Insn 877(l9): point = 1394
   Insn 876(l9): point = 1396
   Insn 870(l9): point = 1398
   Insn 869(l9): point = 1400
   Insn 868(l9): point = 1402
   Insn 332(l7): point = 1405
   Insn 331(l7): point = 1407
   Insn 342(l7): point = 1410
   Insn 341(l7): point = 1412
   Insn 340(l7): point = 1414
   Insn 334(l7): point = 1417
   Insn 1505(l4): point = 1420
   Insn 1389(l4): point = 1422
   Insn 1442(l4): point = 1424
   Insn 1440(l4): point = 1426
   Insn 1439(l4): point = 1428
   Insn 1437(l4): point = 1430
   Insn 1436(l4): point = 1432
   Insn 1435(l4): point = 1434
   Insn 1434(l4): point = 1436
   Insn 1433(l4): point = 1438
   Insn 191(l4): point = 1440
   Insn 1509(l4): point = 1443
   Insn 254(l4): point = 1445
   Insn 251(l4): point = 1447
   Insn 249(l4): point = 1450
   Insn 248(l4): point = 1452
   Insn 247(l4): point = 1454
   Insn 246(l4): point = 1456
   Insn 243(l4): point = 1458
   Insn 241(l4): point = 1460
   Insn 240(l4): point = 1462
   Insn 204(l5): point = 1465
   Insn 203(l5): point = 1467
   Insn 225(l5): point = 1470
   Insn 224(l5): point = 1472
   Insn 221(l5): point = 1474
   Insn 219(l5): point = 1476
   Insn 216(l5): point = 1479
   Insn 215(l5): point = 1481
   Insn 214(l5): point = 1483
   Insn 213(l5): point = 1485
   Insn 212(l5): point = 1487
   Insn 210(l5): point = 1489
   Insn 1507(l5): point = 1492
   Insn 1390(l5): point = 1494
   Insn 229(l5): point = 1496
 a0(r92): [386..388] [346..348] [290..292] [264..266] [259..261] [234..236] [219..221] [185..204] [180..182] [175..177] [170..172] [165..167] [160..162] [155..157] [150..152] [145..147] [140..142] [135..137] [130..132] [125..127] [120..122] [115..117] [110..112] [105..107] [100..102] [95..97] [90..92] [85..87] [80..82] [75..77] [68..70] [29..31] [24..26] [19..21] [14..16]
 a1(r245): [58..59]
 a2(r436): [71..72]
 a3(r176): [188..216]
 a4(r433): [188..208]
 a5(r434): [194..195]
 a6(r435): [196..197]
 a7(r432): [213..214]
 a8(r431): [239..240]
 a9(r428): [247..252]
 a10(r427): [251..256]
 a11(r429): [253..254]
 a12(r204): [312..316] [283..284]
 a13(r203): [295..299] [275..276]
 a14(r202): [329..333] [288..289]
 a15(r198): [370..376] [349..361]
 a16(r200): [352..357]
 a17(r423): [354..355]
 a18(r564): [391..393]
 a19(r321): [391..395]
 a20(r363): [396..399]
 a21(r343): [391..397]
 a22(r341): [391..401]
 a23(r318): [500..504] [391..418]
 a24(r320): [500..502] [391..406]
 a25(r361): [409..410]
 a26(r360): [411..412]
 a27(r102): [452..458] [413..427]
 a28(r103): [452..456] [419..425]
 a29(r359): [421..422]
 a30(r358): [428..431]
 a31(r357): [428..429]
 a32(r107): [434..443]
 a33(r109): [434..435]
 a34(r355): [444..447]
 a35(r354): [444..445]
 a36(r99): [459..467]
 a37(r352): [459..460]
 a38(r350): [471..472]
 a39(r349): [481..482]
 a40(r318): [517..523]
 a41(r320): [514..521]
 a42(r321): [641..641] [620..622] [609..615] [594..596] [583..589] [572..578] [559..561] [514..532]
 a43(r341): [641..647] [620..628] [609..611] [594..602] [583..585] [572..574] [559..567] [519..528]
 a44(r343): [641..643] [620..624] [609..613] [594..598] [583..587] [572..576] [559..563] [514..530]
 a45(r564): [514..665]
 a46(r245):
 a47(r442): [623..626]
 a48(r438): [597..600]
 a49(r168): [653..661]
 a50(r422): [653..654]
 a51(r137): [539..540]
 a52(r136): [545..550]
 a53(r419): [562..565]
 a54(r562): [514..514]
 a55(r88): [514..516]
 a56(r87): [514..518]
 a57(r367): [642..645]
 a58(r87): [666..675]
 a59(r88): [666..677]
 a60(r320): [666..687]
 a61(r321): [666..679]
 a62(r343): [666..681]
 a63(r562): [666..689]
 a64(r564): [666..689]
 a65(r245):
 a66(r342): [676..685]
 a67(r411): [680..683]
 a68(r89): [666..668]
 a69(r87): [709..738]
 a70(r88): [690..744]
 a71(r89): [690..736]
 a72(r320): [709..724]
 a73(r321): [709..718]
 a74(r343): [709..720]
 a75(r562): [690..748]
 a76(r564): [690..748]
 a77(r245):
 a78(r514): [745..746]
 a79(r306): [745..748]
 a80(r147): [747..748]
 a81(r186): [690..690]
 a82(r538): [691..708]
 a83(r314): [694..715]
 a84(r313): [699..711]
 a85(r316): [702..713]
 a86(r315): [707..709]
 a87(r371): [719..722]
 a88(r88): [890..892] [859..887] [845..856] [793..840] [749..790]
 a89(r89): [870..876] [850..867] [749..804]
 a90(r186): [863..872] [845..852] [798..830]
 a91(r562): [749..901]
 a92(r564): [749..901]
 a93(r147): [897..901] [843..844]
 a94(r306): [897..901]
 a95(r245):
 a96(r87): [863..869] [800..806]
 a97(r516): [873..874]
 a98(r160): [875..878]
 a99(r289): [893..901]
 a100(r506): [893..894]
 a101(r347): [895..901]
 a102(r308): [900..901]
 a103(r158): [888..889]
 a104(r474): [807..808]
 a105(r473): [809..810]
 a106(r542): [811..823]
 a107(r461): [816..817]
 a108(r193): [845..849] [816..834]
 a109(r460): [818..819]
 a110(r459): [820..821]
 a111(r543): [845..849] [813..832]
 a112(r451): [841..842]
 a113(r416): [853..854]
 a114(r414): [859..860]
 a115(r307): [752..757]
 a116(r327): [749..753]
 a117(r311): [749..755]
 a118(r90): [793..797] [749..786]
 a119(r406): [763..764]
 a120(r404): [776..777]
 a121(r403): [780..781]
 a122(r401): [787..788]
 a123(r88): [902..918]
 a124(r186): [902..918]
 a125(r543): [917..918] [902..914]
 a126(r562): [902..918]
 a127(r564): [902..918]
 a128(r542): [902..912]
 a129(r193): [905..916]
 a130(r470): [905..906]
 a131(r469): [907..908]
 a132(r468): [909..910]
 a133(r88): [919..1242]
 a134(r89): [919..1242]
 a135(r90): [1241..1242] [948..955]
 a136(r562): [919..1242]
 a137(r564): [919..1242]
 a138(r147): [980..1233] [919..947]
 a139(r289): [980..1035]
 a140(r306): [980..986] [968..970]
 a141(r308): [1126..1128] [1115..1115] [980..1044]
 a142(r347): [1126..1132] [1115..1123] [1101..1103] [1081..1083] [980..1071]
 a143(r245): [1204..1221] [1165..1201] [1153..1162] [929..944] [919..925]
 a144(r158): [1172..1192] [973..979]
 a145(r541): [1145..1225] [1124..1125] [1101..1105] [1081..1085] [1040..1073] [945..947]
 a146(r540): [1145..1227] [1124..1125] [1101..1107] [1081..1087] [1040..1075] [945..947]
 a147(r212): [1054..1100] [926..926]
 a148(r224): [1038..1167] [919..947]
 a149(r268): [1093..1094]
 a150(r533): [1066..1067]
 a151(r531): [1068..1069]
 a152(r275): [1126..1138] [1115..1117] [1101..1112] [1029..1055]
 a153(r513): [956..957]
 a154(r512): [958..959]
 a155(r508): [960..963]
 a156(r511): [960..961]
 a157(r509): [964..965]
 a158(r213): [1165..1183] [971..979] [945..947]
 a159(r505): [987..988]
 a160(r504): [991..992]
 a161(r503): [993..994]
 a162(r299): [1004..1008] [997..1001]
 a163(r287): [999..1037]
 a164(r280): [1126..1130] [1115..1121] [1013..1048] [1002..1003]
 a165(r502): [1009..1010]
 a166(r297): [1013..1014]
 a167(r501): [1019..1022]
 a168(r500): [1021..1024]
 a169(r499): [1025..1026]
 a170(r498): [1027..1028]
 a171(r494): [1133..1136]
 a172(r493): [1133..1134]
 a173(r270): [919..921]
 a174(r309): [919..933]
 a175(r230): [934..940]
 a176(r479): [941..942]
 a177(r152): [1157..1223] [938..947]
 a178(r244): [1157..1190] [978..979] [938..947]
 a179(r227): [945..945]
 a180(r156): [1165..1196] [945..947]
 a181(r478): [1168..1169]
 a182(r477): [976..977]
 a183(r476): [1180..1181]
 a184(r157): [1182..1194]
 a185(r154): [1212..1214] [1195..1209]
 a186(r450): [1204..1205]
 a187(r446): [1230..1231]
 a188(r445): [1234..1235]
 a189(r407): [1239..1240]
 a190(r88): [1243..1296]
 a191(r89): [1243..1296]
 a192(r147): [1243..1296]
 a193(r224): [1243..1296]
 a194(r245): [1264..1268]
 a195(r270): [1243..1296]
 a196(r309): [1243..1296]
 a197(r562): [1243..1296]
 a198(r564): [1243..1296]
 a199(r275): [1243..1249]
 a200(r491): [1269..1272]
 a201(r490): [1269..1270]
 a202(r277): [1289..1290]
 a203(r274): [1246..1251]
 a204(r488): [1256..1263]
 a205(r88): [1297..1331]
 a206(r89): [1297..1331]
 a207(r147): [1297..1331]
 a208(r212): [1297..1331]
 a209(r224): [1297..1331]
 a210(r309): [1297..1331]
 a211(r562): [1297..1331]
 a212(r564): [1297..1331]
 a213(r347): [1308..1320]
 a214(r540): [1308..1324]
 a215(r541): [1308..1322]
 a216(r523): [1315..1316]
 a217(r251): [1315..1331] [1297..1301]
 a218(r521): [1317..1318]
 a219(r88): [1332..1393]
 a220(r89): [1332..1393]
 a221(r147): [1332..1393]
 a222(r152): [1332..1393]
 a223(r224): [1332..1393]
 a224(r244): [1337..1351]
 a225(r245): [1361..1393] [1332..1347]
 a226(r562): [1332..1393]
 a227(r564): [1332..1393]
 a228(r230): [1341..1343]
 a229(r485): [1344..1345]
 a230(r484): [1352..1353]
 a231(r242): [1352..1362]
 a232(r481): [1354..1393] [1332..1336]
 a233(r232): [1367..1393] [1332..1338]
 a234(r483): [1369..1370]
 a235(r240): [1378..1382] [1371..1373]
 a236(r238): [1387..1389] [1374..1377]
 a237(r237): [1383..1391]
 a238(r482): [1383..1384]
 a239(r88): [1394..1404]
 a240(r89): [1394..1404]
 a241(r147): [1394..1404]
 a242(r152): [1394..1404]
 a243(r156): [1394..1404]
 a244(r213): [1394..1404]
 a245(r224): [1394..1404]
 a246(r227): [1394..1404]
 a247(r244): [1394..1404]
 a248(r540): [1394..1404]
 a249(r541): [1394..1404]
 a250(r562): [1394..1404]
 a251(r564): [1394..1404]
 a252(r226): [1401..1402]
 a253(r88): [1405..1419]
 a254(r89): [1405..1419]
 a255(r90): [1405..1419]
 a256(r311): [1405..1419]
 a257(r327): [1405..1419]
 a258(r562): [1405..1419]
 a259(r564): [1405..1419]
 a260(r87): [1420..1460]
 a261(r88): [1420..1464]
 a262(r89): [1420..1464]
 a263(r313): [1420..1464]
 a264(r314): [1420..1464]
 a265(r315): [1420..1464]
 a266(r316): [1420..1464]
 a267(r320): [1441..1447]
 a268(r321): [1420..1454]
 a269(r343): [1427..1445]
 a270(r562): [1420..1464]
 a271(r564): [1420..1464]
 a272(r538): [1446..1456]
 a273(r393): [1461..1462]
 a274(r382): [1463..1464]
 a275(r539): [1420..1422]
 a276(r376): [1423..1440]
 a277(r87): [1477..1498] [1465..1474]
 a278(r88): [1465..1498]
 a279(r89): [1465..1498]
 a280(r313): [1465..1498]
 a281(r314): [1465..1498]
 a282(r315): [1465..1498]
 a283(r316): [1465..1498]
 a284(r321): [1490..1491] [1465..1465]
 a285(r539): [1497..1498] [1465..1494]
 a286(r562): [1465..1498]
 a287(r564): [1465..1498]
 a288(r382): [1479..1487]
 a289(r388): [1495..1496]
 a290(r386): [1475..1476]
 a291(r384): [1482..1483]
 a292(r383): [1484..1485]
 a293(r380): [1488..1489]
 a294(r378): [1466..1467]
      Moving ranges of a287r564 to a271r564:  [1465..1498]
      Moving ranges of a271r564 to a76r564:  [1420..1498]
      Moving ranges of a259r564 to a92r564:  [1405..1419]
      Moving ranges of a251r564 to a137r564:  [1394..1404]
      Moving ranges of a227r564 to a137r564:  [1332..1393]
      Moving ranges of a212r564 to a137r564:  [1297..1331]
      Moving ranges of a198r564 to a137r564:  [1243..1296]
      Moving ranges of a137r564 to a92r564:  [919..1404]
      Moving ranges of a127r564 to a92r564:  [902..918]
      Moving ranges of a92r564 to a76r564:  [749..1419]
      Moving ranges of a76r564 to a64r564:  [690..1498]
      Moving ranges of a64r564 to a45r564:  [666..1498]
      Moving ranges of a45r564 to a18r564:  [514..1498]
      Moving ranges of a286r562 to a270r562:  [1465..1498]
      Moving ranges of a270r562 to a75r562:  [1420..1498]
      Moving ranges of a258r562 to a91r562:  [1405..1419]
      Moving ranges of a250r562 to a136r562:  [1394..1404]
      Moving ranges of a226r562 to a136r562:  [1332..1393]
      Moving ranges of a211r562 to a136r562:  [1297..1331]
      Moving ranges of a197r562 to a136r562:  [1243..1296]
      Moving ranges of a136r562 to a91r562:  [919..1404]
      Moving ranges of a126r562 to a91r562:  [902..918]
      Moving ranges of a91r562 to a75r562:  [749..1419]
      Moving ranges of a75r562 to a63r562:  [690..1498]
      Moving ranges of a63r562 to a54r562:  [666..1498]
 Rebuilding regno allocno list for 562
      Moving ranges of a125r543 to a111r543:  [917..918] [902..914]
 Rebuilding regno allocno list for 543
      Moving ranges of a128r542 to a106r542:  [902..912]
 Rebuilding regno allocno list for 542
      Moving ranges of a249r541 to a145r541:  [1394..1404]
      Moving ranges of a215r541 to a145r541:  [1308..1322]
 Rebuilding regno allocno list for 541
      Moving ranges of a248r540 to a146r540:  [1394..1404]
      Moving ranges of a214r540 to a146r540:  [1308..1324]
 Rebuilding regno allocno list for 540
      Moving ranges of a285r539 to a275r539:  [1497..1498] [1465..1494]
 Rebuilding regno allocno list for 539
      Moving ranges of a272r538 to a82r538:  [1446..1456]
 Rebuilding regno allocno list for 538
 Rebuilding regno allocno list for 533
 Rebuilding regno allocno list for 531
 Rebuilding regno allocno list for 523
 Rebuilding regno allocno list for 521
 Rebuilding regno allocno list for 516
 Rebuilding regno allocno list for 514
 Rebuilding regno allocno list for 513
 Rebuilding regno allocno list for 512
 Rebuilding regno allocno list for 511
 Rebuilding regno allocno list for 509
 Rebuilding regno allocno list for 508
 Rebuilding regno allocno list for 506
 Rebuilding regno allocno list for 505
 Rebuilding regno allocno list for 504
 Rebuilding regno allocno list for 503
 Rebuilding regno allocno list for 502
 Rebuilding regno allocno list for 501
 Rebuilding regno allocno list for 500
 Rebuilding regno allocno list for 499
 Rebuilding regno allocno list for 498
 Rebuilding regno allocno list for 494
 Rebuilding regno allocno list for 493
 Rebuilding regno allocno list for 491
 Rebuilding regno allocno list for 490
 Rebuilding regno allocno list for 488
 Rebuilding regno allocno list for 485
 Rebuilding regno allocno list for 484
 Rebuilding regno allocno list for 483
 Rebuilding regno allocno list for 482
 Rebuilding regno allocno list for 481
 Rebuilding regno allocno list for 479
 Rebuilding regno allocno list for 478
 Rebuilding regno allocno list for 477
 Rebuilding regno allocno list for 476
 Rebuilding regno allocno list for 474
 Rebuilding regno allocno list for 473
 Rebuilding regno allocno list for 470
 Rebuilding regno allocno list for 469
 Rebuilding regno allocno list for 468
 Rebuilding regno allocno list for 461
 Rebuilding regno allocno list for 460
 Rebuilding regno allocno list for 459
 Rebuilding regno allocno list for 451
 Rebuilding regno allocno list for 450
 Rebuilding regno allocno list for 446
 Rebuilding regno allocno list for 445
 Rebuilding regno allocno list for 442
 Rebuilding regno allocno list for 438
 Rebuilding regno allocno list for 422
 Rebuilding regno allocno list for 419
 Rebuilding regno allocno list for 416
 Rebuilding regno allocno list for 414
 Rebuilding regno allocno list for 411
 Rebuilding regno allocno list for 407
 Rebuilding regno allocno list for 406
 Rebuilding regno allocno list for 404
 Rebuilding regno allocno list for 403
 Rebuilding regno allocno list for 401
 Rebuilding regno allocno list for 393
 Rebuilding regno allocno list for 388
 Rebuilding regno allocno list for 386
 Rebuilding regno allocno list for 384
 Rebuilding regno allocno list for 383
      Moving ranges of a288r382 to a274r382:  [1479..1487]
 Rebuilding regno allocno list for 382
 Rebuilding regno allocno list for 380
 Rebuilding regno allocno list for 378
 Rebuilding regno allocno list for 376
 Rebuilding regno allocno list for 371
 Rebuilding regno allocno list for 367
      Moving ranges of a213r347 to a142r347:  [1308..1320]
      Moving ranges of a142r347 to a101r347:  [1308..1320] [1126..1132] [1115..1123] [1101..1103] [1081..1083] [980..1071]
 Rebuilding regno allocno list for 347
      Moving ranges of a269r343 to a74r343:  [1427..1445]
      Moving ranges of a74r343 to a62r343:  [1427..1445] [709..720]
      Moving ranges of a62r343 to a44r343:  [1427..1445] [709..720] [666..681]
      Moving ranges of a44r343 to a21r343:  [1427..1445] [709..720] [666..681] [641..643] [620..624] [609..613] [594..598] [583..587] [572..576] [559..563] [514..530]
 Rebuilding regno allocno list for 342
      Moving ranges of a43r341 to a22r341:  [641..647] [620..628] [609..611] [594..602] [583..585] [572..574] [559..567] [519..528]
      Moving ranges of a257r327 to a116r327:  [1405..1419]
 Rebuilding regno allocno list for 327
      Moving ranges of a284r321 to a268r321:  [1490..1491] [1465..1465]
      Moving ranges of a268r321 to a73r321:  [1490..1491] [1465..1465] [1420..1454]
      Moving ranges of a73r321 to a61r321:  [1490..1491] [1465..1465] [1420..1454] [709..718]
      Moving ranges of a61r321 to a42r321:  [1490..1491] [1465..1465] [1420..1454] [709..718] [666..679]
      Moving ranges of a42r321 to a19r321:  [1490..1491] [1465..1465] [1420..1454] [709..718] [666..679] [641..641] [620..622] [609..615] [594..596] [583..589] [572..578] [559..561] [514..532]
      Moving ranges of a267r320 to a72r320:  [1441..1447]
      Moving ranges of a72r320 to a60r320:  [1441..1447] [709..724]
      Moving ranges of a60r320 to a41r320:  [1441..1447] [709..724] [666..687]
      Moving ranges of a41r320 to a24r320:  [1441..1447] [709..724] [666..687] [514..521]
      Moving ranges of a40r318 to a23r318:  [517..523]
      Moving ranges of a283r316 to a266r316:  [1465..1498]
      Moving ranges of a266r316 to a85r316:  [1420..1498]
 Rebuilding regno allocno list for 316
      Moving ranges of a282r315 to a265r315:  [1465..1498]
      Moving ranges of a265r315 to a86r315:  [1420..1498]
 Rebuilding regno allocno list for 315
      Moving ranges of a281r314 to a264r314:  [1465..1498]
      Moving ranges of a264r314 to a83r314:  [1420..1498]
 Rebuilding regno allocno list for 314
      Moving ranges of a280r313 to a263r313:  [1465..1498]
      Moving ranges of a263r313 to a84r313:  [1420..1498]
 Rebuilding regno allocno list for 313
      Moving ranges of a256r311 to a117r311:  [1405..1419]
 Rebuilding regno allocno list for 311
      Moving ranges of a210r309 to a174r309:  [1297..1331]
      Moving ranges of a196r309 to a174r309:  [1243..1296]
 Rebuilding regno allocno list for 309
      Moving ranges of a141r308 to a102r308:  [1126..1128] [1115..1115] [980..1044]
 Rebuilding regno allocno list for 308
 Rebuilding regno allocno list for 307
      Moving ranges of a140r306 to a94r306:  [980..986] [968..970]
      Moving ranges of a94r306 to a79r306:  [980..986] [968..970] [897..901]
 Rebuilding regno allocno list for 306
 Rebuilding regno allocno list for 299
 Rebuilding regno allocno list for 297
      Moving ranges of a139r289 to a99r289:  [980..1035]
 Rebuilding regno allocno list for 289
 Rebuilding regno allocno list for 287
 Rebuilding regno allocno list for 280
 Rebuilding regno allocno list for 277
      Moving ranges of a199r275 to a152r275:  [1243..1249]
 Rebuilding regno allocno list for 275
 Rebuilding regno allocno list for 274
      Moving ranges of a195r270 to a173r270:  [1243..1296]
 Rebuilding regno allocno list for 270
 Rebuilding regno allocno list for 268
 Rebuilding regno allocno list for 251
      Moving ranges of a225r245 to a143r245:  [1361..1393] [1332..1347]
      Moving ranges of a194r245 to a143r245:  [1264..1268]
      Moving ranges of a143r245 to a95r245:  [1361..1393] [1332..1347] [1264..1268] [1204..1221] [1165..1201] [1153..1162] [929..944] [919..925]
      Moving ranges of a95r245 to a77r245:  [1361..1393] [1332..1347] [1264..1268] [1204..1221] [1165..1201] [1153..1162] [929..944] [919..925]
      Moving ranges of a77r245 to a65r245:  [1361..1393] [1332..1347] [1264..1268] [1204..1221] [1165..1201] [1153..1162] [929..944] [919..925]
      Moving ranges of a65r245 to a46r245:  [1361..1393] [1332..1347] [1264..1268] [1204..1221] [1165..1201] [1153..1162] [929..944] [919..925]
      Moving ranges of a46r245 to a1r245:  [1361..1393] [1332..1347] [1264..1268] [1204..1221] [1165..1201] [1153..1162] [929..944] [919..925]
      Moving ranges of a247r244 to a178r244:  [1394..1404]
      Moving ranges of a224r244 to a178r244:  [1337..1351]
 Rebuilding regno allocno list for 244
 Rebuilding regno allocno list for 242
 Rebuilding regno allocno list for 240
 Rebuilding regno allocno list for 238
 Rebuilding regno allocno list for 237
 Rebuilding regno allocno list for 232
      Moving ranges of a228r230 to a175r230:  [1341..1343]
 Rebuilding regno allocno list for 230
      Moving ranges of a246r227 to a179r227:  [1394..1404]
 Rebuilding regno allocno list for 227
 Rebuilding regno allocno list for 226
      Moving ranges of a245r224 to a148r224:  [1394..1404]
      Moving ranges of a223r224 to a148r224:  [1332..1393]
      Moving ranges of a209r224 to a148r224:  [1297..1331]
      Moving ranges of a193r224 to a148r224:  [1243..1296]
 Rebuilding regno allocno list for 224
      Moving ranges of a244r213 to a158r213:  [1394..1404]
 Rebuilding regno allocno list for 213
      Moving ranges of a208r212 to a147r212:  [1297..1331]
 Rebuilding regno allocno list for 212
      Moving ranges of a129r193 to a108r193:  [905..916]
 Rebuilding regno allocno list for 193
      Moving ranges of a124r186 to a90r186:  [902..918]
      Moving ranges of a90r186 to a81r186:  [902..918] [863..872] [845..852] [798..830]
 Rebuilding regno allocno list for 186
 Rebuilding regno allocno list for 168
 Rebuilding regno allocno list for 160
      Moving ranges of a144r158 to a103r158:  [1172..1192] [973..979]
 Rebuilding regno allocno list for 158
 Rebuilding regno allocno list for 157
      Moving ranges of a243r156 to a180r156:  [1394..1404]
 Rebuilding regno allocno list for 156
 Rebuilding regno allocno list for 154
      Moving ranges of a242r152 to a177r152:  [1394..1404]
      Moving ranges of a222r152 to a177r152:  [1332..1393]
 Rebuilding regno allocno list for 152
      Moving ranges of a241r147 to a138r147:  [1394..1404]
      Moving ranges of a221r147 to a138r147:  [1332..1393]
      Moving ranges of a207r147 to a138r147:  [1297..1331]
      Moving ranges of a192r147 to a138r147:  [1243..1296]
      Moving ranges of a138r147 to a93r147:  [1243..1404] [980..1233] [919..947]
      Moving ranges of a93r147 to a80r147:  [1243..1404] [980..1233] [919..947] [897..901] [843..844]
 Rebuilding regno allocno list for 147
 Rebuilding regno allocno list for 137
 Rebuilding regno allocno list for 136
      Moving ranges of a255r90 to a118r90:  [1405..1419]
      Moving ranges of a135r90 to a118r90:  [1241..1242] [948..955]
 Rebuilding regno allocno list for 90
      Moving ranges of a279r89 to a262r89:  [1465..1498]
      Moving ranges of a262r89 to a71r89:  [1420..1498]
      Moving ranges of a254r89 to a89r89:  [1405..1419]
      Moving ranges of a240r89 to a134r89:  [1394..1404]
      Moving ranges of a220r89 to a134r89:  [1332..1393]
      Moving ranges of a206r89 to a134r89:  [1297..1331]
      Moving ranges of a191r89 to a134r89:  [1243..1296]
      Moving ranges of a134r89 to a89r89:  [919..1404]
      Moving ranges of a89r89 to a71r89:  [919..1419] [870..876] [850..867] [749..804]
      Moving ranges of a71r89 to a68r89:  [919..1498] [870..876] [850..867] [749..804] [690..736]
 Rebuilding regno allocno list for 89
      Moving ranges of a278r88 to a261r88:  [1465..1498]
      Moving ranges of a261r88 to a70r88:  [1420..1498]
      Moving ranges of a253r88 to a88r88:  [1405..1419]
      Moving ranges of a239r88 to a133r88:  [1394..1404]
      Moving ranges of a219r88 to a133r88:  [1332..1393]
      Moving ranges of a205r88 to a133r88:  [1297..1331]
      Moving ranges of a190r88 to a133r88:  [1243..1296]
      Moving ranges of a133r88 to a88r88:  [919..1404]
      Moving ranges of a123r88 to a88r88:  [902..918]
      Moving ranges of a88r88 to a70r88:  [902..1419] [890..892] [859..887] [845..856] [793..840] [749..790]
      Moving ranges of a70r88 to a59r88:  [902..1498] [890..892] [859..887] [845..856] [793..840] [749..790] [690..744]
      Moving ranges of a59r88 to a55r88:  [902..1498] [890..892] [859..887] [845..856] [793..840] [749..790] [690..744] [666..677]
 Rebuilding regno allocno list for 88
      Moving ranges of a277r87 to a260r87:  [1477..1498] [1465..1474]
      Moving ranges of a260r87 to a69r87:  [1477..1498] [1465..1474] [1420..1460]
      Moving ranges of a96r87 to a69r87:  [863..869] [800..806]
      Moving ranges of a69r87 to a58r87:  [1477..1498] [1465..1474] [1420..1460] [863..869] [800..806] [709..738]
      Moving ranges of a58r87 to a56r87:  [1477..1498] [1465..1474] [1420..1460] [863..869] [800..806] [709..738] [666..675]
 Rebuilding regno allocno list for 87
Compressing live ranges: from 1499 to 410 - 27%
Ranges after the compression:
 a0(r92): [98..99] [92..93] [84..85] [74..77] [64..67] [14..61] [10..11] [0..7]
 a1(r245): [363..376] [353..360] [341..342] [313..328] [241..246] [238..239] [8..9]
 a2(r436): [12..13]
 a3(r176): [58..63]
 a4(r433): [58..61]
 a5(r434): [58..59]
 a6(r435): [60..61]
 a7(r432): [62..63]
 a8(r431): [68..69]
 a9(r428): [70..71]
 a10(r427): [70..73]
 a11(r429): [72..73]
 a12(r204): [88..89] [80..81]
 a13(r203): [86..87] [78..79]
 a14(r202): [90..91] [82..83]
 a15(r198): [94..97]
 a16(r200): [94..95]
 a17(r423): [94..95]
 a18(r564): [128..409] [100..101]
 a19(r321): [404..405] [393..393] [381..388] [170..171] [161..164] [156..156] [150..153] [142..147] [138..139] [128..133] [100..101]
 a20(r363): [102..103]
 a21(r343): [383..386] [170..173] [161..166] [138..158] [128..133] [100..103]
 a22(r341): [138..158] [132..133] [100..103]
 a23(r318): [130..133] [126..127] [100..109]
 a24(r320): [385..388] [170..173] [161..166] [126..133] [100..103]
 a25(r361): [104..105]
 a26(r360): [106..107]
 a27(r102): [118..119] [108..111]
 a28(r103): [118..119] [110..111]
 a29(r359): [110..111]
 a30(r358): [112..113]
 a31(r357): [112..113]
 a32(r107): [114..115]
 a33(r109): [114..115]
 a34(r355): [116..117]
 a35(r354): [116..117]
 a36(r99): [120..121]
 a37(r352): [120..121]
 a38(r350): [122..123]
 a39(r349): [124..125]
 a47(r442): [154..155]
 a48(r438): [148..149]
 a49(r168): [159..160]
 a50(r422): [159..160]
 a51(r137): [134..135]
 a52(r136): [136..137]
 a53(r419): [140..141]
 a54(r562): [161..409] [128..128]
 a55(r88): [230..409] [224..225] [206..221] [178..201] [167..173] [161..164] [128..129]
 a56(r87): [398..409] [393..395] [381..388] [214..215] [190..191] [170..173] [161..162] [128..131]
 a57(r367): [157..158]
 a66(r342): [163..166]
 a67(r411): [165..166]
 a68(r89): [238..409] [208..221] [178..191] [167..173] [161..162]
 a78(r514): [174..175]
 a79(r306): [265..266] [259..260] [228..229] [174..177]
 a80(r147): [337..378] [265..330] [238..248] [228..229] [204..205] [176..177]
 a81(r186): [230..237] [214..217] [206..209] [190..201] [167..167]
 a82(r538): [387..388] [168..169]
 a83(r314): [381..409] [168..171]
 a84(r313): [381..409] [168..171]
 a85(r316): [381..409] [168..171]
 a86(r315): [381..409] [168..170]
 a87(r371): [172..173]
 a97(r516): [218..219]
 a98(r160): [220..221]
 a99(r289): [265..290] [226..229]
 a100(r506): [226..227]
 a101(r347): [349..352] [309..310] [303..306] [265..300] [228..229]
 a102(r308): [309..310] [305..305] [265..292] [228..229]
 a103(r158): [319..322] [261..264] [222..223]
 a104(r474): [192..193]
 a105(r473): [194..195]
 a106(r542): [230..235] [196..201]
 a107(r461): [196..197]
 a108(r193): [230..235] [206..207] [196..201]
 a109(r460): [198..199]
 a110(r459): [200..201]
 a111(r543): [230..237] [206..207] [196..201]
 a112(r451): [202..203]
 a113(r416): [210..211]
 a114(r414): [212..213]
 a115(r307): [178..179]
 a116(r327): [379..380] [178..179]
 a117(r311): [379..380] [178..179]
 a118(r90): [379..380] [335..336] [249..250] [188..189] [178..185]
 a119(r406): [180..181]
 a120(r404): [182..183]
 a121(r403): [184..185]
 a122(r401): [186..187]
 a130(r470): [230..231]
 a131(r469): [232..233]
 a132(r468): [234..235]
 a145(r541): [377..378] [349..352] [313..328] [307..308] [303..304] [291..300] [247..248]
 a146(r540): [377..378] [349..352] [313..328] [307..308] [303..304] [291..300] [247..248]
 a147(r212): [347..352] [293..302] [240..240]
 a148(r224): [337..378] [291..316] [238..248]
 a149(r268): [301..302]
 a150(r533): [295..296]
 a151(r531): [297..298]
 a152(r275): [337..338] [309..312] [303..306] [289..294]
 a153(r513): [251..252]
 a154(r512): [253..254]
 a155(r508): [255..256]
 a156(r511): [255..256]
 a157(r509): [257..258]
 a158(r213): [377..378] [315..322] [261..264] [247..248]
 a159(r505): [267..268]
 a160(r504): [269..270]
 a161(r503): [271..272]
 a162(r299): [277..278] [273..274]
 a163(r287): [273..290]
 a164(r280): [309..310] [305..306] [281..292] [275..276]
 a165(r502): [279..280]
 a166(r297): [281..282]
 a167(r501): [283..284]
 a168(r500): [283..284]
 a169(r499): [285..286]
 a170(r498): [287..288]
 a171(r494): [311..312]
 a172(r493): [311..312]
 a173(r270): [337..346] [238..239]
 a174(r309): [337..352] [238..242]
 a175(r230): [357..358] [243..244]
 a176(r479): [245..246]
 a177(r152): [353..378] [313..328] [243..248]
 a178(r244): [377..378] [355..360] [313..322] [263..264] [243..248]
 a179(r227): [377..378] [247..247]
 a180(r156): [377..378] [315..324] [247..248]
 a181(r478): [317..318]
 a182(r477): [261..262]
 a183(r476): [319..320]
 a184(r157): [321..322]
 a185(r154): [323..328]
 a186(r450): [325..326]
 a187(r446): [329..330]
 a188(r445): [331..332]
 a189(r407): [333..334]
 a200(r491): [343..344]
 a201(r490): [343..344]
 a202(r277): [345..346]
 a203(r274): [337..338]
 a204(r488): [339..340]
 a216(r523): [349..350]
 a217(r251): [347..352]
 a218(r521): [351..352]
 a229(r485): [359..360]
 a230(r484): [361..362]
 a231(r242): [361..364]
 a232(r481): [363..376] [353..354]
 a233(r232): [365..376] [353..356]
 a234(r483): [365..366]
 a235(r240): [371..372] [367..368]
 a236(r238): [375..376] [369..370]
 a237(r237): [373..376]
 a238(r482): [373..374]
 a252(r226): [377..378]
 a273(r393): [389..390]
 a274(r382): [398..401] [391..392]
 a275(r539): [408..409] [393..405] [381..382]
 a276(r376): [383..384]
 a289(r388): [406..407]
 a290(r386): [396..397]
 a291(r384): [398..399]
 a292(r383): [400..401]
 a293(r380): [402..403]
 a294(r378): [394..395]
+++Allocating 2864 bytes for conflict table (uncompressed size 11800)
;; a0(r92,l0) conflicts: a5(r434,l0) a4(r433,l0) a3(r176,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a1(r245,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a103(r158,l0) a173(r270,l0) a174(r309,l0) a148(r224,l0) a175(r230,l0) a177(r152,l0) a178(r244,l0) a176(r479,l0) a145(r541,l0) a146(r540,l0) a158(r213,l0) a180(r156,l0) a181(r478,l0) a183(r476,l0) a184(r157,l0) a185(r154,l0) a186(r450,l0) a232(r481,l0) a233(r232,l0) a229(r485,l0) a231(r242,l0) a234(r483,l0) a235(r240,l0) a236(r238,l0) a238(r482,l0) a237(r237,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a2(r436,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a3(r176,l0) conflicts: a0(r92,l0) a5(r434,l0) a4(r433,l0) a7(r432,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a4(r433,l0) conflicts: a0(r92,l0) a5(r434,l0) a3(r176,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a5(r434,l0) conflicts: a0(r92,l0) a4(r433,l0) a3(r176,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r435,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r432,l0) conflicts: a3(r176,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a8(r431,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r428,l0) conflicts:
;;     total conflict hard regs: 1 4
;;     conflict hard regs: 1 4

;; a10(r427,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a11(r429,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a12(r204,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a13(r203,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a14(r202,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a15(r198,l0) conflicts: a16(r200,l0) a17(r423,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a16(r200,l0) conflicts: a17(r423,l0) a15(r198,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a17(r423,l0) conflicts: a16(r200,l0) a15(r198,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a18(r564,l0) conflicts: a1(r245,l0) a23(r318,l0) a22(r341,l0) a21(r343,l0) a24(r320,l0) a19(r321,l0) a54(r562,l0) a55(r88,l0) a56(r87,l0) a51(r137,l0) a52(r136,l0) a53(r419,l0) a48(r438,l0) a47(r442,l0) a57(r367,l0) a49(r168,l0) a50(r422,l0) a68(r89,l0) a66(r342,l0) a67(r411,l0) a81(r186,l0) a82(r538,l0) a83(r314,l0) a84(r313,l0) a85(r316,l0) a86(r315,l0) a87(r371,l0) a78(r514,l0) a79(r306,l0) a80(r147,l0) a115(r307,l0) a116(r327,l0) a117(r311,l0) a118(r90,l0) a119(r406,l0) a120(r404,l0) a121(r403,l0) a122(r401,l0) a104(r474,l0) a105(r473,l0) a107(r461,l0) a106(r542,l0) a108(r193,l0) a111(r543,l0) a109(r460,l0) a110(r459,l0) a112(r451,l0) a113(r416,l0) a114(r414,l0) a97(r516,l0) a98(r160,l0) a103(r158,l0) a100(r506,l0) a99(r289,l0) a102(r308,l0) a101(r347,l0) a130(r470,l0) a131(r469,l0) a132(r468,l0) a173(r270,l0) a174(r309,l0) a148(r224,l0) a147(r212,l0) a175(r230,l0) a177(r152,l0) a178(r244,l0) a176(r479,l0) a145(r541,l0) a146(r540,l0) a158(r213,l0) a179(r227,l0) a180(r156,l0) a153(r513,l0) a154(r512,l0) a155(r508,l0) a156(r511,l0) a182(r477,l0) a159(r505,l0) a160(r504,l0) a161(r503,l0) a162(r299,l0) a163(r287,l0) a164(r280,l0) a165(r502,l0) a166(r297,l0) a167(r501,l0) a168(r500,l0) a169(r499,l0) a170(r498,l0) a152(r275,l0) a150(r533,l0) a151(r531,l0) a149(r268,l0) a171(r494,l0) a172(r493,l0) a181(r478,l0) a183(r476,l0) a184(r157,l0) a185(r154,l0) a186(r450,l0) a187(r446,l0) a188(r445,l0) a189(r407,l0) a203(r274,l0) a204(r488,l0) a200(r491,l0) a201(r490,l0) a202(r277,l0) a217(r251,l0) a216(r523,l0) a218(r521,l0) a232(r481,l0) a233(r232,l0) a229(r485,l0) a230(r484,l0) a231(r242,l0) a234(r483,l0) a235(r240,l0) a236(r238,l0) a238(r482,l0) a237(r237,l0) a252(r226,l0) a275(r539,l0) a276(r376,l0) a273(r393,l0) a274(r382,l0) a294(r378,l0) a290(r386,l0) a291(r384,l0) a292(r383,l0) a293(r380,l0) a289(r388,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a19(r321,l0) conflicts: a23(r318,l0) a22(r341,l0) a21(r343,l0) a24(r320,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a56(r87,l0) a68(r89,l0) a66(r342,l0) a82(r538,l0) a83(r314,l0) a84(r313,l0) a85(r316,l0) a86(r315,l0) a275(r539,l0) a276(r376,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a20(r363,l0) conflicts: a23(r318,l0) a22(r341,l0) a21(r343,l0) a24(r320,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a21(r343,l0) conflicts: a23(r318,l0) a22(r341,l0) a24(r320,l0) a19(r321,l0) a18(r564,l0) a20(r363,l0) a54(r562,l0) a55(r88,l0) a56(r87,l0) a53(r419,l0) a48(r438,l0) a47(r442,l0) a57(r367,l0) a68(r89,l0) a66(r342,l0) a67(r411,l0) a83(r314,l0) a84(r313,l0) a85(r316,l0) a86(r315,l0) a87(r371,l0) a276(r376,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a22(r341,l0) conflicts: a23(r318,l0) a21(r343,l0) a24(r320,l0) a19(r321,l0) a18(r564,l0) a20(r363,l0) a53(r419,l0) a48(r438,l0) a47(r442,l0) a57(r367,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a23(r318,l0) conflicts: a22(r341,l0) a21(r343,l0) a24(r320,l0) a19(r321,l0) a18(r564,l0) a20(r363,l0) a25(r361,l0) a26(r360,l0) a27(r102,l0) a56(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a24(r320,l0) conflicts: a23(r318,l0) a22(r341,l0) a21(r343,l0) a19(r321,l0) a18(r564,l0) a20(r363,l0) a54(r562,l0) a55(r88,l0) a56(r87,l0) a68(r89,l0) a66(r342,l0) a67(r411,l0) a82(r538,l0) a83(r314,l0) a84(r313,l0) a85(r316,l0) a86(r315,l0) a87(r371,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a25(r361,l0) conflicts: a23(r318,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a26(r360,l0) conflicts: a23(r318,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a27(r102,l0) conflicts: a23(r318,l0) a29(r359,l0) a28(r103,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a28(r103,l0) conflicts: a27(r102,l0) a29(r359,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a29(r359,l0) conflicts: a27(r102,l0) a28(r103,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a30(r358,l0) conflicts: a31(r357,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a31(r357,l0) conflicts: a30(r358,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a32(r107,l0) conflicts: a33(r109,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a33(r109,l0) conflicts: a32(r107,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a34(r355,l0) conflicts: a35(r354,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a35(r354,l0) conflicts: a34(r355,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a36(r99,l0) conflicts: a37(r352,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a37(r352,l0) conflicts: a36(r99,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a38(r350,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a39(r349,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a47(r442,l0) conflicts: a22(r341,l0) a21(r343,l0) a18(r564,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a48(r438,l0) conflicts: a22(r341,l0) a21(r343,l0) a18(r564,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a49(r168,l0) conflicts: a18(r564,l0) a50(r422,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a50(r422,l0) conflicts: a18(r564,l0) a49(r168,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a51(r137,l0) conflicts: a18(r564,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a52(r136,l0) conflicts: a18(r564,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a53(r419,l0) conflicts: a22(r341,l0) a21(r343,l0) a18(r564,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a54(r562,l0) conflicts: a1(r245,l0) a21(r343,l0) a24(r320,l0) a19(r321,l0) a18(r564,l0) a55(r88,l0) a56(r87,l0) a68(r89,l0) a66(r342,l0) a67(r411,l0) a81(r186,l0) a82(r538,l0) a83(r314,l0) a84(r313,l0) a85(r316,l0) a86(r315,l0) a87(r371,l0) a78(r514,l0) a79(r306,l0) a80(r147,l0) a115(r307,l0) a116(r327,l0) a117(r311,l0) a118(r90,l0) a119(r406,l0) a120(r404,l0) a121(r403,l0) a122(r401,l0) a104(r474,l0) a105(r473,l0) a107(r461,l0) a106(r542,l0) a108(r193,l0) a111(r543,l0) a109(r460,l0) a110(r459,l0) a112(r451,l0) a113(r416,l0) a114(r414,l0) a97(r516,l0) a98(r160,l0) a103(r158,l0) a100(r506,l0) a99(r289,l0) a102(r308,l0) a101(r347,l0) a130(r470,l0) a131(r469,l0) a132(r468,l0) a173(r270,l0) a174(r309,l0) a148(r224,l0) a147(r212,l0) a175(r230,l0) a177(r152,l0) a178(r244,l0) a176(r479,l0) a145(r541,l0) a146(r540,l0) a158(r213,l0) a179(r227,l0) a180(r156,l0) a153(r513,l0) a154(r512,l0) a155(r508,l0) a156(r511,l0) a182(r477,l0) a159(r505,l0) a160(r504,l0) a161(r503,l0) a162(r299,l0) a163(r287,l0) a164(r280,l0) a165(r502,l0) a166(r297,l0) a167(r501,l0) a168(r500,l0) a169(r499,l0) a170(r498,l0) a152(r275,l0) a150(r533,l0) a151(r531,l0) a149(r268,l0) a171(r494,l0) a172(r493,l0) a181(r478,l0) a183(r476,l0) a184(r157,l0) a185(r154,l0) a186(r450,l0) a187(r446,l0) a188(r445,l0) a189(r407,l0) a203(r274,l0) a204(r488,l0) a200(r491,l0) a201(r490,l0) a202(r277,l0) a217(r251,l0) a216(r523,l0) a218(r521,l0) a232(r481,l0) a233(r232,l0) a229(r485,l0) a230(r484,l0) a231(r242,l0) a234(r483,l0) a235(r240,l0) a236(r238,l0) a238(r482,l0) a237(r237,l0) a252(r226,l0) a275(r539,l0) a276(r376,l0) a273(r393,l0) a274(r382,l0) a294(r378,l0) a290(r386,l0) a291(r384,l0) a292(r383,l0) a293(r380,l0) a289(r388,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a55(r88,l0) conflicts: a1(r245,l0) a21(r343,l0) a24(r320,l0) a19(r321,l0) a18(r564,l0) a54(r562,l0) a56(r87,l0) a68(r89,l0) a66(r342,l0) a81(r186,l0) a82(r538,l0) a83(r314,l0) a84(r313,l0) a85(r316,l0) a86(r315,l0) a87(r371,l0) a79(r306,l0) a80(r147,l0) a115(r307,l0) a116(r327,l0) a117(r311,l0) a118(r90,l0) a119(r406,l0) a120(r404,l0) a121(r403,l0) a122(r401,l0) a104(r474,l0) a105(r473,l0) a107(r461,l0) a106(r542,l0) a108(r193,l0) a111(r543,l0) a109(r460,l0) a110(r459,l0) a113(r416,l0) a114(r414,l0) a97(r516,l0) a98(r160,l0) a103(r158,l0) a99(r289,l0) a102(r308,l0) a101(r347,l0) a130(r470,l0) a131(r469,l0) a132(r468,l0) a173(r270,l0) a174(r309,l0) a148(r224,l0) a147(r212,l0) a175(r230,l0) a177(r152,l0) a178(r244,l0) a176(r479,l0) a145(r541,l0) a146(r540,l0) a158(r213,l0) a179(r227,l0) a180(r156,l0) a153(r513,l0) a154(r512,l0) a155(r508,l0) a156(r511,l0) a182(r477,l0) a159(r505,l0) a160(r504,l0) a161(r503,l0) a162(r299,l0) a163(r287,l0) a164(r280,l0) a165(r502,l0) a166(r297,l0) a167(r501,l0) a168(r500,l0) a169(r499,l0) a170(r498,l0) a152(r275,l0) a150(r533,l0) a151(r531,l0) a149(r268,l0) a171(r494,l0) a172(r493,l0) a181(r478,l0) a183(r476,l0) a184(r157,l0) a185(r154,l0) a186(r450,l0) a187(r446,l0) a188(r445,l0) a189(r407,l0) a203(r274,l0) a204(r488,l0) a200(r491,l0) a201(r490,l0) a202(r277,l0) a217(r251,l0) a216(r523,l0) a218(r521,l0) a232(r481,l0) a233(r232,l0) a229(r485,l0) a230(r484,l0) a231(r242,l0) a234(r483,l0) a235(r240,l0) a236(r238,l0) a238(r482,l0) a237(r237,l0) a252(r226,l0) a275(r539,l0) a276(r376,l0) a273(r393,l0) a274(r382,l0) a294(r378,l0) a290(r386,l0) a291(r384,l0) a292(r383,l0) a293(r380,l0) a289(r388,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a56(r87,l0) conflicts: a23(r318,l0) a21(r343,l0) a24(r320,l0) a19(r321,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a81(r186,l0) a82(r538,l0) a83(r314,l0) a84(r313,l0) a85(r316,l0) a86(r315,l0) a87(r371,l0) a275(r539,l0) a276(r376,l0) a274(r382,l0) a294(r378,l0) a291(r384,l0) a292(r383,l0) a293(r380,l0) a289(r388,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a57(r367,l0) conflicts: a22(r341,l0) a21(r343,l0) a18(r564,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a66(r342,l0) conflicts: a21(r343,l0) a24(r320,l0) a19(r321,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a67(r411,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a67(r411,l0) conflicts: a21(r343,l0) a24(r320,l0) a18(r564,l0) a54(r562,l0) a66(r342,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a68(r89,l0) conflicts: a1(r245,l0) a21(r343,l0) a24(r320,l0) a19(r321,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a56(r87,l0) a81(r186,l0) a82(r538,l0) a83(r314,l0) a84(r313,l0) a85(r316,l0) a86(r315,l0) a87(r371,l0) a79(r306,l0) a80(r147,l0) a115(r307,l0) a116(r327,l0) a117(r311,l0) a118(r90,l0) a119(r406,l0) a120(r404,l0) a121(r403,l0) a122(r401,l0) a113(r416,l0) a114(r414,l0) a97(r516,l0) a98(r160,l0) a103(r158,l0) a99(r289,l0) a102(r308,l0) a101(r347,l0) a173(r270,l0) a174(r309,l0) a148(r224,l0) a147(r212,l0) a175(r230,l0) a177(r152,l0) a178(r244,l0) a176(r479,l0) a145(r541,l0) a146(r540,l0) a158(r213,l0) a179(r227,l0) a180(r156,l0) a153(r513,l0) a154(r512,l0) a155(r508,l0) a156(r511,l0) a182(r477,l0) a159(r505,l0) a160(r504,l0) a161(r503,l0) a162(r299,l0) a163(r287,l0) a164(r280,l0) a165(r502,l0) a166(r297,l0) a167(r501,l0) a168(r500,l0) a169(r499,l0) a170(r498,l0) a152(r275,l0) a150(r533,l0) a151(r531,l0) a149(r268,l0) a171(r494,l0) a172(r493,l0) a181(r478,l0) a183(r476,l0) a184(r157,l0) a185(r154,l0) a186(r450,l0) a187(r446,l0) a188(r445,l0) a189(r407,l0) a203(r274,l0) a204(r488,l0) a200(r491,l0) a201(r490,l0) a202(r277,l0) a217(r251,l0) a216(r523,l0) a218(r521,l0) a232(r481,l0) a233(r232,l0) a229(r485,l0) a230(r484,l0) a231(r242,l0) a234(r483,l0) a235(r240,l0) a236(r238,l0) a238(r482,l0) a237(r237,l0) a252(r226,l0) a275(r539,l0) a276(r376,l0) a273(r393,l0) a274(r382,l0) a294(r378,l0) a290(r386,l0) a291(r384,l0) a292(r383,l0) a293(r380,l0) a289(r388,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a78(r514,l0) conflicts: a18(r564,l0) a54(r562,l0) a79(r306,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a79(r306,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a78(r514,l0) a80(r147,l0) a99(r289,l0) a102(r308,l0) a101(r347,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a80(r147,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a79(r306,l0) a103(r158,l0) a99(r289,l0) a102(r308,l0) a101(r347,l0) a173(r270,l0) a174(r309,l0) a148(r224,l0) a147(r212,l0) a175(r230,l0) a177(r152,l0) a178(r244,l0) a176(r479,l0) a145(r541,l0) a146(r540,l0) a158(r213,l0) a179(r227,l0) a180(r156,l0) a159(r505,l0) a160(r504,l0) a161(r503,l0) a162(r299,l0) a163(r287,l0) a164(r280,l0) a165(r502,l0) a166(r297,l0) a167(r501,l0) a168(r500,l0) a169(r499,l0) a170(r498,l0) a152(r275,l0) a150(r533,l0) a151(r531,l0) a149(r268,l0) a171(r494,l0) a172(r493,l0) a181(r478,l0) a183(r476,l0) a184(r157,l0) a185(r154,l0) a186(r450,l0) a187(r446,l0) a203(r274,l0) a204(r488,l0) a200(r491,l0) a201(r490,l0) a202(r277,l0) a217(r251,l0) a216(r523,l0) a218(r521,l0) a232(r481,l0) a233(r232,l0) a229(r485,l0) a230(r484,l0) a231(r242,l0) a234(r483,l0) a235(r240,l0) a236(r238,l0) a238(r482,l0) a237(r237,l0) a252(r226,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a81(r186,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a56(r87,l0) a68(r89,l0) a104(r474,l0) a105(r473,l0) a107(r461,l0) a106(r542,l0) a108(r193,l0) a111(r543,l0) a109(r460,l0) a110(r459,l0) a130(r470,l0) a131(r469,l0) a132(r468,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a82(r538,l0) conflicts: a24(r320,l0) a19(r321,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a56(r87,l0) a68(r89,l0) a83(r314,l0) a84(r313,l0) a85(r316,l0) a86(r315,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a83(r314,l0) conflicts: a21(r343,l0) a24(r320,l0) a19(r321,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a56(r87,l0) a68(r89,l0) a82(r538,l0) a84(r313,l0) a85(r316,l0) a86(r315,l0) a275(r539,l0) a276(r376,l0) a273(r393,l0) a274(r382,l0) a294(r378,l0) a290(r386,l0) a291(r384,l0) a292(r383,l0) a293(r380,l0) a289(r388,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a84(r313,l0) conflicts: a21(r343,l0) a24(r320,l0) a19(r321,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a56(r87,l0) a68(r89,l0) a82(r538,l0) a83(r314,l0) a85(r316,l0) a86(r315,l0) a275(r539,l0) a276(r376,l0) a273(r393,l0) a274(r382,l0) a294(r378,l0) a290(r386,l0) a291(r384,l0) a292(r383,l0) a293(r380,l0) a289(r388,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a85(r316,l0) conflicts: a21(r343,l0) a24(r320,l0) a19(r321,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a56(r87,l0) a68(r89,l0) a82(r538,l0) a83(r314,l0) a84(r313,l0) a86(r315,l0) a275(r539,l0) a276(r376,l0) a273(r393,l0) a274(r382,l0) a294(r378,l0) a290(r386,l0) a291(r384,l0) a292(r383,l0) a293(r380,l0) a289(r388,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a86(r315,l0) conflicts: a21(r343,l0) a24(r320,l0) a19(r321,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a56(r87,l0) a68(r89,l0) a82(r538,l0) a83(r314,l0) a84(r313,l0) a85(r316,l0) a275(r539,l0) a276(r376,l0) a273(r393,l0) a274(r382,l0) a294(r378,l0) a290(r386,l0) a291(r384,l0) a292(r383,l0) a293(r380,l0) a289(r388,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a87(r371,l0) conflicts: a21(r343,l0) a24(r320,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a56(r87,l0) a68(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a97(r516,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a98(r160,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a99(r289,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a79(r306,l0) a80(r147,l0) a100(r506,l0) a102(r308,l0) a101(r347,l0) a159(r505,l0) a160(r504,l0) a161(r503,l0) a162(r299,l0) a163(r287,l0) a164(r280,l0) a165(r502,l0) a166(r297,l0) a167(r501,l0) a168(r500,l0) a169(r499,l0) a170(r498,l0) a152(r275,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a100(r506,l0) conflicts: a18(r564,l0) a54(r562,l0) a99(r289,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a101(r347,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a79(r306,l0) a80(r147,l0) a99(r289,l0) a102(r308,l0) a174(r309,l0) a148(r224,l0) a147(r212,l0) a145(r541,l0) a146(r540,l0) a159(r505,l0) a160(r504,l0) a161(r503,l0) a162(r299,l0) a163(r287,l0) a164(r280,l0) a165(r502,l0) a166(r297,l0) a167(r501,l0) a168(r500,l0) a169(r499,l0) a170(r498,l0) a152(r275,l0) a150(r533,l0) a151(r531,l0) a217(r251,l0) a216(r523,l0) a218(r521,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a102(r308,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a79(r306,l0) a80(r147,l0) a99(r289,l0) a101(r347,l0) a148(r224,l0) a145(r541,l0) a146(r540,l0) a159(r505,l0) a160(r504,l0) a161(r503,l0) a162(r299,l0) a163(r287,l0) a164(r280,l0) a165(r502,l0) a166(r297,l0) a167(r501,l0) a168(r500,l0) a169(r499,l0) a170(r498,l0) a152(r275,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a103(r158,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a177(r152,l0) a178(r244,l0) a145(r541,l0) a146(r540,l0) a158(r213,l0) a180(r156,l0) a182(r477,l0) a183(r476,l0) a184(r157,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a104(r474,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a81(r186,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a105(r473,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a81(r186,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a106(r542,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a81(r186,l0) a107(r461,l0) a108(r193,l0) a111(r543,l0) a109(r460,l0) a110(r459,l0) a130(r470,l0) a131(r469,l0) a132(r468,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a107(r461,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a81(r186,l0) a106(r542,l0) a108(r193,l0) a111(r543,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a108(r193,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a81(r186,l0) a107(r461,l0) a106(r542,l0) a111(r543,l0) a109(r460,l0) a110(r459,l0) a130(r470,l0) a131(r469,l0) a132(r468,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a109(r460,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a81(r186,l0) a106(r542,l0) a108(r193,l0) a111(r543,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a110(r459,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a81(r186,l0) a106(r542,l0) a108(r193,l0) a111(r543,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a111(r543,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a81(r186,l0) a107(r461,l0) a106(r542,l0) a108(r193,l0) a109(r460,l0) a110(r459,l0) a130(r470,l0) a131(r469,l0) a132(r468,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a112(r451,l0) conflicts: a18(r564,l0) a54(r562,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a113(r416,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a114(r414,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a115(r307,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a116(r327,l0) a117(r311,l0) a118(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a116(r327,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a115(r307,l0) a117(r311,l0) a118(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a117(r311,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a115(r307,l0) a116(r327,l0) a118(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a118(r90,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a115(r307,l0) a116(r327,l0) a117(r311,l0) a119(r406,l0) a120(r404,l0) a121(r403,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a119(r406,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a118(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a120(r404,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a118(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a121(r403,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a118(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a122(r401,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a130(r470,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a81(r186,l0) a106(r542,l0) a108(r193,l0) a111(r543,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a131(r469,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a81(r186,l0) a106(r542,l0) a108(r193,l0) a111(r543,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a132(r468,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a81(r186,l0) a106(r542,l0) a108(r193,l0) a111(r543,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a145(r541,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a103(r158,l0) a102(r308,l0) a101(r347,l0) a174(r309,l0) a148(r224,l0) a147(r212,l0) a177(r152,l0) a178(r244,l0) a146(r540,l0) a158(r213,l0) a179(r227,l0) a180(r156,l0) a164(r280,l0) a152(r275,l0) a150(r533,l0) a151(r531,l0) a181(r478,l0) a183(r476,l0) a184(r157,l0) a185(r154,l0) a186(r450,l0) a217(r251,l0) a216(r523,l0) a218(r521,l0) a252(r226,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a146(r540,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a103(r158,l0) a102(r308,l0) a101(r347,l0) a174(r309,l0) a148(r224,l0) a147(r212,l0) a177(r152,l0) a178(r244,l0) a145(r541,l0) a158(r213,l0) a179(r227,l0) a180(r156,l0) a164(r280,l0) a152(r275,l0) a150(r533,l0) a151(r531,l0) a181(r478,l0) a183(r476,l0) a184(r157,l0) a185(r154,l0) a186(r450,l0) a217(r251,l0) a216(r523,l0) a218(r521,l0) a252(r226,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a147(r212,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a101(r347,l0) a174(r309,l0) a148(r224,l0) a145(r541,l0) a146(r540,l0) a152(r275,l0) a150(r533,l0) a151(r531,l0) a149(r268,l0) a217(r251,l0) a216(r523,l0) a218(r521,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a148(r224,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a102(r308,l0) a101(r347,l0) a173(r270,l0) a174(r309,l0) a147(r212,l0) a175(r230,l0) a177(r152,l0) a178(r244,l0) a176(r479,l0) a145(r541,l0) a146(r540,l0) a158(r213,l0) a179(r227,l0) a180(r156,l0) a164(r280,l0) a152(r275,l0) a150(r533,l0) a151(r531,l0) a149(r268,l0) a171(r494,l0) a172(r493,l0) a203(r274,l0) a204(r488,l0) a200(r491,l0) a201(r490,l0) a202(r277,l0) a217(r251,l0) a216(r523,l0) a218(r521,l0) a232(r481,l0) a233(r232,l0) a229(r485,l0) a230(r484,l0) a231(r242,l0) a234(r483,l0) a235(r240,l0) a236(r238,l0) a238(r482,l0) a237(r237,l0) a252(r226,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a149(r268,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a148(r224,l0) a147(r212,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a150(r533,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a101(r347,l0) a148(r224,l0) a147(r212,l0) a145(r541,l0) a146(r540,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a151(r531,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a101(r347,l0) a148(r224,l0) a147(r212,l0) a145(r541,l0) a146(r540,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a152(r275,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a99(r289,l0) a102(r308,l0) a101(r347,l0) a173(r270,l0) a174(r309,l0) a148(r224,l0) a147(r212,l0) a145(r541,l0) a146(r540,l0) a163(r287,l0) a164(r280,l0) a171(r494,l0) a172(r493,l0) a203(r274,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a153(r513,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a154(r512,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a155(r508,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a156(r511,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a156(r511,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a155(r508,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a157(r509,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a158(r213,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a103(r158,l0) a148(r224,l0) a177(r152,l0) a178(r244,l0) a145(r541,l0) a146(r540,l0) a179(r227,l0) a180(r156,l0) a182(r477,l0) a181(r478,l0) a183(r476,l0) a184(r157,l0) a252(r226,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a159(r505,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a99(r289,l0) a102(r308,l0) a101(r347,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a160(r504,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a99(r289,l0) a102(r308,l0) a101(r347,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a161(r503,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a99(r289,l0) a102(r308,l0) a101(r347,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a162(r299,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a99(r289,l0) a102(r308,l0) a101(r347,l0) a163(r287,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a163(r287,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a99(r289,l0) a102(r308,l0) a101(r347,l0) a162(r299,l0) a164(r280,l0) a165(r502,l0) a166(r297,l0) a167(r501,l0) a168(r500,l0) a169(r499,l0) a170(r498,l0) a152(r275,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a164(r280,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a99(r289,l0) a102(r308,l0) a101(r347,l0) a148(r224,l0) a145(r541,l0) a146(r540,l0) a163(r287,l0) a166(r297,l0) a167(r501,l0) a168(r500,l0) a169(r499,l0) a170(r498,l0) a152(r275,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a165(r502,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a99(r289,l0) a102(r308,l0) a101(r347,l0) a163(r287,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a166(r297,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a99(r289,l0) a102(r308,l0) a101(r347,l0) a163(r287,l0) a164(r280,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a167(r501,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a99(r289,l0) a102(r308,l0) a101(r347,l0) a163(r287,l0) a164(r280,l0) a168(r500,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a168(r500,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a99(r289,l0) a102(r308,l0) a101(r347,l0) a163(r287,l0) a164(r280,l0) a167(r501,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a169(r499,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a99(r289,l0) a102(r308,l0) a101(r347,l0) a163(r287,l0) a164(r280,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a170(r498,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a99(r289,l0) a102(r308,l0) a101(r347,l0) a163(r287,l0) a164(r280,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a171(r494,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a148(r224,l0) a152(r275,l0) a172(r493,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a172(r493,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a148(r224,l0) a152(r275,l0) a171(r494,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a173(r270,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a174(r309,l0) a148(r224,l0) a152(r275,l0) a203(r274,l0) a204(r488,l0) a200(r491,l0) a201(r490,l0) a202(r277,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a174(r309,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a101(r347,l0) a173(r270,l0) a148(r224,l0) a147(r212,l0) a145(r541,l0) a146(r540,l0) a152(r275,l0) a203(r274,l0) a204(r488,l0) a200(r491,l0) a201(r490,l0) a202(r277,l0) a217(r251,l0) a216(r523,l0) a218(r521,l0)
;;     total conflict hard regs: 0-2 4 5
;;     conflict hard regs: 0-2 4 5

;; a175(r230,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a148(r224,l0) a177(r152,l0) a178(r244,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a176(r479,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a148(r224,l0) a177(r152,l0) a178(r244,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a177(r152,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a103(r158,l0) a148(r224,l0) a175(r230,l0) a178(r244,l0) a176(r479,l0) a145(r541,l0) a146(r540,l0) a158(r213,l0) a179(r227,l0) a180(r156,l0) a181(r478,l0) a183(r476,l0) a184(r157,l0) a185(r154,l0) a186(r450,l0) a232(r481,l0) a233(r232,l0) a229(r485,l0) a230(r484,l0) a231(r242,l0) a234(r483,l0) a235(r240,l0) a236(r238,l0) a238(r482,l0) a237(r237,l0) a252(r226,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a178(r244,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a103(r158,l0) a148(r224,l0) a175(r230,l0) a177(r152,l0) a176(r479,l0) a145(r541,l0) a146(r540,l0) a158(r213,l0) a179(r227,l0) a180(r156,l0) a181(r478,l0) a183(r476,l0) a184(r157,l0) a233(r232,l0) a229(r485,l0) a252(r226,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a179(r227,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a148(r224,l0) a177(r152,l0) a178(r244,l0) a145(r541,l0) a146(r540,l0) a158(r213,l0) a180(r156,l0) a252(r226,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a180(r156,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a103(r158,l0) a148(r224,l0) a177(r152,l0) a178(r244,l0) a145(r541,l0) a146(r540,l0) a158(r213,l0) a179(r227,l0) a181(r478,l0) a183(r476,l0) a184(r157,l0) a185(r154,l0) a252(r226,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a181(r478,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a177(r152,l0) a178(r244,l0) a145(r541,l0) a146(r540,l0) a158(r213,l0) a180(r156,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a182(r477,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a103(r158,l0) a158(r213,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a183(r476,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a103(r158,l0) a177(r152,l0) a178(r244,l0) a145(r541,l0) a146(r540,l0) a158(r213,l0) a180(r156,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a184(r157,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a103(r158,l0) a177(r152,l0) a178(r244,l0) a145(r541,l0) a146(r540,l0) a158(r213,l0) a180(r156,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a185(r154,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a177(r152,l0) a145(r541,l0) a146(r540,l0) a180(r156,l0) a186(r450,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a186(r450,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a177(r152,l0) a145(r541,l0) a146(r540,l0) a185(r154,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a187(r446,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a188(r445,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a189(r407,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a200(r491,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a173(r270,l0) a174(r309,l0) a148(r224,l0) a201(r490,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a201(r490,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a173(r270,l0) a174(r309,l0) a148(r224,l0) a200(r491,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a202(r277,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a173(r270,l0) a174(r309,l0) a148(r224,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a203(r274,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a173(r270,l0) a174(r309,l0) a148(r224,l0) a152(r275,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a204(r488,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a173(r270,l0) a174(r309,l0) a148(r224,l0)
;;     total conflict hard regs: 1 2 4
;;     conflict hard regs: 1 2 4

;; a216(r523,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a101(r347,l0) a174(r309,l0) a148(r224,l0) a147(r212,l0) a145(r541,l0) a146(r540,l0) a217(r251,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a217(r251,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a101(r347,l0) a174(r309,l0) a148(r224,l0) a147(r212,l0) a145(r541,l0) a146(r540,l0) a216(r523,l0) a218(r521,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a218(r521,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a101(r347,l0) a174(r309,l0) a148(r224,l0) a147(r212,l0) a145(r541,l0) a146(r540,l0) a217(r251,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a229(r485,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a148(r224,l0) a177(r152,l0) a178(r244,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a230(r484,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a148(r224,l0) a177(r152,l0) a231(r242,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a231(r242,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a148(r224,l0) a177(r152,l0) a232(r481,l0) a230(r484,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a232(r481,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a148(r224,l0) a177(r152,l0) a233(r232,l0) a231(r242,l0) a234(r483,l0) a235(r240,l0) a236(r238,l0) a238(r482,l0) a237(r237,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a233(r232,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a148(r224,l0) a177(r152,l0) a178(r244,l0) a232(r481,l0) a234(r483,l0) a235(r240,l0) a236(r238,l0) a238(r482,l0) a237(r237,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a234(r483,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a148(r224,l0) a177(r152,l0) a232(r481,l0) a233(r232,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a235(r240,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a148(r224,l0) a177(r152,l0) a232(r481,l0) a233(r232,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a236(r238,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a148(r224,l0) a177(r152,l0) a232(r481,l0) a233(r232,l0) a237(r237,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a237(r237,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a148(r224,l0) a177(r152,l0) a232(r481,l0) a233(r232,l0) a236(r238,l0) a238(r482,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a238(r482,l0) conflicts: a1(r245,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a148(r224,l0) a177(r152,l0) a232(r481,l0) a233(r232,l0) a237(r237,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a252(r226,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a80(r147,l0) a148(r224,l0) a177(r152,l0) a178(r244,l0) a145(r541,l0) a146(r540,l0) a158(r213,l0) a179(r227,l0) a180(r156,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a273(r393,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a83(r314,l0) a84(r313,l0) a85(r316,l0) a86(r315,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a274(r382,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a56(r87,l0) a68(r89,l0) a83(r314,l0) a84(r313,l0) a85(r316,l0) a86(r315,l0) a275(r539,l0) a291(r384,l0) a292(r383,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a275(r539,l0) conflicts: a19(r321,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a56(r87,l0) a68(r89,l0) a83(r314,l0) a84(r313,l0) a85(r316,l0) a86(r315,l0) a274(r382,l0) a294(r378,l0) a290(r386,l0) a291(r384,l0) a292(r383,l0) a293(r380,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a276(r376,l0) conflicts: a21(r343,l0) a19(r321,l0) a18(r564,l0) a54(r562,l0) a55(r88,l0) a56(r87,l0) a68(r89,l0) a83(r314,l0) a84(r313,l0) a85(r316,l0) a86(r315,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a289(r388,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a56(r87,l0) a68(r89,l0) a83(r314,l0) a84(r313,l0) a85(r316,l0) a86(r315,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a290(r386,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a68(r89,l0) a83(r314,l0) a84(r313,l0) a85(r316,l0) a86(r315,l0) a275(r539,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a291(r384,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a56(r87,l0) a68(r89,l0) a83(r314,l0) a84(r313,l0) a85(r316,l0) a86(r315,l0) a275(r539,l0) a274(r382,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a292(r383,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a56(r87,l0) a68(r89,l0) a83(r314,l0) a84(r313,l0) a85(r316,l0) a86(r315,l0) a275(r539,l0) a274(r382,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a293(r380,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a56(r87,l0) a68(r89,l0) a83(r314,l0) a84(r313,l0) a85(r316,l0) a86(r315,l0) a275(r539,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a294(r378,l0) conflicts: a18(r564,l0) a54(r562,l0) a55(r88,l0) a56(r87,l0) a68(r89,l0) a83(r314,l0) a84(r313,l0) a85(r316,l0) a86(r315,l0) a275(r539,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a5(r434)<->a6(r435)@1:shuffle
  cp1:a9(r428)<->a11(r429)@1:shuffle
  cp2:a56(r87)<->a66(r342)@1:move
  cp3:a78(r514)<->a80(r147)@1:shuffle
  cp4:a55(r88)<->a78(r514)@1:shuffle
  cp5:a97(r516)<->a98(r160)@1:shuffle
  cp6:a105(r473)<->a106(r542)@1:shuffle
  cp7:a104(r474)<->a105(r473)@1:shuffle
  cp8:a131(r469)<->a132(r468)@1:shuffle
  cp9:a109(r460)<->a110(r459)@1:shuffle
  cp10:a80(r147)<->a112(r451)@1:shuffle
  cp11:a55(r88)<->a112(r451)@1:shuffle
  cp12:a155(r508)<->a157(r509)@1:shuffle
  cp13:a154(r512)<->a155(r508)@1:shuffle
  cp14:a154(r512)<->a156(r511)@1:shuffle
  cp15:a153(r513)<->a154(r512)@1:constraint
  cp16:a118(r90)<->a153(r513)@1:shuffle
  cp17:a79(r306)<->a158(r213)@1:move
  cp18:a152(r275)<->a170(r498)@1:constraint
  cp19:a169(r499)<->a170(r498)@1:shuffle
  cp20:a168(r500)<->a169(r499)@1:shuffle
  cp21:a148(r224)<->a163(r287)@1:shuffle
  cp22:a174(r309)<->a175(r230)@1:shuffle
  cp23:a230(r484)<->a232(r481)@1:shuffle
  cp24:a178(r244)<->a230(r484)@1:shuffle
  cp25:a178(r244)<->a231(r242)@1:shuffle
  cp26:a175(r230)<->a229(r485)@1:shuffle
  cp27:a234(r483)<->a235(r240)@1:shuffle
  cp28:a235(r240)<->a236(r238)@1:move
  cp29:a235(r240)<->a237(r237)@1:shuffle
  cp30:a235(r240)<->a238(r482)@1:shuffle
  cp31:a178(r244)<->a232(r481)@1:constraint
  cp32:a175(r230)<->a176(r479)@1:shuffle
  cp33:a148(r224)<->a181(r478)@1:shuffle
  cp34:a178(r244)<->a182(r477)@1:constraint
  cp35:a184(r157)<->a185(r154)@1:shuffle
  cp36:a80(r147)<->a188(r445)@1:shuffle
  cp37:a118(r90)<->a189(r407)@1:shuffle
  cp38:a81(r186)<->a118(r90)@1:shuffle
  cp39:a273(r393)<->a274(r382)@11:shuffle
  cp40:a275(r539)<->a289(r388)@56:shuffle
  cp41:a56(r87)<->a290(r386)@113:shuffle
  cp42:a19(r321)<->a293(r380)@125:shuffle
  cp43:a274(r382)<->a293(r380)@125:shuffle
  cp44:a24(r320)<->a276(r376)@11:shuffle
  cp45:a22(r341)<->a56(r87)@7:move
  cp46:a23(r318)<->a55(r88)@7:move
  pref0:a15(r198)<-hr0@3
  pref1:a0(r92)<-hr0@9
  pref2:a5(r434)<-hr4@1
  pref3:a4(r433)<-hr5@1
  pref4:a7(r432)<-hr5@1
  pref5:a4(r433)<-hr0@1
  pref6:a9(r428)<-hr5@1
  pref7:a33(r109)<-hr0@1
  pref8:a52(r136)<-hr0@1
  pref9:a52(r136)<-hr5@1
  pref10:a51(r137)<-hr0@1
  pref11:a51(r137)<-hr5@1
  pref14:a56(r87)<-hr0@1
  pref15:a98(r160)<-hr0@1
  pref16:a108(r193)<-hr0@1
  pref17:a149(r268)<-hr0@1
  pref18:a168(r500)<-hr4@1
  pref19:a167(r501)<-hr5@1
  pref20:a166(r297)<-hr0@1
  pref21:a173(r270)<-hr0@1
  pref22:a202(r277)<-hr0@1
  pref24:a174(r309)<-hr1@1
  pref25:a204(r488)<-hr5@1
  pref26:a203(r274)<-hr0@1
  pref27:a217(r251)<-hr0@1
  pref28:a234(r483)<-hr4@1
  pref29:a233(r232)<-hr5@1
  pref30:a231(r242)<-hr0@1
  regions=14, blocks=173, points=410
    allocnos=295 (big 0), copies=47, conflicts=0, ranges=310

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs
    all: 0r92 1r245 2r436 3r176 4r433 5r434 6r435 7r432 8r431 9r428 10r427 11r429 12r204 13r203 14r202 15r198 16r200 17r423 18r564 19r321 20r363 21r343 22r341 23r318 24r320 25r361 26r360 27r102 28r103 29r359 30r358 31r357 32r107 33r109 34r355 35r354 36r99 37r352 38r350 39r349 47r442 48r438 49r168 50r422 51r137 52r136 53r419 54r562 55r88 56r87 57r367 66r342 67r411 68r89 78r514 79r306 80r147 81r186 82r538 83r314 84r313 85r316 86r315 87r371 97r516 98r160 99r289 100r506 101r347 102r308 103r158 104r474 105r473 106r542 107r461 108r193 109r460 110r459 111r543 112r451 113r416 114r414 115r307 116r327 117r311 118r90 119r406 120r404 121r403 122r401 130r470 131r469 132r468 145r541 146r540 147r212 148r224 149r268 150r533 151r531 152r275 153r513 154r512 155r508 156r511 157r509 158r213 159r505 160r504 161r503 162r299 163r287 164r280 165r502 166r297 167r501 168r500 169r499 170r498 171r494 172r493 173r270 174r309 175r230 176r479 177r152 178r244 179r227 180r156 181r478 182r477 183r476 184r157 185r154 186r450 187r446 188r445 189r407 200r491 201r490 202r277 203r274 204r488 216r523 217r251 218r521 229r485 230r484 231r242 232r481 233r232 234r483 235r240 236r238 237r237 238r482 252r226 273r393 274r382 275r539 276r376 289r388 290r386 291r384 292r383 293r380 294r378
    modified regnos
    border:
    Pressure: GENERAL_REGS=14
 Removing pref1:hr0@9
 Removing pref5:hr0@1
 Removing pref3:hr5@1
 Removing pref21:hr0@1
 Removing pref24:hr1@1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@173126
          2:( 5)@2
          3:( 1-4 6 37-44)@72
            4:( 1-3 6 37-44)@977
              5:( 3 6 37-44)@4608
                6:( 3 6 41-44)@230
      Spill a6(r435,l0)
      Spill a10(r427,l0)
      Spill a11(r429,l0)
      Spill a157(r509,l0)
      Allocno a0r92 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a1r245 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a2r436 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a3r176 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a4r433 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a5r434 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a7r432 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a8r431 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a9r428 of GENERAL_REGS(15) has 13 avail. regs  0 2 3 5 6 37-44, ^node:  0-6 37-44 (confl regs =  1 4 7-36 45-79)
      Allocno a12r204 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a13r203 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a14r202 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a15r198 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a16r200 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a17r423 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a18r564 of GENERAL_REGS(15) has 10 avail. regs  3 6 37-44, node:  3 6 37-44 (confl regs =  0-2 4 5 7-36 45-79)
      Allocno a19r321 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a20r363 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a21r343 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a22r341 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a23r318 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a24r320 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a25r361 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a26r360 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a27r102 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a28r103 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a29r359 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a30r358 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a31r357 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a32r107 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a33r109 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a34r355 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a35r354 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a36r99 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a37r352 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a38r350 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a39r349 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a47r442 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a48r438 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a49r168 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a50r422 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a51r137 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a52r136 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, ^node:  0-6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a53r419 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a54r562 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-36 45-79)
      Allocno a55r88 of GENERAL_REGS(15) has 10 avail. regs  3 6 37-44, node:  3 6 37-44 (confl regs =  0-2 4 5 7-36 45-79)
      Allocno a56r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a57r367 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a66r342 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a67r411 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a68r89 of GENERAL_REGS(15) has 10 avail. regs  3 6 37-44, node:  3 6 37-44 (confl regs =  0-2 4 5 7-36 45-79)
      Allocno a78r514 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a79r306 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a80r147 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-36 45-79)
      Allocno a81r186 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a82r538 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a83r314 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a84r313 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a85r316 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a86r315 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a87r371 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a97r516 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a98r160 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a99r289 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a100r506 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a101r347 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a102r308 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a103r158 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a104r474 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a105r473 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a106r542 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a107r461 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a108r193 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a109r460 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a110r459 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a111r543 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a112r451 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a113r416 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a114r414 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a115r307 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a116r327 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a117r311 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a118r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a119r406 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a120r404 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a121r403 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a122r401 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a130r470 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a131r469 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a132r468 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a145r541 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a146r540 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a147r212 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, node:  1-4 6 37-44 (confl regs =  0 5 7-36 45-79)
      Allocno a148r224 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-36 45-79)
      Allocno a149r268 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a150r533 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a151r531 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a152r275 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a153r513 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a154r512 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a155r508 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a156r511 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a158r213 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a159r505 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a160r504 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a161r503 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a162r299 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a163r287 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a164r280 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a165r502 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a166r297 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a167r501 of DIREG(1) has 1 avail. regs  5, node:  5 (confl regs =  0-4 6-79)
      Allocno a168r500 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a169r499 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a170r498 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a171r494 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a172r493 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a173r270 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-36 45-79)
      Allocno a174r309 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0-2 4 5 7-36 45-79)
      Allocno a175r230 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a176r479 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a177r152 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a178r244 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a179r227 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a180r156 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a181r478 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a182r477 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a183r476 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a184r157 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a185r154 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a186r450 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a187r446 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a188r445 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a189r407 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a200r491 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a201r490 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a202r277 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a203r274 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a204r488 of GENERAL_REGS(15) has 12 avail. regs  0 3 5 6 37-44, ^node:  0-6 37-44 (confl regs =  1 2 4 7-36 45-79)
      Allocno a216r523 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a217r251 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a218r521 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a229r485 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a230r484 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a231r242 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a232r481 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a233r232 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, ^node:  0-6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a234r483 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a235r240 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a236r238 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a237r237 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a238r482 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a252r226 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a273r393 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a274r382 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a275r539 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a276r376 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a289r388 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a290r386 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a291r384 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a292r383 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a293r380 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a294r378 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Forming thread by copy 43:a274r382-a293r380 (freq=125):
        Result (freq=4090): a274r382(2090) a293r380(2000)
      Forming thread by copy 39:a273r393-a274r382 (freq=11):
        Result (freq=4270): a273r393(180) a274r382(2090) a293r380(2000)
      Forming thread by copy 45:a22r341-a56r87 (freq=7):
        Result (freq=4954): a22r341(31) a56r87(4923)
      Forming thread by copy 46:a23r318-a55r88 (freq=7):
        Result (freq=450): a23r318(23) a55r88(427)
      Forming thread by copy 0:a5r434-a6r435 (freq=1):
        Result (freq=4): a5r434(2) a6r435(2)
      Forming thread by copy 1:a9r428-a11r429 (freq=1):
        Result (freq=4): a9r428(2) a11r429(2)
      Forming thread by copy 3:a78r514-a80r147 (freq=1):
        Result (freq=5): a78r514(2) a80r147(3)
      Forming thread by copy 5:a97r516-a98r160 (freq=1):
        Result (freq=4): a97r516(2) a98r160(2)
      Forming thread by copy 6:a105r473-a106r542 (freq=1):
        Result (freq=7): a105r473(2) a106r542(5)
      Forming thread by copy 7:a104r474-a105r473 (freq=1):
        Result (freq=9): a104r474(2) a105r473(2) a106r542(5)
      Forming thread by copy 8:a131r469-a132r468 (freq=1):
        Result (freq=4): a131r469(2) a132r468(2)
      Forming thread by copy 9:a109r460-a110r459 (freq=1):
        Result (freq=4): a109r460(2) a110r459(2)
      Forming thread by copy 12:a155r508-a157r509 (freq=1):
        Result (freq=5): a155r508(3) a157r509(2)
      Forming thread by copy 13:a154r512-a155r508 (freq=1):
        Result (freq=7): a154r512(2) a155r508(3) a157r509(2)
      Forming thread by copy 15:a153r513-a154r512 (freq=1):
        Result (freq=9): a153r513(2) a154r512(2) a155r508(3) a157r509(2)
      Forming thread by copy 16:a118r90-a153r513 (freq=1):
        Result (freq=60): a118r90(51) a153r513(2) a154r512(2) a155r508(3) a157r509(2)
      Forming thread by copy 17:a79r306-a158r213 (freq=1):
        Result (freq=10): a79r306(5) a158r213(5)
      Forming thread by copy 19:a169r499-a170r498 (freq=1):
        Result (freq=4): a169r499(2) a170r498(2)
      Forming thread by copy 20:a168r500-a169r499 (freq=1):
        Result (freq=6): a168r500(2) a169r499(2) a170r498(2)
      Forming thread by copy 23:a230r484-a232r481 (freq=1):
        Result (freq=4): a230r484(2) a232r481(2)
      Forming thread by copy 26:a175r230-a229r485 (freq=1):
        Result (freq=7): a175r230(4) a229r485(3)
      Forming thread by copy 27:a234r483-a235r240 (freq=1):
        Result (freq=6): a234r483(2) a235r240(4)
      Forming thread by copy 28:a235r240-a236r238 (freq=1):
        Result (freq=9): a234r483(2) a236r238(3) a235r240(4)
      Forming thread by copy 30:a235r240-a238r482 (freq=1):
        Result (freq=11): a234r483(2) a238r482(2) a236r238(3) a235r240(4)
      Forming thread by copy 32:a175r230-a176r479 (freq=1):
        Result (freq=10): a175r230(4) a176r479(3) a229r485(3)
      Forming thread by copy 35:a184r157-a185r154 (freq=1):
        Result (freq=7): a184r157(3) a185r154(4)
      Forming thread by copy 37:a118r90-a189r407 (freq=1):
        Result (freq=76): a118r90(51) a189r407(16) a153r513(2) a154r512(2) a155r508(3) a157r509(2)
      Pushing a252(r226,l0)(cost 0)
      Pushing a218(r521,l0)(cost 0)
      Pushing a216(r523,l0)(cost 0)
      Pushing a204(r488,l0)(cost 0)
      Pushing a202(r277,l0)(cost 0)
      Pushing a201(r490,l0)(cost 0)
      Pushing a200(r491,l0)(cost 0)
      Pushing a188(r445,l0)(cost 0)
      Pushing a187(r446,l0)(cost 0)
      Pushing a186(r450,l0)(cost 0)
      Pushing a183(r476,l0)(cost 0)
        Making a103(r158,l0) colorable
      Pushing a182(r477,l0)(cost 0)
      Pushing a172(r493,l0)(cost 0)
      Pushing a171(r494,l0)(cost 0)
      Pushing a166(r297,l0)(cost 0)
      Pushing a165(r502,l0)(cost 0)
      Pushing a161(r503,l0)(cost 0)
      Pushing a160(r504,l0)(cost 0)
      Pushing a159(r505,l0)(cost 0)
      Pushing a156(r511,l0)(cost 0)
      Pushing a151(r531,l0)(cost 0)
      Pushing a150(r533,l0)(cost 0)
      Pushing a149(r268,l0)(cost 0)
        Making a147(r212,l0) colorable
      Pushing a130(r470,l0)(cost 0)
      Pushing a114(r414,l0)(cost 0)
      Pushing a113(r416,l0)(cost 0)
      Pushing a112(r451,l0)(cost 0)
      Pushing a107(r461,l0)(cost 0)
      Forming thread by copy 38:a81r186-a118r90 (freq=1):
        Result (freq=96): a81r186(20) a118r90(51) a189r407(16) a153r513(2) a154r512(2) a155r508(3) a157r509(2)
        Making a81(r186,l0) colorable
      Pushing a100(r506,l0)(cost 0)
      Pushing a51(r137,l0)(cost 0)
      Pushing a50(r422,l0)(cost 0)
      Pushing a39(r349,l0)(cost 0)
      Pushing a38(r350,l0)(cost 0)
      Pushing a35(r354,l0)(cost 0)
      Pushing a34(r355,l0)(cost 0)
      Pushing a33(r109,l0)(cost 0)
      Pushing a32(r107,l0)(cost 0)
      Pushing a31(r357,l0)(cost 0)
      Pushing a30(r358,l0)(cost 0)
      Pushing a17(r423,l0)(cost 0)
      Pushing a8(r431,l0)(cost 0)
      Pushing a7(r432,l0)(cost 0)
      Pushing a2(r436,l0)(cost 0)
      Pushing a181(r478,l0)(cost 0)
      Pushing a103(r158,l0)(cost 10)
        Making a158(r213,l0) colorable
      Pushing a87(r371,l0)(cost 0)
      Pushing a67(r411,l0)(cost 0)
      Pushing a66(r342,l0)(cost 0)
      Pushing a57(r367,l0)(cost 0)
      Pushing a53(r419,l0)(cost 0)
      Pushing a52(r136,l0)(cost 0)
      Pushing a49(r168,l0)(cost 0)
      Pushing a48(r438,l0)(cost 0)
      Pushing a47(r442,l0)(cost 0)
      Pushing a16(r200,l0)(cost 0)
      Pushing a14(r202,l0)(cost 0)
      Pushing a13(r203,l0)(cost 0)
      Pushing a12(r204,l0)(cost 0)
      Pushing a3(r176,l0)(cost 0)
      Pushing a231(r242,l0)(cost 0)
      Pushing a230(r484,l0)(cost 0)
      Pushing a217(r251,l0)(cost 0)
      Pushing a203(r274,l0)(cost 0)
      Pushing a162(r299,l0)(cost 0)
      Pushing a132(r468,l0)(cost 0)
      Pushing a131(r469,l0)(cost 0)
      Pushing a110(r459,l0)(cost 0)
      Pushing a109(r460,l0)(cost 0)
      Pushing a98(r160,l0)(cost 0)
      Pushing a97(r516,l0)(cost 0)
      Pushing a9(r428,l0)(cost 0)
      Pushing a5(r434,l0)(cost 0)
      Pushing a237(r237,l0)(cost 0)
      Pushing a78(r514,l0)(cost 0)
      Pushing a4(r433,l0)(cost 0)
      Pushing a179(r227,l0)(cost 0)
        Making a180(r156,l0) colorable
      Pushing a180(r156,l0)(cost 16)
      Pushing a170(r498,l0)(cost 0)
      Pushing a169(r499,l0)(cost 0)
        Making a163(r287,l0) colorable
      Pushing a163(r287,l0)(cost 13)
        Making a99(r289,l0) colorable
      Pushing a99(r289,l0)(cost 20)
      Forming thread by copy 18:a152r275-a170r498 (freq=1):
        Result (freq=15): a152r275(9) a168r500(2) a169r499(2) a170r498(2)
        Making a152(r275,l0) colorable
      Pushing a168(r500,l0)(cost 0)
        Making a164(r280,l0) colorable
        Making a167(r501,l0) colorable
      Pushing a167(r501,l0)(cost 2)
      Pushing a111(r543,l0)(cost 0)
      Pushing a37(r352,l0)(cost 0)
      Pushing a29(r359,l0)(cost 0)
      Pushing a26(r360,l0)(cost 0)
      Pushing a25(r361,l0)(cost 0)
      Pushing a184(r157,l0)(cost 0)
      Pushing a185(r154,l0)(cost 0)
      Pushing a108(r193,l0)(cost 0)
      Pushing a15(r198,l0)(cost 0)
      Pushing a122(r401,l0)(cost 0)
      Pushing a164(r280,l0)(cost 40)
        Making a102(r308,l0) colorable
      Pushing a102(r308,l0)(cost 18)
      Pushing a115(r307,l0)(cost 0)
      Pushing a105(r473,l0)(cost 0)
      Pushing a104(r474,l0)(cost 0)
      Pushing a106(r542,l0)(cost 0)
      Pushing a36(r99,l0)(cost 0)
      Pushing a229(r485,l0)(cost 0)
      Forming thread by copy 24:a178r244-a230r484 (freq=1):
        Result (freq=12): a178r244(8) a230r484(2) a232r481(2)
      Forming thread by copy 34:a178r244-a182r477 (freq=1):
        Result (freq=14): a178r244(8) a182r477(2) a230r484(2) a232r481(2)
        Making a178(r244,l0) colorable
      Pushing a176(r479,l0)(cost 0)
      Pushing a175(r230,l0)(cost 0)
      Pushing a147(r212,l0)(cost 36)
        Making a101(r347,l0) colorable
        Making a145(r541,l0) colorable
        Making a146(r540,l0) colorable
      Pushing a158(r213,l0)(cost 21)
      Pushing a79(r306,l0)(cost 0)
      Pushing a238(r482,l0)(cost 0)
        Making a233(r232,l0) colorable
      Pushing a233(r232,l0)(cost 13)
      Pushing a234(r483,l0)(cost 0)
      Pushing a236(r238,l0)(cost 0)
      Pushing a235(r240,l0)(cost 0)
        Making a177(r152,l0) colorable
      Pushing a177(r152,l0)(cost 20)
      Pushing a146(r540,l0)(cost 44)
        Making a1(r245,l0) colorable
      Pushing a145(r541,l0)(cost 44)
      Pushing a27(r102,l0)(cost 0)
      Pushing a119(r406,l0)(cost 0)
      Pushing a28(r103,l0)(cost 0)
      Pushing a178(r244,l0)(cost 26)
      Pushing a152(r275,l0)(cost 34)
      Pushing a101(r347,l0)(cost 80)
      Pushing a121(r403,l0)(cost 0)
      Pushing a120(r404,l0)(cost 0)
      Pushing a20(r363,l0)(cost 0)
        Making a21(r343,l0) colorable
      Forming thread by copy 44:a24r320-a276r376 (freq=11):
        Result (freq=371): a24r320(191) a276r376(180)
        Making a24(r320,l0) colorable
      Pushing a1(r245,l0)(cost 96)
      Pushing a116(r327,l0)(cost 0)
      Pushing a0(r92,l0)(cost 0)
      Pushing a154(r512,l0)(cost 0)
      Pushing a153(r513,l0)(cost 0)
      Pushing a155(r508,l0)(cost 0)
      Pushing a189(r407,l0)(cost 0)
      Pushing a81(r186,l0)(cost 72)
      Pushing a118(r90,l0)(cost 0)
      Pushing a117(r311,l0)(cost 0)
      Pushing a276(r376,l0)(cost 0)
      Pushing a82(r538,l0)(cost 0)
      Forming thread by copy 42:a19r321-a293r380 (freq=125):
        Result (freq=6376): a19r321(2106) a273r393(180) a274r382(2090) a293r380(2000)
        Making a19(r321,l0) colorable
      Pushing a24(r320,l0)(cost 674)
      Pushing a23(r318,l0)(cost 0)
      Pushing a21(r343,l0)(cost 1828)
      Pushing a289(r388,l0)(cost 0)
      Pushing a294(r378,l0)(cost 0)
      Forming thread by copy 41:a56r87-a290r386 (freq=113):
        Result (freq=6774): a22r341(31) a290r386(1820) a56r87(4923)
      Forming thread by copy 2:a56r87-a66r342 (freq=1):
        Result (freq=6777): a22r341(31) a66r342(3) a290r386(1820) a56r87(4923)
        Making a56(r87,l0) colorable
      Pushing a290(r386,l0)(cost 0)
      Forming thread by copy 40:a275r539-a289r388 (freq=56):
        Result (freq=2910): a275r539(2000) a289r388(910)
        Making a275(r539,l0) colorable
      Pushing a292(r383,l0)(cost 0)
        Making a83(r314,l0) colorable
        Making a84(r313,l0) colorable
        Making a85(r316,l0) colorable
        Making a86(r315,l0) colorable
      Pushing a85(r316,l0)(cost 756)
      Pushing a84(r313,l0)(cost 756)
      Pushing a83(r314,l0)(cost 756)
      Pushing a86(r315,l0)(cost 784)
      Pushing a291(r384,l0)(cost 0)
      Pushing a275(r539,l0)(cost 6545)
      Pushing a273(r393,l0)(cost 0)
      Pushing a293(r380,l0)(cost 0)
      Pushing a274(r382,l0)(cost 0)
      Pushing a22(r341,l0)(cost 0)
      Pushing a19(r321,l0)(cost 7334)
        Making a18(r564,l0) colorable
      Forming thread by copy 11:a55r88-a112r451 (freq=1):
        Result (freq=452): a23r318(23) a112r451(2) a55r88(427)
        Making a55(r88,l0) colorable
        Making a68(r89,l0) colorable
      Pushing a68(r89,l0)(cost 104)
        Making a232(r481,l0) colorable
      Pushing a232(r481,l0)(cost 6)
      Pushing a18(r564,l0)(cost 744)
      Forming thread by copy 36:a80r147-a188r445 (freq=1):
        Result (freq=7): a78r514(2) a188r445(2) a80r147(3)
        Making a80(r147,l0) colorable
        Making a173(r270,l0) colorable
      Forming thread by copy 22:a174r309-a175r230 (freq=1):
        Result (freq=13): a174r309(3) a175r230(4) a176r479(3) a229r485(3)
        Making a174(r309,l0) colorable
      Forming thread by copy 21:a148r224-a163r287 (freq=1):
        Result (freq=13): a148r224(9) a163r287(4)
      Forming thread by copy 33:a148r224-a181r478 (freq=1):
        Result (freq=16): a148r224(9) a181r478(3) a163r287(4)
        Making a148(r224,l0) colorable
      Pushing a173(r270,l0)(cost 16)
        Making a54(r562,l0) colorable
      Pushing a80(r147,l0)(cost 9)
      Pushing a54(r562,l0)(cost 31)
      Pushing a174(r309,l0)(cost 10)
      Pushing a148(r224,l0)(cost 31)
      Pushing a55(r88,l0)(cost 1451)
      Pushing a56(r87,l0)(cost 15783)
      Popping a56(r87,l0)  -- assign reg 0
      Popping a55(r88,l0)  -- assign reg 3
      Popping a148(r224,l0)  -- assign reg 6
      Popping a174(r309,l0)  -- assign reg 41
      Popping a54(r562,l0)  -- assign reg 42
      Popping a80(r147,l0)  -- assign reg 43
      Popping a173(r270,l0)  -- assign reg 44
      Popping a18(r564,l0)  -- assign reg 37
      Popping a232(r481,l0)  -- assign reg 41
      Popping a68(r89,l0)  -- assign reg 38
      Popping a19(r321,l0)  -- assign reg 1
      Popping a22(r341,l0)  -- assign reg 0
      Popping a274(r382,l0)  -- assign reg 1
      Popping a293(r380,l0)  -- assign reg 1
      Popping a273(r393,l0)  -- assign reg 1
      Popping a275(r539,l0)  -- assign reg 2
      Popping a291(r384,l0)  -- assign reg 4
      Popping a86(r315,l0)  -- assign reg 5
      Popping a83(r314,l0)  -- assign reg 39
      Popping a84(r313,l0)  -- assign reg 40
      Popping a85(r316,l0)  -- assign reg 6
      Popping a292(r383,l0)  -- assign reg 4
      Popping a290(r386,l0)  -- assign reg 0
      Popping a294(r378,l0)  -- assign reg 1
      Popping a289(r388,l0)  -- assign reg 2
      Popping a21(r343,l0)  -- assign reg 2
      Popping a23(r318,l0)  -- assign reg 3
      Popping a24(r320,l0)  -- assign reg 4
      Popping a82(r538,l0)  -- assign reg 2
      Popping a276(r376,l0)  -- assign reg 4
      Popping a117(r311,l0)  -- assign reg 0
      Popping a118(r90,l0)  -- assign reg 1
      Popping a81(r186,l0)  -- assign reg 1
      Popping a189(r407,l0)  -- assign reg 1
      Popping a155(r508,l0)  -- assign reg 0
      Popping a153(r513,l0)  -- assign reg 1
      Popping a154(r512,l0)  -- assign reg 1
      Popping a0(r92,l0)  -- assign reg 3
      Popping a116(r327,l0)  -- assign reg 2
      Popping a1(r245,l0)  -- assign reg 1
      Popping a20(r363,l0)  -- assign reg 1
      Popping a120(r404,l0)  -- assign reg 0
      Popping a121(r403,l0)  -- assign reg 0
      Popping a101(r347,l0)  -- assign reg 44
      Popping a152(r275,l0)  -- assign reg 1
      Popping a178(r244,l0)  -- assign reg 0
      Popping a28(r103,l0)  -- assign reg 0
      Popping a119(r406,l0)  -- assign reg 0
      Popping a27(r102,l0)  -- assign reg 1
      Popping a145(r541,l0)  -- assign reg 2
      Popping a146(r540,l0)  -- assign reg 4
      Popping a177(r152,l0)  -- assign reg 44
      Popping a235(r240,l0)  -- assign reg 0
      Popping a236(r238,l0)  -- assign reg 0
      Popping a234(r483,l0)  -- assign reg 4
      Popping a233(r232,l0)  -- assign reg 5
      Popping a238(r482,l0)  -- assign reg 0
      Popping a79(r306,l0)  -- assign reg 0
      Popping a158(r213,l0)  -- assign reg 5
      Popping a147(r212,l0)  -- assign reg 39
      Popping a175(r230,l0)  -- assign reg 41
      Popping a176(r479,l0)  -- assign reg 41
      Popping a229(r485,l0)  -- assign reg 41
      Popping a36(r99,l0)  -- assign reg 0
      Popping a106(r542,l0)  -- assign reg 2
      Popping a104(r474,l0)  -- assign reg 0
      Popping a105(r473,l0)  -- assign reg 0
      Popping a115(r307,l0)  -- assign reg 4
      Popping a102(r308,l0)  -- assign reg 41
      Popping a164(r280,l0)  -- assign reg 39
      Popping a122(r401,l0)  -- assign reg 0
      Popping a15(r198,l0)  -- assign reg 0
      Popping a108(r193,l0)  -- assign reg 0
      Popping a185(r154,l0)  -- assign reg 0
      Popping a184(r157,l0)  -- assign reg 39
      Popping a25(r361,l0)  -- assign reg 0
      Popping a26(r360,l0)  -- assign reg 0
      Popping a29(r359,l0)  -- assign reg 2
      Popping a37(r352,l0)  -- assign reg 1
      Popping a111(r543,l0)  -- assign reg 4
      Popping a167(r501,l0)  -- assign reg 5
      Popping a168(r500,l0)  -- assign reg 4
      Popping a99(r289,l0)  -- assign reg 6
      Popping a163(r287,l0)  -- assign reg 2
      Popping a169(r499,l0)  -- assign reg 4
      Popping a170(r498,l0)  -- assign reg 4
      Popping a180(r156,l0)  -- assign reg 40
      Popping a179(r227,l0)  -- assign reg 1
      Popping a4(r433,l0)  -- assign reg 1
      Popping a78(r514,l0)  -- assign reg 3
      Popping a237(r237,l0)  -- assign reg 2
      Popping a5(r434,l0)  -- assign reg 4
      Popping a9(r428,l0)  -- assign reg 5
      Popping a97(r516,l0)  -- assign reg 0
      Popping a98(r160,l0)  -- assign reg 0
      Popping a109(r460,l0)  -- assign reg 5
      Popping a110(r459,l0)  -- assign reg 5
      Popping a131(r469,l0)  -- assign reg 5
      Popping a132(r468,l0)  -- assign reg 5
      Popping a162(r299,l0)  -- assign reg 0
      Popping a203(r274,l0)  -- assign reg 0
      Popping a217(r251,l0)  -- assign reg 0
      Popping a230(r484,l0)  -- assign reg 41
      Popping a231(r242,l0)  -- assign reg 0
      Popping a3(r176,l0)  -- assign reg 6
      Popping a12(r204,l0)  -- assign reg 0
      Popping a13(r203,l0)  -- assign reg 0
      Popping a14(r202,l0)  -- assign reg 0
      Popping a16(r200,l0)  -- assign reg 1
      Popping a47(r442,l0)  -- assign reg 1
      Popping a48(r438,l0)  -- assign reg 1
      Popping a49(r168,l0)  -- assign reg 0
      Popping a52(r136,l0)  -- assign reg 0
      Popping a53(r419,l0)  -- assign reg 1
      Popping a57(r367,l0)  -- assign reg 1
      Popping a66(r342,l0)  -- assign reg 0
      Popping a67(r411,l0)  -- assign reg 1
      Popping a87(r371,l0)  -- assign reg 1
      Popping a103(r158,l0)  -- assign reg 6
      Popping a181(r478,l0)  -- assign reg 6
      Popping a2(r436,l0)  -- assign reg 0
      Popping a7(r432,l0)  -- assign reg 5
      Popping a8(r431,l0)  -- assign reg 0
      Popping a17(r423,l0)  -- assign reg 2
      Popping a30(r358,l0)  -- assign reg 0
      Popping a31(r357,l0)  -- assign reg 1
      Popping a32(r107,l0)  -- assign reg 3
      Popping a33(r109,l0)  -- assign reg 0
      Popping a34(r355,l0)  -- assign reg 0
      Popping a35(r354,l0)  -- assign reg 1
      Popping a38(r350,l0)  -- assign reg 0
      Popping a39(r349,l0)  -- assign reg 0
      Popping a50(r422,l0)  -- assign reg 1
      Popping a51(r137,l0)  -- assign reg 0
      Popping a100(r506,l0)  -- assign reg 0
      Popping a107(r461,l0)  -- assign reg 5
      Popping a112(r451,l0)  -- assign reg 3
      Popping a113(r416,l0)  -- assign reg 0
      Popping a114(r414,l0)  -- assign reg 0
      Popping a130(r470,l0)  -- assign reg 5
      Popping a149(r268,l0)  -- assign reg 0
      Popping a150(r533,l0)  -- assign reg 0
      Popping a151(r531,l0)  -- assign reg 0
      Popping a156(r511,l0)  -- assign reg 1
      Popping a159(r505,l0)  -- assign reg 0
      Popping a160(r504,l0)  -- assign reg 0
      Popping a161(r503,l0)  -- assign reg 0
      Popping a165(r502,l0)  -- assign reg 0
      Popping a166(r297,l0)  -- assign reg 0
      Popping a171(r494,l0)  -- assign reg 0
      Popping a172(r493,l0)  -- assign reg 2
      Popping a182(r477,l0)  -- assign reg 0
      Popping a183(r476,l0)  -- assign reg 39
      Popping a186(r450,l0)  -- assign reg 5
      Popping a187(r446,l0)  -- assign reg 0
      Popping a188(r445,l0)  -- assign reg 43
      Popping a200(r491,l0)  -- assign reg 0
      Popping a201(r490,l0)  -- assign reg 1
      Popping a202(r277,l0)  -- assign reg 0
      Popping a204(r488,l0)  -- assign reg 5
      Popping a216(r523,l0)  -- assign reg 1
      Popping a218(r521,l0)  -- assign reg 1
      Popping a252(r226,l0)  -- assign reg 39
Spilling a80r147 for a1r245
Assigning 43 to a1r245
Spilling a54r562 for a18r564
Assigning 42 to a18r564
Spilling a102r308 for a68r89
Spilling a174r309 for a68r89
Spilling a175r230 for a68r89
Spilling a176r479 for a68r89
Spilling a232r481 for a68r89
Spilling a229r485 for a68r89
Spilling a230r484 for a68r89
Assigning 41 to a68r89
Assigning 43 to a102r308
Assigning 43 to a147r212
Assigning 1 to a175r230
Assigning 1 to a176r479
Assigning 1 to a229r485
Assigning 1 to a230r484
       a232(r481,l0)  -- assign memory
       a176(r479,l0)  -- assign hard reg 1
       a229(r485,l0)  -- assign hard reg 1
       a230(r484,l0)  -- assign hard reg 1
       a80(r147,l0)  -- assign memory
       a174(r309,l0)  -- assign memory
       a175(r230,l0)  -- assign hard reg 1
       a102(r308,l0)  -- assign hard reg 43
       a54(r562,l0)  -- assign memory
Disposition:
   56:r87  l0     0   55:r88  l0     3   68:r89  l0    41  118:r90  l0     1
    0:r92  l0     3   36:r99  l0     0   27:r102 l0     1   28:r103 l0     0
   32:r107 l0     3   33:r109 l0     0   52:r136 l0     0   51:r137 l0     0
   80:r147 l0   mem  177:r152 l0    44  185:r154 l0     0  180:r156 l0    40
  184:r157 l0    39  103:r158 l0     6   98:r160 l0     0   49:r168 l0     0
    3:r176 l0     6   81:r186 l0     1  108:r193 l0     0   15:r198 l0     0
   16:r200 l0     1   14:r202 l0     0   13:r203 l0     0   12:r204 l0     0
  147:r212 l0    43  158:r213 l0     5  148:r224 l0     6  252:r226 l0    39
  179:r227 l0     1  175:r230 l0     1  233:r232 l0     5  237:r237 l0     2
  236:r238 l0     0  235:r240 l0     0  231:r242 l0     0  178:r244 l0     0
    1:r245 l0    43  217:r251 l0     0  149:r268 l0     0  173:r270 l0    44
  203:r274 l0     0  152:r275 l0     1  202:r277 l0     0  164:r280 l0    39
  163:r287 l0     2   99:r289 l0     6  166:r297 l0     0  162:r299 l0     0
   79:r306 l0     0  115:r307 l0     4  102:r308 l0    43  174:r309 l0   mem
  117:r311 l0     0   84:r313 l0    40   83:r314 l0    39   86:r315 l0     5
   85:r316 l0     6   23:r318 l0     3   24:r320 l0     4   19:r321 l0     1
  116:r327 l0     2   22:r341 l0     0   66:r342 l0     0   21:r343 l0     2
  101:r347 l0    44   39:r349 l0     0   38:r350 l0     0   37:r352 l0     1
   35:r354 l0     1   34:r355 l0     0   31:r357 l0     1   30:r358 l0     0
   29:r359 l0     2   26:r360 l0     0   25:r361 l0     0   20:r363 l0     1
   57:r367 l0     1   87:r371 l0     1  276:r376 l0     4  294:r378 l0     1
  293:r380 l0     1  274:r382 l0     1  292:r383 l0     4  291:r384 l0     4
  290:r386 l0     0  289:r388 l0     2  273:r393 l0     1  122:r401 l0     0
  121:r403 l0     0  120:r404 l0     0  119:r406 l0     0  189:r407 l0     1
   67:r411 l0     1  114:r414 l0     0  113:r416 l0     0   53:r419 l0     1
   50:r422 l0     1   17:r423 l0     2   10:r427 l0   mem    9:r428 l0     5
   11:r429 l0   mem    8:r431 l0     0    7:r432 l0     5    4:r433 l0     1
    5:r434 l0     4    6:r435 l0   mem    2:r436 l0     0   48:r438 l0     1
   47:r442 l0     1  188:r445 l0    43  187:r446 l0     0  186:r450 l0     5
  112:r451 l0     3  110:r459 l0     5  109:r460 l0     5  107:r461 l0     5
  132:r468 l0     5  131:r469 l0     5  130:r470 l0     5  105:r473 l0     0
  104:r474 l0     0  183:r476 l0    39  182:r477 l0     0  181:r478 l0     6
  176:r479 l0     1  232:r481 l0   mem  238:r482 l0     0  234:r483 l0     4
  230:r484 l0     1  229:r485 l0     1  204:r488 l0     5  201:r490 l0     1
  200:r491 l0     0  172:r493 l0     2  171:r494 l0     0  170:r498 l0     4
  169:r499 l0     4  168:r500 l0     4  167:r501 l0     5  165:r502 l0     0
  161:r503 l0     0  160:r504 l0     0  159:r505 l0     0  100:r506 l0     0
  155:r508 l0     0  157:r509 l0   mem  156:r511 l0     1  154:r512 l0     1
  153:r513 l0     1   78:r514 l0     3   97:r516 l0     0  218:r521 l0     1
  216:r523 l0     1  151:r531 l0     0  150:r533 l0     0   82:r538 l0     2
  275:r539 l0     2  146:r540 l0     4  145:r541 l0     2  106:r542 l0     2
  111:r543 l0     4   54:r562 l0   mem   18:r564 l0    42
New iteration of spill/restore move
+++Costs: overall 135, reg 52, mem 83, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int yylex()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={42d,25u} r1={43d,7u} r2={38d,2u} r4={50d,14u} r5={64d,28u} r6={1d,172u} r7={1d,207u} r8={35d} r9={35d} r10={35d} r11={35d} r12={35d} r13={35d} r14={35d} r15={35d} r16={1d,171u} r17={144d,66u,3e} r18={35d} r19={35d} r20={1d,176u,2e} r21={33d} r22={33d} r23={33d} r24={33d} r25={33d} r26={33d} r27={33d} r28={33d} r29={32d} r30={32d} r31={32d} r32={32d} r33={32d} r34={32d} r35={32d} r36={32d} r37={36d} r38={36d} r39={35d} r40={35d} r45={32d} r46={32d} r47={32d} r48={32d} r49={32d} r50={32d} r51={32d} r52={32d} r53={35d} r54={35d} r55={35d} r56={35d} r57={35d} r58={35d} r59={35d} r60={35d} r61={35d} r62={35d} r63={35d} r64={35d} r65={35d} r66={35d} r67={35d} r68={35d} r69={35d} r70={35d} r71={35d} r72={35d} r73={35d} r74={35d} r75={35d} r76={35d} r77={35d} r78={35d} r79={35d} r80={35d} r87={6d,17u} r88={10d,28u,1e} r89={5d,7u} r90={3d,10u} r92={35d,1u} r99={1d,2u} r102={2d,3u} r103={2d,3u,1e} r107={1d,1u,1e} r109={1d,1u} r136={1d,2u} r137={1d,1u} r147={1d,3u} r152={1d,4u} r154={2d,2u} r156={1d,6u} r157={1d,2u} r158={1d,2u} r160={1d,2u} r168={1d,2u} r176={1d,2u} r186={4d,2u} r193={2d,5u} r198={2d,5u,1e} r200={1d,2u} r202={1d,2u} r203={1d,2u} r204={1d,2u} r212={3d,12u} r213={1d,7u,1e} r224={1d,9u} r226={1d,1u} r227={2d,8u,1e} r230={2d,2u,1e} r232={1d,3u} r237={1d,5u} r238={1d,2u} r240={2d,3u} r242={1d,3u} r244={2d,6u} r245={5d,24u} r251={1d,3u} r268={1d,1u} r270={1d,3u} r274={1d,3u} r275={5d,6u} r277={1d,1u} r280={3d,7u,2e} r287={1d,5u} r289={1d,4u} r297={1d,1u} r299={2d,2u} r306={2d,3u} r307={1d,2u} r308={3d,3u} r309={1d,4u} r311={2d,6u} r313={2d,2u,1e} r314={2d,2u} r315={2d,2u,1e} r316={2d,2u} r318={3d,4u} r320={6d,3u} r321={13d,2u} r327={1d,1u} r341={9d,6u} r342={1d,2u} r343={12d,4u} r347={6d,9u,5e} r349={1d,1u} r350={1d,1u} r352={1d,1u} r354={1d,1u} r355={1d,1u} r357={1d,1u} r358={1d,1u} r359={1d,1u} r360={1d,1u} r361={1d,1u} r363={1d,2u} r367={1d,2u} r371={1d,2u} r376={1d,2u} r378={1d,1u} r380={1d,1u} r382={1d,2u} r383={1d,1u} r384={1d,1u} r386={1d,1u} r388={1d,2u} r393={1d,1u} r401={1d,1u} r403={1d,1u} r404={1d,1u} r406={1d,1u} r407={1d,1u} r411={1d,2u} r414={1d,1u} r416={1d,1u} r419={1d,2u} r422={1d,1u} r423={1d,1u} r427={1d,1u} r428={1d,1u} r429={1d,1u} r431={1d,1u} r432={1d,1u} r433={1d,5u} r434={1d,1u} r435={1d,1u} r436={1d,1u} r438={1d,2u} r442={1d,2u} r445={1d,1u} r446={1d,1u} r450={1d,1u} r451={1d,1u} r459={1d,1u} r460={1d,1u} r461={1d,1u} r468={1d,1u} r469={1d,1u} r470={1d,1u} r473={1d,1u} r474={1d,1u} r476={1d,1u} r477={1d,1u} r478={1d,3u} r479={1d,3u} r481={1d,2u} r482={1d,1u} r483={1d,1u} r484={1d,1u} r485={1d,3u} r488={1d,1u} r490={1d,1u} r491={1d,1u} r493={1d,1u} r494={1d,1u} r498={1d,1u} r499={1d,1u} r500={1d,1u} r501={1d,1u} r502={1d,1u} r503={1d,1u} r504={1d,1u} r505={1d,1u} r506={1d,1u} r508={1d,2u} r509={1d,1u} r511={1d,1u} r512={1d,1u} r513={1d,1u} r514={1d,1u} r516={1d,1u} r521={1d,1u} r523={1d,1u} r531={1d,1u} r533={1d,1u} r538={1d,3u} r539={2d,2u} r540={5d,6u} r541={5d,6u} r542={2d,3u} r543={2d,5u} r562={1d,1u} r564={1d,2u} 
;;    total ref usage 4269{2941d,1307u,21e} in 834{799 regular + 35 call} insns.
(note 1 0 69 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 63, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 69 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 69 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 71 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.6797+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:787 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 71 3 72 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("_ZL7yy_init") [flags 0x2]  <var_decl 0x7f88bc080510 yy_init>) [2 yy_init+0 S4 A32])
            (const_int 0 [0]))) lex.yy.c:792 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 72 71 73 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) lex.yy.c:792 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 78)
;;  succ:       4 [50.0%] 
;;              3 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 32, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u6(6){ }u7(7){ }u8(16){ }u9(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 318 320
(note 73 72 74 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 3 (set (reg/f:DI 318 [ D.6783 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 75 74 1499 3 (set (reg:QI 320 [ D.6789 ])
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) 93 {*movqi_internal}
     (nil))
(jump_insn 1499 75 1500 3 (set (pc)
        (label_ref 140)) 654 {jump}
     (nil)
 -> 140)
;;  succ:       14 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 318 320

(barrier 1500 1499 78)
;; basic block 4, loop depth 0, count 0, freq 32, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [50.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u10(6){ }u11(7){ }u12(16){ }u13(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 78 1500 79 4 116 "" [1 uses])
(note 79 78 80 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 4 (set (mem/c:SI (symbol_ref:DI ("_ZL7yy_init") [flags 0x2]  <var_decl 0x7f88bc080510 yy_init>) [2 yy_init+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:794 90 {*movsi_internal}
     (nil))
(insn 81 80 82 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
            (const_int 0 [0]))) lex.yy.c:800 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 82 81 83 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) lex.yy.c:800 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 85)
;;  succ:       5 [50.0%]  (FALLTHRU)
;;              6 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [50.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 83 82 84 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 5 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:801 90 {*movsi_internal}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 32, maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [50.0%] 
;;              5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u19(6){ }u20(7){ }u21(16){ }u22(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 85 84 86 6 118 "" [1 uses])
(note 86 85 87 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
            (const_int 0 [0]))) lex.yy.c:803 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 88 87 89 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) lex.yy.c:803 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8500 (nil)))
 -> 92)
;;  succ:       7 [15.0%]  (FALLTHRU)
;;              8 [85.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       6 [15.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u24(6){ }u25(7){ }u26(16){ }u27(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 349
(note 89 88 90 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 7 (set (reg/f:DI 349 [ stdin ])
        (mem/f/c:DI (symbol_ref:DI ("stdin") [flags 0x40]  <var_decl 0x7f88bc3c9d80 stdin>) [1 stdin+0 S8 A64])) lex.yy.c:804 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("stdin") [flags 0x40]  <var_decl 0x7f88bc3c9d80 stdin>) [1 stdin+0 S8 A64])
        (nil)))
(insn 91 90 92 7 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 349 [ stdin ])) lex.yy.c:804 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 349 [ stdin ])
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 32, maybe hot
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       6 [85.0%] 
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u29(6){ }u30(7){ }u31(16){ }u32(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 92 91 93 8 119 "" [1 uses])
(note 93 92 94 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])
            (const_int 0 [0]))) lex.yy.c:806 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 95 94 96 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) lex.yy.c:806 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8500 (nil)))
 -> 99)
;;  succ:       9 [15.0%]  (FALLTHRU)
;;              10 [85.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       8 [15.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u34(6){ }u35(7){ }u36(16){ }u37(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 350
(note 96 95 97 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 9 (set (reg/f:DI 350 [ stdout ])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f88bc3c9e10 stdout>) [1 stdout+0 S8 A64])) lex.yy.c:807 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f88bc3c9e10 stdout>) [1 stdout+0 S8 A64])
        (nil)))
(insn 98 97 99 9 (set (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])
        (reg/f:DI 350 [ stdout ])) lex.yy.c:807 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 350 [ stdout ])
        (nil)))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 32, maybe hot
;;  prev block 9, next block 11, flags: (HOT_PARTITION, RTL)
;;  pred:       8 [85.0%] 
;;              9 [100.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u39(6){ }u40(7){ }u41(16){ }u42(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 99
(code_label 99 98 100 10 120 "" [1 uses])
(note 100 99 101 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 10 (set (reg/f:DI 99 [ D.6780 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:809 89 {*movdi_internal}
     (nil))
(insn 102 101 103 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 99 [ D.6780 ])
            (const_int 0 [0]))) lex.yy.c:809 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 103 102 104 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 111)
            (pc))) lex.yy.c:809 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 672 (nil)))
 -> 111)
;;  succ:       12 [6.7%] 
;;              11 [93.3%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99

;; basic block 11, loop depth 0, count 0, freq 30, maybe hot
;;  prev block 10, next block 12, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       10 [93.3%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u45(6){ }u46(7){ }u47(16){ }u48(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 99
;; lr  def 	 17 [flags] 102 103 352
(note 104 103 106 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(note 106 104 1663 11 NOTE_INSN_DELETED)
(insn 1663 106 107 11 (set (reg:DI 352 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:809 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 107 1663 108 11 (set (reg/f:DI 102 [ D.6780 ])
        (plus:DI (mult:DI (reg:DI 352 [ yy_buffer_stack_top ])
                (const_int 8 [0x8]))
            (reg/f:DI 99 [ D.6780 ]))) lex.yy.c:809 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 352 [ yy_buffer_stack_top ])
        (expr_list:REG_DEAD (reg/f:DI 99 [ D.6780 ])
            (nil))))
(insn 108 107 109 11 (set (reg/f:DI 103 [ D.6782 ])
        (mem/f:DI (reg/f:DI 102 [ D.6780 ]) [1 *_42+0 S8 A64])) lex.yy.c:809 89 {*movdi_internal}
     (nil))
(insn 109 108 110 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 103 [ D.6782 ])
            (const_int 0 [0]))) lex.yy.c:809 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 110 109 111 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 128)
            (pc))) lex.yy.c:809 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8500 (nil)))
 -> 128)
;;  succ:       12 [15.0%]  (FALLTHRU)
;;              13 [85.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 103

;; basic block 12, loop depth 0, count 0, freq 7, maybe hot
;;  prev block 11, next block 13, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       11 [15.0%]  (FALLTHRU)
;;              10 [6.7%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u55(6){ }u56(7){ }u57(16){ }u58(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 102 103 107 109 354 355 357 358
(code_label 111 110 112 12 121 "" [1 uses])
(note 112 111 113 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn 113 112 115 12 (call (mem:QI (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>) [0 yyensure_buffer_stack S1 A8])
        (const_int 0 [0])) lex.yy.c:810 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>)
        (nil))
    (nil))
(note 115 113 116 12 NOTE_INSN_DELETED)
(insn 116 115 1662 12 (set (reg/f:DI 355 [ yy_buffer_stack ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:811 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (nil)))
(insn 1662 116 117 12 (set (reg:DI 354 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:811 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 117 1662 118 12 (set (reg/f:DI 107 [ D.6780 ])
        (plus:DI (mult:DI (reg:DI 354 [ yy_buffer_stack_top ])
                (const_int 8 [0x8]))
            (reg/f:DI 355 [ yy_buffer_stack ]))) lex.yy.c:811 214 {*leadi}
     (expr_list:REG_DEAD (reg/f:DI 355 [ yy_buffer_stack ])
        (expr_list:REG_DEAD (reg:DI 354 [ yy_buffer_stack_top ])
            (nil))))
(insn 118 117 119 12 (set (reg:SI 4 si)
        (const_int 16384 [0x4000])) lex.yy.c:812 90 {*movsi_internal}
     (nil))
(insn 119 118 120 12 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:812 89 {*movdi_internal}
     (nil))
(call_insn 120 119 121 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>) [0 yy_create_buffer S1 A8])
            (const_int 0 [0]))) lex.yy.c:812 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 121 120 122 12 (set (reg/f:DI 109 [ D.6782 ])
        (reg:DI 0 ax)) lex.yy.c:812 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 107 [ D.6780 ]) [1 *_48+0 S8 A64])
            (nil))))
(insn 122 121 124 12 (set (mem/f:DI (reg/f:DI 107 [ D.6780 ]) [1 *_48+0 S8 A64])
        (reg/f:DI 109 [ D.6782 ])) lex.yy.c:812 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 109 [ D.6782 ])
        (expr_list:REG_DEAD (reg/f:DI 107 [ D.6780 ])
            (nil))))
(note 124 122 125 12 NOTE_INSN_DELETED)
(insn 125 124 1661 12 (set (reg/f:DI 358 [ yy_buffer_stack ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (nil)))
(insn 1661 125 126 12 (set (reg:DI 357 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 126 1661 127 12 (set (reg/f:DI 102 [ D.6780 ])
        (plus:DI (mult:DI (reg:DI 357 [ yy_buffer_stack_top ])
                (const_int 8 [0x8]))
            (reg/f:DI 358 [ yy_buffer_stack ]))) 214 {*leadi}
     (expr_list:REG_DEAD (reg/f:DI 358 [ yy_buffer_stack ])
        (expr_list:REG_DEAD (reg:DI 357 [ yy_buffer_stack_top ])
            (nil))))
(insn 127 126 128 12 (set (reg/f:DI 103 [ D.6782 ])
        (mem/f:DI (reg/f:DI 102 [ D.6780 ]) [1 *_1030+0 S8 A64])) 89 {*movdi_internal}
     (nil))
;;  succ:       13 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 103

;; basic block 13, loop depth 0, count 0, freq 32, maybe hot
;;  prev block 12, next block 14, flags: (HOT_PARTITION, RTL)
;;  pred:       11 [85.0%] 
;;              12 [100.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u75(6){ }u76(7){ }u77(16){ }u78(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 103
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 102 103
;; lr  def 	 318 320 359 360 361
(code_label 128 127 129 13 122 "" [1 uses])
(note 129 128 130 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 13 (set (reg:SI 359 [ _1033->yy_n_chars ])
        (mem:SI (plus:DI (reg/f:DI 103 [ D.6782 ])
                (const_int 32 [0x20])) [2 _1033->yy_n_chars+0 S4 A64])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 103 [ D.6782 ])
                (const_int 32 [0x20])) [2 _1033->yy_n_chars+0 S4 A64])
        (nil)))
(insn 131 130 132 13 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 359 [ _1033->yy_n_chars ])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 359 [ _1033->yy_n_chars ])
        (nil)))
(insn 132 131 133 13 (set (reg/f:DI 318 [ D.6783 ])
        (mem/f:DI (plus:DI (reg/f:DI 103 [ D.6782 ])
                (const_int 16 [0x10])) [1 _1033->yy_buf_pos+0 S8 A64])) lex.yy.c:1643 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.6782 ])
        (nil)))
(insn 133 132 134 13 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 318 [ D.6783 ])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 134 133 135 13 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 318 [ D.6783 ])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 135 134 136 13 (set (reg/f:DI 360 [ *_1031 ])
        (mem/f:DI (reg/f:DI 102 [ D.6780 ]) [1 *_1031+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ D.6780 ])
        (nil)))
(insn 136 135 137 13 (set (reg/f:DI 361 [ _249->yy_input_file ])
        (mem/f:DI (reg/f:DI 360 [ *_1031 ]) [1 _249->yy_input_file+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 360 [ *_1031 ])
        (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
            (nil))))
(insn 137 136 138 13 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 361 [ _249->yy_input_file ])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 361 [ _249->yy_input_file ])
        (nil)))
(insn 138 137 139 13 (set (reg:QI 320 [ D.6789 ])
        (mem:QI (reg/f:DI 318 [ D.6783 ]) [0 *_248+0 S1 A8])) lex.yy.c:1645 93 {*movqi_internal}
     (nil))
(insn 139 138 140 13 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 320 [ D.6789 ])) lex.yy.c:1645 93 {*movqi_internal}
     (nil))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 318 320

;; basic block 14, loop depth 0, count 0, freq 64, maybe hot
;;  prev block 13, next block 15, flags: (HOT_PARTITION, RTL)
;;  pred:       13 [100.0%]  (FALLTHRU)
;;              3 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u89(6){ }u90(7){ }u91(16){ }u92(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 318 320
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 321 341 343 363 564
(code_label 140 139 141 14 117 "" [1 uses])
(note 141 140 142 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 144 14 (set (reg:SI 341 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 144 142 145 14 (set (reg:DI 363 [ D.6777 ])
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) 142 {*extendsidi2_rex64}
     (nil))
(insn 145 144 148 14 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 363 [ D.6777 ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])) 92 {*movhi_internal}
     (nil))
(insn 148 145 1438 14 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 363 [ D.6777 ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16])) 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:DI 363 [ D.6777 ])
        (nil)))
(insn 1438 148 1501 14 (set (reg:QI 564)
        (const_int 1 [0x1])) lex.yy.c:844 93 {*movqi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(jump_insn 1501 1438 1502 14 (set (pc)
        (label_ref 162)) 654 {jump}
     (nil)
 -> 162)
;;  succ:       17 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 318 320 321 341 343 564

(barrier 1502 1501 1527)
;; basic block 15, loop depth 1, count 0, freq 2, maybe hot
;;  prev block 14, next block 16, flags: (HOT_PARTITION, RTL)
;;  pred:       52 [98.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u96(6){ }u97(7){ }u98(16){ }u99(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 321 341 343 367
(code_label 1527 1502 151 15 280 "" [1 uses])
(note 151 1527 152 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 154 15 (set (reg:SI 341 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 154 152 155 15 (set (reg:DI 367 [ D.6777 ])
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) 142 {*extendsidi2_rex64}
     (nil))
(insn 155 154 158 15 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 367 [ D.6777 ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])) 92 {*movhi_internal}
     (nil))
(insn 158 155 396 15 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 367 [ D.6777 ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16])) 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:DI 367 [ D.6777 ])
        (nil)))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 321 341 343 564

;; basic block 16, loop depth 1, count 0, freq 17, maybe hot
;;  prev block 15, next block 17, flags: (HOT_PARTITION, RTL)
;;  pred:       50 [100.0%] 
;;              47 [100.0%] 
;;              46 [100.0%] 
;;              48 [100.0%] 
;;              95 [100.0%] 
;;              49 [100.0%] 
;;              15 [100.0%]  (FALLTHRU)
;;              96 [100.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u103(6){ }u104(7){ }u105(16){ }u106(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 321 341 343 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 318 320
(code_label 396 158 159 16 188 "" [7 uses])
(note 159 396 160 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 16 (set (reg/f:DI 318 [ D.6783 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 161 160 162 16 (set (reg:QI 320 [ D.6789 ])
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) 93 {*movqi_internal}
     (nil))
;;  succ:       17 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 318 320 321 341 343 564

;; basic block 17, loop depth 1, count 0, freq 79, maybe hot
;;  prev block 16, next block 18, flags: (HOT_PARTITION, RTL)
;;  pred:       16 [100.0%]  (FALLTHRU,DFS_BACK)
;;              14 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u107(6){ }u108(7){ }u109(16){ }u110(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 318 320 321 341 343 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 318 341
;; lr  def 	 87 88 562
(code_label 162 161 163 17 123 "" [1 uses])
(note 163 162 16 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 16 163 17 17 (set (reg/v:SI 87 [ yy_current_state ])
        (reg:SI 341 [ D.6777 ])) mycc.l:56 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 341 [ D.6777 ])
        (nil)))
(insn 17 16 970 17 (set (reg/v/f:DI 88 [ yy_cp ])
        (reg/f:DI 318 [ D.6783 ])) mycc.l:56 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 318 [ D.6783 ])
        (nil)))
(insn 970 17 376 17 (set (reg:DI 562)
        (const_int 8192 [0x2000])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (const_int 8192 [0x2000])
        (nil)))
;;  succ:       18 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 320 321 343 562 564

;; basic block 18, loop depth 2, count 0, freq 81, maybe hot
;;  prev block 17, next block 19, flags: (HOT_PARTITION, RTL)
;;  pred:       17 [100.0%]  (FALLTHRU)
;;              44 [100.0%]  (DFS_BACK)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u113(6){ }u114(7){ }u115(16){ }u116(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 320 321 343 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 320
;; lr  def 	 89
(code_label 376 970 164 18 186 "" [1 uses])
(note 164 376 165 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(debug_insn 165 164 166 18 (var_location:DI D#16 (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) lex.yy.c:827 -1
     (nil))
(debug_insn 166 165 167 18 (var_location:DI yy_cp (debug_expr:DI D#16)) lex.yy.c:827 -1
     (nil))
(insn 167 166 168 18 (set (mem:QI (reg/v/f:DI 88 [ yy_cp ]) [0 *yy_cp_916+0 S1 A8])
        (reg:QI 320 [ D.6789 ])) lex.yy.c:830 93 {*movqi_internal}
     (nil))
(debug_insn 168 167 169 18 (var_location:DI yy_bp (debug_expr:DI D#16)) lex.yy.c:835 -1
     (nil))
(debug_insn 169 168 170 18 (var_location:SI D#15 (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) lex.yy.c:837 -1
     (nil))
(debug_insn 170 169 18 18 (var_location:SI yy_current_state (debug_expr:SI D#15)) lex.yy.c:837 -1
     (nil))
(insn 18 170 1503 18 (set (reg/v/f:DI 89 [ yy_cp ])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:830 89 {*movdi_internal}
     (nil))
(jump_insn 1503 18 1504 18 (set (pc)
        (label_ref 181)) 654 {jump}
     (nil)
 -> 181)
;;  succ:       20 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 320 321 343 562 564

(barrier 1504 1503 822)
;; basic block 19, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 18, next block 20, flags: (HOT_PARTITION, RTL)
;;  pred:       107 [100.0%] 
;;              154 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u120(6){ }u121(7){ }u122(16){ }u123(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88
;; lr  def 	 320 321 343 371
(code_label 822 1504 173 19 202 "" [2 uses])
(note 173 822 174 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 176 19 (set (reg:QI 320 [ D.6789 ])
        (mem:QI (reg/v/f:DI 88 [ yy_cp ]) [0 *yy_cp_147+0 S1 A8])) 93 {*movqi_internal}
     (nil))
(insn 176 174 177 19 (set (reg:DI 371 [ yy_current_state ])
        (sign_extend:DI (reg/v:SI 87 [ yy_current_state ]))) 142 {*extendsidi2_rex64}
     (nil))
(insn 177 176 180 19 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 371 [ yy_current_state ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])) 92 {*movhi_internal}
     (nil))
(insn 180 177 181 19 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 371 [ yy_current_state ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16])) 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:DI 371 [ yy_current_state ])
        (nil)))
;;  succ:       20 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 320 321 343 562 564

;; basic block 20, loop depth 3, count 0, freq 81, maybe hot
;;  prev block 19, next block 21, flags: (HOT_PARTITION, RTL)
;;  pred:       19 [100.0%]  (FALLTHRU,DFS_BACK)
;;              18 [100.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u128(6){ }u129(7){ }u130(16){ }u131(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 320 321 343 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 313 314 315 316
(code_label 181 180 182 20 124 "" [1 uses])
(note 182 181 183 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 20 (set (reg:SI 314 [ yy_last_accepting_state_lsm.193 ])
        (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 184 183 19 20 (set (reg/f:DI 316 [ yy_last_accepting_cpos_lsm.191 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 19 184 20 20 (set (reg:QI 313 [ yy_last_accepting_state_lsm.194 ])
        (const_int 0 [0])) lex.yy.c:830 93 {*movqi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 20 19 255 20 (set (reg:QI 315 [ yy_last_accepting_cpos_lsm.192 ])
        (const_int 0 [0])) lex.yy.c:830 93 {*movqi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       21 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 313 314 315 316 320 321 343 562 564

;; basic block 21, loop depth 4, count 0, freq 900, maybe hot
;;  prev block 20, next block 22, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       20 [100.0%]  (FALLTHRU)
;;              27 [100.0%]  (DFS_BACK)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u132(6){ }u133(7){ }u134(16){ }u135(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 313 314 315 316 320 321 343 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 313 314 315 316 320 343 564
;; lr  def 	 17 [flags] 313 314 315 316 376 539
(code_label 255 20 185 21 130 "" [1 uses])
(note 185 255 186 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(debug_insn 186 185 187 21 (var_location:DI yy_bp (reg/v/f:DI 89 [ yy_cp ])) -1
     (nil))
(debug_insn 187 186 188 21 (var_location:DI yy_cp (reg/v/f:DI 88 [ yy_cp ])) -1
     (nil))
(debug_insn 188 187 190 21 (var_location:SI yy_current_state (reg/v:SI 87 [ yy_current_state ])) -1
     (nil))
(note 190 188 191 21 NOTE_INSN_DELETED)
(insn 191 190 1409 21 (set (reg:DI 376 [ D.6785 ])
        (zero_extend:DI (reg:QI 320 [ D.6789 ]))) lex.yy.c:841 134 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg:QI 320 [ D.6789 ])
        (nil)))
(debug_insn 1409 191 192 21 (var_location:QI D#23 (mem/u/j:QI (plus:DI (reg:DI 376 [ D.6785 ])
            (symbol_ref:DI ("_ZL5yy_ec") [flags 0x2]  <var_decl 0x7f88bc080b40 yy_ec>)) [0 yy_ec S1 A8])) -1
     (nil))
(note 192 1409 193 21 NOTE_INSN_DELETED)
(debug_insn 193 192 1433 21 (var_location:QI yy_c (debug_expr:QI D#23)) lex.yy.c:841 -1
     (nil))
(insn 1433 193 1434 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 343 [ D.6786 ])
            (const_int 0 [0]))) lex.yy.c:844 2 {*cmphi_ccno_1}
     (nil))
(insn 1434 1433 1435 21 (set (reg:SI 314 [ yy_last_accepting_state_lsm.193 ])
        (if_then_else:SI (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:SI 314 [ yy_last_accepting_state_lsm.193 ])
            (reg/v:SI 87 [ yy_current_state ]))) lex.yy.c:844 953 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 1435 1434 1436 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 343 [ D.6786 ])
            (const_int 0 [0]))) lex.yy.c:844 2 {*cmphi_ccno_1}
     (nil))
(insn 1436 1435 1437 21 (set (reg/f:DI 316 [ yy_last_accepting_cpos_lsm.191 ])
        (if_then_else:DI (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg/f:DI 316 [ yy_last_accepting_cpos_lsm.191 ])
            (reg/v/f:DI 88 [ yy_cp ]))) lex.yy.c:844 954 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 1437 1436 1439 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 343 [ D.6786 ])
            (const_int 0 [0]))) lex.yy.c:844 2 {*cmphi_ccno_1}
     (nil))
(insn 1439 1437 1440 21 (set (reg:QI 313 [ yy_last_accepting_state_lsm.194 ])
        (if_then_else:QI (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:QI 313 [ yy_last_accepting_state_lsm.194 ])
            (reg:QI 564))) lex.yy.c:844 955 {*movqicc_noc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_EQUAL (if_then_else:QI (eq (reg:CCZ 17 flags)
                    (const_int 0 [0]))
                (reg:QI 313 [ yy_last_accepting_state_lsm.194 ])
                (const_int 1 [0x1]))
            (nil))))
(insn 1440 1439 1442 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 343 [ D.6786 ])
            (const_int 0 [0]))) lex.yy.c:844 2 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 343 [ D.6786 ])
        (nil)))
(insn 1442 1440 1389 21 (set (reg:QI 315 [ yy_last_accepting_cpos_lsm.192 ])
        (if_then_else:QI (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:QI 315 [ yy_last_accepting_cpos_lsm.192 ])
            (reg:QI 564))) lex.yy.c:844 955 {*movqicc_noc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_EQUAL (if_then_else:QI (eq (reg:CCZ 17 flags)
                    (const_int 0 [0]))
                (reg:QI 315 [ yy_last_accepting_cpos_lsm.192 ])
                (const_int 1 [0x1]))
            (nil))))
(insn 1389 1442 1505 21 (set (reg:SI 539 [ D.6777 ])
        (zero_extend:SI (mem/u/j:QI (plus:DI (reg:DI 376 [ D.6785 ])
                    (symbol_ref:DI ("_ZL5yy_ec") [flags 0x2]  <var_decl 0x7f88bc080b40 yy_ec>)) [0 yy_ec S1 A8]))) 138 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:DI 376 [ D.6785 ])
        (nil)))
(jump_insn 1505 1389 1506 21 (set (pc)
        (label_ref 205)) 654 {jump}
     (nil)
 -> 205)
;;  succ:       23 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 313 314 315 316 321 539 562 564

(barrier 1506 1505 223)
;; basic block 22, loop depth 5, count 0, freq 9100, maybe hot
;;  prev block 21, next block 23, flags: (HOT_PARTITION, RTL)
;;  pred:       24 [50.0%] 
;;              25 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u164(6){ }u165(7){ }u166(16){ }u167(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 313 314 315 316 539 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 321 378
(code_label 223 1506 201 22 128 "" [2 uses])
(note 201 223 203 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 203 201 204 22 (set (reg:DI 378 [ yy_current_state ])
        (sign_extend:DI (reg/v:SI 87 [ yy_current_state ]))) 142 {*extendsidi2_rex64}
     (nil))
(insn 204 203 205 22 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 378 [ yy_current_state ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16])) 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:DI 378 [ yy_current_state ])
        (nil)))
;;  succ:       23 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 313 314 315 316 321 539 562 564

;; basic block 23, loop depth 5, count 0, freq 10000, maybe hot
;;  prev block 22, next block 24, flags: (HOT_PARTITION, RTL)
;;  pred:       22 [100.0%]  (FALLTHRU,DFS_BACK)
;;              21 [100.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u170(6){ }u171(7){ }u172(16){ }u173(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 313 314 315 316 321 539 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 321 539
;; lr  def 	 17 [flags] 380 382 383 384
(code_label 205 204 206 23 126 "" [1 uses])
(note 206 205 207 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(debug_insn 207 206 208 23 (var_location:QI yy_c (debug_expr:QI D#23)) -1
     (nil))
(debug_insn 208 207 210 23 (var_location:SI yy_current_state (reg/v:SI 87 [ yy_current_state ])) -1
     (nil))
(insn 210 208 212 23 (set (reg:SI 380 [ D.6777 ])
        (zero_extend:SI (reg:HI 321 [ D.6787 ]))) lex.yy.c:847 139 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 321 [ D.6787 ])
        (nil)))
(insn 212 210 213 23 (parallel [
            (set (reg:SI 382 [ D.6777 ])
                (plus:SI (reg:SI 380 [ D.6777 ])
                    (reg:SI 539 [ D.6777 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:847 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 380 [ D.6777 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 213 212 214 23 (set (reg:DI 383 [ D.6777 ])
        (sign_extend:DI (reg:SI 382 [ D.6777 ]))) lex.yy.c:847 142 {*extendsidi2_rex64}
     (nil))
(insn 214 213 215 23 (set (reg:SI 384 [ D.6777 ])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 383 [ D.6777 ])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL6yy_chk") [flags 0x2]  <var_decl 0x7f88bc0806c0 yy_chk>)) [3 yy_chk S2 A16]))) lex.yy.c:847 146 {extendhisi2}
     (expr_list:REG_DEAD (reg:DI 383 [ D.6777 ])
        (nil)))
(insn 215 214 216 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ yy_current_state ])
            (reg:SI 384 [ D.6777 ]))) lex.yy.c:847 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 384 [ D.6777 ])
        (nil)))
(jump_insn 216 215 217 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 234)
            (pc))) lex.yy.c:847 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 234)
;;  succ:       26 [9.0%]  (LOOP_EXIT)
;;              24 [91.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 313 314 315 316 382 539 562 564

;; basic block 24, loop depth 5, count 0, freq 9100, maybe hot
;;  prev block 23, next block 25, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       23 [91.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u183(6){ }u184(7){ }u185(16){ }u186(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 313 314 315 316 539 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 17 [flags] 87 386
(note 217 216 219 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 219 217 220 24 (set (reg:DI 386 [ yy_current_state ])
        (sign_extend:DI (reg/v:SI 87 [ yy_current_state ]))) lex.yy.c:849 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 87 [ yy_current_state ])
        (nil)))
(note 220 219 221 24 NOTE_INSN_DELETED)
(insn 221 220 222 24 (set (reg/v:SI 87 [ yy_current_state ])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 386 [ yy_current_state ])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL6yy_def") [flags 0x2]  <var_decl 0x7f88bc080090 yy_def>)) [3 yy_def S2 A16]))) lex.yy.c:849 146 {extendhisi2}
     (expr_list:REG_DEAD (reg:DI 386 [ yy_current_state ])
        (nil)))
(debug_insn 222 221 224 24 (var_location:SI yy_current_state (reg/v:SI 87 [ yy_current_state ])) lex.yy.c:849 -1
     (nil))
(insn 224 222 225 24 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 87 [ yy_current_state ])
            (const_int 101 [0x65]))) lex.yy.c:850 7 {*cmpsi_1}
     (nil))
(jump_insn 225 224 226 24 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 223)
            (pc))) lex.yy.c:850 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 223)
;;  succ:       25 [50.0%]  (FALLTHRU)
;;              22 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 313 314 315 316 539 562 564

;; basic block 25, loop depth 5, count 0, freq 4550, maybe hot
;;  prev block 24, next block 26, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       24 [50.0%]  (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u193(6){ }u194(7){ }u195(16){ }u196(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 313 314 315 316 539 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 539
;; lr  def 	 388 539
(note 226 225 229 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 229 226 1408 25 (set (reg:DI 388 [ D.6785 ])
        (zero_extend:DI (reg:SI 539 [ D.6777 ]))) lex.yy.c:851 133 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:SI 539 [ D.6777 ])
        (nil)))
(debug_insn 1408 229 230 25 (var_location:QI D#23 (mem/u/j:QI (plus:DI (reg:DI 388 [ D.6785 ])
            (symbol_ref:DI ("_ZL7yy_meta") [flags 0x2]  <var_decl 0x7f88bc080cf0 yy_meta>)) [0 yy_meta S1 A8])) -1
     (nil))
(note 230 1408 231 25 NOTE_INSN_DELETED)
(debug_insn 231 230 1390 25 (var_location:QI yy_c (debug_expr:QI D#23)) lex.yy.c:851 -1
     (nil))
(insn 1390 231 1507 25 (set (reg:SI 539 [ D.6777 ])
        (zero_extend:SI (mem/u/j:QI (plus:DI (reg:DI 388 [ D.6785 ])
                    (symbol_ref:DI ("_ZL7yy_meta") [flags 0x2]  <var_decl 0x7f88bc080cf0 yy_meta>)) [0 yy_meta S1 A8]))) 138 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:DI 388 [ D.6785 ])
        (nil)))
(jump_insn 1507 1390 1508 25 (set (pc)
        (label_ref 223)) 654 {jump}
     (nil)
 -> 223)
;;  succ:       22 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 313 314 315 316 539 562 564

(barrier 1508 1507 234)
;; basic block 26, loop depth 4, count 0, freq 900, maybe hot
;;  prev block 25, next block 27, flags: (HOT_PARTITION, RTL)
;;  pred:       23 [9.0%]  (LOOP_EXIT)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u201(6){ }u202(7){ }u203(16){ }u204(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 313 314 315 316 382 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 382
;; lr  def 	 17 [flags] 87 88 321 393 538
(code_label 234 1508 235 26 127 "" [1 uses])
(note 235 234 240 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 240 235 241 26 (set (reg:DI 393 [ D.6785 ])
        (zero_extend:DI (reg:SI 382 [ D.6777 ]))) lex.yy.c:853 133 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:SI 382 [ D.6777 ])
        (nil)))
(insn 241 240 242 26 (set (reg/v:SI 87 [ yy_current_state ])
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 393 [ D.6785 ])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL6yy_nxt") [flags 0x2]  <var_decl 0x7f88bc0803f0 yy_nxt>)) [3 yy_nxt S2 A16]))) lex.yy.c:853 139 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:DI 393 [ D.6785 ])
        (nil)))
(debug_insn 242 241 243 26 (var_location:SI yy_current_state (reg/v:SI 87 [ yy_current_state ])) lex.yy.c:853 -1
     (nil))
(insn 243 242 244 26 (parallel [
            (set (reg/v/f:DI 88 [ yy_cp ])
                (plus:DI (reg/v/f:DI 88 [ yy_cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:854 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 244 243 246 26 (var_location:DI yy_cp (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:854 -1
     (nil))
(insn 246 244 247 26 (set (reg:DI 538 [ yy_current_state ])
        (sign_extend:DI (reg/v:SI 87 [ yy_current_state ]))) lex.yy.c:856 142 {*extendsidi2_rex64}
     (nil))
(insn 247 246 248 26 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 538 [ yy_current_state ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16])) lex.yy.c:856 92 {*movhi_internal}
     (nil))
(insn 248 247 249 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 321 [ D.6787 ])
            (const_int 190 [0xbe]))) lex.yy.c:856 6 {*cmphi_1}
     (nil))
(jump_insn 249 248 250 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 258)
            (pc))) lex.yy.c:856 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 258)
;;  succ:       28 [9.0%]  (LOOP_EXIT)
;;              27 [91.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 313 314 315 316 321 538 562 564

;; basic block 27, loop depth 4, count 0, freq 819, maybe hot
;;  prev block 26, next block 28, flags: (HOT_PARTITION, RTL)
;;  pred:       26 [91.0%]  (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u214(6){ }u215(7){ }u216(16){ }u217(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 313 314 315 316 321 538 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 538
;; lr  def 	 320 343
(note 250 249 251 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 254 27 (set (reg:QI 320 [ D.6789 ])
        (mem:QI (reg/v/f:DI 88 [ yy_cp ]) [0 MEM[base: yy_cp_82, offset: 0B]+0 S1 A8])) 93 {*movqi_internal}
     (nil))
(insn 254 251 1509 27 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 538 [ yy_current_state ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])) 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:DI 538 [ yy_current_state ])
        (nil)))
(jump_insn 1509 254 1510 27 (set (pc)
        (label_ref 255)) 654 {jump}
     (nil)
 -> 255)
;;  succ:       21 [100.0%]  (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 313 314 315 316 320 321 343 562 564

(barrier 1510 1509 258)
;; basic block 28, loop depth 3, count 0, freq 81, maybe hot
;;  prev block 27, next block 29, flags: (HOT_PARTITION, RTL)
;;  pred:       26 [9.0%]  (LOOP_EXIT)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u220(6){ }u221(7){ }u222(16){ }u223(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 313 314 315 316 538 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 315
;; lr  def 	 17 [flags]
(code_label 258 1510 259 28 129 "" [1 uses])
(note 259 258 260 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 315 [ yy_last_accepting_cpos_lsm.192 ])
            (const_int 0 [0]))) 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 315 [ yy_last_accepting_cpos_lsm.192 ])
        (nil)))
(jump_insn 261 260 262 28 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 264)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 264)
;;  succ:       30 [100.0%] 
;;              29 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 313 314 316 538 562 564

;; basic block 29, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (HOT_PARTITION, RTL)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u226(6){ }u227(7){ }u228(16){ }u229(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 313 314 316 538 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 316
;; lr  def 	
(note 262 261 263 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 263 262 264 29 (set (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])
        (reg/f:DI 316 [ yy_last_accepting_cpos_lsm.191 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 316 [ yy_last_accepting_cpos_lsm.191 ])
        (nil)))
;;  succ:       30 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 313 314 538 562 564

;; basic block 30, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (HOT_PARTITION, RTL)
;;  pred:       29 [100.0%]  (FALLTHRU)
;;              28 [100.0%] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u231(6){ }u232(7){ }u233(16){ }u234(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 313 314 538 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 313
;; lr  def 	 17 [flags]
(code_label 264 263 265 30 131 "" [1 uses])
(note 265 264 266 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 267 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 313 [ yy_last_accepting_state_lsm.194 ])
            (const_int 0 [0]))) 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 313 [ yy_last_accepting_state_lsm.194 ])
        (nil)))
(jump_insn 267 266 268 30 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 270)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 270)
;;  succ:       32 [100.0%] 
;;              31 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 314 538 562 564

;; basic block 31, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 30, next block 32, flags: (HOT_PARTITION, RTL)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u237(6){ }u238(7){ }u239(16){ }u240(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 314 538 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 314
;; lr  def 	
(note 268 267 269 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 269 268 270 31 (set (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])
        (reg:SI 314 [ yy_last_accepting_state_lsm.193 ])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 314 [ yy_last_accepting_state_lsm.193 ])
        (nil)))
;;  succ:       32 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 538 562 564

;; basic block 32, loop depth 3, count 0, freq 81, maybe hot
;;  prev block 31, next block 33, flags: (HOT_PARTITION, RTL)
;;  pred:       31 [100.0%]  (FALLTHRU)
;;              30 [100.0%] 
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u242(6){ }u243(7){ }u244(16){ }u245(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 538 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 538
;; lr  def 	 186
(code_label 270 269 271 32 132 "" [1 uses])
(note 271 270 274 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 274 271 278 32 (set (reg:HI 186 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 538 [ yy_current_state ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])) 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:DI 538 [ yy_current_state ])
        (nil)))
;;  succ:       33 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 186 562 564

;; basic block 33, loop depth 4, count 0, freq 83, maybe hot
;;  prev block 32, next block 34, flags: (HOT_PARTITION, RTL)
;;  pred:       32 [100.0%]  (FALLTHRU)
;;              105 [28.0%] 
;;              45 [100.0%]  (DFS_BACK)
;;              106 [98.0%] 
;;              155 [100.0%]  (DFS_BACK)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u247(6){ }u248(7){ }u249(16){ }u250(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 186 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 186
;; lr  def 	 17 [flags] 90
(code_label 278 274 279 33 133 "" [4 uses])
(note 279 278 280 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(debug_insn 280 279 281 33 (var_location:DI yy_bp (reg/v/f:DI 89 [ yy_cp ])) -1
     (nil))
(debug_insn 281 280 282 33 (var_location:DI yy_cp (reg/v/f:DI 88 [ yy_cp ])) -1
     (nil))
(debug_insn 282 281 283 33 (var_location:SI yy_current_state (clobber (const_int 0 [0]))) -1
     (nil))
(insn 283 282 284 33 (set (reg/v:SI 90 [ yy_act ])
        (sign_extend:SI (reg:HI 186 [ D.6786 ]))) lex.yy.c:859 146 {extendhisi2}
     (expr_list:REG_DEAD (reg:HI 186 [ D.6786 ])
        (nil)))
(debug_insn 284 283 285 33 (var_location:SI yy_act (reg/v:SI 90 [ yy_act ])) lex.yy.c:859 -1
     (nil))
(insn 285 284 286 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 90 [ yy_act ])
            (const_int 0 [0]))) lex.yy.c:860 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 286 285 287 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 296)
            (pc))) lex.yy.c:860 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 296)
;;  succ:       34 [50.0%]  (FALLTHRU)
;;              35 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90 562 564

;; basic block 34, loop depth 4, count 0, freq 42, maybe hot
;;  prev block 33, next block 35, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       33 [50.0%]  (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u257(6){ }u258(7){ }u259(16){ }u260(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 88 90 401
(note 287 286 288 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 288 287 289 34 (set (reg/v/f:DI 88 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])) lex.yy.c:862 89 {*movdi_internal}
     (nil))
(debug_insn 289 288 290 34 (var_location:DI yy_cp (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:862 -1
     (nil))
(debug_insn 290 289 292 34 (var_location:SI yy_current_state (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])) lex.yy.c:863 -1
     (nil))
(note 292 290 293 34 NOTE_INSN_DELETED)
(insn 293 292 294 34 (set (reg:DI 401 [ yy_last_accepting_state ])
        (sign_extend:DI (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32]))) lex.yy.c:864 142 {*extendsidi2_rex64}
     (nil))
(insn 294 293 295 34 (set (reg/v:SI 90 [ yy_act ])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 401 [ yy_last_accepting_state ])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16]))) lex.yy.c:864 146 {extendhisi2}
     (expr_list:REG_DEAD (reg:DI 401 [ yy_last_accepting_state ])
        (nil)))
(debug_insn 295 294 296 34 (var_location:SI yy_act (reg/v:SI 90 [ yy_act ])) lex.yy.c:864 -1
     (nil))
;;  succ:       35 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90 562 564

;; basic block 35, loop depth 4, count 0, freq 83, maybe hot
;;  prev block 34, next block 36, flags: (HOT_PARTITION, RTL)
;;  pred:       33 [50.0%] 
;;              34 [100.0%]  (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u265(6){ }u266(7){ }u267(16){ }u268(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90
;; lr  def 	 17 [flags] 403 404
(code_label 296 295 297 35 134 "" [1 uses])
(note 297 296 298 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(debug_insn 298 297 299 35 (var_location:SI yy_act (reg/v:SI 90 [ yy_act ])) -1
     (nil))
(debug_insn 299 298 300 35 (var_location:DI yy_cp (reg/v/f:DI 88 [ yy_cp ])) -1
     (nil))
(insn 300 299 302 35 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/v/f:DI 89 [ yy_cp ])) lex.yy.c:867 89 {*movdi_internal}
     (nil))
(insn 302 300 303 35 (parallel [
            (set (reg:DI 403)
                (minus:DI (reg/v/f:DI 88 [ yy_cp ])
                    (reg/v/f:DI 89 [ yy_cp ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:867 261 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])
            (nil))))
(insn 303 302 304 35 (set (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])
        (reg:DI 403)) lex.yy.c:867 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 403)
        (nil)))
(insn 304 303 305 35 (set (reg:QI 404 [ *yy_cp_6 ])
        (mem:QI (reg/v/f:DI 88 [ yy_cp ]) [0 *yy_cp_6+0 S1 A8])) lex.yy.c:867 93 {*movqi_internal}
     (expr_list:REG_EQUIV (mem:QI (reg/v/f:DI 88 [ yy_cp ]) [0 *yy_cp_6+0 S1 A8])
        (nil)))
(insn 305 304 306 35 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 404 [ *yy_cp_6 ])) lex.yy.c:867 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 404 [ *yy_cp_6 ])
        (nil)))
(insn 306 305 307 35 (set (mem:QI (reg/v/f:DI 88 [ yy_cp ]) [0 *yy_cp_6+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:867 93 {*movqi_internal}
     (nil))
(insn 307 306 308 35 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:867 89 {*movdi_internal}
     (nil))
(insn 308 307 309 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 90 [ yy_act ])
            (const_int 46 [0x2e]))) lex.yy.c:869 7 {*cmpsi_1}
     (nil))
(jump_insn 309 308 310 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 347)
            (pc))) lex.yy.c:869 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 347)
;;  succ:       36 [72.0%]  (FALLTHRU)
;;              41 [28.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90 562 564

;; basic block 36, loop depth 4, count 0, freq 60, maybe hot
;;  prev block 35, next block 37, flags: (HOT_PARTITION, RTL)
;;  pred:       35 [72.0%]  (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u281(6){ }u282(7){ }u283(16){ }u284(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 17 [flags] 406
(note 310 309 312 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 312 310 313 36 (set (reg:DI 406 [ yy_act ])
        (sign_extend:DI (reg/v:SI 90 [ yy_act ]))) lex.yy.c:869 142 {*extendsidi2_rex64}
     (nil))
(insn 313 312 314 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/u:SI (plus:DI (mult:DI (reg:DI 406 [ yy_act ])
                        (const_int 4 [0x4]))
                    (symbol_ref:DI ("_ZL21yy_rule_can_match_eol") [flags 0x2]  <var_decl 0x7f88bc080750 yy_rule_can_match_eol>)) [2 yy_rule_can_match_eol S4 A32])
            (const_int 0 [0]))) lex.yy.c:869 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 406 [ yy_act ])
        (nil)))
(jump_insn 314 313 315 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 347)
            (pc))) lex.yy.c:869 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 347)
;;  succ:       37 [50.0%]  (FALLTHRU)
;;              41 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90 562 564

;; basic block 37, loop depth 4, count 0, freq 30, maybe hot
;;  prev block 36, next block 38, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       36 [50.0%]  (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u288(6){ }u289(7){ }u290(16){ }u291(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 307 311 327
(note 315 314 316 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(debug_insn 316 315 317 37 (var_location:DI yyl (const_int 0 [0])) -1
     (nil))
(insn 317 316 326 37 (set (reg:DI 307 [ D.6781 ])
        (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])) lex.yy.c:872 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])
        (nil)))
(insn 326 317 328 37 (set (reg:DI 311 [ ivtmp.210 ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 328 326 318 37 (parallel [
            (set (reg:DI 327 [ D.6796 ])
                (plus:DI (reg:DI 311 [ ivtmp.210 ])
                    (reg:DI 307 [ D.6781 ])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 318 328 319 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 307 [ D.6781 ])
            (const_int 0 [0]))) lex.yy.c:872 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 307 [ D.6781 ])
        (nil)))
(jump_insn 319 318 1472 37 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 347)
            (pc))) lex.yy.c:872 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 347)
;;  succ:       41 [9.0%] 
;;              38 [91.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90 311 327 562 564

;; basic block 38, loop depth 5, count 0, freq 303, maybe hot
;;  prev block 37, next block 39, flags: (HOT_PARTITION, RTL)
;;  pred:       37 [91.0%]  (FALLTHRU)
;;              40 [91.0%]  (DFS_BACK)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u296(6){ }u297(7){ }u298(16){ }u299(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90 311 327 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 311
;; lr  def 	 17 [flags]
(code_label 1472 319 1443 38 268 "" [1 uses])
(note 1443 1472 330 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(debug_insn 330 1443 331 38 (var_location:DI yyl (minus:DI (reg:DI 311 [ ivtmp.210 ])
        (debug_expr:DI D#21))) -1
     (nil))
(insn 331 330 332 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg:DI 311 [ ivtmp.210 ]) [0 MEM[base: _324, offset: 0B]+0 S1 A8])
            (const_int 10 [0xa]))) lex.yy.c:873 5 {*cmpqi_1}
     (nil))
(jump_insn 332 331 333 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 335)
            (pc))) lex.yy.c:873 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 335)
;;  succ:       39 [28.0%]  (FALLTHRU)
;;              40 [72.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90 311 327 562 564

;; basic block 39, loop depth 5, count 0, freq 85, maybe hot
;;  prev block 38, next block 40, flags: (HOT_PARTITION, RTL)
;;  pred:       38 [28.0%]  (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u303(6){ }u304(7){ }u305(16){ }u306(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90 311 327 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 333 332 334 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 334 333 335 39 (parallel [
            (set (mem/c:SI (symbol_ref:DI ("yylineno") [flags 0x2]  <var_decl 0x7f88bc0807e0 yylineno>) [2 yylineno+0 S4 A32])
                (plus:SI (mem/c:SI (symbol_ref:DI ("yylineno") [flags 0x2]  <var_decl 0x7f88bc0807e0 yylineno>) [2 yylineno+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:875 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       40 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90 311 327 562 564

;; basic block 40, loop depth 5, count 0, freq 303, maybe hot
;;  prev block 39, next block 41, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       38 [72.0%] 
;;              39 [100.0%]  (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u307(6){ }u308(7){ }u309(16){ }u310(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90 311 327 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 311 327
;; lr  def 	 17 [flags] 311
(code_label 335 334 336 40 138 "" [1 uses])
(note 336 335 337 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(debug_insn 337 336 339 40 (var_location:DI D#19 (plus:DI (minus:DI (reg:DI 311 [ ivtmp.210 ])
            (debug_expr:DI D#21))
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 339 337 340 40 (var_location:DI yyl (debug_expr:DI D#19)) -1
     (nil))
(insn 340 339 341 40 (parallel [
            (set (reg:DI 311 [ ivtmp.210 ])
                (plus:DI (reg:DI 311 [ ivtmp.210 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 341 340 342 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 311 [ ivtmp.210 ])
            (reg:DI 327 [ D.6796 ]))) lex.yy.c:872 8 {*cmpdi_1}
     (nil))
(jump_insn 342 341 347 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1472)
            (pc))) lex.yy.c:872 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 1472)
;;  succ:       41 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              38 [91.0%]  (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90 311 327 562 564

;; basic block 41, loop depth 5, count 0, freq 84, maybe hot
;;  prev block 40, next block 42, flags: (HOT_PARTITION, RTL)
;;  pred:       40 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              37 [9.0%] 
;;              35 [28.0%] 
;;              36 [50.0%] 
;;              153 [100.0%]  (DFS_BACK)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u316(6){ }u317(7){ }u318(16){ }u319(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 17 [flags]
(code_label 347 342 348 41 137 "" [4 uses])
(note 348 347 349 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(debug_insn 349 348 350 41 (var_location:SI yy_act (reg/v:SI 90 [ yy_act ])) -1
     (nil))
(insn 350 349 351 41 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 90 [ yy_act ])
            (const_int 49 [0x31]))) lex.yy.c:881 7 {*cmpsi_1}
     (nil))
(jump_insn 351 350 1350 41 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1218)
            (pc))) lex.yy.c:881 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 222 (nil)))
 -> 1218)
;;  succ:       156 [2.2%]  (LOOP_EXIT)
;;              42 [97.8%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90 562 564

;; basic block 42, loop depth 5, count 0, freq 82, maybe hot
;;  prev block 41, next block 43, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [97.8%]  (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u323(6){ }u324(7){ }u325(16){ }u326(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90
;; lr  def 	 407
(note 1350 351 352 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 352 1350 354 42 (set (reg:DI 407 [ yy_act ])
        (zero_extend:DI (reg/v:SI 90 [ yy_act ]))) lex.yy.c:881 133 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg/v:SI 90 [ yy_act ])
        (nil)))
(note 354 352 355 42 NOTE_INSN_DELETED)
(jump_insn 355 354 356 42 (parallel [
            (set (pc)
                (mem/u/c:DI (plus:DI (mult:DI (reg:DI 407 [ yy_act ])
                            (const_int 8 [0x8]))
                        (label_ref:DI 357)) [0  S8 A8]))
            (use (label_ref 357))
        ]) lex.yy.c:881 658 {*tablejump_1}
     (expr_list:REG_DEAD (reg:DI 407 [ yy_act ])
        (insn_list:REG_LABEL_OPERAND 357 (nil)))
 -> 357)
;;  succ:       94 [2.3%]  (LOOP_EXIT)
;;              45 [2.3%]  (LOOP_EXIT)
;;              46 [2.3%]  (LOOP_EXIT)
;;              44 [2.3%]  (LOOP_EXIT)
;;              51 [2.3%]  (LOOP_EXIT)
;;              47 [2.3%]  (LOOP_EXIT)
;;              48 [2.3%]  (LOOP_EXIT)
;;              49 [2.3%]  (LOOP_EXIT)
;;              97 [2.3%] 
;;              50 [2.3%]  (LOOP_EXIT)
;;              96 [2.3%]  (LOOP_EXIT)
;;              95 [2.3%]  (LOOP_EXIT)
;;              54 [2.3%]  (LOOP_EXIT)
;;              57 [2.3%]  (LOOP_EXIT)
;;              62 [2.3%]  (LOOP_EXIT)
;;              65 [2.3%]  (LOOP_EXIT)
;;              68 [2.3%]  (LOOP_EXIT)
;;              69 [2.3%]  (LOOP_EXIT)
;;              70 [2.3%]  (LOOP_EXIT)
;;              157 [2.3%]  (LOOP_EXIT)
;;              158 [2.3%]  (LOOP_EXIT)
;;              43 [2.3%]  (LOOP_EXIT)
;;              72 [2.3%]  (LOOP_EXIT)
;;              73 [2.3%]  (LOOP_EXIT)
;;              74 [2.3%]  (LOOP_EXIT)
;;              75 [2.3%]  (LOOP_EXIT)
;;              76 [2.3%]  (LOOP_EXIT)
;;              77 [2.3%]  (LOOP_EXIT)
;;              78 [2.3%]  (LOOP_EXIT)
;;              79 [2.3%]  (LOOP_EXIT)
;;              80 [2.3%]  (LOOP_EXIT)
;;              81 [2.3%]  (LOOP_EXIT)
;;              82 [2.3%]  (LOOP_EXIT)
;;              83 [2.3%]  (LOOP_EXIT)
;;              84 [2.3%]  (LOOP_EXIT)
;;              85 [2.3%]  (LOOP_EXIT)
;;              86 [2.3%]  (LOOP_EXIT)
;;              87 [2.3%]  (LOOP_EXIT)
;;              88 [2.3%]  (LOOP_EXIT)
;;              89 [2.3%]  (LOOP_EXIT)
;;              90 [2.3%]  (LOOP_EXIT)
;;              91 [2.3%]  (LOOP_EXIT)
;;              92 [2.3%]  (LOOP_EXIT)
;;              93 [2.3%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 562 564

(barrier 356 355 357)
;; Insn is not within a basic block
(code_label 357 356 358 142 "" [2 uses])
;; Insn is not within a basic block
(jump_table_data 358 357 359 (addr_vec:DI [
            (label_ref:DI 379)
            (label_ref:DI 393)
            (label_ref:DI 364)
            (label_ref:DI 364)
            (label_ref:DI 399)
            (label_ref:DI 411)
            (label_ref:DI 416)
            (label_ref:DI 364)
            (label_ref:DI 421)
            (label_ref:DI 364)
            (label_ref:DI 364)
            (label_ref:DI 451)
            (label_ref:DI 474)
            (label_ref:DI 499)
            (label_ref:DI 518)
            (label_ref:DI 535)
            (label_ref:DI 551)
            (label_ref:DI 560)
            (label_ref:DI 1223)
            (label_ref:DI 1330)
            (label_ref:DI 360)
            (label_ref:DI 584)
            (label_ref:DI 588)
            (label_ref:DI 592)
            (label_ref:DI 596)
            (label_ref:DI 600)
            (label_ref:DI 604)
            (label_ref:DI 608)
            (label_ref:DI 612)
            (label_ref:DI 616)
            (label_ref:DI 620)
            (label_ref:DI 624)
            (label_ref:DI 628)
            (label_ref:DI 632)
            (label_ref:DI 636)
            (label_ref:DI 640)
            (label_ref:DI 644)
            (label_ref:DI 648)
            (label_ref:DI 652)
            (label_ref:DI 656)
            (label_ref:DI 660)
            (label_ref:DI 664)
            (label_ref:DI 668)
            (label_ref:DI 672)
            (label_ref:DI 678)
            (label_ref:DI 691)
            (label_ref:DI 707)
            (label_ref:DI 437)
            (label_ref:DI 437)
            (label_ref:DI 437)
        ]))
(barrier 359 358 360)
;; basic block 43, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 42, next block 44, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u330(6){ }u331(7){ }u332(16){ }u333(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 360 359 361 43 158 "" [1 uses])
(note 361 360 44 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 44 361 1511 43 (set (reg:SI 92 [ D.6777 ])
        (const_int 278 [0x116])) mycc.l:77 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 278 [0x116])
        (nil)))
(jump_insn 1511 44 1512 43 (set (pc)
        (label_ref 1225)) 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1512 1511 364)
;; basic block 44, loop depth 2, count 0, freq 2, maybe hot
;;  prev block 43, next block 45, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u334(6){ }u335(7){ }u336(16){ }u337(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87 88 320 321 342 343 411
(code_label 364 1512 365 44 144 "" [5 uses])
(note 365 364 366 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 366 365 367 44 (set (reg:QI 320 [ D.6789 ])
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) 93 {*movqi_internal}
     (nil))
(insn 367 366 369 44 (set (reg:SI 342 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (nil)))
(insn 369 367 370 44 (set (reg:DI 411 [ D.6777 ])
        (sign_extend:DI (reg:SI 342 [ D.6777 ]))) 142 {*extendsidi2_rex64}
     (nil))
(insn 370 369 373 44 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 411 [ D.6777 ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])) 92 {*movhi_internal}
     (nil))
(insn 373 370 374 44 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 411 [ D.6777 ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16])) 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:DI 411 [ D.6777 ])
        (nil)))
(insn 374 373 375 44 (set (reg/v/f:DI 88 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 375 374 1513 44 (set (reg/v:SI 87 [ yy_current_state ])
        (reg:SI 342 [ D.6777 ])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 342 [ D.6777 ])
        (nil)))
(jump_insn 1513 375 1514 44 (set (pc)
        (label_ref 376)) 654 {jump}
     (nil)
 -> 376)
;;  succ:       18 [100.0%]  (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 320 321 343 562 564

(barrier 1514 1513 379)
;; basic block 45, loop depth 4, count 0, freq 2, maybe hot
;;  prev block 44, next block 46, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u342(6){ }u343(7){ }u344(16){ }u345(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 88 186 414 416
(code_label 379 1514 380 45 141 "" [1 uses])
(note 380 379 381 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 381 380 382 45 (set (reg:QI 414 [ yy_hold_char ])
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) lex.yy.c:885 93 {*movqi_internal}
     (expr_list:REG_EQUIV (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (nil)))
(insn 382 381 383 45 (set (mem:QI (reg/v/f:DI 88 [ yy_cp ]) [0 *yy_cp_6+0 S1 A8])
        (reg:QI 414 [ yy_hold_char ])) lex.yy.c:885 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 414 [ yy_hold_char ])
        (expr_list:REG_DEAD (reg/v/f:DI 88 [ yy_cp ])
            (nil))))
(insn 383 382 384 45 (set (reg/v/f:DI 88 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])) lex.yy.c:886 89 {*movdi_internal}
     (nil))
(debug_insn 384 383 385 45 (var_location:DI yy_cp (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:886 -1
     (nil))
(debug_insn 385 384 387 45 (var_location:SI yy_current_state (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])) lex.yy.c:887 -1
     (nil))
(note 387 385 388 45 NOTE_INSN_DELETED)
(insn 388 387 389 45 (set (reg:DI 416 [ yy_last_accepting_state ])
        (sign_extend:DI (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32]))) 142 {*extendsidi2_rex64}
     (nil))
(insn 389 388 1515 45 (set (reg:HI 186 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 416 [ yy_last_accepting_state ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])) 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:DI 416 [ yy_last_accepting_state ])
        (nil)))
(jump_insn 1515 389 1516 45 (set (pc)
        (label_ref 278)) lex.yy.c:888 654 {jump}
     (nil)
 -> 278)
;;  succ:       33 [100.0%]  (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 186 562 564

(barrier 1516 1515 393)
;; basic block 46, loop depth 1, count 0, freq 2, maybe hot
;;  prev block 45, next block 47, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u351(6){ }u352(7){ }u353(16){ }u354(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 321 341 343
(code_label 393 1516 394 46 143 "" [1 uses])
(note 394 393 395 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 395 394 4 46 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 5 [0x5])) mycc.l:43 90 {*movsi_internal}
     (nil))
(insn 4 395 5 46 (set (reg:HI 321 [ D.6787 ])
        (const_int 40 [0x28])) mycc.l:44 92 {*movhi_internal}
     (nil))
(insn 5 4 6 46 (set (reg:HI 343 [ D.6786 ])
        (const_int 2 [0x2])) mycc.l:44 92 {*movhi_internal}
     (nil))
(insn 6 5 1517 46 (set (reg:SI 341 [ D.6777 ])
        (const_int 5 [0x5])) mycc.l:44 90 {*movsi_internal}
     (nil))
(jump_insn 1517 6 1518 46 (set (pc)
        (label_ref 396)) mycc.l:44 654 {jump}
     (nil)
 -> 396)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 321 341 343 564

(barrier 1518 1517 399)
;; basic block 47, loop depth 1, count 0, freq 2, maybe hot
;;  prev block 46, next block 48, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u355(6){ }u356(7){ }u357(16){ }u358(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 321 341 343 419
(code_label 399 1518 400 47 145 "" [1 uses])
(note 400 399 401 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 401 400 402 47 (parallel [
            (set (mem/c:SI (symbol_ref:DI ("_ZL8line_num") [flags 0x2]  <var_decl 0x7f88bc119b40 line_num>) [2 line_num+0 S4 A32])
                (plus:SI (mem/c:SI (symbol_ref:DI ("_ZL8line_num") [flags 0x2]  <var_decl 0x7f88bc119b40 line_num>) [2 line_num+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mycc.l:46 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 402 401 404 47 (set (reg:SI 341 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 404 402 405 47 (set (reg:DI 419 [ D.6777 ])
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) 142 {*extendsidi2_rex64}
     (nil))
(insn 405 404 408 47 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 419 [ D.6777 ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])) 92 {*movhi_internal}
     (nil))
(insn 408 405 1519 47 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 419 [ D.6777 ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16])) 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:DI 419 [ D.6777 ])
        (nil)))
(jump_insn 1519 408 1520 47 (set (pc)
        (label_ref 396)) mycc.l:47 654 {jump}
     (nil)
 -> 396)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 321 341 343 564

(barrier 1520 1519 411)
;; basic block 48, loop depth 1, count 0, freq 2, maybe hot
;;  prev block 47, next block 49, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u362(6){ }u363(7){ }u364(16){ }u365(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 321 341 343
(code_label 411 1520 412 48 146 "" [1 uses])
(note 412 411 413 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 413 412 7 48 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 1 [0x1])) mycc.l:47 90 {*movsi_internal}
     (nil))
(insn 7 413 8 48 (set (reg:HI 321 [ D.6787 ])
        (const_int 0 [0])) mycc.l:48 92 {*movhi_internal}
     (nil))
(insn 8 7 9 48 (set (reg:HI 343 [ D.6786 ])
        (const_int 0 [0])) mycc.l:48 92 {*movhi_internal}
     (nil))
(insn 9 8 1521 48 (set (reg:SI 341 [ D.6777 ])
        (const_int 1 [0x1])) mycc.l:48 90 {*movsi_internal}
     (nil))
(jump_insn 1521 9 1522 48 (set (pc)
        (label_ref 396)) mycc.l:48 654 {jump}
     (nil)
 -> 396)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 321 341 343 564

(barrier 1522 1521 416)
;; basic block 49, loop depth 1, count 0, freq 2, maybe hot
;;  prev block 48, next block 50, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u366(6){ }u367(7){ }u368(16){ }u369(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 321 341 343
(code_label 416 1522 417 49 147 "" [1 uses])
(note 417 416 418 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 418 417 10 49 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 3 [0x3])) mycc.l:49 90 {*movsi_internal}
     (nil))
(insn 10 418 11 49 (set (reg:HI 321 [ D.6787 ])
        (const_int 37 [0x25])) mycc.l:50 92 {*movhi_internal}
     (nil))
(insn 11 10 12 49 (set (reg:HI 343 [ D.6786 ])
        (const_int 7 [0x7])) mycc.l:50 92 {*movhi_internal}
     (nil))
(insn 12 11 1523 49 (set (reg:SI 341 [ D.6777 ])
        (const_int 3 [0x3])) mycc.l:50 90 {*movsi_internal}
     (nil))
(jump_insn 1523 12 1524 49 (set (pc)
        (label_ref 396)) mycc.l:50 654 {jump}
     (nil)
 -> 396)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 321 341 343 564

(barrier 1524 1523 421)
;; basic block 50, loop depth 1, count 0, freq 2, maybe hot
;;  prev block 49, next block 51, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u370(6){ }u371(7){ }u372(16){ }u373(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 136 137 321 341 343
(code_label 421 1524 422 50 148 "" [1 uses])
(note 422 421 423 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 423 422 424 50 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f88bbbf2750 *.LC14>)) mycc.l:52 89 {*movdi_internal}
     (nil))
(insn 424 423 425 50 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:52 89 {*movdi_internal}
     (nil))
(call_insn 425 424 426 50 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f88bbf7aca8 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mycc.l:52 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f88bbf7aca8 fopen>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 426 425 427 50 (set (reg/f:DI 136 [ D.6778 ])
        (reg:DI 0 ax)) mycc.l:52 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 427 426 428 50 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 136 [ D.6778 ])) mycc.l:52 89 {*movdi_internal}
     (nil))
(insn 428 427 429 50 (set (reg:SI 4 si)
        (const_int 16384 [0x4000])) mycc.l:53 90 {*movsi_internal}
     (nil))
(insn 429 428 430 50 (set (reg:DI 5 di)
        (reg/f:DI 136 [ D.6778 ])) mycc.l:53 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 136 [ D.6778 ])
        (nil)))
(call_insn 430 429 431 50 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>) [0 yy_create_buffer S1 A8])
            (const_int 0 [0]))) mycc.l:53 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 431 430 432 50 (set (reg/f:DI 137 [ D.6782 ])
        (reg:DI 0 ax)) mycc.l:53 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 432 431 433 50 (set (reg:DI 5 di)
        (reg/f:DI 137 [ D.6782 ])) mycc.l:53 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 137 [ D.6782 ])
        (nil)))
(call_insn 433 432 434 50 (call (mem:QI (symbol_ref:DI ("_Z19yypush_buffer_stateP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c5e8 yypush_buffer_state>) [0 yypush_buffer_state S1 A8])
        (const_int 0 [0])) mycc.l:53 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z19yypush_buffer_stateP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c5e8 yypush_buffer_state>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 434 433 13 50 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 1 [0x1])) mycc.l:54 90 {*movsi_internal}
     (nil))
(insn 13 434 14 50 (set (reg:HI 321 [ D.6787 ])
        (const_int 0 [0])) mycc.l:56 92 {*movhi_internal}
     (nil))
(insn 14 13 15 50 (set (reg:HI 343 [ D.6786 ])
        (const_int 0 [0])) mycc.l:56 92 {*movhi_internal}
     (nil))
(insn 15 14 1525 50 (set (reg:SI 341 [ D.6777 ])
        (const_int 1 [0x1])) mycc.l:56 90 {*movsi_internal}
     (nil))
(jump_insn 1525 15 1526 50 (set (pc)
        (label_ref 396)) mycc.l:56 654 {jump}
     (nil)
 -> 396)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 321 341 343 564

(barrier 1526 1525 437)
;; basic block 51, loop depth 1, count 0, freq 2, maybe hot
;;  prev block 50, next block 52, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u387(6){ }u388(7){ }u389(16){ }u390(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 168
(code_label 437 1526 438 51 185 "" [3 uses])
(note 438 437 439 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(call_insn 439 438 440 51 (call (mem:QI (symbol_ref:DI ("_Z18yypop_buffer_statev") [flags 0x3]  <function_decl 0x7f88bc07c6c0 yypop_buffer_state>) [0 yypop_buffer_state S1 A8])
        (const_int 0 [0])) mycc.l:58 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z18yypop_buffer_statev") [flags 0x3]  <function_decl 0x7f88bc07c6c0 yypop_buffer_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 440 439 441 51 (set (reg/f:DI 168 [ D.6780 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) mycc.l:60 89 {*movdi_internal}
     (nil))
(insn 441 440 442 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 168 [ D.6780 ])
            (const_int 0 [0]))) mycc.l:60 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 442 441 443 51 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1334)
            (pc))) mycc.l:60 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 200 (nil)))
 -> 1334)
;;  succ:       159 [2.0%]  (LOOP_EXIT)
;;              52 [98.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 564

;; basic block 52, loop depth 1, count 0, freq 2, maybe hot
;;  prev block 51, next block 53, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       51 [98.0%]  (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u394(6){ }u395(7){ }u396(16){ }u397(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 168
;; lr  def 	 17 [flags] 422
(note 443 442 444 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 444 443 445 52 (set (reg:DI 422 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) mycc.l:60 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 445 444 446 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (mult:DI (reg:DI 422 [ yy_buffer_stack_top ])
                        (const_int 8 [0x8]))
                    (reg/f:DI 168 [ D.6780 ])) [1 *_224+0 S8 A64])
            (const_int 0 [0]))) mycc.l:60 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 422 [ yy_buffer_stack_top ])
        (expr_list:REG_DEAD (reg/f:DI 168 [ D.6780 ])
            (nil))))
(jump_insn 446 445 1528 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1527)
            (pc))) mycc.l:60 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9800 (nil)))
 -> 1527)
;;  succ:       53 [2.0%]  (FALLTHRU)
;;              15 [98.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 564

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       52 [2.0%]  (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1528 446 1529 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1529 1528 1530 53 (set (pc)
        (label_ref 1338)) 654 {jump}
     (nil)
 -> 1338)
;;  succ:       160 [100.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1530 1529 451)
;; basic block 54, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 53, next block 55, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u401(6){ }u402(7){ }u403(16){ }u404(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 198
(code_label 451 1530 452 54 149 "" [1 uses])
(note 452 451 453 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 453 452 454 54 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:109 89 {*movdi_internal}
     (nil))
(call_insn 454 453 455 54 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z6lookupPKc") [flags 0x41]  <function_decl 0x7f88bc12e798 lookup>) [0 lookup S1 A8])
            (const_int 0 [0]))) mycc.l:109 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z6lookupPKc") [flags 0x41]  <function_decl 0x7f88bc12e798 lookup>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 455 454 456 54 (set (reg/f:DI 198 [ D.6792 ])
        (reg:DI 0 ax)) mycc.l:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 456 455 457 54 (set (mem/f/c:DI (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>) [0 yylval.sym+0 S8 A64])
        (reg/f:DI 198 [ D.6792 ])) mycc.l:109 89 {*movdi_internal}
     (nil))
(insn 457 456 458 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 198 [ D.6792 ])
            (const_int 0 [0]))) mycc.l:111 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 458 457 459 54 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 469)
            (pc))) mycc.l:111 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8987 (nil)))
 -> 469)
;;  succ:       55 [10.1%]  (FALLTHRU)
;;              56 [89.9%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 198

;; basic block 55, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 54, next block 56, flags: (HOT_PARTITION, RTL)
;;  pred:       54 [10.1%]  (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u411(6){ }u412(7){ }u413(16){ }u414(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 198 200 423
(note 459 458 460 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 460 459 461 55 (set (reg:SI 4 si)
        (const_int 258 [0x102])) mycc.l:113 90 {*movsi_internal}
     (nil))
(insn 461 460 462 55 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:113 89 {*movdi_internal}
     (nil))
(call_insn 462 461 463 55 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z6insertPKci") [flags 0x41]  <function_decl 0x7f88bc12e870 insert>) [0 insert S1 A8])
            (const_int 0 [0]))) mycc.l:113 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z6insertPKci") [flags 0x41]  <function_decl 0x7f88bc12e870 insert>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 463 462 464 55 (set (reg/f:DI 198 [ D.6792 ])
        (reg:DI 0 ax)) mycc.l:113 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 464 463 465 55 (set (mem/f/c:DI (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>) [0 yylval.sym+0 S8 A64])
        (reg/f:DI 198 [ D.6792 ])) mycc.l:113 89 {*movdi_internal}
     (nil))
(insn 465 464 466 55 (set (reg:SI 200 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL8localvar") [flags 0x2]  <var_decl 0x7f88bc119ab0 localvar>) [2 localvar+0 S4 A32])) mycc.l:114 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 198 [ D.6792 ])
                (const_int 12 [0xc])) [2 _284->localvar+0 S4 A32])
        (nil)))
(insn 466 465 467 55 (parallel [
            (set (reg:SI 423)
                (plus:SI (reg:SI 200 [ D.6777 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mycc.l:114 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem/c:SI (symbol_ref:DI ("_ZL8localvar") [flags 0x2]  <var_decl 0x7f88bc119ab0 localvar>) [2 localvar+0 S4 A32])
            (nil))))
(insn 467 466 468 55 (set (mem/c:SI (symbol_ref:DI ("_ZL8localvar") [flags 0x2]  <var_decl 0x7f88bc119ab0 localvar>) [2 localvar+0 S4 A32])
        (reg:SI 423)) mycc.l:114 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 423)
        (nil)))
(insn 468 467 469 55 (set (mem:SI (plus:DI (reg/f:DI 198 [ D.6792 ])
                (const_int 12 [0xc])) [2 _284->localvar+0 S4 A32])
        (reg:SI 200 [ D.6777 ])) mycc.l:114 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 200 [ D.6777 ])
        (nil)))
;;  succ:       56 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 198

;; basic block 56, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 55, next block 57, flags: (HOT_PARTITION, RTL)
;;  pred:       54 [89.9%] 
;;              55 [100.0%]  (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u424(6){ }u425(7){ }u426(16){ }u427(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 198
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 198
;; lr  def 	 92
(code_label 469 468 470 56 190 "" [1 uses])
(note 470 469 471 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 471 470 1531 56 (set (reg:SI 92 [ D.6777 ])
        (mem:SI (plus:DI (reg/f:DI 198 [ D.6792 ])
                (const_int 8 [0x8])) [2 _991->token+0 S4 A64])) mycc.l:117 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 198 [ D.6792 ])
        (nil)))
(jump_insn 1531 471 1532 56 (set (pc)
        (label_ref 1225)) mycc.l:68 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1532 1531 474)
;; basic block 57, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 56, next block 58, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u429(6){ }u430(7){ }u431(16){ }u432(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 202
(code_label 474 1532 475 57 150 "" [1 uses])
(note 475 474 476 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 476 475 477 57 (set (reg:DI 1 dx)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:137 89 {*movdi_internal}
     (nil))
(insn 477 476 478 57 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f88bbbf27e0 *.LC15>)) mycc.l:137 89 {*movdi_internal}
     (nil))
(insn 478 477 479 57 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:137 89 {*movdi_internal}
     (nil))
(insn 479 478 480 57 (set (reg:QI 0 ax)
        (const_int 0 [0])) mycc.l:137 93 {*movqi_internal}
     (nil))
(call_insn 480 479 482 57 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) mycc.l:137 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 482 480 483 57 (set (reg:SI 202 [ D.6785 ])
        (mem/c:SI (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>) [0 yylval.num+0 S4 A64])) mycc.l:139 90 {*movsi_internal}
     (nil))
(insn 483 482 484 57 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 202 [ D.6785 ])
            (const_int 127 [0x7f]))) mycc.l:139 7 {*cmpsi_1}
     (nil))
(jump_insn 484 483 508 57 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 488)
            (pc))) mycc.l:139 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 6100 (nil)))
 -> 488)
;;  succ:       58 [39.0%]  (FALLTHRU)
;;              59 [61.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 202

;; basic block 58, loop depth 0, count 0, freq 3, maybe hot
;;  prev block 57, next block 59, flags: (HOT_PARTITION, RTL)
;;  pred:       57 [39.0%]  (FALLTHRU)
;;              62 [39.0%] 
;;              65 [39.0%] 
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u440(6){ }u441(7){ }u442(16){ }u443(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 508 484 485 58 193 "" [2 uses])
(note 485 508 37 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 37 485 1533 58 (set (reg:SI 92 [ D.6777 ])
        (const_int 259 [0x103])) mycc.l:140 90 {*movsi_internal}
     (nil))
(jump_insn 1533 37 1534 58 (set (pc)
        (label_ref 1225)) 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1534 1533 488)
;; basic block 59, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 58, next block 60, flags: (HOT_PARTITION, RTL)
;;  pred:       57 [61.0%] 
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u444(6){ }u445(7){ }u446(16){ }u447(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 202
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 202
;; lr  def 	 17 [flags]
(code_label 488 1534 489 59 191 "" [1 uses])
(note 489 488 490 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 490 489 491 59 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 202 [ D.6785 ])
            (const_int 32367 [0x7e6f]))) mycc.l:142 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 202 [ D.6785 ])
        (nil)))
(jump_insn 491 490 512 59 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 495)
            (pc))) mycc.l:142 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 6100 (nil)))
 -> 495)
;;  succ:       60 [39.0%]  (FALLTHRU)
;;              61 [61.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 60, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 59, next block 61, flags: (HOT_PARTITION, RTL)
;;  pred:       59 [39.0%]  (FALLTHRU)
;;              64 [100.0%] 
;;              67 [100.0%] 
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u450(6){ }u451(7){ }u452(16){ }u453(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 512 491 492 60 194 "" [2 uses])
(note 492 512 36 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 36 492 1535 60 (set (reg:SI 92 [ D.6777 ])
        (const_int 260 [0x104])) mycc.l:143 90 {*movsi_internal}
     (nil))
(jump_insn 1535 36 1536 60 (set (pc)
        (label_ref 1225)) 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1536 1535 495)
;; basic block 61, loop depth 0, count 0, freq 3, maybe hot
;;  prev block 60, next block 62, flags: (HOT_PARTITION, RTL)
;;  pred:       59 [61.0%] 
;;              63 [61.0%] 
;;              66 [61.0%] 
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u454(6){ }u455(7){ }u456(16){ }u457(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 495 1536 496 61 192 "" [3 uses])
(note 496 495 35 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 35 496 1537 61 (set (reg:SI 92 [ D.6777 ])
        (const_int 261 [0x105])) mycc.l:145 90 {*movsi_internal}
     (nil))
(jump_insn 1537 35 1538 61 (set (pc)
        (label_ref 1225)) 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1538 1537 499)
;; basic block 62, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 61, next block 63, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u458(6){ }u459(7){ }u460(16){ }u461(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 203
(code_label 499 1538 500 62 151 "" [1 uses])
(note 500 499 501 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 501 500 502 62 (set (reg:DI 1 dx)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:151 89 {*movdi_internal}
     (nil))
(insn 502 501 503 62 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f88bbbf2870 *.LC16>)) mycc.l:151 89 {*movdi_internal}
     (nil))
(insn 503 502 504 62 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:151 89 {*movdi_internal}
     (nil))
(insn 504 503 505 62 (set (reg:QI 0 ax)
        (const_int 0 [0])) mycc.l:151 93 {*movqi_internal}
     (nil))
(call_insn 505 504 507 62 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) mycc.l:151 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 507 505 509 62 (set (reg:SI 203 [ D.6785 ])
        (mem/c:SI (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>) [0 yylval.num+0 S4 A64])) mycc.l:153 90 {*movsi_internal}
     (nil))
(insn 509 507 510 62 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 203 [ D.6785 ])
            (const_int 127 [0x7f]))) mycc.l:153 7 {*cmpsi_1}
     (nil))
(jump_insn 510 509 511 62 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 508)
            (pc))) mycc.l:153 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 508)
;;  succ:       58 [39.0%] 
;;              63 [61.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 203

;; basic block 63, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 62, next block 64, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       62 [61.0%]  (FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u469(6){ }u470(7){ }u471(16){ }u472(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 203
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 203
;; lr  def 	 17 [flags]
(note 511 510 513 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 513 511 514 63 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 203 [ D.6785 ])
            (const_int 32367 [0x7e6f]))) mycc.l:156 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 203 [ D.6785 ])
        (nil)))
(jump_insn 514 513 1539 63 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 495)
            (pc))) mycc.l:156 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 6100 (nil)))
 -> 495)
;;  succ:       64 [39.0%]  (FALLTHRU)
;;              61 [61.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 64, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 63, next block 65, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       63 [39.0%]  (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1539 514 1540 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1540 1539 1541 64 (set (pc)
        (label_ref 512)) 654 {jump}
     (nil)
 -> 512)
;;  succ:       60 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1541 1540 518)
;; basic block 65, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 64, next block 66, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u475(6){ }u476(7){ }u477(16){ }u478(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 204
(code_label 518 1541 519 65 152 "" [1 uses])
(note 519 518 520 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 520 519 521 65 (set (reg:DI 1 dx)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:123 89 {*movdi_internal}
     (nil))
(insn 521 520 522 65 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f88bbbf2900 *.LC17>)) mycc.l:123 89 {*movdi_internal}
     (nil))
(insn 522 521 523 65 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:123 89 {*movdi_internal}
     (nil))
(insn 523 522 524 65 (set (reg:QI 0 ax)
        (const_int 0 [0])) mycc.l:123 93 {*movqi_internal}
     (nil))
(call_insn 524 523 526 65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) mycc.l:123 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 526 524 527 65 (set (reg:SI 204 [ D.6785 ])
        (mem/c:SI (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>) [0 yylval.num+0 S4 A64])) mycc.l:125 90 {*movsi_internal}
     (nil))
(insn 527 526 528 65 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 204 [ D.6785 ])
            (const_int 127 [0x7f]))) mycc.l:125 7 {*cmpsi_1}
     (nil))
(jump_insn 528 527 529 65 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 508)
            (pc))) mycc.l:125 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 3900 (nil)))
 -> 508)
;;  succ:       58 [39.0%] 
;;              66 [61.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 204

;; basic block 66, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 65, next block 67, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       65 [61.0%]  (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u486(6){ }u487(7){ }u488(16){ }u489(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 204
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 204
;; lr  def 	 17 [flags]
(note 529 528 530 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 530 529 531 66 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 204 [ D.6785 ])
            (const_int 32367 [0x7e6f]))) mycc.l:128 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 204 [ D.6785 ])
        (nil)))
(jump_insn 531 530 1542 66 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 495)
            (pc))) mycc.l:128 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 6100 (nil)))
 -> 495)
;;  succ:       67 [39.0%]  (FALLTHRU)
;;              61 [61.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 67, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 66, next block 68, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       66 [39.0%]  (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1542 531 1543 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1543 1542 1544 67 (set (pc)
        (label_ref 512)) 654 {jump}
     (nil)
 -> 512)
;;  succ:       60 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1544 1543 535)
;; basic block 68, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 67, next block 69, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u492(6){ }u493(7){ }u494(16){ }u495(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 427 428 429 431
(code_label 535 1544 536 68 153 "" [1 uses])
(note 536 535 537 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 537 536 538 68 (parallel [
            (set (reg/f:DI 427)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -9 [0xfffffffffffffff7])))
            (clobber (reg:CC 17 flags))
        ]) mycc.l:167 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 20 frame)
                (const_int -9 [0xfffffffffffffff7]))
            (nil))))
(insn 538 537 539 68 (set (reg/f:DI 429 [ yytext ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:167 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (nil)))
(insn 539 538 540 68 (parallel [
            (set (reg/f:DI 428 [ D.6791 ])
                (plus:DI (reg/f:DI 429 [ yytext ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mycc.l:167 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 429 [ yytext ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 540 539 541 68 (set (reg:DI 1 dx)
        (reg/f:DI 427)) mycc.l:167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 427)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -9 [0xfffffffffffffff7]))
            (nil))))
(insn 541 540 542 68 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f88bbbf2990 *.LC18>)) mycc.l:167 89 {*movdi_internal}
     (nil))
(insn 542 541 543 68 (set (reg:DI 5 di)
        (reg/f:DI 428 [ D.6791 ])) mycc.l:167 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 428 [ D.6791 ])
        (nil)))
(insn 543 542 544 68 (set (reg:QI 0 ax)
        (const_int 0 [0])) mycc.l:167 93 {*movqi_internal}
     (nil))
(call_insn 544 543 546 68 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) mycc.l:167 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 546 544 547 68 (set (reg:SI 431 [ c ])
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 20 frame)
                    (const_int -9 [0xfffffffffffffff7])) [0 c+0 S1 A8]))) mycc.l:168 148 {extendqisi2}
     (expr_list:REG_EQUIV (mem/c:SI (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>) [0 yylval.num+0 S4 A64])
        (nil)))
(insn 547 546 548 68 (set (mem/c:SI (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>) [0 yylval.num+0 S4 A64])
        (reg:SI 431 [ c ])) mycc.l:168 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 431 [ c ])
        (nil)))
(debug_insn 548 547 39 68 (var_location:QI c (clobber (const_int 0 [0]))) mycc.l:72 -1
     (nil))
(insn 39 548 1545 68 (set (reg:SI 92 [ D.6777 ])
        (const_int 259 [0x103])) mycc.l:72 90 {*movsi_internal}
     (nil))
(jump_insn 1545 39 1546 68 (set (pc)
        (label_ref 1225)) mycc.l:72 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1546 1545 551)
;; basic block 69, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 68, next block 70, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u508(6){ }u509(7){ }u510(16){ }u511(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92
(code_label 551 1546 552 69 154 "" [1 uses])
(note 552 551 553 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 553 552 554 69 (set (reg:DI 1 dx)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:176 89 {*movdi_internal}
     (nil))
(insn 554 553 555 69 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f88bbbf2a20 *.LC19>)) mycc.l:176 89 {*movdi_internal}
     (nil))
(insn 555 554 556 69 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:176 89 {*movdi_internal}
     (nil))
(insn 556 555 557 69 (set (reg:QI 0 ax)
        (const_int 0 [0])) mycc.l:176 93 {*movqi_internal}
     (nil))
(call_insn 557 556 40 69 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) mycc.l:176 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 40 557 1547 69 (set (reg:SI 92 [ D.6777 ])
        (const_int 262 [0x106])) mycc.l:73 90 {*movsi_internal}
     (nil))
(jump_insn 1547 40 1548 69 (set (pc)
        (label_ref 1225)) mycc.l:73 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1548 1547 560)
;; basic block 70, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 69, next block 71, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u517(6){ }u518(7){ }u519(16){ }u520(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 176 432 433
(code_label 560 1548 561 70 155 "" [1 uses])
(note 561 560 562 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 562 561 563 70 (set (reg:DI 176 [ D.6781 ])
        (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])) mycc.l:184 89 {*movdi_internal}
     (nil))
(insn 563 562 564 70 (parallel [
            (set (reg:DI 432 [ D.6781 ])
                (plus:DI (reg:DI 176 [ D.6781 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) mycc.l:184 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 564 563 565 70 (set (reg:DI 5 di)
        (reg:DI 432 [ D.6781 ])) mycc.l:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 432 [ D.6781 ])
        (nil)))
(call_insn 565 564 566 70 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) mycc.l:184 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 566 565 568 70 (set (reg/f:DI 433)
        (reg:DI 0 ax)) mycc.l:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 433)
            (nil))))
(insn 568 566 38 70 (set (mem/f/c:DI (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>) [0 yylval.str+0 S8 A64])
        (reg/f:DI 433)) mycc.l:184 89 {*movdi_internal}
     (nil))
(insn 38 568 569 70 (set (reg:SI 92 [ D.6777 ])
        (const_int 263 [0x107])) mycc.l:74 90 {*movsi_internal}
     (nil))
(insn 569 38 570 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 433)
            (const_int 0 [0]))) mycc.l:186 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 570 569 571 70 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1225)
            (pc))) mycc.l:186 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 1225)
;;  succ:       71 [78.3%]  (FALLTHRU)
;;              161 [21.6%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 176 433

;; basic block 71, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 70, next block 72, flags: (HOT_PARTITION, RTL)
;;  pred:       70 [78.3%]  (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u529(6){ }u530(7){ }u531(16){ }u532(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 176 433
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 176 433
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 434 435
(note 571 570 572 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(debug_insn 572 571 573 71 (var_location:DI __dest (reg/f:DI 433)) mycc.l:188 -1
     (nil))
(debug_insn 573 572 574 71 (var_location:DI __src (plus:DI (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (const_int 1 [0x1]))) mycc.l:188 -1
     (nil))
(insn 574 573 575 71 (set (reg/f:DI 435 [ yytext ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/string3.h:110 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (nil)))
(insn 575 574 576 71 (parallel [
            (set (reg/f:DI 434 [ D.6791 ])
                (plus:DI (reg/f:DI 435 [ yytext ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/string3.h:110 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 435 [ yytext ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
                    (const_int 1 [0x1]))
                (nil)))))
(insn 576 575 577 71 (set (reg:DI 4 si)
        (reg/f:DI 434 [ D.6791 ])) /usr/include/x86_64-linux-gnu/bits/string3.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 434 [ D.6791 ])
        (nil)))
(insn 577 576 578 71 (set (reg:DI 5 di)
        (reg/f:DI 433)) /usr/include/x86_64-linux-gnu/bits/string3.h:110 89 {*movdi_internal}
     (nil))
(call_insn 578 577 579 71 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f88bc2f4510 __builtin_strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/string3.h:110 669 {*call_value}
     (expr_list:REG_RETURNED (reg/f:DI 433)
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f88bc2f4510 __builtin_strcpy>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(debug_insn 579 578 580 71 (var_location:DI __dest (clobber (const_int 0 [0]))) mycc.l:188 -1
     (nil))
(debug_insn 580 579 581 71 (var_location:DI __src (clobber (const_int 0 [0]))) mycc.l:188 -1
     (nil))
(insn 581 580 1549 71 (set (mem:QI (plus:DI (plus:DI (reg/f:DI 433)
                    (reg:DI 176 [ D.6781 ]))
                (const_int -2 [0xfffffffffffffffe])) [0 *_301+0 S1 A8])
        (const_int 0 [0])) mycc.l:189 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 433)
        (expr_list:REG_DEAD (reg:DI 176 [ D.6781 ])
            (nil))))
(jump_insn 1549 581 1550 71 (set (pc)
        (label_ref 1225)) 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1550 1549 584)
;; basic block 72, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 71, next block 73, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u542(6){ }u543(7){ }u544(16){ }u545(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 584 1550 585 72 159 "" [1 uses])
(note 585 584 45 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 45 585 1551 72 (set (reg:SI 92 [ D.6777 ])
        (const_int 279 [0x117])) mycc.l:78 90 {*movsi_internal}
     (nil))
(jump_insn 1551 45 1552 72 (set (pc)
        (label_ref 1225)) mycc.l:78 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1552 1551 588)
;; basic block 73, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 72, next block 74, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u546(6){ }u547(7){ }u548(16){ }u549(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 588 1552 589 73 160 "" [1 uses])
(note 589 588 46 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 46 589 1553 73 (set (reg:SI 92 [ D.6777 ])
        (const_int 280 [0x118])) mycc.l:79 90 {*movsi_internal}
     (nil))
(jump_insn 1553 46 1554 73 (set (pc)
        (label_ref 1225)) mycc.l:79 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1554 1553 592)
;; basic block 74, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 73, next block 75, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u550(6){ }u551(7){ }u552(16){ }u553(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 592 1554 593 74 161 "" [1 uses])
(note 593 592 47 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 47 593 1555 74 (set (reg:SI 92 [ D.6777 ])
        (const_int 281 [0x119])) mycc.l:80 90 {*movsi_internal}
     (nil))
(jump_insn 1555 47 1556 74 (set (pc)
        (label_ref 1225)) mycc.l:80 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1556 1555 596)
;; basic block 75, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 74, next block 76, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u554(6){ }u555(7){ }u556(16){ }u557(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 596 1556 597 75 162 "" [1 uses])
(note 597 596 48 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 48 597 1557 75 (set (reg:SI 92 [ D.6777 ])
        (const_int 282 [0x11a])) mycc.l:81 90 {*movsi_internal}
     (nil))
(jump_insn 1557 48 1558 75 (set (pc)
        (label_ref 1225)) mycc.l:81 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1558 1557 600)
;; basic block 76, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 75, next block 77, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u558(6){ }u559(7){ }u560(16){ }u561(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 600 1558 601 76 163 "" [1 uses])
(note 601 600 49 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 49 601 1559 76 (set (reg:SI 92 [ D.6777 ])
        (const_int 283 [0x11b])) mycc.l:82 90 {*movsi_internal}
     (nil))
(jump_insn 1559 49 1560 76 (set (pc)
        (label_ref 1225)) mycc.l:82 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1560 1559 604)
;; basic block 77, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 76, next block 78, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u562(6){ }u563(7){ }u564(16){ }u565(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 604 1560 605 77 164 "" [1 uses])
(note 605 604 50 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 50 605 1561 77 (set (reg:SI 92 [ D.6777 ])
        (const_int 284 [0x11c])) mycc.l:83 90 {*movsi_internal}
     (nil))
(jump_insn 1561 50 1562 77 (set (pc)
        (label_ref 1225)) mycc.l:83 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1562 1561 608)
;; basic block 78, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 77, next block 79, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u566(6){ }u567(7){ }u568(16){ }u569(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 608 1562 609 78 165 "" [1 uses])
(note 609 608 51 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 51 609 1563 78 (set (reg:SI 92 [ D.6777 ])
        (const_int 285 [0x11d])) mycc.l:84 90 {*movsi_internal}
     (nil))
(jump_insn 1563 51 1564 78 (set (pc)
        (label_ref 1225)) mycc.l:84 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1564 1563 612)
;; basic block 79, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 78, next block 80, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u570(6){ }u571(7){ }u572(16){ }u573(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 612 1564 613 79 166 "" [1 uses])
(note 613 612 52 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 52 613 1565 79 (set (reg:SI 92 [ D.6777 ])
        (const_int 286 [0x11e])) mycc.l:85 90 {*movsi_internal}
     (nil))
(jump_insn 1565 52 1566 79 (set (pc)
        (label_ref 1225)) mycc.l:85 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1566 1565 616)
;; basic block 80, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 79, next block 81, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u574(6){ }u575(7){ }u576(16){ }u577(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 616 1566 617 80 167 "" [1 uses])
(note 617 616 53 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 53 617 1567 80 (set (reg:SI 92 [ D.6777 ])
        (const_int 287 [0x11f])) mycc.l:86 90 {*movsi_internal}
     (nil))
(jump_insn 1567 53 1568 80 (set (pc)
        (label_ref 1225)) mycc.l:86 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1568 1567 620)
;; basic block 81, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 80, next block 82, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u578(6){ }u579(7){ }u580(16){ }u581(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 620 1568 621 81 168 "" [1 uses])
(note 621 620 54 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 54 621 1569 81 (set (reg:SI 92 [ D.6777 ])
        (const_int 288 [0x120])) mycc.l:87 90 {*movsi_internal}
     (nil))
(jump_insn 1569 54 1570 81 (set (pc)
        (label_ref 1225)) mycc.l:87 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1570 1569 624)
;; basic block 82, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 81, next block 83, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u582(6){ }u583(7){ }u584(16){ }u585(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 624 1570 625 82 169 "" [1 uses])
(note 625 624 55 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 55 625 1571 82 (set (reg:SI 92 [ D.6777 ])
        (const_int 289 [0x121])) mycc.l:88 90 {*movsi_internal}
     (nil))
(jump_insn 1571 55 1572 82 (set (pc)
        (label_ref 1225)) mycc.l:88 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1572 1571 628)
;; basic block 83, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 82, next block 84, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u586(6){ }u587(7){ }u588(16){ }u589(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 628 1572 629 83 170 "" [1 uses])
(note 629 628 56 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 56 629 1573 83 (set (reg:SI 92 [ D.6777 ])
        (const_int 290 [0x122])) mycc.l:89 90 {*movsi_internal}
     (nil))
(jump_insn 1573 56 1574 83 (set (pc)
        (label_ref 1225)) mycc.l:89 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1574 1573 632)
;; basic block 84, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 83, next block 85, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u590(6){ }u591(7){ }u592(16){ }u593(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 632 1574 633 84 171 "" [1 uses])
(note 633 632 57 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 57 633 1575 84 (set (reg:SI 92 [ D.6777 ])
        (const_int 291 [0x123])) mycc.l:90 90 {*movsi_internal}
     (nil))
(jump_insn 1575 57 1576 84 (set (pc)
        (label_ref 1225)) mycc.l:90 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1576 1575 636)
;; basic block 85, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 84, next block 86, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u594(6){ }u595(7){ }u596(16){ }u597(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 636 1576 637 85 172 "" [1 uses])
(note 637 636 58 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 58 637 1577 85 (set (reg:SI 92 [ D.6777 ])
        (const_int 292 [0x124])) mycc.l:91 90 {*movsi_internal}
     (nil))
(jump_insn 1577 58 1578 85 (set (pc)
        (label_ref 1225)) mycc.l:91 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1578 1577 640)
;; basic block 86, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 85, next block 87, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u598(6){ }u599(7){ }u600(16){ }u601(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 640 1578 641 86 173 "" [1 uses])
(note 641 640 59 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 59 641 1579 86 (set (reg:SI 92 [ D.6777 ])
        (const_int 293 [0x125])) mycc.l:92 90 {*movsi_internal}
     (nil))
(jump_insn 1579 59 1580 86 (set (pc)
        (label_ref 1225)) mycc.l:92 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1580 1579 644)
;; basic block 87, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 86, next block 88, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u602(6){ }u603(7){ }u604(16){ }u605(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 644 1580 645 87 174 "" [1 uses])
(note 645 644 60 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 60 645 1581 87 (set (reg:SI 92 [ D.6777 ])
        (const_int 294 [0x126])) mycc.l:93 90 {*movsi_internal}
     (nil))
(jump_insn 1581 60 1582 87 (set (pc)
        (label_ref 1225)) mycc.l:93 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1582 1581 648)
;; basic block 88, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 87, next block 89, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u606(6){ }u607(7){ }u608(16){ }u609(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 648 1582 649 88 175 "" [1 uses])
(note 649 648 61 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 61 649 1583 88 (set (reg:SI 92 [ D.6777 ])
        (const_int 295 [0x127])) mycc.l:94 90 {*movsi_internal}
     (nil))
(jump_insn 1583 61 1584 88 (set (pc)
        (label_ref 1225)) mycc.l:94 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1584 1583 652)
;; basic block 89, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 88, next block 90, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u610(6){ }u611(7){ }u612(16){ }u613(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 652 1584 653 89 176 "" [1 uses])
(note 653 652 62 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 62 653 1585 89 (set (reg:SI 92 [ D.6777 ])
        (const_int 296 [0x128])) mycc.l:95 90 {*movsi_internal}
     (nil))
(jump_insn 1585 62 1586 89 (set (pc)
        (label_ref 1225)) mycc.l:95 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1586 1585 656)
;; basic block 90, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 89, next block 91, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u614(6){ }u615(7){ }u616(16){ }u617(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 656 1586 657 90 177 "" [1 uses])
(note 657 656 63 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 63 657 1587 90 (set (reg:SI 92 [ D.6777 ])
        (const_int 123 [0x7b])) mycc.l:96 90 {*movsi_internal}
     (nil))
(jump_insn 1587 63 1588 90 (set (pc)
        (label_ref 1225)) mycc.l:96 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1588 1587 660)
;; basic block 91, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 90, next block 92, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u618(6){ }u619(7){ }u620(16){ }u621(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 660 1588 661 91 178 "" [1 uses])
(note 661 660 64 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 64 661 1589 91 (set (reg:SI 92 [ D.6777 ])
        (const_int 125 [0x7d])) mycc.l:97 90 {*movsi_internal}
     (nil))
(jump_insn 1589 64 1590 91 (set (pc)
        (label_ref 1225)) mycc.l:97 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1590 1589 664)
;; basic block 92, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 91, next block 93, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u622(6){ }u623(7){ }u624(16){ }u625(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 664 1590 665 92 179 "" [1 uses])
(note 665 664 65 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 65 665 1591 92 (set (reg:SI 92 [ D.6777 ])
        (const_int 91 [0x5b])) mycc.l:98 90 {*movsi_internal}
     (nil))
(jump_insn 1591 65 1592 92 (set (pc)
        (label_ref 1225)) mycc.l:98 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1592 1591 668)
;; basic block 93, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 92, next block 94, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u626(6){ }u627(7){ }u628(16){ }u629(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 668 1592 669 93 180 "" [1 uses])
(note 669 668 66 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 66 669 1593 93 (set (reg:SI 92 [ D.6777 ])
        (const_int 93 [0x5d])) mycc.l:99 90 {*movsi_internal}
     (nil))
(jump_insn 1593 66 1594 93 (set (pc)
        (label_ref 1225)) mycc.l:99 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1594 1593 672)
;; basic block 94, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 93, next block 95, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u630(6){ }u631(7){ }u632(16){ }u633(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92 436
(code_label 672 1594 673 94 181 "" [1 uses])
(note 673 672 674 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 674 673 675 94 (set (reg/f:DI 436 [ yytext ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:100 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (nil)))
(insn 675 674 1595 94 (set (reg:SI 92 [ D.6777 ])
        (sign_extend:SI (mem:QI (reg/f:DI 436 [ yytext ]) [0 *_238+0 S1 A8]))) mycc.l:100 148 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 436 [ yytext ])
        (nil)))
(jump_insn 1595 675 1596 94 (set (pc)
        (label_ref 1225)) mycc.l:100 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1596 1595 678)
;; basic block 95, loop depth 1, count 0, freq 2, maybe hot
;;  prev block 94, next block 96, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u635(6){ }u636(7){ }u637(16){ }u638(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 321 341 343 438
(code_label 678 1596 679 95 182 "" [1 uses])
(note 679 678 680 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 680 679 681 95 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f88bbbf2ab0 *.LC20>)) mycc.l:101 89 {*movdi_internal}
     (nil))
(call_insn 681 680 682 95 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z7yyerrorPKc") [flags 0x41]  <function_decl 0x7f88bc13b0d8 yyerror>) [0 yyerror S1 A8])
            (const_int 0 [0]))) mycc.l:101 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z7yyerrorPKc") [flags 0x41]  <function_decl 0x7f88bc13b0d8 yyerror>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 682 681 684 95 (set (reg:SI 341 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 684 682 685 95 (set (reg:DI 438 [ D.6777 ])
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) 142 {*extendsidi2_rex64}
     (nil))
(insn 685 684 688 95 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 438 [ D.6777 ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])) 92 {*movhi_internal}
     (nil))
(insn 688 685 1597 95 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 438 [ D.6777 ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16])) 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:DI 438 [ D.6777 ])
        (nil)))
(jump_insn 1597 688 1598 95 (set (pc)
        (label_ref 396)) mycc.l:102 654 {jump}
     (nil)
 -> 396)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 321 341 343 564

(barrier 1598 1597 691)
;; basic block 96, loop depth 1, count 0, freq 2, maybe hot
;;  prev block 95, next block 97, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u644(6){ }u645(7){ }u646(16){ }u647(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 321 341 343 442
(code_label 691 1598 692 96 183 "" [1 uses])
(note 692 691 693 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 693 692 694 96 (set (reg:DI 2 cx)
        (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])) mycc.l:103 89 {*movdi_internal}
     (nil))
(insn 694 693 695 96 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) mycc.l:103 89 {*movdi_internal}
     (nil))
(insn 695 694 696 96 (set (reg:DI 4 si)
        (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])) mycc.l:103 89 {*movdi_internal}
     (nil))
(insn 696 695 697 96 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:103 89 {*movdi_internal}
     (nil))
(call_insn 697 696 698 96 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7f88bc2ff0d8 fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) mycc.l:103 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:DI 0 ax)
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7f88bc2ff0d8 fwrite>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 698 697 700 96 (set (reg:SI 341 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 700 698 701 96 (set (reg:DI 442 [ D.6777 ])
        (sign_extend:DI (reg:SI 341 [ D.6777 ]))) 142 {*extendsidi2_rex64}
     (nil))
(insn 701 700 704 96 (set (reg:HI 343 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 442 [ D.6777 ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])) 92 {*movhi_internal}
     (nil))
(insn 704 701 1599 96 (set (reg:HI 321 [ D.6787 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 442 [ D.6777 ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16])) 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:DI 442 [ D.6777 ])
        (nil)))
(jump_insn 1599 704 1600 96 (set (pc)
        (label_ref 396)) 654 {jump}
     (nil)
 -> 396)
;;  succ:       16 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 321 341 343 564

(barrier 1600 1599 707)
;; basic block 97, loop depth 5, count 0, freq 2, maybe hot
;;  prev block 96, next block 98, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       42 [2.3%] 
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u656(6){ }u657(7){ }u658(16){ }u659(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 17 [flags] 147 152 245 445 446 540 541
(code_label 707 1600 708 97 184 "" [1 uses])
(note 708 707 709 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(debug_insn 709 708 710 97 (var_location:SI yy_act (const_int 46 [0x2e])) -1
     (nil))
(insn 710 709 711 97 (parallel [
            (set (reg:DI 445 [ D.6788 ])
                (minus:DI (reg/v/f:DI 88 [ yy_cp ])
                    (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1140 261 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 711 710 712 97 (parallel [
            (set (reg/v:SI 147 [ yy_amount_of_matched_text ])
                (plus:SI (subreg:SI (reg:DI 445 [ D.6788 ]) 0)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1140 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:DI 445 [ D.6788 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(debug_insn 712 711 713 97 (var_location:SI yy_amount_of_matched_text (reg/v:SI 147 [ yy_amount_of_matched_text ])) lex.yy.c:1140 -1
     (nil))
(insn 713 712 714 97 (set (reg:QI 446 [ yy_hold_char ])
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) lex.yy.c:1143 93 {*movqi_internal}
     (expr_list:REG_EQUIV (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (nil)))
(insn 714 713 715 97 (set (mem:QI (reg/v/f:DI 88 [ yy_cp ]) [0 *yy_cp_6+0 S1 A8])
        (reg:QI 446 [ yy_hold_char ])) lex.yy.c:1143 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 446 [ yy_hold_char ])
        (nil)))
(insn 715 714 716 97 (set (reg:DI 540 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1146 89 {*movdi_internal}
     (nil))
(note 716 715 717 97 NOTE_INSN_DELETED)
(insn 717 716 718 97 (set (reg/f:DI 541 [ yy_buffer_stack ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1146 89 {*movdi_internal}
     (nil))
(insn 718 717 719 97 (set (reg/f:DI 152 [ D.6780 ])
        (plus:DI (mult:DI (reg:DI 540 [ yy_buffer_stack_top ])
                (const_int 8 [0x8]))
            (reg/f:DI 541 [ yy_buffer_stack ]))) lex.yy.c:1146 214 {*leadi}
     (nil))
(insn 719 718 720 97 (set (reg/f:DI 245 [ D.6782 ])
        (mem/f:DI (reg/f:DI 152 [ D.6780 ]) [1 *_142+0 S8 A64])) lex.yy.c:1146 89 {*movdi_internal}
     (nil))
(insn 720 719 721 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                    (const_int 60 [0x3c])) [2 _143->yy_buffer_status+0 S4 A32])
            (const_int 0 [0]))) lex.yy.c:1146 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 721 720 722 97 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 726)
            (pc))) lex.yy.c:1146 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 726)
;;  succ:       99 [50.0%] 
;;              98 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 245 540 541 562 564

;; basic block 98, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 97, next block 99, flags: (HOT_PARTITION, RTL)
;;  pred:       97 [50.0%]  (FALLTHRU)
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u672(6){ }u673(7){ }u674(16){ }u675(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 245 540 541 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 154
(note 722 721 723 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 723 722 1601 98 (set (reg:SI 154 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(jump_insn 1601 723 1602 98 (set (pc)
        (label_ref 734)) 654 {jump}
     (nil)
 -> 734)
;;  succ:       100 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 154 245 540 541 562 564

(barrier 1602 1601 726)
;; basic block 99, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 98, next block 100, flags: (HOT_PARTITION, RTL)
;;  pred:       97 [50.0%] 
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u676(6){ }u677(7){ }u678(16){ }u679(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 245 540 541 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 152 245
;; lr  def 	 154 245 450
(code_label 726 1602 727 99 195 "" [1 uses])
(note 727 726 728 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 728 727 729 99 (set (reg:SI 154 [ D.6777 ])
        (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 32 [0x20])) [2 _143->yy_n_chars+0 S4 A64])) lex.yy.c:1157 90 {*movsi_internal}
     (nil))
(insn 729 728 730 99 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 154 [ D.6777 ])) lex.yy.c:1157 90 {*movsi_internal}
     (nil))
(insn 730 729 731 99 (set (reg/f:DI 450 [ yyin ])
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1158 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (nil)))
(insn 731 730 732 99 (set (mem/f:DI (reg/f:DI 245 [ D.6782 ]) [1 _143->yy_input_file+0 S8 A64])
        (reg/f:DI 450 [ yyin ])) lex.yy.c:1158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 450 [ yyin ])
        (expr_list:REG_DEAD (reg/f:DI 245 [ D.6782 ])
            (nil))))
(insn 732 731 733 99 (set (reg/f:DI 245 [ D.6782 ])
        (mem/f:DI (reg/f:DI 152 [ D.6780 ]) [1 *_142+0 S8 A64])) lex.yy.c:1159 89 {*movdi_internal}
     (nil))
(insn 733 732 734 99 (set (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 60 [0x3c])) [2 _162->yy_buffer_status+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:1159 90 {*movsi_internal}
     (nil))
;;  succ:       100 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 154 245 540 541 562 564

;; basic block 100, loop depth 5, count 0, freq 2, maybe hot
;;  prev block 99, next block 101, flags: (HOT_PARTITION, RTL)
;;  pred:       99 [100.0%]  (FALLTHRU)
;;              98 [100.0%] 
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u686(6){ }u687(7){ }u688(16){ }u689(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 154 245 540 541 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 154 245
;; lr  def 	 17 [flags] 156 157 158 244
(code_label 734 733 735 100 196 "" [1 uses])
(note 735 734 736 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 736 735 737 100 (set (reg/v/f:DI 156 [ dest ])
        (mem/f:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 8 [0x8])) [1 _927->yy_ch_buf+0 S8 A64])) lex.yy.c:1169 89 {*movdi_internal}
     (nil))
(insn 737 736 738 100 (set (reg:DI 157 [ D.6790 ])
        (sign_extend:DI (reg:SI 154 [ D.6777 ]))) lex.yy.c:1169 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 154 [ D.6777 ])
        (nil)))
(insn 738 737 739 100 (parallel [
            (set (reg/f:DI 158 [ D.6783 ])
                (plus:DI (reg/v/f:DI 156 [ dest ])
                    (reg:DI 157 [ D.6790 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1169 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 739 738 740 100 (set (reg/f:DI 244 [ D.6783 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) lex.yy.c:1169 89 {*movdi_internal}
     (nil))
(insn 740 739 741 100 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 158 [ D.6783 ])
            (reg/f:DI 244 [ D.6783 ]))) lex.yy.c:1169 8 {*cmpdi_1}
     (nil))
(jump_insn 741 740 742 100 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 825)
            (pc))) lex.yy.c:1169 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 9800 (nil)))
 -> 825)
;;  succ:       101 [2.0%]  (FALLTHRU,LOOP_EXIT)
;;              108 [98.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 156 157 158 244 245 540 541 562 564

;; basic block 101, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 100, next block 102, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       100 [2.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u697(6){ }u698(7){ }u699(16){ }u700(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 186 193 451 543
(note 742 741 743 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 743 742 744 101 (set (reg:DI 451 [ D.6790 ])
        (sign_extend:DI (reg/v:SI 147 [ yy_amount_of_matched_text ]))) lex.yy.c:1173 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 147 [ yy_amount_of_matched_text ])
        (nil)))
(note 744 743 745 101 NOTE_INSN_DELETED)
(insn 745 744 746 101 (parallel [
            (set (reg/v/f:DI 88 [ yy_cp ])
                (plus:DI (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
                    (reg:DI 451 [ D.6790 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1173 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 451 [ D.6790 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 746 745 747 101 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:1173 89 {*movdi_internal}
     (nil))
(call_insn 747 746 1407 101 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>) [0 yy_get_previous_state S1 A8])
            (const_int 0 [0]))) lex.yy.c:1175 669 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(debug_insn 1407 747 748 101 (var_location:SI D#22 (reg:SI 0 ax)) -1
     (nil))
(insn 748 1407 749 101 (set (reg/v:SI 193 [ yy_current_state ])
        (reg:SI 0 ax)) lex.yy.c:1175 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(debug_insn 749 748 750 101 (var_location:SI yy_current_state (debug_expr:SI D#22)) lex.yy.c:1175 -1
     (nil))
(debug_insn 750 749 751 101 (var_location:SI yy_current_state (debug_expr:SI D#22)) lex.yy.c:1175 -1
     (nil))
(debug_insn 751 750 752 101 (var_location:DI yy_cp (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:1443 -1
     (nil))
(debug_insn 752 751 754 101 (var_location:QI yy_c (const_int 1 [0x1])) lex.yy.c:1445 -1
     (nil))
(insn 754 752 755 101 (set (reg:DI 543 [ yy_current_state ])
        (sign_extend:DI (reg/v:SI 193 [ yy_current_state ]))) lex.yy.c:1446 142 {*extendsidi2_rex64}
     (nil))
(insn 755 754 756 101 (set (reg:HI 186 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 543 [ yy_current_state ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])) lex.yy.c:1446 92 {*movhi_internal}
     (nil))
(insn 756 755 757 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 186 [ D.6786 ])
            (const_int 0 [0]))) lex.yy.c:1446 2 {*cmphi_ccno_1}
     (nil))
(jump_insn 757 756 758 101 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 761)
            (pc))) lex.yy.c:1446 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 761)
;;  succ:       102 [50.0%]  (FALLTHRU)
;;              103 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 186 193 543 562 564

;; basic block 102, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 101, next block 103, flags: (HOT_PARTITION, RTL)
;;  pred:       101 [50.0%]  (FALLTHRU)
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u714(6){ }u715(7){ }u716(16){ }u717(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 186 193 543 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 193
;; lr  def 	
(note 758 757 759 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 759 758 760 102 (set (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])
        (reg/v:SI 193 [ yy_current_state ])) lex.yy.c:1448 90 {*movsi_internal}
     (nil))
(insn 760 759 761 102 (set (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:1449 89 {*movdi_internal}
     (nil))
;;  succ:       103 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 186 193 543 562 564

;; basic block 103, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 102, next block 104, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       101 [50.0%] 
;;              102 [100.0%]  (FALLTHRU)
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u720(6){ }u721(7){ }u722(16){ }u723(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 186 193 543 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 193 543
;; lr  def 	 17 [flags] 459 460 461 542
(code_label 761 760 762 103 198 "" [1 uses])
(note 762 761 763 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(debug_insn 763 762 764 103 (var_location:QI yy_c (const_int 1 [0x1])) -1
     (nil))
(debug_insn 764 763 767 103 (var_location:SI yy_current_state (debug_expr:SI D#22)) -1
     (nil))
(note 767 764 769 103 NOTE_INSN_DELETED)
(insn 769 767 770 103 (set (reg:SI 542 [ D.6785 ])
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 543 [ yy_current_state ])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16]))) lex.yy.c:1451 139 {*zero_extendhisi2}
     (nil))
(insn 770 769 771 103 (parallel [
            (set (reg:SI 459 [ D.6777 ])
                (plus:SI (reg:SI 542 [ D.6785 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1451 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 771 770 772 103 (set (reg:DI 460 [ D.6777 ])
        (sign_extend:DI (reg:SI 459 [ D.6777 ]))) lex.yy.c:1451 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 459 [ D.6777 ])
        (nil)))
(insn 772 771 773 103 (set (reg:SI 461 [ D.6777 ])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 460 [ D.6777 ])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL6yy_chk") [flags 0x2]  <var_decl 0x7f88bc0806c0 yy_chk>)) [3 yy_chk S2 A16]))) lex.yy.c:1451 146 {extendhisi2}
     (expr_list:REG_DEAD (reg:DI 460 [ D.6777 ])
        (nil)))
(insn 773 772 774 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 193 [ yy_current_state ])
            (reg:SI 461 [ D.6777 ]))) lex.yy.c:1451 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 461 [ D.6777 ])
        (expr_list:REG_DEAD (reg/v:SI 193 [ yy_current_state ])
            (nil))))
(jump_insn 774 773 789 103 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 797)
            (pc))) lex.yy.c:1451 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 797)
;;  succ:       105 [9.0%] 
;;              104 [91.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 186 542 543 562 564

;; basic block 104, loop depth 5, count 0, freq 0, maybe hot
;;  prev block 103, next block 105, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       103 [91.0%]  (FALLTHRU)
;;              104 [91.0%]  (DFS_BACK)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u732(6){ }u733(7){ }u734(16){ }u735(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 186 543 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 543
;; lr  def 	 17 [flags] 193 468 469 470 542 543
(code_label 789 774 776 104 200 "" [1 uses])
(note 776 789 777 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(debug_insn 777 776 778 104 (var_location:QI yy_c (const_int 1 [0x1])) -1
     (nil))
(debug_insn 778 777 781 104 (var_location:SI yy_current_state (debug_expr:SI D#22)) -1
     (nil))
(note 781 778 1406 104 NOTE_INSN_DELETED)
(debug_insn 1406 781 782 104 (var_location:SI D#22 (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 543 [ yy_current_state ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL6yy_def") [flags 0x2]  <var_decl 0x7f88bc080090 yy_def>)) [3 yy_def S2 A16]))) -1
     (nil))
(insn 782 1406 784 104 (set (reg/v:SI 193 [ yy_current_state ])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 543 [ yy_current_state ])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL6yy_def") [flags 0x2]  <var_decl 0x7f88bc080090 yy_def>)) [3 yy_def S2 A16]))) lex.yy.c:1453 146 {extendhisi2}
     (expr_list:REG_DEAD (reg:DI 543 [ yy_current_state ])
        (nil)))
(debug_insn 784 782 785 104 (var_location:QI yy_c (const_int 1 [0x1])) -1
     (nil))
(debug_insn 785 784 787 104 (var_location:SI yy_current_state (debug_expr:SI D#22)) -1
     (nil))
(insn 787 785 788 104 (set (reg:DI 543 [ yy_current_state ])
        (sign_extend:DI (reg/v:SI 193 [ yy_current_state ]))) lex.yy.c:1451 142 {*extendsidi2_rex64}
     (nil))
(note 788 787 791 104 NOTE_INSN_DELETED)
(insn 791 788 792 104 (set (reg:SI 542 [ D.6785 ])
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 543 [ yy_current_state ])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16]))) lex.yy.c:1451 139 {*zero_extendhisi2}
     (nil))
(insn 792 791 793 104 (parallel [
            (set (reg:SI 468 [ D.6777 ])
                (plus:SI (reg:SI 542 [ D.6785 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1451 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 793 792 794 104 (set (reg:DI 469 [ D.6777 ])
        (sign_extend:DI (reg:SI 468 [ D.6777 ]))) lex.yy.c:1451 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 468 [ D.6777 ])
        (nil)))
(insn 794 793 795 104 (set (reg:SI 470 [ D.6777 ])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 469 [ D.6777 ])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL6yy_chk") [flags 0x2]  <var_decl 0x7f88bc0806c0 yy_chk>)) [3 yy_chk S2 A16]))) lex.yy.c:1451 146 {extendhisi2}
     (expr_list:REG_DEAD (reg:DI 469 [ D.6777 ])
        (nil)))
(insn 795 794 796 104 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 470 [ D.6777 ])
            (reg/v:SI 193 [ yy_current_state ]))) lex.yy.c:1451 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 470 [ D.6777 ])
        (expr_list:REG_DEAD (reg/v:SI 193 [ yy_current_state ])
            (nil))))
(jump_insn 796 795 797 104 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 789)
            (pc))) lex.yy.c:1451 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 789)
;;  succ:       105 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              104 [91.0%]  (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 186 542 543 562 564

;; basic block 105, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 104, next block 106, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       104 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              103 [9.0%] 
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u748(6){ }u749(7){ }u750(16){ }u751(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 186 542 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 542
;; lr  def 	 17 [flags] 87 89 473 474
(code_label 797 796 798 105 199 "" [1 uses])
(note 798 797 801 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 801 798 802 105 (parallel [
            (set (reg:SI 473 [ D.6785 ])
                (plus:SI (reg:SI 542 [ D.6785 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1457 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 542 [ D.6785 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 802 801 803 105 (set (reg:DI 474 [ D.6785 ])
        (zero_extend:DI (reg:SI 473 [ D.6785 ]))) lex.yy.c:1457 133 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:SI 473 [ D.6785 ])
        (nil)))
(insn 803 802 804 105 (set (reg/v:SI 87 [ yy_current_state ])
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 474 [ D.6785 ])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL6yy_nxt") [flags 0x2]  <var_decl 0x7f88bc0803f0 yy_nxt>)) [3 yy_nxt S2 A16]))) lex.yy.c:1457 139 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:DI 474 [ D.6785 ])
        (nil)))
(debug_insn 804 803 805 105 (var_location:SI yy_current_state (reg/v:SI 87 [ yy_current_state ])) lex.yy.c:1457 -1
     (nil))
(debug_insn 805 804 806 105 (var_location:QI D#1 (eq:QI (reg/v:SI 87 [ yy_current_state ])
        (const_int 101 [0x65]))) lex.yy.c:1458 -1
     (nil))
(debug_insn 806 805 1235 105 (var_location:SI yy_is_jam (zero_extend:SI (debug_expr:QI D#1))) lex.yy.c:1458 -1
     (nil))
(insn 1235 806 807 105 (set (reg/v/f:DI 89 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1188 89 {*movdi_internal}
     (nil))
(insn 807 1235 808 105 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ yy_current_state ])
            (const_int 101 [0x65]))) lex.yy.c:1460 7 {*cmpsi_1}
     (nil))
(jump_insn 808 807 809 105 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 278)
            (pc))) lex.yy.c:1460 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 278)
;;  succ:       106 [72.0%]  (FALLTHRU)
;;              33 [28.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 186 562 564

;; basic block 106, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 105, next block 107, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       105 [72.0%]  (FALLTHRU)
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u759(6){ }u760(7){ }u761(16){ }u762(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 186 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 17 [flags] 89
(note 809 808 810 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(debug_insn 810 809 811 106 (var_location:SI yy_current_state (clobber (const_int 0 [0]))) lex.yy.c:1186 -1
     (nil))
(debug_insn 811 810 812 106 (var_location:DI yy_cp (clobber (const_int 0 [0]))) lex.yy.c:1186 -1
     (nil))
(debug_insn 812 811 813 106 (var_location:SI yy_next_state (clobber (const_int 0 [0]))) lex.yy.c:1186 -1
     (nil))
(insn 813 812 814 106 (set (reg/v/f:DI 89 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1188 89 {*movdi_internal}
     (nil))
(debug_insn 814 813 815 106 (var_location:DI yy_bp (reg/v/f:DI 89 [ yy_cp ])) lex.yy.c:1188 -1
     (nil))
(insn 815 814 816 106 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ yy_current_state ])
            (const_int 0 [0]))) lex.yy.c:1190 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 816 815 817 106 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 278)
            (pc))) lex.yy.c:1190 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9800 (nil)))
 -> 278)
;;  succ:       107 [2.0%]  (FALLTHRU,LOOP_EXIT)
;;              33 [98.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 186 562 564

;; basic block 107, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 106, next block 108, flags: (HOT_PARTITION, RTL)
;;  pred:       106 [2.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u766(6){ }u767(7){ }u768(16){ }u769(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 17 [flags] 88
(note 817 816 818 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 818 817 819 107 (parallel [
            (set (reg/v/f:DI 88 [ yy_cp ])
                (plus:DI (reg/v/f:DI 88 [ yy_cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1193 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 819 818 820 107 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:1193 89 {*movdi_internal}
     (nil))
(debug_insn 820 819 821 107 (var_location:DI yy_cp (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:1193 -1
     (nil))
(debug_insn 821 820 1603 107 (var_location:SI yy_current_state (reg/v:SI 87 [ yy_current_state ])) lex.yy.c:1194 -1
     (nil))
(jump_insn 1603 821 1604 107 (set (pc)
        (label_ref 822)) lex.yy.c:1195 654 {jump}
     (nil)
 -> 822)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 562 564

(barrier 1604 1603 825)
;; basic block 108, loop depth 5, count 0, freq 2, maybe hot
;;  prev block 107, next block 109, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       100 [98.0%] 
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u774(6){ }u775(7){ }u776(16){ }u777(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 156 157 158 244 245 540 541 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156 157 244
;; lr  def 	 17 [flags] 213 476
(code_label 825 1604 826 108 197 "" [1 uses])
(note 826 825 827 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(debug_insn 827 826 828 108 (var_location:DI dest (reg/v/f:DI 156 [ dest ])) lex.yy.c:1276 -1
     (nil))
(insn 828 827 829 108 (set (reg/v/f:DI 213 [ source ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1277 89 {*movdi_internal}
     (nil))
(debug_insn 829 828 830 108 (var_location:DI source (reg/v/f:DI 213 [ source ])) lex.yy.c:1277 -1
     (nil))
(note 830 829 831 108 NOTE_INSN_DELETED)
(insn 831 830 832 108 (set (reg:DI 476 [ D.6783 ])
        (plus:DI (plus:DI (reg/v/f:DI 156 [ dest ])
                (reg:DI 157 [ D.6790 ]))
            (const_int 1 [0x1]))) lex.yy.c:1281 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 157 [ D.6790 ])
        (nil)))
(insn 832 831 833 108 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 244 [ D.6783 ])
            (reg:DI 476 [ D.6783 ]))) lex.yy.c:1281 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 476 [ D.6783 ])
        (nil)))
(jump_insn 833 832 834 108 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 838)
            (pc))) lex.yy.c:1281 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 838)
;;  succ:       109 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              110 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 156 158 213 244 245 540 541 562 564

;; basic block 109, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 108, next block 110, flags: (HOT_PARTITION, RTL)
;;  pred:       108 [0.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u786(6){ }u787(7){ }u788(16){ }u789(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 834 833 835 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 835 834 836 109 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f88bbbf2b40 *.LC21>)) lex.yy.c:1283 89 {*movdi_internal}
     (nil))
(call_insn 836 835 837 109 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1283 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 837 836 838)
;; basic block 110, loop depth 5, count 0, freq 2, maybe hot
;;  prev block 109, next block 111, flags: (HOT_PARTITION, RTL)
;;  pred:       108 [100.0%] 
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u792(6){ }u793(7){ }u794(16){ }u795(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 156 158 213 244 245 540 541 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 245
;; lr  def 	 17 [flags]
(code_label 838 837 839 110 203 "" [1 uses])
(note 839 838 840 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 840 839 841 110 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                    (const_int 56 [0x38])) [2 _927->yy_fill_buffer+0 S4 A64])
            (const_int 0 [0]))) lex.yy.c:1285 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 841 840 842 110 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 849)
            (pc))) lex.yy.c:1285 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 849)
;;  succ:       111 [50.0%]  (FALLTHRU)
;;              113 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 156 158 213 244 245 540 541 562 564

;; basic block 111, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 110, next block 112, flags: (HOT_PARTITION, RTL)
;;  pred:       110 [50.0%]  (FALLTHRU)
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u798(6){ }u799(7){ }u800(16){ }u801(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 158 213 244 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 213 244
;; lr  def 	 17 [flags] 477
(note 842 841 843 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 843 842 844 111 (parallel [
            (set (reg:DI 477 [ D.6788 ])
                (minus:DI (reg/f:DI 244 [ D.6783 ])
                    (reg/v/f:DI 213 [ source ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1287 261 {*subdi_1}
     (expr_list:REG_DEAD (reg/f:DI 244 [ D.6783 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 844 843 845 111 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 477 [ D.6788 ])
            (const_int 1 [0x1]))) lex.yy.c:1287 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 477 [ D.6788 ])
        (nil)))
(jump_insn 845 844 848 111 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1344)
            (pc))) lex.yy.c:1287 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1608 (nil)))
 -> 1344)
;;  succ:       152 [16.1%] 
;;              112 [83.9%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 158 213 562 564

;; basic block 112, loop depth 4, count 0, freq 1, maybe hot
;;  prev block 111, next block 113, flags: (HOT_PARTITION, RTL)
;;  pred:       111 [83.9%]  (FALLTHRU,LOOP_EXIT)
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u806(6){ }u807(7){ }u808(16){ }u809(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 158 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 158
;; lr  def 	 88
(note 848 845 34 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 34 848 1605 112 (set (reg/v/f:DI 88 [ yy_cp ])
        (reg/f:DI 158 [ D.6783 ])) lex.yy.c:1169 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 158 [ D.6783 ])
        (nil)))
(jump_insn 1605 34 1606 112 (set (pc)
        (label_ref 1184)) 654 {jump}
     (nil)
 -> 1184)
;;  succ:       155 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 562 564

(barrier 1606 1605 849)
;; basic block 113, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 112, next block 114, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       110 [50.0%] 
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u811(6){ }u812(7){ }u813(16){ }u814(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 156 213 244 245 540 541 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 213 244
;; lr  def 	 17 [flags] 224 478
(code_label 849 1606 850 113 204 "" [1 uses])
(note 850 849 851 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 851 850 852 113 (parallel [
            (set (reg:DI 478 [ D.6788 ])
                (minus:DI (reg/f:DI 244 [ D.6783 ])
                    (reg/v/f:DI 213 [ source ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1307 261 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 852 851 853 113 NOTE_INSN_DELETED)
(debug_insn 853 852 855 113 (var_location:DI number_to_move (plus:DI (reg:DI 478 [ D.6788 ])
        (const_int -1 [0xffffffffffffffff]))) lex.yy.c:1307 -1
     (nil))
(debug_insn 855 853 856 113 (var_location:DI i (const_int 0 [0])) -1
     (nil))
(debug_insn 856 855 857 113 (var_location:DI source (reg/v/f:DI 213 [ source ])) -1
     (nil))
(debug_insn 857 856 858 113 (var_location:DI dest (reg/v/f:DI 156 [ dest ])) -1
     (nil))
(insn 858 857 859 113 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (plus:DI (reg:DI 478 [ D.6788 ])
                        (const_int -1 [0xffffffffffffffff]))
                    (const_int 0 [0])))
            (set (reg/v:DI 224 [ number_to_move ])
                (plus:DI (reg:DI 478 [ D.6788 ])
                    (const_int -1 [0xffffffffffffffff])))
        ]) lex.yy.c:1309 226 {*adddi_2}
     (expr_list:REG_DEAD (reg:DI 478 [ D.6788 ])
        (nil)))
(jump_insn 859 858 1345 113 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 880)
            (pc))) lex.yy.c:1309 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 880)
;;  succ:       117 [9.0%] 
;;              114 [91.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 156 213 224 244 245 540 541 562 564

;; basic block 114, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 113, next block 115, flags: (HOT_PARTITION, RTL)
;;  pred:       113 [91.0%]  (FALLTHRU)
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u823(6){ }u824(7){ }u825(16){ }u826(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 156 213 224 244 540 541 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 227
(note 1345 859 25 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 25 1345 875 114 (set (reg/v:DI 227 [ i ])
        (const_int 0 [0])) lex.yy.c:1309 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       115 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 156 213 224 227 244 540 541 562 564

;; basic block 115, loop depth 6, count 0, freq 9, maybe hot
;;  prev block 114, next block 116, flags: (HOT_PARTITION, RTL)
;;  pred:       114 [100.0%]  (FALLTHRU)
;;              115 [91.0%]  (DFS_BACK)
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u827(6){ }u828(7){ }u829(16){ }u830(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 156 213 224 227 244 540 541 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 156 213 224 227
;; lr  def 	 17 [flags] 226 227
(code_label 875 25 860 115 208 "" [1 uses])
(note 860 875 861 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(debug_insn 861 860 864 115 (var_location:DI i (reg/v:DI 227 [ i ])) -1
     (nil))
(debug_insn 864 861 865 115 (var_location:DI D#17 (plus:DI (plus:DI (reg/v/f:DI 156 [ dest ])
            (reg/v:DI 227 [ i ]))
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 865 864 866 115 (var_location:DI dest (debug_expr:DI D#17)) lex.yy.c:1310 -1
     (nil))
(debug_insn 866 865 867 115 (var_location:DI D#18 (plus:DI (plus:DI (reg/v/f:DI 213 [ source ])
            (reg/v:DI 227 [ i ]))
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 867 866 868 115 (var_location:DI source (debug_expr:DI D#18)) lex.yy.c:1310 -1
     (nil))
(insn 868 867 869 115 (set (reg:QI 226 [ D.6789 ])
        (mem:QI (plus:DI (reg/v/f:DI 213 [ source ])
                (reg/v:DI 227 [ i ])) [0 MEM[base: source_307, index: i_563, offset: 0B]+0 S1 A8])) lex.yy.c:1310 93 {*movqi_internal}
     (expr_list:REG_EQUIV (mem:QI (plus:DI (reg/v/f:DI 213 [ source ])
                (reg/v:DI 227 [ i ])) [0 MEM[base: source_307, index: i_563, offset: 0B]+0 S1 A8])
        (nil)))
(insn 869 868 870 115 (set (mem:QI (plus:DI (reg/v/f:DI 156 [ dest ])
                (reg/v:DI 227 [ i ])) [0 MEM[base: dest_168, index: i_563, offset: 0B]+0 S1 A8])
        (reg:QI 226 [ D.6789 ])) lex.yy.c:1310 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 226 [ D.6789 ])
        (nil)))
(insn 870 869 872 115 (parallel [
            (set (reg/v:DI 227 [ i ])
                (plus:DI (reg/v:DI 227 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1309 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 872 870 873 115 (var_location:DI i (reg/v:DI 227 [ i ])) -1
     (nil))
(debug_insn 873 872 874 115 (var_location:DI source (debug_expr:DI D#18)) -1
     (nil))
(debug_insn 874 873 876 115 (var_location:DI dest (debug_expr:DI D#17)) -1
     (nil))
(insn 876 874 877 115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 224 [ number_to_move ])
            (reg/v:DI 227 [ i ]))) lex.yy.c:1309 8 {*cmpdi_1}
     (nil))
(jump_insn 877 876 878 115 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 875)
            (pc))) lex.yy.c:1309 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 875)
;;  succ:       116 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              115 [91.0%]  (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 156 213 224 227 244 540 541 562 564

;; basic block 116, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 115, next block 117, flags: (HOT_PARTITION, RTL)
;;  pred:       115 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u846(6){ }u847(7){ }u848(16){ }u849(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 224 244 540 541 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 152
;; lr  def 	 245
(note 878 877 879 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 879 878 880 116 (set (reg/f:DI 245 [ D.6782 ])
        (mem/f:DI (reg/f:DI 152 [ D.6780 ]) [1 *_142+0 S8 A64])) 89 {*movdi_internal}
     (nil))
;;  succ:       117 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 224 244 245 540 541 562 564

;; basic block 117, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 116, next block 118, flags: (HOT_PARTITION, RTL)
;;  pred:       116 [100.0%]  (FALLTHRU)
;;              113 [9.0%] 
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u851(6){ }u852(7){ }u853(16){ }u854(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 224 244 245 540 541 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 245
;; lr  def 	 17 [flags]
(code_label 880 879 881 117 207 "" [1 uses])
(note 881 880 882 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 882 881 883 117 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                    (const_int 60 [0x3c])) [2 _944->yy_buffer_status+0 S4 A32])
            (const_int 2 [0x2]))) lex.yy.c:1312 7 {*cmpsi_1}
     (nil))
(jump_insn 883 882 884 117 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 889)
            (pc))) lex.yy.c:1312 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 889)
;;  succ:       118 [28.0%]  (FALLTHRU)
;;              119 [72.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 224 244 245 540 541 562 564

;; basic block 118, loop depth 5, count 0, freq 0, maybe hot
;;  prev block 117, next block 119, flags: (HOT_PARTITION, RTL)
;;  pred:       117 [28.0%]  (FALLTHRU)
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u857(6){ }u858(7){ }u859(16){ }u860(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 245 540 541 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 245
;; lr  def 	
(note 884 883 885 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 885 884 886 118 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1316 90 {*movsi_internal}
     (nil))
(insn 886 885 1607 118 (set (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 32 [0x20])) [2 _944->yy_n_chars+0 S4 A64])
        (const_int 0 [0])) lex.yy.c:1316 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 245 [ D.6782 ])
        (nil)))
(jump_insn 1607 886 1608 118 (set (pc)
        (label_ref 1052)) 654 {jump}
     (nil)
 -> 1052)
;;  succ:       142 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 540 541 562 564

(barrier 1608 1607 889)
;; basic block 119, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 118, next block 120, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       117 [72.0%] 
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u862(6){ }u863(7){ }u864(16){ }u865(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 224 244 245 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 224 245
;; lr  def 	 17 [flags] 230 479
(code_label 889 1608 890 119 209 "" [1 uses])
(note 890 889 891 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(note 891 890 892 119 NOTE_INSN_DELETED)
(insn 892 891 893 119 (set (reg:DI 479 [ D.6781 ])
        (not:DI (reg/v:DI 224 [ number_to_move ]))) lex.yy.c:1321 494 {*one_cmpldi2_1}
     (nil))
(note 893 892 895 119 NOTE_INSN_DELETED)
(debug_insn 895 893 896 119 (var_location:DI num_to_read (plus:DI (reg:DI 479 [ D.6781 ])
        (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 24 [0x18])) [4 _944->yy_buf_size+0 S8 A64]))) -1
     (nil))
(insn 896 895 897 119 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (plus:DI (reg:DI 479 [ D.6781 ])
                        (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                                (const_int 24 [0x18])) [4 _944->yy_buf_size+0 S8 A64]))
                    (const_int 0 [0])))
            (set (reg/v:DI 230 [ num_to_read ])
                (plus:DI (reg:DI 479 [ D.6781 ])
                    (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                            (const_int 24 [0x18])) [4 _944->yy_buf_size+0 S8 A64])))
        ]) lex.yy.c:1323 226 {*adddi_2}
     (expr_list:REG_DEAD (reg:DI 479 [ D.6781 ])
        (nil)))
(jump_insn 897 896 964 119 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 967)
            (pc))) lex.yy.c:1323 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 450 (nil)))
 -> 967)
;;  succ:       129 [4.5%] 
;;              120 [95.5%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 224 230 244 245 562 564

;; basic block 120, loop depth 6, count 0, freq 14, maybe hot
;;  prev block 119, next block 121, flags: (HOT_PARTITION, RTL)
;;  pred:       119 [95.5%]  (FALLTHRU)
;;              128 [95.5%] 
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u874(6){ }u875(7){ }u876(16){ }u877(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 224 244 245 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 244 245
;; lr  def 	 17 [flags] 232 481
(code_label 964 897 899 120 217 "" [1 uses])
(note 899 964 900 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(debug_insn 900 899 901 120 (var_location:DI num_to_read (const_int 0 [0])) -1
     (nil))
(debug_insn 901 900 902 120 (var_location:DI D#14 (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1327 -1
     (nil))
(debug_insn 902 901 903 120 (var_location:DI D#13 (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1327 -1
     (nil))
(debug_insn 903 902 904 120 (var_location:DI D#12 (ashift:DI (debug_expr:DI D#13)
        (const_int 3 [0x3]))) lex.yy.c:1327 -1
     (nil))
(debug_insn 904 903 905 120 (var_location:DI D#11 (plus:DI (debug_expr:DI D#14)
        (debug_expr:DI D#12))) lex.yy.c:1327 -1
     (nil))
(debug_insn 905 904 906 120 (var_location:DI D#10 (mem/f:DI (debug_expr:DI D#11) [0 +0 S8 A64])) lex.yy.c:1327 -1
     (nil))
(debug_insn 906 905 907 120 (var_location:DI b (debug_expr:DI D#10)) lex.yy.c:1327 -1
     (nil))
(insn 907 906 908 120 (set (reg/f:DI 232 [ D.6783 ])
        (mem/f:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 8 [0x8])) [1 _986->yy_ch_buf+0 S8 A64])) lex.yy.c:1330 89 {*movdi_internal}
     (nil))
(insn 908 907 910 120 (parallel [
            (set (reg:DI 481 [ D.6788 ])
                (minus:DI (reg/f:DI 244 [ D.6783 ])
                    (reg/f:DI 232 [ D.6783 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1330 261 {*subdi_1}
     (expr_list:REG_DEAD (reg/f:DI 244 [ D.6783 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(debug_insn 910 908 911 120 (var_location:SI yy_c_buf_p_offset (subreg:SI (reg:DI 481 [ D.6788 ]) 0)) lex.yy.c:1330 -1
     (nil))
(insn 911 910 912 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                    (const_int 36 [0x24])) [2 _986->yy_is_our_buffer+0 S4 A32])
            (const_int 0 [0]))) lex.yy.c:1332 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 912 911 913 120 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 945)
            (pc))) lex.yy.c:1332 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 945)
;;  succ:       121 [50.0%]  (FALLTHRU)
;;              126 [50.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 224 232 245 481 562 564

;; basic block 121, loop depth 6, count 0, freq 7, maybe hot
;;  prev block 120, next block 122, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       120 [50.0%]  (FALLTHRU)
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u884(6){ }u885(7){ }u886(16){ }u887(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 224 232 245 481 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 245
;; lr  def 	 17 [flags] 237 238
(note 913 912 914 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 914 913 915 121 (set (reg:DI 237 [ D.6781 ])
        (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 24 [0x18])) [4 _986->yy_buf_size+0 S8 A64])) lex.yy.c:1334 89 {*movdi_internal}
     (nil))
(note 915 914 916 121 NOTE_INSN_DELETED)
(debug_insn 916 915 917 121 (var_location:DI new_size (ashift:DI (reg:DI 237 [ D.6781 ])
        (const_int 1 [0x1]))) lex.yy.c:1334 -1
     (nil))
(insn 917 916 918 121 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (ashift:DI (reg:DI 237 [ D.6781 ])
                        (const_int 1 [0x1]))
                    (const_int 0 [0])))
            (set (reg/v:DI 238 [ new_size ])
                (ashift:DI (reg:DI 237 [ D.6781 ])
                    (const_int 1 [0x1])))
        ]) lex.yy.c:1336 521 {*ashldi3_cmp}
     (nil))
(jump_insn 918 917 919 121 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 925)
            (pc))) lex.yy.c:1336 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 925)
;;  succ:       122 [50.0%]  (FALLTHRU)
;;              123 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 224 232 237 238 245 481 562 564

;; basic block 122, loop depth 6, count 0, freq 3, maybe hot
;;  prev block 121, next block 123, flags: (HOT_PARTITION, RTL)
;;  pred:       121 [50.0%]  (FALLTHRU)
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u893(6){ }u894(7){ }u895(16){ }u896(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 224 232 237 245 481 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 237 245
;; lr  def 	 17 [flags] 240 482
(note 919 918 920 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 920 919 921 122 (parallel [
            (set (reg:DI 482 [ D.6781 ])
                (lshiftrt:DI (reg:DI 237 [ D.6781 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1337 546 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 921 920 922 122 (parallel [
            (set (reg:DI 240 [ D.6781 ])
                (plus:DI (reg:DI 482 [ D.6781 ])
                    (reg:DI 237 [ D.6781 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1337 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 482 [ D.6781 ])
        (expr_list:REG_DEAD (reg:DI 237 [ D.6781 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 922 921 1609 122 (set (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 24 [0x18])) [4 _986->yy_buf_size+0 S8 A64])
        (reg:DI 240 [ D.6781 ])) lex.yy.c:1337 89 {*movdi_internal}
     (nil))
(jump_insn 1609 922 1610 122 (set (pc)
        (label_ref 928)) 654 {jump}
     (nil)
 -> 928)
;;  succ:       124 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 224 232 240 245 481 562 564

(barrier 1610 1609 925)
;; basic block 123, loop depth 6, count 0, freq 3, maybe hot
;;  prev block 122, next block 124, flags: (HOT_PARTITION, RTL)
;;  pred:       121 [50.0%] 
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u902(6){ }u903(7){ }u904(16){ }u905(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 224 232 238 245 481 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 238 245
;; lr  def 	 240
(code_label 925 1610 926 123 213 "" [1 uses])
(note 926 925 927 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 927 926 26 123 (set (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 24 [0x18])) [4 _986->yy_buf_size+0 S8 A64])
        (reg/v:DI 238 [ new_size ])) lex.yy.c:1339 89 {*movdi_internal}
     (nil))
(insn 26 927 928 123 (set (reg:DI 240 [ D.6781 ])
        (reg/v:DI 238 [ new_size ])) lex.yy.c:1339 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 238 [ new_size ])
        (nil)))
;;  succ:       124 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 224 232 240 245 481 562 564

;; basic block 124, loop depth 6, count 0, freq 7, maybe hot
;;  prev block 123, next block 125, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       123 [100.0%]  (FALLTHRU)
;;              122 [100.0%] 
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u909(6){ }u910(7){ }u911(16){ }u912(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 224 232 240 245 481 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 232 240 245
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 242 483
(code_label 928 26 929 124 214 "" [1 uses])
(note 929 928 930 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(debug_insn 930 929 931 124 (var_location:DI ptr (reg/f:DI 232 [ D.6783 ])) lex.yy.c:1343 -1
     (nil))
(debug_insn 931 930 932 124 (var_location:DI size (plus:DI (reg:DI 240 [ D.6781 ])
        (const_int 2 [0x2]))) lex.yy.c:1343 -1
     (nil))
(insn 932 931 933 124 (parallel [
            (set (reg:DI 483 [ D.6781 ])
                (plus:DI (reg:DI 240 [ D.6781 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2136 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 240 [ D.6781 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 933 932 934 124 (set (reg:DI 4 si)
        (reg:DI 483 [ D.6781 ])) lex.yy.c:2136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 483 [ D.6781 ])
        (nil)))
(insn 934 933 935 124 (set (reg:DI 5 di)
        (reg/f:DI 232 [ D.6783 ])) lex.yy.c:2136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 232 [ D.6783 ])
        (nil)))
(call_insn 935 934 936 124 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2136 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 936 935 937 124 (set (reg/f:DI 242 [ D.6793 ])
        (reg:DI 0 ax)) lex.yy.c:2136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 937 936 938 124 (var_location:DI ptr (clobber (const_int 0 [0]))) lex.yy.c:1343 -1
     (nil))
(debug_insn 938 937 939 124 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1343 -1
     (nil))
(insn 939 938 940 124 (set (mem/f:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 8 [0x8])) [1 _986->yy_ch_buf+0 S8 A64])
        (reg/f:DI 242 [ D.6793 ])) lex.yy.c:1343 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 245 [ D.6782 ])
        (nil)))
(insn 940 939 941 124 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 242 [ D.6793 ])
            (const_int 0 [0]))) lex.yy.c:1349 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 941 940 1612 124 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1611)
            (pc))) lex.yy.c:1349 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 1611)
;;  succ:       125 (FALLTHRU)
;;              128 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 224 242 481 562 564

;; basic block 125, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 124, next block 126, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       124 (FALLTHRU)
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1612 941 1613 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1613 1612 1614 125 (set (pc)
        (label_ref 948)) 654 {jump}
     (nil)
 -> 948)
;;  succ:       127 [100.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1614 1613 945)
;; basic block 126, loop depth 0, count 0, freq 7, maybe hot
;;  prev block 125, next block 127, flags: (HOT_PARTITION, RTL)
;;  pred:       120 [50.0%]  (LOOP_EXIT)
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u926(6){ }u927(7){ }u928(16){ }u929(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 245
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 245
;; lr  def 	
(code_label 945 1614 946 126 212 "" [1 uses])
(note 946 945 947 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 947 946 948 126 (set (mem/f:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 8 [0x8])) [1 _986->yy_ch_buf+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:1347 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 245 [ D.6782 ])
        (nil)))
;;  succ:       127 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 127, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 126, next block 128, flags: (HOT_PARTITION, RTL)
;;  pred:       126 [100.0%]  (FALLTHRU)
;;              125 [100.0%]  (LOOP_EXIT)
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u931(6){ }u932(7){ }u933(16){ }u934(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 948 947 949 127 215 "" [1 uses])
(note 949 948 950 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 950 949 951 127 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f88bbbf2bd0 *.LC22>)) lex.yy.c:1351 89 {*movdi_internal}
     (nil))
(call_insn 951 950 952 127 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1351 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 952 951 1611)
;; basic block 128, loop depth 6, count 0, freq 14, maybe hot
;;  prev block 127, next block 129, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       124 [100.0%] 
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u937(6){ }u938(7){ }u939(16){ }u940(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 224 242 481 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 152 224 242 481
;; lr  def 	 17 [flags] 230 244 245 484 485
(code_label 1611 952 954 128 281 "" [1 uses])
(note 954 1611 955 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 955 954 956 128 (set (reg:DI 484 [ D.6790 ])
        (sign_extend:DI (subreg:SI (reg:DI 481 [ D.6788 ]) 0))) lex.yy.c:1353 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:DI 481 [ D.6788 ])
        (nil)))
(insn 956 955 957 128 (parallel [
            (set (reg/f:DI 244 [ D.6783 ])
                (plus:DI (reg/f:DI 242 [ D.6793 ])
                    (reg:DI 484 [ D.6790 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1353 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 484 [ D.6790 ])
        (expr_list:REG_DEAD (reg/f:DI 242 [ D.6793 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 957 956 958 128 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 244 [ D.6783 ])) lex.yy.c:1353 89 {*movdi_internal}
     (nil))
(insn 958 957 959 128 (set (reg/f:DI 245 [ D.6782 ])
        (mem/f:DI (reg/f:DI 152 [ D.6780 ]) [1 *_142+0 S8 A64])) lex.yy.c:1355 89 {*movdi_internal}
     (nil))
(note 959 958 960 128 NOTE_INSN_DELETED)
(insn 960 959 961 128 (set (reg:DI 485 [ D.6781 ])
        (not:DI (reg/v:DI 224 [ number_to_move ]))) lex.yy.c:1356 494 {*one_cmpldi2_1}
     (nil))
(note 961 960 963 128 NOTE_INSN_DELETED)
(debug_insn 963 961 965 128 (var_location:DI num_to_read (plus:DI (reg:DI 485 [ D.6781 ])
        (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 24 [0x18])) [4 _361->yy_buf_size+0 S8 A64]))) -1
     (nil))
(insn 965 963 966 128 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (plus:DI (reg:DI 485 [ D.6781 ])
                        (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                                (const_int 24 [0x18])) [4 _361->yy_buf_size+0 S8 A64]))
                    (const_int 0 [0])))
            (set (reg/v:DI 230 [ num_to_read ])
                (plus:DI (reg:DI 485 [ D.6781 ])
                    (mem:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                            (const_int 24 [0x18])) [4 _361->yy_buf_size+0 S8 A64])))
        ]) lex.yy.c:1323 226 {*adddi_2}
     (expr_list:REG_DEAD (reg:DI 485 [ D.6781 ])
        (nil)))
(jump_insn 966 965 967 128 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 964)
            (pc))) lex.yy.c:1323 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9550 (nil)))
 -> 964)
;;  succ:       129 [4.5%]  (FALLTHRU,LOOP_EXIT)
;;              120 [95.5%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 152 224 230 244 245 562 564

;; basic block 129, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 128, next block 130, flags: (HOT_PARTITION, RTL)
;;  pred:       128 [4.5%]  (FALLTHRU,LOOP_EXIT)
;;              119 [4.5%] 
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u954(6){ }u955(7){ }u956(16){ }u957(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 230 245 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 230 245 562
;; lr  def 	 17 [flags] 309
(code_label 967 966 968 129 211 "" [1 uses])
(note 968 967 969 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 969 968 971 129 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 230 [ num_to_read ])
            (const_int 8192 [0x2000]))) 8 {*cmpdi_1}
     (nil))
(insn 971 969 972 129 (set (reg/v:DI 309 [ num_to_read ])
        (if_then_else:DI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg/v:DI 230 [ num_to_read ])
            (reg:DI 562))) 954 {*movdicc_noc}
     (expr_list:REG_DEAD (reg/v:DI 230 [ num_to_read ])
        (expr_list:REG_DEAD (reg:CC 17 flags)
            (expr_list:REG_EQUAL (if_then_else:DI (leu (reg:CC 17 flags)
                        (const_int 0 [0]))
                    (reg/v:DI 230 [ num_to_read ])
                    (const_int 8192 [0x2000]))
                (nil)))))
(debug_insn 972 971 973 129 (var_location:DI num_to_read (reg/v:DI 309 [ num_to_read ])) -1
     (nil))
(insn 973 972 974 129 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 245 [ D.6782 ])
                    (const_int 40 [0x28])) [2 _961->yy_is_interactive+0 S4 A64])
            (const_int 0 [0]))) lex.yy.c:1364 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 974 973 975 129 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1000)
            (pc))) lex.yy.c:1364 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 1000)
;;  succ:       130 [50.0%]  (FALLTHRU)
;;              136 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 245 309 562 564

;; basic block 130, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 129, next block 131, flags: (HOT_PARTITION, RTL)
;;  pred:       129 [50.0%]  (FALLTHRU)
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u967(6){ }u968(7){ }u969(16){ }u970(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 309 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 212
(note 975 974 27 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 27 975 1256 130 (set (reg/v:DI 212 [ n ])
        (const_int 0 [0])) lex.yy.c:1364 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
;;  succ:       131 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 212 224 309 562 564

;; basic block 131, loop depth 6, count 0, freq 3, maybe hot
;;  prev block 130, next block 132, flags: (HOT_PARTITION, RTL)
;;  pred:       130 [100.0%]  (FALLTHRU)
;;              163 [88.0%]  (DFS_BACK)
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u971(6){ }u972(7){ }u973(16){ }u974(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 212 224 309 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 251
(code_label 1256 27 976 131 232 "" [1 uses])
(note 976 1256 977 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(debug_insn 977 976 978 131 (var_location:DI n (reg/v:DI 212 [ n ])) -1
     (nil))
(debug_insn 978 977 979 131 (var_location:SI c (const_int 42 [0x2a])) -1
     (nil))
(insn 979 978 980 131 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1364 89 {*movdi_internal}
     (nil))
(call_insn 980 979 1355 131 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_getc") [flags 0x41]  <function_decl 0x7f88bbf40510 _IO_getc>) [0 _IO_getc S1 A8])
            (const_int 0 [0]))) lex.yy.c:1364 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_IO_getc") [flags 0x41]  <function_decl 0x7f88bbf40510 _IO_getc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(debug_insn 1355 980 981 131 (var_location:SI D#20 (reg:SI 0 ax)) -1
     (nil))
(insn 981 1355 982 131 (set (reg/v:SI 251 [ c ])
        (reg:SI 0 ax)) lex.yy.c:1364 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(debug_insn 982 981 983 131 (var_location:SI c (debug_expr:SI D#20)) lex.yy.c:1364 -1
     (nil))
(insn 983 982 984 131 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 251 [ c ])
            (const_int -1 [0xffffffffffffffff]))) lex.yy.c:1364 7 {*cmpsi_1}
     (nil))
(jump_insn 984 983 985 131 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1299)
            (pc))) lex.yy.c:1364 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2799 (nil)))
 -> 1299)
;;  succ:       132 [72.0%]  (FALLTHRU)
;;              169 [28.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 212 224 251 309 562 564

;; basic block 132, loop depth 6, count 0, freq 2, maybe hot
;;  prev block 131, next block 133, flags: (HOT_PARTITION, RTL)
;;  pred:       131 [72.0%]  (FALLTHRU)
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u982(6){ }u983(7){ }u984(16){ }u985(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 212 224 251 309 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 251
;; lr  def 	 17 [flags]
(note 985 984 986 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 986 985 987 132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 251 [ c ])
            (const_int 10 [0xa]))) lex.yy.c:1364 7 {*cmpsi_1}
     (nil))
(jump_insn 987 986 1615 132 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1239)
            (pc))) lex.yy.c:1364 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 1239)
;;  succ:       163 [72.0%] 
;;              133 [28.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 212 224 251 309 562 564

;; basic block 133, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 132, next block 134, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       132 [28.0%]  (FALLTHRU)
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 212 224 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1615 987 1617 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1617 1615 1618 133 (set (pc)
        (label_ref 1616)) 654 {jump}
     (nil)
 -> 1616)
;;  succ:       168 [100.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 212 224 562 564

(barrier 1618 1617 1273)
;; basic block 134, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 133, next block 135, flags: (HOT_PARTITION, RTL)
;;  pred:       169 [50.0%]  (LOOP_EXIT)
;;              167 [100.0%]  (LOOP_EXIT)
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u988(6){ }u989(7){ }u990(16){ }u991(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 1273 1618 991 134 234 "" [2 uses])
(note 991 1273 992 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 992 991 993 134 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f88bbbf2c60 *.LC23>)) lex.yy.c:1364 89 {*movdi_internal}
     (nil))
(call_insn 993 992 994 134 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1364 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 994 993 1260)
;; basic block 135, loop depth 5, count 0, freq 0, maybe hot
;;  prev block 134, next block 136, flags: (HOT_PARTITION, RTL)
;;  pred:       164 [100.0%]  (LOOP_EXIT)
;;              168 [100.0%] 
;;              170 [100.0%] 
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u994(6){ }u995(7){ }u996(16){ }u997(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 212 224 347 540 541 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 212
;; lr  def 	 275
(code_label 1260 994 995 135 233 "" [3 uses])
(note 995 1260 996 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 996 995 997 135 (set (reg:SI 275 [ D.6777 ])
        (subreg:SI (reg/v:DI 212 [ n ]) 0)) lex.yy.c:1364 90 {*movsi_internal}
     (nil))
(insn 997 996 1619 135 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (subreg:SI (reg/v:DI 212 [ n ]) 0)) lex.yy.c:1364 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:DI 212 [ n ])
        (nil)))
(jump_insn 1619 997 1620 135 (set (pc)
        (label_ref 1046)) 654 {jump}
     (nil)
 -> 1046)
;;  succ:       141 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 275 347 540 541 562 564

(barrier 1620 1619 1000)
;; basic block 136, loop depth 5, count 0, freq 0, maybe hot
;;  prev block 135, next block 137, flags: (HOT_PARTITION, RTL)
;;  pred:       129 [50.0%] 
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u1000(6){ }u1001(7){ }u1002(16){ }u1003(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 245 309 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 270
(code_label 1000 1620 1001 136 218 "" [1 uses])
(note 1001 1000 1002 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 1002 1001 1003 136 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f88bbffbca8 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) lex.yy.c:1364 669 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f88bbffbca8 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 1003 1002 1004 136 (set (reg/f:DI 270 [ D.6794 ])
        (reg:DI 0 ax)) lex.yy.c:1364 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1004 1003 1043 136 (set (mem:SI (reg/f:DI 270 [ D.6794 ]) [2 *_402+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1364 90 {*movsi_internal}
     (nil))
;;  succ:       137 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 245 270 309 562 564

;; basic block 137, loop depth 6, count 0, freq 7, maybe hot
;;  prev block 136, next block 138, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       136 [100.0%]  (FALLTHRU)
;;              140 [100.0%]  (DFS_BACK)
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u1007(6){ }u1008(7){ }u1009(16){ }u1010(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 245 270 309 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 224 245 309
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 274 275 488
(code_label 1043 1004 1005 137 225 "" [1 uses])
(note 1005 1043 1006 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1006 1005 1007 137 (var_location:DI __ptr (plus:DI (mem/f/j:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                (const_int 8 [0x8])) [0 _971->yy_ch_buf+0 S8 A64])
        (reg/v:DI 224 [ number_to_move ]))) lex.yy.c:1364 -1
     (nil))
(debug_insn 1007 1006 1008 137 (var_location:DI __size (const_int 1 [0x1])) lex.yy.c:1364 -1
     (nil))
(debug_insn 1008 1007 1009 137 (var_location:DI __n (reg/v:DI 309 [ num_to_read ])) lex.yy.c:1364 -1
     (nil))
(debug_insn 1009 1008 1010 137 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1364 -1
     (nil))
(note 1010 1009 1011 137 NOTE_INSN_DELETED)
(insn 1011 1010 1012 137 (parallel [
            (set (reg:DI 488 [ D.6783 ])
                (plus:DI (mem/f:DI (plus:DI (reg/f:DI 245 [ D.6782 ])
                            (const_int 8 [0x8])) [1 _971->yy_ch_buf+0 S8 A64])
                    (reg/v:DI 224 [ number_to_move ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 245 [ D.6782 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1012 1011 1013 137 (set (reg:DI 2 cx)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 89 {*movdi_internal}
     (nil))
(insn 1013 1012 1014 137 (set (reg:DI 1 dx)
        (reg/v:DI 309 [ num_to_read ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 89 {*movdi_internal}
     (nil))
(insn 1014 1013 1015 137 (set (reg:DI 4 si)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 89 {*movdi_internal}
     (nil))
(insn 1015 1014 1016 137 (set (reg:DI 5 di)
        (reg:DI 488 [ D.6783 ])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 488 [ D.6783 ])
        (nil)))
(call_insn 1016 1015 1017 137 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*fread") [flags 0x41]  <function_decl 0x7f88bbfb8870 __fread_alias>) [0 __fread_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("*fread") [flags 0x41]  <function_decl 0x7f88bbfb8870 __fread_alias>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 1017 1016 1018 137 (set (reg:DI 274 [ D.6781 ])
        (reg:DI 0 ax)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 1018 1017 1019 137 (var_location:DI __ptr (clobber (const_int 0 [0]))) lex.yy.c:1364 -1
     (nil))
(debug_insn 1019 1018 1020 137 (var_location:DI __size (clobber (const_int 0 [0]))) lex.yy.c:1364 -1
     (nil))
(debug_insn 1020 1019 1021 137 (var_location:DI __n (clobber (const_int 0 [0]))) lex.yy.c:1364 -1
     (nil))
(debug_insn 1021 1020 1022 137 (var_location:DI __stream (clobber (const_int 0 [0]))) lex.yy.c:1364 -1
     (nil))
(insn 1022 1021 1023 137 (set (reg:SI 275 [ D.6777 ])
        (subreg:SI (reg:DI 274 [ D.6781 ]) 0)) lex.yy.c:1364 90 {*movsi_internal}
     (nil))
(insn 1023 1022 1024 137 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (subreg:SI (reg:DI 274 [ D.6781 ]) 0)) lex.yy.c:1364 90 {*movsi_internal}
     (nil))
(insn 1024 1023 1025 137 (set (reg:CCZ 17 flags)
        (compare:CCZ (subreg:SI (reg:DI 274 [ D.6781 ]) 0)
            (const_int 0 [0]))) lex.yy.c:1364 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 274 [ D.6781 ])
        (nil)))
(jump_insn 1025 1024 1026 137 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1263)
            (pc))) lex.yy.c:1364 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 1263)
;;  succ:       138 [29.0%]  (FALLTHRU)
;;              165 [71.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 270 275 309 562 564

;; basic block 138, loop depth 6, count 0, freq 2, maybe hot
;;  prev block 137, next block 139, flags: (HOT_PARTITION, RTL)
;;  pred:       137 [29.0%]  (FALLTHRU)
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u1029(6){ }u1030(7){ }u1031(16){ }u1032(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 270 309 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 277
(note 1026 1025 1027 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 1027 1026 1028 138 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1364 89 {*movdi_internal}
     (nil))
(call_insn 1028 1027 1029 138 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f88bbf956c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) lex.yy.c:1364 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f88bbf956c0 ferror>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1029 1028 1030 138 (set (reg:SI 277 [ D.6777 ])
        (reg:SI 0 ax)) lex.yy.c:1364 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 1030 1029 1031 138 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 277 [ D.6777 ])
            (const_int 0 [0]))) lex.yy.c:1364 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 277 [ D.6777 ])
        (nil)))
(jump_insn 1031 1030 1032 138 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1271)
            (pc))) lex.yy.c:1364 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 1271)
;;  succ:       166 [50.0%] 
;;              139 [50.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 270 309 562 564

;; basic block 139, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 138, next block 140, flags: (HOT_PARTITION, RTL)
;;  pred:       138 [50.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u1038(6){ }u1039(7){ }u1040(16){ }u1041(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 275
(note 1032 1031 1033 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 1033 1032 1621 139 (set (reg:SI 275 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(jump_insn 1621 1033 1622 139 (set (pc)
        (label_ref 1263)) 654 {jump}
     (nil)
 -> 1263)
;;  succ:       165 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 275 562 564

(barrier 1622 1621 1651)
;; basic block 140, loop depth 6, count 0, freq 7, maybe hot
;;  prev block 139, next block 141, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       166 [100.0%] 
;; bb 140 artificial_defs: { }
;; bb 140 artificial_uses: { u1042(6){ }u1043(7){ }u1044(16){ }u1045(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 270 309 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 270
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 245 490 491
(code_label 1651 1622 1036 140 285 "" [1 uses])
(note 1036 1651 1037 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn 1037 1036 1038 140 (set (mem:SI (reg/f:DI 270 [ D.6794 ]) [2 *_402+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1364 90 {*movsi_internal}
     (nil))
(insn 1038 1037 1039 140 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1364 89 {*movdi_internal}
     (nil))
(call_insn 1039 1038 1041 140 (call (mem:QI (symbol_ref:DI ("clearerr") [flags 0x41]  <function_decl 0x7f88bbf95510 clearerr>) [0 clearerr S1 A8])
        (const_int 0 [0])) lex.yy.c:1364 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("clearerr") [flags 0x41]  <function_decl 0x7f88bbf95510 clearerr>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1041 1039 1660 140 (set (reg/f:DI 491 [ yy_buffer_stack ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (nil)))
(insn 1660 1041 1042 140 (set (reg:DI 490 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 1042 1660 1623 140 (set (reg/f:DI 245 [ D.6782 ])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 490 [ yy_buffer_stack_top ])
                    (const_int 8 [0x8]))
                (reg/f:DI 491 [ yy_buffer_stack ])) [1 *_969+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 491 [ yy_buffer_stack ])
        (expr_list:REG_DEAD (reg:DI 490 [ yy_buffer_stack_top ])
            (nil))))
(jump_insn 1623 1042 1624 140 (set (pc)
        (label_ref 1043)) 654 {jump}
     (nil)
 -> 1043)
;;  succ:       137 [100.0%]  (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 245 270 309 562 564

(barrier 1624 1623 1046)
;; basic block 141, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 140, next block 142, flags: (HOT_PARTITION, RTL)
;;  pred:       135 [100.0%] 
;;              165 [100.0%] 
;; bb 141 artificial_defs: { }
;; bb 141 artificial_uses: { u1051(6){ }u1052(7){ }u1053(16){ }u1054(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 275 347 540 541 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 275 347
;; lr  def 	 17 [flags] 280 308
(code_label 1046 1624 1047 141 222 "" [2 uses])
(note 1047 1046 1048 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 1048 1047 1049 141 (set (reg/f:DI 280 [ D.6782 ])
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_1064+0 S8 A64])) lex.yy.c:1367 89 {*movdi_internal}
     (nil))
(insn 1049 1048 29 141 (set (mem:SI (plus:DI (reg/f:DI 280 [ D.6782 ])
                (const_int 32 [0x20])) [2 _429->yy_n_chars+0 S4 A64])
        (reg:SI 275 [ D.6777 ])) lex.yy.c:1367 90 {*movsi_internal}
     (nil))
(insn 29 1049 1050 141 (set (reg/v:SI 308 [ ret_val ])
        (const_int 0 [0])) lex.yy.c:1387 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 1050 29 1051 141 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 275 [ D.6777 ])
            (const_int 0 [0]))) lex.yy.c:1370 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1051 1050 1052 141 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1078)
            (pc))) lex.yy.c:1370 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 1078)
;;  succ:       142 [50.0%]  (FALLTHRU)
;;              145 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 275 280 308 347 540 541 562 564

;; basic block 142, loop depth 5, count 0, freq 0, maybe hot
;;  prev block 141, next block 143, flags: (HOT_PARTITION, RTL)
;;  pred:       141 [50.0%]  (FALLTHRU)
;;              118 [100.0%] 
;; bb 142 artificial_defs: { }
;; bb 142 artificial_uses: { u1060(6){ }u1061(7){ }u1062(16){ }u1063(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 540 541 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 224
;; lr  def 	 17 [flags]
(code_label 1052 1051 1053 142 210 "" [1 uses])
(note 1053 1052 1054 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 1054 1053 1055 142 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 224 [ number_to_move ])
            (const_int 0 [0]))) lex.yy.c:1372 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1055 1054 1056 142 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1068)
            (pc))) lex.yy.c:1372 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 1068)
;;  succ:       143 [29.0%]  (FALLTHRU)
;;              144 [71.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 540 541 562 564

;; basic block 143, loop depth 5, count 0, freq 0, maybe hot
;;  prev block 142, next block 144, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       142 [29.0%]  (FALLTHRU)
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u1066(6){ }u1067(7){ }u1068(16){ }u1069(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 275 280 308 347 493 494
(note 1056 1055 1057 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1057 1056 1058 143 (var_location:SI ret_val (const_int 1 [0x1])) lex.yy.c:1374 -1
     (nil))
(insn 1058 1057 1059 143 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1375 89 {*movdi_internal}
     (nil))
(call_insn 1059 1058 1060 143 (call (mem:QI (symbol_ref:DI ("_Z9yyrestartP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c1b0 yyrestart>) [0 yyrestart S1 A8])
        (const_int 0 [0])) lex.yy.c:1375 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z9yyrestartP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c1b0 yyrestart>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1060 1059 1062 143 (set (reg:SI 275 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(note 1062 1060 1063 143 NOTE_INSN_DELETED)
(insn 1063 1062 1659 143 (set (reg/f:DI 494 [ yy_buffer_stack ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (nil)))
(insn 1659 1063 1064 143 (set (reg:DI 493 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 1064 1659 1065 143 (set (reg/f:DI 347 [ D.6780 ])
        (plus:DI (mult:DI (reg:DI 493 [ yy_buffer_stack_top ])
                (const_int 8 [0x8]))
            (reg/f:DI 494 [ yy_buffer_stack ]))) 214 {*leadi}
     (expr_list:REG_DEAD (reg/f:DI 494 [ yy_buffer_stack ])
        (expr_list:REG_DEAD (reg:DI 493 [ yy_buffer_stack_top ])
            (nil))))
(insn 1065 1064 30 143 (set (reg/f:DI 280 [ D.6782 ])
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_954+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 30 1065 1625 143 (set (reg/v:SI 308 [ ret_val ])
        (const_int 1 [0x1])) lex.yy.c:1374 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 1625 30 1626 143 (set (pc)
        (label_ref 1078)) 654 {jump}
     (nil)
 -> 1078)
;;  succ:       145 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 275 280 308 347 562 564

(barrier 1626 1625 1068)
;; basic block 144, loop depth 5, count 0, freq 0, maybe hot
;;  prev block 143, next block 145, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       142 [71.0%] 
;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u1077(6){ }u1078(7){ }u1079(16){ }u1080(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 540 541 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 540 541
;; lr  def 	 275 280 308 347
(code_label 1068 1626 1069 144 227 "" [1 uses])
(note 1069 1068 1070 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1070 1069 1072 144 (var_location:SI ret_val (const_int 2 [0x2])) lex.yy.c:1380 -1
     (nil))
(note 1072 1070 1074 144 NOTE_INSN_DELETED)
(insn 1074 1072 1075 144 (set (reg/f:DI 347 [ D.6780 ])
        (plus:DI (mult:DI (reg:DI 540 [ yy_buffer_stack_top ])
                (const_int 8 [0x8]))
            (reg/f:DI 541 [ yy_buffer_stack ]))) lex.yy.c:1381 214 {*leadi}
     (expr_list:REG_DEAD (reg/f:DI 541 [ yy_buffer_stack ])
        (expr_list:REG_DEAD (reg:DI 540 [ yy_buffer_stack_top ])
            (nil))))
(insn 1075 1074 1076 144 (set (reg/f:DI 280 [ D.6782 ])
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_436+0 S8 A64])) lex.yy.c:1381 89 {*movdi_internal}
     (nil))
(insn 1076 1075 1077 144 (set (mem:SI (plus:DI (reg/f:DI 280 [ D.6782 ])
                (const_int 60 [0x3c])) [2 _437->yy_buffer_status+0 S4 A32])
        (const_int 2 [0x2])) lex.yy.c:1382 90 {*movsi_internal}
     (nil))
(insn 1077 1076 31 144 (set (reg:SI 275 [ D.6777 ])
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 31 1077 1078 144 (set (reg/v:SI 308 [ ret_val ])
        (const_int 2 [0x2])) lex.yy.c:1380 90 {*movsi_internal}
     (nil))
;;  succ:       145 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 275 280 308 347 562 564

;; basic block 145, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 144, next block 146, flags: (HOT_PARTITION, RTL)
;;  pred:       141 [50.0%] 
;;              144 [100.0%]  (FALLTHRU)
;;              143 [100.0%] 
;; bb 145 artificial_defs: { }
;; bb 145 artificial_uses: { u1087(6){ }u1088(7){ }u1089(16){ }u1090(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 275 280 308 347 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 224 275 280
;; lr  def 	 17 [flags] 287 289
(code_label 1078 31 1079 145 226 "" [2 uses])
(note 1079 1078 1080 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1080 1079 1081 145 (var_location:SI ret_val (reg/v:SI 308 [ ret_val ])) -1
     (nil))
(insn 1081 1080 1083 145 (parallel [
            (set (reg:SI 287 [ D.6795 ])
                (plus:SI (reg:SI 275 [ D.6777 ])
                    (subreg:SI (reg/v:DI 224 [ number_to_move ]) 0)))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1389 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/v:DI 224 [ number_to_move ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1083 1081 1084 145 (set (reg:DI 289 [ D.6781 ])
        (sign_extend:DI (reg:SI 287 [ D.6795 ]))) lex.yy.c:1389 142 {*extendsidi2_rex64}
     (nil))
(insn 1084 1083 1085 145 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 289 [ D.6781 ])
            (mem:DI (plus:DI (reg/f:DI 280 [ D.6782 ])
                    (const_int 24 [0x18])) [4 _957->yy_buf_size+0 S8 A64]))) lex.yy.c:1389 8 {*cmpdi_1}
     (nil))
(jump_insn 1085 1084 1086 145 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1109)
            (pc))) lex.yy.c:1389 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 1109)
;;  succ:       146 [29.0%]  (FALLTHRU)
;;              148 [71.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 275 280 287 289 308 347 562 564

;; basic block 146, loop depth 5, count 0, freq 0, maybe hot
;;  prev block 145, next block 147, flags: (HOT_PARTITION, RTL)
;;  pred:       145 [29.0%]  (FALLTHRU)
;; bb 146 artificial_defs: { }
;; bb 146 artificial_uses: { u1098(6){ }u1099(7){ }u1100(16){ }u1101(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 275 280 287 289 308 347 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 275 280 287 347
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 297 299 498 499 500 501 502
(note 1086 1085 1087 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1087 1086 1088 146 (var_location:SI new_size (plus:SI (ashiftrt:SI (reg:SI 275 [ D.6777 ])
            (const_int 1 [0x1]))
        (reg:SI 287 [ D.6795 ]))) lex.yy.c:1391 -1
     (nil))
(debug_insn 1088 1087 1089 146 (var_location:DI ptr (mem/f/j:DI (plus:DI (reg/f:DI 280 [ D.6782 ])
            (const_int 8 [0x8])) [0 _957->yy_ch_buf+0 S8 A64])) lex.yy.c:1392 -1
     (nil))
(debug_insn 1089 1088 1090 146 (var_location:DI size (sign_extend:DI (plus:SI (ashiftrt:SI (reg:SI 275 [ D.6777 ])
                (const_int 1 [0x1]))
            (reg:SI 287 [ D.6795 ])))) lex.yy.c:1392 -1
     (nil))
(insn 1090 1089 1091 146 (parallel [
            (set (reg:SI 498 [ D.6777 ])
                (ashiftrt:SI (reg:SI 275 [ D.6777 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2136 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 275 [ D.6777 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1091 1090 1092 146 (parallel [
            (set (reg:SI 499 [ D.6795 ])
                (plus:SI (reg:SI 498 [ D.6777 ])
                    (reg:SI 287 [ D.6795 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2136 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 498 [ D.6777 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1092 1091 1093 146 (set (reg:DI 500 [ D.6781 ])
        (sign_extend:DI (reg:SI 499 [ D.6795 ]))) lex.yy.c:2136 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 499 [ D.6795 ])
        (nil)))
(insn 1093 1092 1094 146 (set (reg/f:DI 501 [ _957->yy_ch_buf ])
        (mem/f:DI (plus:DI (reg/f:DI 280 [ D.6782 ])
                (const_int 8 [0x8])) [1 _957->yy_ch_buf+0 S8 A64])) lex.yy.c:2136 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 280 [ D.6782 ])
                (const_int 8 [0x8])) [1 _957->yy_ch_buf+0 S8 A64])
        (nil)))
(insn 1094 1093 1095 146 (set (reg:DI 4 si)
        (reg:DI 500 [ D.6781 ])) lex.yy.c:2136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 500 [ D.6781 ])
        (nil)))
(insn 1095 1094 1096 146 (set (reg:DI 5 di)
        (reg/f:DI 501 [ _957->yy_ch_buf ])) lex.yy.c:2136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 501 [ _957->yy_ch_buf ])
        (nil)))
(call_insn 1096 1095 1097 146 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2136 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 1097 1096 1098 146 (set (reg/f:DI 297 [ D.6793 ])
        (reg:DI 0 ax)) lex.yy.c:2136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 280 [ D.6782 ])
                    (const_int 8 [0x8])) [1 _957->yy_ch_buf+0 S8 A64])
            (nil))))
(debug_insn 1098 1097 1099 146 (var_location:DI ptr (clobber (const_int 0 [0]))) lex.yy.c:1392 -1
     (nil))
(debug_insn 1099 1098 1100 146 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1392 -1
     (nil))
(insn 1100 1099 1101 146 (set (mem/f:DI (plus:DI (reg/f:DI 280 [ D.6782 ])
                (const_int 8 [0x8])) [1 _957->yy_ch_buf+0 S8 A64])
        (reg/f:DI 297 [ D.6793 ])) lex.yy.c:1392 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 297 [ D.6793 ])
        (expr_list:REG_DEAD (reg/f:DI 280 [ D.6782 ])
            (nil))))
(insn 1101 1100 1102 146 (set (reg/f:DI 502 [ *_955 ])
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_955+0 S8 A64])) lex.yy.c:1393 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_955+0 S8 A64])
        (nil)))
(insn 1102 1101 1103 146 (set (reg/f:DI 299 [ D.6783 ])
        (mem/f:DI (plus:DI (reg/f:DI 502 [ *_955 ])
                (const_int 8 [0x8])) [1 _457->yy_ch_buf+0 S8 A64])) lex.yy.c:1393 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 502 [ *_955 ])
        (nil)))
(insn 1103 1102 1104 146 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 299 [ D.6783 ])
            (const_int 0 [0]))) lex.yy.c:1393 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1104 1103 1105 146 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1112)
            (pc))) lex.yy.c:1393 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 1112)
;;  succ:       147 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              149 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 287 289 299 308 347 562 564

;; basic block 147, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 146, next block 148, flags: (HOT_PARTITION, RTL)
;;  pred:       146 [0.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u1124(6){ }u1125(7){ }u1126(16){ }u1127(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 1105 1104 1106 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 1106 1105 1107 147 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f88bbbf2cf0 *.LC24>)) lex.yy.c:1394 89 {*movdi_internal}
     (nil))
(call_insn 1107 1106 1108 147 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1394 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 1108 1107 1109)
;; basic block 148, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 147, next block 149, flags: (HOT_PARTITION, RTL)
;;  pred:       145 [71.0%] 
;; bb 148 artificial_defs: { }
;; bb 148 artificial_uses: { u1130(6){ }u1131(7){ }u1132(16){ }u1133(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 280 287 289 308 347 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 280
;; lr  def 	 299
(code_label 1109 1108 1110 148 228 "" [1 uses])
(note 1110 1109 1111 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 1111 1110 1112 148 (set (reg/f:DI 299 [ D.6783 ])
        (mem/f:DI (plus:DI (reg/f:DI 280 [ D.6782 ])
                (const_int 8 [0x8])) [1 _957->yy_ch_buf+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 280 [ D.6782 ])
        (nil)))
;;  succ:       149 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 287 289 299 308 347 562 564

;; basic block 149, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 148, next block 150, flags: (HOT_PARTITION, RTL)
;;  pred:       148 [100.0%]  (FALLTHRU)
;;              146 [100.0%] 
;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u1135(6){ }u1136(7){ }u1137(16){ }u1138(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 287 289 299 308 347 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 287 289 299 308 347
;; lr  def 	 17 [flags] 306 503 504 505
(code_label 1112 1111 1113 149 229 "" [1 uses])
(note 1113 1112 1114 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 1114 1113 1115 149 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 287 [ D.6795 ])) lex.yy.c:1397 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 287 [ D.6795 ])
        (nil)))
(insn 1115 1114 1116 149 (set (mem:QI (plus:DI (reg/f:DI 299 [ D.6783 ])
                (reg:DI 289 [ D.6781 ])) [0 *_461+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1398 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 299 [ D.6783 ])
        (nil)))
(insn 1116 1115 1117 149 (set (reg/f:DI 503 [ *_955 ])
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_955+0 S8 A64])) lex.yy.c:1399 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_955+0 S8 A64])
        (nil)))
(insn 1117 1116 1118 149 (set (reg/f:DI 504 [ _462->yy_ch_buf ])
        (mem/f:DI (plus:DI (reg/f:DI 503 [ *_955 ])
                (const_int 8 [0x8])) [1 _462->yy_ch_buf+0 S8 A64])) lex.yy.c:1399 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 503 [ *_955 ])
        (nil)))
(insn 1118 1117 1119 149 (set (mem:QI (plus:DI (plus:DI (reg/f:DI 504 [ _462->yy_ch_buf ])
                    (reg:DI 289 [ D.6781 ]))
                (const_int 1 [0x1])) [0 *_465+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1399 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 504 [ _462->yy_ch_buf ])
        (nil)))
(insn 1119 1118 1120 149 (set (reg/f:DI 505 [ *_955 ])
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_955+0 S8 A64])) lex.yy.c:1401 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_955+0 S8 A64])
        (nil)))
(insn 1120 1119 1121 149 (set (reg/f:DI 306 [ D.6783 ])
        (mem/f:DI (plus:DI (reg/f:DI 505 [ *_955 ])
                (const_int 8 [0x8])) [1 _466->yy_ch_buf+0 S8 A64])) lex.yy.c:1401 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 505 [ *_955 ])
        (nil)))
(insn 1121 1120 1122 149 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 306 [ D.6783 ])) lex.yy.c:1401 89 {*movdi_internal}
     (nil))
(debug_insn 1122 1121 1123 149 (var_location:SI new_size (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1123 1122 1124 149 (var_location:DI n (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1124 1123 1125 149 (var_location:SI c (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1125 1124 1126 149 (var_location:DI new_size (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1126 1125 1127 149 (var_location:SI yy_c_buf_p_offset (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1127 1126 1128 149 (var_location:DI b (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1128 1127 1129 149 (var_location:DI num_to_read (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1129 1128 1130 149 (var_location:SI ret_val (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1130 1129 1131 149 (var_location:DI i (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1131 1130 1132 149 (var_location:DI number_to_move (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1132 1131 1133 149 (var_location:DI source (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1133 1132 1134 149 (var_location:DI dest (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(insn 1134 1133 1135 149 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 308 [ ret_val ])
            (const_int 1 [0x1]))) lex.yy.c:1205 7 {*cmpsi_1}
     (nil))
(jump_insn 1135 1134 1351 149 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1147)
            (pc))) lex.yy.c:1205 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 1147)
;;  succ:       153 [100.0%] 
;;              150 (FALLTHRU,LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 289 306 308 347 562 564

;; basic block 150, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 149, next block 151, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       149 (FALLTHRU,LOOP_EXIT)
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u1151(6){ }u1152(7){ }u1153(16){ }u1154(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147 289 306 308 347 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 308
;; lr  def 	 17 [flags]
(note 1351 1135 1136 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 1136 1351 1137 150 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 308 [ ret_val ])
            (const_int 2 [0x2]))) lex.yy.c:1205 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/v:SI 308 [ ret_val ])
        (nil)))
(jump_insn 1137 1136 1141 150 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1627)
            (pc))) lex.yy.c:1205 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 1627)
;;  succ:       151 [29.0%]  (FALLTHRU)
;;              154 [71.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147 289 306 347 562 564

;; basic block 151, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 150, next block 152, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       150 [29.0%]  (FALLTHRU)
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u1157(6){ }u1158(7){ }u1159(16){ }u1160(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 289 347 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 289 347
;; lr  def 	 17 [flags] 88 506
(note 1141 1137 1142 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 1142 1141 1143 151 (set (reg/f:DI 506 [ *_955 ])
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_955+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 347 [ D.6780 ])
        (nil)))
(note 1143 1142 1144 151 NOTE_INSN_DELETED)
(note 1144 1143 33 151 NOTE_INSN_DELETED)
(insn 33 1144 1628 151 (parallel [
            (set (reg/v/f:DI 88 [ yy_cp ])
                (plus:DI (mem/f:DI (plus:DI (reg/f:DI 506 [ *_955 ])
                            (const_int 8 [0x8])) [1 _934->yy_ch_buf+0 S8 A64])
                    (reg:DI 289 [ D.6781 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1205 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 506 [ *_955 ])
        (expr_list:REG_DEAD (reg:DI 289 [ D.6781 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(jump_insn 1628 33 1629 151 (set (pc)
        (label_ref 1184)) 654 {jump}
     (nil)
 -> 1184)
;;  succ:       155 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 562 564

(barrier 1629 1628 1344)
;; basic block 152, loop depth 5, count 0, freq 0, maybe hot
;;  prev block 151, next block 153, flags: (HOT_PARTITION, RTL)
;;  pred:       111 [16.1%] 
;; bb 152 artificial_defs: { }
;; bb 152 artificial_uses: { u1166(6){ }u1167(7){ }u1168(16){ }u1169(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 213 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 213
;; lr  def 	 306
(code_label 1344 1629 1343 152 242 "" [1 uses])
(note 1343 1344 32 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 32 1343 1147 152 (set (reg/f:DI 306 [ D.6783 ])
        (reg/v/f:DI 213 [ source ])) lex.yy.c:1277 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 213 [ source ])
        (nil)))
;;  succ:       153 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 306 562 564

;; basic block 153, loop depth 5, count 0, freq 0, maybe hot
;;  prev block 152, next block 154, flags: (HOT_PARTITION, RTL)
;;  pred:       152 [100.0%]  (FALLTHRU)
;;              149 [100.0%] 
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u1171(6){ }u1172(7){ }u1173(16){ }u1174(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 306 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 306
;; lr  def 	 17 [flags] 90 508 509 511 512 513
(code_label 1147 32 1148 153 205 "" [1 uses])
(note 1148 1147 1149 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1149 1148 1150 153 (var_location:SI new_size (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1150 1149 1151 153 (var_location:DI n (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1151 1150 1152 153 (var_location:SI c (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1152 1151 1153 153 (var_location:DI new_size (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1153 1152 1154 153 (var_location:SI yy_c_buf_p_offset (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1154 1153 1155 153 (var_location:DI b (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1155 1154 1156 153 (var_location:DI num_to_read (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1156 1155 1157 153 (var_location:SI ret_val (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1157 1156 1158 153 (var_location:DI i (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1158 1157 1159 153 (var_location:DI number_to_move (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1159 1158 1160 153 (var_location:DI source (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1160 1159 1161 153 (var_location:DI dest (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(insn 1161 1160 1162 153 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 306 [ D.6783 ])) lex.yy.c:1222 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 306 [ D.6783 ])
        (nil)))
(insn 1162 1161 1163 153 (set (reg:SI 509 [ yy_start ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) lex.yy.c:1224 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (nil)))
(insn 1163 1162 1164 153 (parallel [
            (set (reg:SI 508 [ D.6777 ])
                (plus:SI (reg:SI 509 [ yy_start ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1224 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 509 [ yy_start ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff]))
                (nil)))))
(insn 1164 1163 1165 153 (parallel [
            (set (reg:SI 511)
                (lshiftrt:SI (reg:SI 508 [ D.6777 ])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1224 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1165 1164 1166 153 (parallel [
            (set (reg:SI 512)
                (plus:SI (reg:SI 511)
                    (reg:SI 508 [ D.6777 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1224 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 511)
        (expr_list:REG_DEAD (reg:SI 508 [ D.6777 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 1166 1165 1167 153 (parallel [
            (set (reg:SI 513 [ D.6777 ])
                (ashiftrt:SI (reg:SI 512)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1224 545 {*ashrsi3_1}
     (expr_list:REG_DEAD (reg:SI 512)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1167 1166 1168 153 (parallel [
            (set (reg/v:SI 90 [ yy_act ])
                (plus:SI (reg:SI 513 [ D.6777 ])
                    (const_int 47 [0x2f])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1224 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 513 [ D.6777 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(debug_insn 1168 1167 1630 153 (var_location:SI yy_act (reg/v:SI 90 [ yy_act ])) lex.yy.c:1224 -1
     (nil))
(jump_insn 1630 1168 1631 153 (set (pc)
        (label_ref 347)) lex.yy.c:1225 654 {jump}
     (nil)
 -> 347)
;;  succ:       41 [100.0%]  (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 90 562 564

(barrier 1631 1630 1627)
;; basic block 154, loop depth 3, count 0, freq 0, maybe hot
;;  prev block 153, next block 155, flags: (HOT_PARTITION, RTL)
;;  pred:       150 [71.0%]  (LOOP_EXIT)
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u1183(6){ }u1184(7){ }u1185(16){ }u1186(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147 306 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 147 306
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 514
(code_label 1627 1631 1172 154 283 "" [1 uses])
(note 1172 1627 1173 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 1173 1172 1174 154 (set (reg:DI 514 [ D.6790 ])
        (sign_extend:DI (reg/v:SI 147 [ yy_amount_of_matched_text ]))) lex.yy.c:1238 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 147 [ yy_amount_of_matched_text ])
        (nil)))
(insn 1174 1173 1175 154 (parallel [
            (set (reg/v/f:DI 88 [ yy_cp ])
                (plus:DI (reg/f:DI 306 [ D.6783 ])
                    (reg:DI 514 [ D.6790 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1238 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 514 [ D.6790 ])
        (expr_list:REG_DEAD (reg/f:DI 306 [ D.6783 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 1175 1174 1176 154 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:1238 89 {*movdi_internal}
     (nil))
(call_insn 1176 1175 1177 154 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>) [0 yy_get_previous_state S1 A8])
            (const_int 0 [0]))) lex.yy.c:1240 669 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 1177 1176 1178 154 (set (reg/v:SI 87 [ yy_current_state ])
        (reg:SI 0 ax)) lex.yy.c:1240 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(debug_insn 1178 1177 1179 154 (var_location:SI yy_current_state (reg/v:SI 87 [ yy_current_state ])) lex.yy.c:1240 -1
     (nil))
(debug_insn 1179 1178 1180 154 (var_location:DI yy_cp (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:1242 -1
     (nil))
(insn 1180 1179 1181 154 (set (reg/v/f:DI 89 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1243 89 {*movdi_internal}
     (nil))
(debug_insn 1181 1180 1632 154 (var_location:DI yy_bp (reg/v/f:DI 89 [ yy_cp ])) lex.yy.c:1243 -1
     (nil))
(jump_insn 1632 1181 1633 154 (set (pc)
        (label_ref 822)) lex.yy.c:1244 654 {jump}
     (nil)
 -> 822)
;;  succ:       19 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 88 89 562 564

(barrier 1633 1632 1184)
;; basic block 155, loop depth 4, count 0, freq 0, maybe hot
;;  prev block 154, next block 156, flags: (HOT_PARTITION, RTL)
;;  pred:       112 [100.0%] 
;;              151 [100.0%] 
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u1196(6){ }u1197(7){ }u1198(16){ }u1199(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 160 186 516
(code_label 1184 1633 1185 155 206 "" [2 uses])
(note 1185 1184 1186 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1186 1185 1187 155 (var_location:SI new_size (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1187 1186 1188 155 (var_location:DI n (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1188 1187 1189 155 (var_location:SI c (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1189 1188 1190 155 (var_location:DI new_size (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1190 1189 1191 155 (var_location:SI yy_c_buf_p_offset (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1191 1190 1192 155 (var_location:DI b (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1192 1191 1193 155 (var_location:DI num_to_read (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1193 1192 1194 155 (var_location:SI ret_val (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1194 1193 1195 155 (var_location:DI i (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1195 1194 1196 155 (var_location:DI number_to_move (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1196 1195 1197 155 (var_location:DI source (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1197 1196 1198 155 (var_location:DI dest (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1198 1197 1199 155 (var_location:DI D#9 (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1248 -1
     (nil))
(debug_insn 1199 1198 1200 155 (var_location:DI D#8 (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1248 -1
     (nil))
(debug_insn 1200 1199 1201 155 (var_location:DI D#7 (ashift:DI (debug_expr:DI D#8)
        (const_int 3 [0x3]))) lex.yy.c:1248 -1
     (nil))
(debug_insn 1201 1200 1202 155 (var_location:DI D#6 (plus:DI (debug_expr:DI D#9)
        (debug_expr:DI D#7))) lex.yy.c:1248 -1
     (nil))
(debug_insn 1202 1201 1203 155 (var_location:DI D#5 (mem/f:DI (debug_expr:DI D#6) [0 +0 S8 A64])) lex.yy.c:1248 -1
     (nil))
(debug_insn 1203 1202 1204 155 (var_location:DI D#4 (mem/f/j:DI (plus:DI (debug_expr:DI D#5)
            (const_int 8 [0x8])) [0 D#5->yy_ch_buf+0 S8 A64])) lex.yy.c:1248 -1
     (nil))
(debug_insn 1204 1203 1205 155 (var_location:SI D#3 (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) lex.yy.c:1248 -1
     (nil))
(debug_insn 1205 1204 1206 155 (var_location:DI D#2 (sign_extend:DI (debug_expr:SI D#3))) lex.yy.c:1248 -1
     (nil))
(insn 1206 1205 1207 155 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/v/f:DI 88 [ yy_cp ])) lex.yy.c:1248 89 {*movdi_internal}
     (nil))
(call_insn 1207 1206 1208 155 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>) [0 yy_get_previous_state S1 A8])
            (const_int 0 [0]))) lex.yy.c:1250 669 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 1208 1207 1209 155 (set (reg/v:SI 160 [ yy_current_state ])
        (reg:SI 0 ax)) lex.yy.c:1250 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(debug_insn 1209 1208 1210 155 (var_location:SI yy_current_state (reg/v:SI 160 [ yy_current_state ])) lex.yy.c:1250 -1
     (nil))
(debug_insn 1210 1209 1211 155 (var_location:DI yy_cp (plus:DI (debug_expr:DI D#4)
        (debug_expr:DI D#2))) lex.yy.c:1252 -1
     (nil))
(insn 1211 1210 1212 155 (set (reg/v/f:DI 89 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1253 89 {*movdi_internal}
     (nil))
(debug_insn 1212 1211 1214 155 (var_location:DI yy_bp (reg/v/f:DI 89 [ yy_cp ])) lex.yy.c:1253 -1
     (nil))
(insn 1214 1212 1215 155 (set (reg:DI 516 [ yy_current_state ])
        (sign_extend:DI (reg/v:SI 160 [ yy_current_state ]))) 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 160 [ yy_current_state ])
        (nil)))
(insn 1215 1214 1634 155 (set (reg:HI 186 [ D.6786 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 516 [ yy_current_state ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])) 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:DI 516 [ yy_current_state ])
        (nil)))
(jump_insn 1634 1215 1635 155 (set (pc)
        (label_ref 278)) lex.yy.c:1254 654 {jump}
     (nil)
 -> 278)
;;  succ:       33 [100.0%]  (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 186 562 564

(barrier 1635 1634 1218)
;; basic block 156, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 155, next block 157, flags: (HOT_PARTITION, RTL)
;;  pred:       41 [2.2%]  (LOOP_EXIT)
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u1207(6){ }u1208(7){ }u1209(16){ }u1210(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 1218 1635 1219 156 140 "" [1 uses])
(note 1219 1218 1220 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 1220 1219 1221 156 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f88bbbf2d80 *.LC25>)) lex.yy.c:1261 89 {*movdi_internal}
     (nil))
(call_insn 1221 1220 1222 156 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1261 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 1222 1221 1223)
;; basic block 157, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 156, next block 158, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u1213(6){ }u1214(7){ }u1215(16){ }u1216(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 1223 1222 1224 157 156 "" [1 uses])
(note 1224 1223 42 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 42 1224 1636 157 (set (reg:SI 92 [ D.6777 ])
        (const_int 276 [0x114])) mycc.l:75 90 {*movsi_internal}
     (nil))
(jump_insn 1636 42 1637 157 (set (pc)
        (label_ref 1225)) 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1637 1636 1330)
;; basic block 158, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 157, next block 159, flags: (HOT_PARTITION, RTL)
;;  pred:       42 [2.3%]  (LOOP_EXIT)
;; bb 158 artificial_defs: { }
;; bb 158 artificial_uses: { u1217(6){ }u1218(7){ }u1219(16){ }u1220(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 1330 1637 1329 158 238 "" [1 uses])
(note 1329 1330 43 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 43 1329 1638 158 (set (reg:SI 92 [ D.6777 ])
        (const_int 277 [0x115])) mycc.l:76 90 {*movsi_internal}
     (nil))
(jump_insn 1638 43 1639 158 (set (pc)
        (label_ref 1225)) 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1639 1638 1334)
;; basic block 159, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 158, next block 160, flags: (HOT_PARTITION, RTL)
;;  pred:       51 [2.0%]  (LOOP_EXIT)
;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u1221(6){ }u1222(7){ }u1223(16){ }u1224(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 1334 1639 1333 159 239 "" [1 uses])
(note 1333 1334 68 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 68 1333 1640 159 (set (reg:SI 92 [ D.6777 ])
        (const_int 0 [0])) mycc.l:62 90 {*movsi_internal}
     (nil))
(jump_insn 1640 68 1641 159 (set (pc)
        (label_ref 1225)) 654 {jump}
     (nil)
 -> 1225)
;;  succ:       161 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

(barrier 1641 1640 1338)
;; basic block 160, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 159, next block 161, flags: (HOT_PARTITION, RTL)
;;  pred:       53 [100.0%]  (LOOP_EXIT)
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u1225(6){ }u1226(7){ }u1227(16){ }u1228(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 92
(code_label 1338 1641 1337 160 240 "" [1 uses])
(note 1337 1338 67 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 67 1337 1225 160 (set (reg:SI 92 [ D.6777 ])
        (const_int 0 [0])) mycc.l:62 90 {*movsi_internal}
     (nil))
;;  succ:       161 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92

;; basic block 161, loop depth 0, count 0, freq 61, maybe hot
;;  prev block 160, next block 162, flags: (HOT_PARTITION, RTL)
;;  pred:       60 [100.0%] 
;;              43 [100.0%] 
;;              58 [100.0%] 
;;              56 [100.0%] 
;;              70 [21.6%] 
;;              61 [100.0%] 
;;              68 [100.0%] 
;;              69 [100.0%] 
;;              157 [100.0%] 
;;              94 [100.0%] 
;;              160 [100.0%]  (FALLTHRU)
;;              71 [100.0%] 
;;              72 [100.0%] 
;;              73 [100.0%] 
;;              74 [100.0%] 
;;              75 [100.0%] 
;;              76 [100.0%] 
;;              77 [100.0%] 
;;              78 [100.0%] 
;;              79 [100.0%] 
;;              80 [100.0%] 
;;              81 [100.0%] 
;;              82 [100.0%] 
;;              83 [100.0%] 
;;              84 [100.0%] 
;;              85 [100.0%] 
;;              86 [100.0%] 
;;              87 [100.0%] 
;;              88 [100.0%] 
;;              89 [100.0%] 
;;              90 [100.0%] 
;;              91 [100.0%] 
;;              92 [100.0%] 
;;              93 [100.0%] 
;;              158 [100.0%] 
;;              159 [100.0%] 
;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u1229(6){ }u1230(7){ }u1231(16){ }u1232(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1225 67 1226 161 157 "" [35 uses])
(note 1226 1225 1319 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 1319 1226 1320 161 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ D.6777 ])) lex.yy.c:1265 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ D.6777 ])
        (nil)))
(insn 1320 1319 1321 161 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 20 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 D.6797+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (scratch:DI))
        ]) lex.yy.c:1265 990 {stack_tls_protect_test_di}
     (nil))
(jump_insn 1321 1320 1642 161 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1324)
            (pc))) lex.yy.c:1265 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 1324)
;;  succ:       172 [100.0%] 
;;              162 [0.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 162, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 161, next block 163, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       161 [0.0%]  (FALLTHRU)
;; bb 162 artificial_defs: { }
;; bb 162 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1642 1321 1644 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1644 1642 1645 162 (set (pc)
        (label_ref 1643)) 654 {jump}
     (nil)
 -> 1643)
;;  succ:       171 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1645 1644 1239)
;; basic block 163, loop depth 6, count 0, freq 3, maybe hot
;;  prev block 162, next block 164, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       132 [72.0%] 
;; bb 163 artificial_defs: { }
;; bb 163 artificial_uses: { u1241(6){ }u1242(7){ }u1243(16){ }u1244(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 212 224 251 309 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 212 224 251 309
;; lr  def 	 17 [flags] 212 347 521 523 540 541
(code_label 1239 1645 1240 163 220 "" [1 uses])
(note 1240 1239 1242 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1242 1240 1243 163 (var_location:SI c (debug_expr:SI D#20)) -1
     (nil))
(insn 1243 1242 1244 163 (set (reg:DI 540 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1364 89 {*movdi_internal}
     (nil))
(note 1244 1243 1245 163 NOTE_INSN_DELETED)
(insn 1245 1244 1246 163 (set (reg/f:DI 541 [ yy_buffer_stack ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1364 89 {*movdi_internal}
     (nil))
(insn 1246 1245 1247 163 (set (reg/f:DI 347 [ D.6780 ])
        (plus:DI (mult:DI (reg:DI 540 [ yy_buffer_stack_top ])
                (const_int 8 [0x8]))
            (reg/f:DI 541 [ yy_buffer_stack ]))) lex.yy.c:1364 214 {*leadi}
     (nil))
(insn 1247 1246 1248 163 (set (reg/f:DI 521 [ *_379 ])
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_379+0 S8 A64])) lex.yy.c:1364 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_379+0 S8 A64])
        (nil)))
(note 1248 1247 1249 163 NOTE_INSN_DELETED)
(insn 1249 1248 1250 163 (parallel [
            (set (reg:DI 523)
                (plus:DI (mem/f:DI (plus:DI (reg/f:DI 521 [ *_379 ])
                            (const_int 8 [0x8])) [1 _380->yy_ch_buf+0 S8 A64])
                    (reg/v:DI 212 [ n ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 521 [ *_379 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(note 1250 1249 1251 163 NOTE_INSN_DELETED)
(insn 1251 1250 1252 163 (set (mem:QI (plus:DI (reg:DI 523)
                (reg/v:DI 224 [ number_to_move ])) [0 *_383+0 S1 A8])
        (subreg:QI (reg/v:SI 251 [ c ]) 0)) lex.yy.c:1364 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 523)
        (expr_list:REG_DEAD (reg/v:SI 251 [ c ])
            (nil))))
(insn 1252 1251 1254 163 (parallel [
            (set (reg/v:DI 212 [ n ])
                (plus:DI (reg/v:DI 212 [ n ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 1254 1252 1255 163 (var_location:DI n (reg/v:DI 212 [ n ])) -1
     (nil))
(debug_insn 1255 1254 1257 163 (var_location:SI c (debug_expr:SI D#20)) -1
     (nil))
(insn 1257 1255 1258 163 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 212 [ n ])
            (reg/v:DI 309 [ num_to_read ]))) lex.yy.c:1364 8 {*cmpdi_1}
     (nil))
(jump_insn 1258 1257 1646 163 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1256)
            (pc))) lex.yy.c:1364 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 8800 (nil)))
 -> 1256)
;;  succ:       131 [88.0%]  (DFS_BACK)
;;              164 [12.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 212 224 309 347 540 541 562 564

;; basic block 164, loop depth 5, count 0, freq 0, maybe hot
;;  prev block 163, next block 165, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       163 [12.0%]  (FALLTHRU)
;; bb 164 artificial_defs: { }
;; bb 164 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 212 224 347 540 541 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1646 1258 1647 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1647 1646 1648 164 (set (pc)
        (label_ref 1260)) 654 {jump}
     (nil)
 -> 1260)
;;  succ:       135 [100.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 212 224 347 540 541 562 564

(barrier 1648 1647 1263)
;; basic block 165, loop depth 5, count 0, freq 6, maybe hot
;;  prev block 164, next block 166, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       137 [71.0%]  (LOOP_EXIT)
;;              139 [100.0%] 
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u1262(6){ }u1263(7){ }u1264(16){ }u1265(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 275 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 347 540 541
(code_label 1263 1648 1264 165 223 "" [2 uses])
(note 1264 1263 1265 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 1265 1264 1266 165 (set (reg:DI 540 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(note 1266 1265 1267 165 NOTE_INSN_DELETED)
(insn 1267 1266 1268 165 (set (reg/f:DI 541 [ yy_buffer_stack ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 1268 1267 1649 165 (set (reg/f:DI 347 [ D.6780 ])
        (plus:DI (mult:DI (reg:DI 540 [ yy_buffer_stack_top ])
                (const_int 8 [0x8]))
            (reg/f:DI 541 [ yy_buffer_stack ]))) 214 {*leadi}
     (nil))
(jump_insn 1649 1268 1650 165 (set (pc)
        (label_ref 1046)) 654 {jump}
     (nil)
 -> 1046)
;;  succ:       141 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 275 347 540 541 562 564

(barrier 1650 1649 1271)
;; basic block 166, loop depth 6, count 0, freq 7, maybe hot
;;  prev block 165, next block 167, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       138 [50.0%] 
;; bb 166 artificial_defs: { }
;; bb 166 artificial_uses: { u1270(6){ }u1271(7){ }u1272(16){ }u1273(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 270 309 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 270
;; lr  def 	 17 [flags]
(code_label 1271 1650 1272 166 224 "" [1 uses])
(note 1272 1271 1274 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 1274 1272 1275 166 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/f:DI 270 [ D.6794 ]) [2 *_402+0 S4 A32])
            (const_int 4 [0x4]))) lex.yy.c:1364 7 {*cmpsi_1}
     (nil))
(jump_insn 1275 1274 1652 166 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1651)
            (pc))) lex.yy.c:1364 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 1651)
;;  succ:       167 [0.0%]  (FALLTHRU)
;;              140 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 224 270 309 562 564

;; basic block 167, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 166, next block 168, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       166 [0.0%]  (FALLTHRU)
;; bb 167 artificial_defs: { }
;; bb 167 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1652 1275 1653 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1653 1652 1654 167 (set (pc)
        (label_ref 1273)) 654 {jump}
     (nil)
 -> 1273)
;;  succ:       134 [100.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1654 1653 1616)
;; basic block 168, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 167, next block 169, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       133 [100.0%]  (LOOP_EXIT)
;; bb 168 artificial_defs: { }
;; bb 168 artificial_uses: { u1276(6){ }u1277(7){ }u1278(16){ }u1279(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 212 224 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 212 224
;; lr  def 	 17 [flags] 212 347 531 533 540 541
(code_label 1616 1654 1281 168 282 "" [1 uses])
(note 1281 1616 1284 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1284 1281 1285 168 (var_location:SI c (const_int 10 [0xa])) -1
     (nil))
(insn 1285 1284 1286 168 (set (reg:DI 540 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1364 89 {*movdi_internal}
     (nil))
(note 1286 1285 1287 168 NOTE_INSN_DELETED)
(insn 1287 1286 1288 168 (set (reg/f:DI 541 [ yy_buffer_stack ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1364 89 {*movdi_internal}
     (nil))
(insn 1288 1287 1289 168 (set (reg/f:DI 347 [ D.6780 ])
        (plus:DI (mult:DI (reg:DI 540 [ yy_buffer_stack_top ])
                (const_int 8 [0x8]))
            (reg/f:DI 541 [ yy_buffer_stack ]))) lex.yy.c:1364 214 {*leadi}
     (nil))
(note 1289 1288 1290 168 NOTE_INSN_DELETED)
(debug_insn 1290 1289 1291 168 (var_location:DI n (plus:DI (reg/v:DI 212 [ n ])
        (const_int 1 [0x1]))) lex.yy.c:1364 -1
     (nil))
(insn 1291 1290 1292 168 (set (reg/f:DI 531 [ *_390 ])
        (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_390+0 S8 A64])) lex.yy.c:1364 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 347 [ D.6780 ]) [1 *_390+0 S8 A64])
        (nil)))
(note 1292 1291 1293 168 NOTE_INSN_DELETED)
(insn 1293 1292 1294 168 (parallel [
            (set (reg:DI 533)
                (plus:DI (mem/f:DI (plus:DI (reg/f:DI 531 [ *_390 ])
                            (const_int 8 [0x8])) [1 _391->yy_ch_buf+0 S8 A64])
                    (reg/v:DI 212 [ n ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 531 [ *_390 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(note 1294 1293 1295 168 NOTE_INSN_DELETED)
(insn 1295 1294 1296 168 (set (mem:QI (plus:DI (reg:DI 533)
                (reg/v:DI 224 [ number_to_move ])) [0 *_395+0 S1 A8])
        (const_int 10 [0xa])) lex.yy.c:1364 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 533)
        (nil)))
(debug_insn 1296 1295 28 168 (var_location:DI n (plus:DI (reg/v:DI 212 [ n ])
        (const_int 1 [0x1]))) -1
     (nil))
(insn 28 1296 1655 168 (set (reg/v:DI 212 [ n ])
        (plus:DI (reg/v:DI 212 [ n ])
            (const_int 1 [0x1]))) lex.yy.c:1364 214 {*leadi}
     (nil))
(jump_insn 1655 28 1656 168 (set (pc)
        (label_ref 1260)) 654 {jump}
     (nil)
 -> 1260)
;;  succ:       135 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 212 224 347 540 541 562 564

(barrier 1656 1655 1299)
;; basic block 169, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 168, next block 170, flags: (HOT_PARTITION, RTL)
;;  pred:       131 [28.0%]  (LOOP_EXIT)
;; bb 169 artificial_defs: { }
;; bb 169 artificial_uses: { u1295(6){ }u1296(7){ }u1297(16){ }u1298(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 212 224 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 268
(code_label 1299 1656 1300 169 219 "" [1 uses])
(note 1300 1299 1303 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1303 1300 1304 169 (var_location:SI c (const_int -1 [0xffffffffffffffff])) -1
     (nil))
(debug_insn 1304 1303 1305 169 (var_location:DI n (reg/v:DI 212 [ n ])) -1
     (nil))
(insn 1305 1304 1306 169 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1364 89 {*movdi_internal}
     (nil))
(call_insn 1306 1305 1307 169 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f88bbf956c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) lex.yy.c:1364 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f88bbf956c0 ferror>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1307 1306 1308 169 (set (reg:SI 268 [ D.6777 ])
        (reg:SI 0 ax)) lex.yy.c:1364 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 1308 1307 1309 169 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 268 [ D.6777 ])
            (const_int 0 [0]))) lex.yy.c:1364 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 268 [ D.6777 ])
        (nil)))
(jump_insn 1309 1308 1310 169 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1273)
            (pc))) lex.yy.c:1364 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 1273)
;;  succ:       134 [50.0%]  (LOOP_EXIT)
;;              170 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 212 224 562 564

;; basic block 170, loop depth 5, count 0, freq 1, maybe hot
;;  prev block 169, next block 171, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       169 [50.0%]  (FALLTHRU)
;; bb 170 artificial_defs: { }
;; bb 170 artificial_uses: { u1305(6){ }u1306(7){ }u1307(16){ }u1308(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 212 224 562 564
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 347 540 541
(note 1310 1309 1311 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(insn 1311 1310 1312 170 (set (reg:DI 540 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(note 1312 1311 1313 170 NOTE_INSN_DELETED)
(insn 1313 1312 1314 170 (set (reg/f:DI 541 [ yy_buffer_stack ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 1314 1313 1657 170 (set (reg/f:DI 347 [ D.6780 ])
        (plus:DI (mult:DI (reg:DI 540 [ yy_buffer_stack_top ])
                (const_int 8 [0x8]))
            (reg/f:DI 541 [ yy_buffer_stack ]))) 214 {*leadi}
     (nil))
(jump_insn 1657 1314 1658 170 (set (pc)
        (label_ref 1260)) 654 {jump}
     (nil)
 -> 1260)
;;  succ:       135 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 89 147 212 224 347 540 541 562 564

(barrier 1658 1657 1643)
;; basic block 171, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 170, next block 172, flags: (HOT_PARTITION, RTL)
;;  pred:       162 [100.0%] 
;; bb 171 artificial_defs: { }
;; bb 171 artificial_uses: { u1313(6){ }u1314(7){ }u1315(16){ }u1316(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 1643 1658 1353 171 284 "" [1 uses])
(note 1353 1643 1322 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(call_insn 1322 1353 1323 171 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f88bbdacaf8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) lex.yy.c:1265 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f88bbdacaf8 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 1323 1322 1324)
;; basic block 172, loop depth 0, count 0, freq 63, maybe hot
;;  prev block 171, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       161 [100.0%] 
;; bb 172 artificial_defs: { }
;; bb 172 artificial_uses: { u1318(6){ }u1319(7){ }u1320(16){ }u1321(20){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1324 1323 1354 172 237 "" [1 uses])
(note 1354 1324 1325 172 [bb 172] NOTE_INSN_BASIC_BLOCK)
(insn 1325 1354 0 172 (use (reg/i:SI 0 ax)) lex.yy.c:1265 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function yy_buffer_state* yy_scan_buffer(char*, yy_size_t) (_Z14yy_scan_bufferPcm, funcdef_no=101, decl_uid=4272, cgraph_uid=101, symbol_order=128)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 14 count 12 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;; 2 succs { 8 3 }
;; 3 succs { 9 4 }
;; 4 succs { 10 5 }
;; 5 succs { 6 7 }
;; 6 succs { }
;; 7 succs { 11 }
;; 8 succs { 11 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
Will split live ranges of parameters at BB 5
      Creating newreg=101 from oldreg=97
scanning new insn with uid = 75.
Split live-range of register (reg/v/f:DI 97 [ base ])
rescanning insn with uid = 38.
rescanning insn with uid = 37.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 14 count 12 (    1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 97: def dominates all uses has unique first use
Reg 98 uninteresting
Reg 101: def dominates all uses has unique first use
Reg 99 uninteresting
Reg 97 not local to one basic block
Reg 101 not local to one basic block
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11
;; 2 succs { 8 3 }
;; 3 succs { 9 4 }
;; 4 succs { 10 5 }
;; 5 succs { 6 7 }
;; 6 succs { }
;; 7 succs { 11 }
;; 8 succs { 11 }
;; 9 succs { 11 }
;; 10 succs { 11 }
;; 11 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a3 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r99,l0) best AREG, allocno AREG
    a5 (r98,l0) best SIREG, allocno SIREG
    a4 (r97,l0) best DIREG, allocno DIREG
    a2 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best AREG, allocno AREG

  a0(r87,l0) costs: AREG:-999,-999 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:15976,15976 NO_REX_SSE_REGS:15976,15976 SSE_REGS:15976,15976 MMX_REGS:20971,20971 INT_SSE_REGS:16975,16975 ALL_REGS:307592,307592 MEM:3995,3995
  a1(r99,l0) costs: AREG:-679,-679 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:76048,76048 NO_REX_SSE_REGS:76048,76048 SSE_REGS:76048,76048 MMX_REGS:120183,120183 INT_SSE_REGS:84875,84875 ALL_REGS:1903916,1903916 MEM:34629,34629
  a2(r88,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:23344,23344 NO_REX_SSE_REGS:23344,23344 SSE_REGS:23344,23344 MMX_REGS:30134,30134 INT_SSE_REGS:24702,24702 ALL_REGS:482144,482144 MEM:9272,9272
  a3(r101,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16296,16296 NO_REX_SSE_REGS:16296,16296 SSE_REGS:16296,16296 MMX_REGS:23086,23086 INT_SSE_REGS:17654,17654 ALL_REGS:350364,350364 MEM:6111,6111
  a4(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28024,28024 NO_REX_SSE_REGS:28024,28024 SSE_REGS:28024,28024 MMX_REGS:40539,40539 INT_SSE_REGS:30527,30527 ALL_REGS:620624,620624 MEM:10333,10333
  a5(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:38272,38272 NO_REX_SSE_REGS:38272,38272 SSE_REGS:38272,38272 MMX_REGS:57192,57192 INT_SSE_REGS:42056,42056 ALL_REGS:887072,887072 MEM:15136,15136


Pass 1 for finding pseudo/allocno costs

    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r87: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0,-999 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:19968,19968 NO_REX_SSE_REGS:19968,19968 SSE_REGS:19968,19968 MMX_REGS:24963,24963 INT_SSE_REGS:20967,20967 ALL_REGS:311584,311584 MEM:6989,6989
  a1(r99,l0) costs: AREG:0,-679 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:78764,78764 NO_REX_SSE_REGS:78764,78764 SSE_REGS:78764,78764 MMX_REGS:122899,122899 INT_SSE_REGS:87591,87591 ALL_REGS:1906632,1906632 MEM:36666,36666
  a2(r88,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:23344,23344 NO_REX_SSE_REGS:23344,23344 SSE_REGS:23344,23344 MMX_REGS:30134,30134 INT_SSE_REGS:24702,24702 ALL_REGS:482144,482144 MEM:9272,9272
  a3(r101,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:19012,19012 NO_REX_SSE_REGS:19012,19012 SSE_REGS:19012,19012 MMX_REGS:25802,25802 INT_SSE_REGS:20370,20370 ALL_REGS:353080,353080 MEM:8148,8148
  a4(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:32024,32024 NO_REX_SSE_REGS:32024,32024 SSE_REGS:32024,32024 MMX_REGS:44539,44539 INT_SSE_REGS:34527,34527 ALL_REGS:624624,624624 MEM:13333,13333
  a5(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:42272,42272 NO_REX_SSE_REGS:42272,42272 SSE_REGS:42272,42272 MMX_REGS:61192,61192 INT_SSE_REGS:46056,46056 ALL_REGS:891072,891072 MEM:18136,18136

   Insn 55(l0): point = 0
   Insn 54(l0): point = 2
   Insn 8(l0): point = 5
   Insn 73(l0): point = 8
   Insn 5(l0): point = 10
   Insn 71(l0): point = 13
   Insn 7(l0): point = 15
   Insn 69(l0): point = 18
   Insn 6(l0): point = 20
   Insn 47(l0): point = 22
   Insn 46(l0): point = 24
   Insn 45(l0): point = 26
   Insn 44(l0): point = 28
   Insn 43(l0): point = 30
   Insn 42(l0): point = 32
   Insn 41(l0): point = 34
   Insn 40(l0): point = 36
   Insn 39(l0): point = 38
   Insn 38(l0): point = 40
   Insn 37(l0): point = 42
   Insn 36(l0): point = 44
   Insn 32(l0): point = 47
   Insn 31(l0): point = 49
   Insn 29(l0): point = 52
   Insn 28(l0): point = 54
   Insn 24(l0): point = 56
   Insn 23(l0): point = 58
   Insn 22(l0): point = 60
   Insn 75(l0): point = 62
   Insn 19(l0): point = 65
   Insn 18(l0): point = 67
   Insn 16(l0): point = 70
   Insn 15(l0): point = 72
   Insn 14(l0): point = 74
   Insn 12(l0): point = 77
   Insn 11(l0): point = 79
   Insn 3(l0): point = 81
   Insn 2(l0): point = 83
 a0(r87): [18..20] [13..15] [8..10] [3..5]
 a1(r99): [52..56] [21..46]
 a2(r88): [52..74] [35..46]
 a3(r101): [52..62] [41..46]
 a4(r97): [63..83]
 a5(r98): [68..81]
Compressing live ranges: from 86 to 14 - 16%
Ranges after the compression:
 a0(r87): [0..7]
 a1(r99): [8..11]
 a2(r88): [8..13]
 a3(r101): [8..11]
 a4(r97): [12..13]
 a5(r98): [12..13]
+++Allocating 40 bytes for conflict table (uncompressed size 48)
;; a0(r87,l0) conflicts:;; a1(r99,l0) conflicts: a3(r101,l0) a2(r88,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a2(r88,l0) conflicts: a1(r99,l0) a3(r101,l0) a4(r97,l0) a5(r98,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a3(r101,l0) conflicts: a1(r99,l0) a2(r88,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a4(r97,l0) conflicts: a2(r88,l0) a5(r98,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a5(r98,l0) conflicts: a2(r88,l0) a4(r97,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a0(r87)<->a1(r99)@679:move
  cp1:a3(r101)<->a4(r97)@679:move
  pref0:a1(r99)<-hr0@1018
  pref1:a5(r98)<-hr4@1500
  pref2:a4(r97)<-hr5@1500
  pref3:a0(r87)<-hr0@1498
  pref4:a1(r99)<-hr5@679
  regions=1, blocks=12, points=14
    allocnos=6 (big 0), copies=2, conflicts=0, ranges=6

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 11 10 9 8 7 6 5 4 3 2
    all: 0r87 1r99 2r88 3r101 4r97 5r98
    modified regnos: 87 88 97 98 99 101
    border:
    Pressure: GENERAL_REGS=3
 Removing pref4:hr5@679
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@62244
          2:( 0-4 6 37-44)@73332
            3:( 1-4 6 37-44)@34840
      Allocno a0r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a1r99 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a2r88 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, node:  1-4 6 37-44 (confl regs =  0 5 7-36 45-79)
      Allocno a3r101 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, node:  1-4 6 37-44 (confl regs =  0 5 7-36 45-79)
      Allocno a4r97 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, ^node:  0-6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a5r98 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Forming thread by copy 0:a0r87-a1r99 (freq=679):
        Result (freq=11503): a0r87(1997) a1r99(9506)
      Forming thread by copy 1:a3r101-a4r97 (freq=679):
        Result (freq=5540): a3r101(2037) a4r97(3503)
      Pushing a2(r88,l0)(cost 0)
      Pushing a5(r98,l0)(cost 0)
      Pushing a3(r101,l0)(cost 0)
      Pushing a4(r97,l0)(cost 0)
      Pushing a0(r87,l0)(cost 0)
      Pushing a1(r99,l0)(cost 0)
      Popping a1(r99,l0)  -- assign reg 3
      Popping a0(r87,l0)  -- assign reg 0
      Popping a4(r97,l0)  -- assign reg 5
      Popping a3(r101,l0)  -- assign reg 6
      Popping a5(r98,l0)  -- assign reg 4
      Popping a2(r88,l0)  -- assign reg 41
Disposition:
    0:r87  l0     0    2:r88  l0    41    4:r97  l0     5    5:r98  l0     4
    1:r99  l0     3    3:r101 l0     6
New iteration of spill/restore move
+++Costs: overall -8997, reg -8997, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


yy_buffer_state* yy_scan_buffer(char*, yy_size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={5d,3u} r1={4d} r2={4d} r4={4d,1u} r5={7d,4u} r6={1d,11u} r7={1d,14u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,10u} r17={8d,4u} r18={3d} r19={3d} r20={1d,11u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={4d,1u} r88={1d,2u} r97={1d,3u} r98={1d,4u} r99={1d,13u} r101={1d,2u} 
;;    total ref usage 336{253d,83u,0e} in 41{38 regular + 3 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 97 98
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (reg/v/f:DI 97 [ base ])
        (reg:DI 5 di [ base ])) lex.yy.c:1857 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ base ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:DI 98 [ size ])
        (reg:DI 4 si [ size ])) lex.yy.c:1857 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ size ])
        (nil)))
(note 4 3 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 4 12 2 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 98 [ size ])
            (const_int 1 [0x1]))) lex.yy.c:1860 8 {*cmpdi_1}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 60)
            (pc))) lex.yy.c:1860 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 395 (nil)))
 -> 60)
;;  succ:       8 [4.0%] 
;;              3 [96.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98

;; basic block 3, loop depth 0, count 0, freq 9605, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [96.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(6){ }u9(7){ }u10(16){ }u11(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98
;; lr  def 	 17 [flags] 88
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (parallel [
            (set (reg:DI 88 [ D.6819 ])
                (plus:DI (reg/v:DI 98 [ size ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1861 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 15 14 16 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (plus:DI (reg/v/f:DI 97 [ base ])
                        (reg/v:DI 98 [ size ]))
                    (const_int -2 [0xfffffffffffffffe])) [0 *_6+0 S1 A8])
            (const_int 0 [0]))) lex.yy.c:1860 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 64)
            (pc))) lex.yy.c:1860 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1000 (nil)))
 -> 64)
;;  succ:       9 [10.0%] 
;;              4 [90.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 97 98

;; basic block 4, loop depth 0, count 0, freq 8644, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [90.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(6){ }u17(7){ }u18(16){ }u19(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 97 98
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97 98
;; lr  def 	 17 [flags]
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (plus:DI (reg/v/f:DI 97 [ base ])
                        (reg/v:DI 98 [ size ]))
                    (const_int -1 [0xffffffffffffffff])) [0 *_10+0 S1 A8])
            (const_int 0 [0]))) lex.yy.c:1861 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg/v:DI 98 [ size ])
        (nil)))
(jump_insn 19 18 20 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 68)
            (pc))) lex.yy.c:1861 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2139 (nil)))
 -> 68)
;;  succ:       10 [21.4%] 
;;              5 [78.6%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 97

;; basic block 5, loop depth 0, count 0, freq 6795, maybe hot
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [78.6%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(6){ }u24(7){ }u25(16){ }u26(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 97
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 99 101
(note 20 19 75 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 75 20 21 5 (set (reg/v/f:DI 101 [orig:97 base ] [97])
        (reg/v/f:DI 97 [ base ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 97 [ base ])
        (nil)))
(debug_insn 21 75 22 5 (var_location:DI size (const_int 64 [0x40])) -1
     (nil))
(insn 22 21 23 5 (set (reg:DI 5 di)
        (const_int 64 [0x40])) lex.yy.c:2123 89 {*movdi_internal}
     (nil))
(call_insn 23 22 24 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 24 23 26 5 (set (reg/f:DI 99)
        (reg:DI 0 ax)) lex.yy.c:2123 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 99)
            (nil))))
(debug_insn 26 24 27 5 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1866 -1
     (nil))
(debug_insn 27 26 28 5 (var_location:DI b (clobber (const_int 0 [0]))) lex.yy.c:1866 -1
     (nil))
(insn 28 27 29 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 99)
            (const_int 0 [0]))) lex.yy.c:1867 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 29 28 30 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) lex.yy.c:1867 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 34)
;;  succ:       6 [0.0%]  (FALLTHRU)
;;              7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 99 101

;; basic block 6, loop depth 0, count 0, freq 3
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [0.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u32(6){ }u33(7){ }u34(16){ }u35(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f88bbca4bd0 *.LC27>)) lex.yy.c:1868 89 {*movdi_internal}
     (nil))
(call_insn 32 31 33 6 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1868 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 33 32 34)
;; basic block 7, loop depth 0, count 0, freq 6793, maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u38(6){ }u39(7){ }u40(16){ }u41(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 99 101
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 88 99 101
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(code_label 34 33 35 7 319 "" [1 uses])
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (set (mem:DI (plus:DI (reg/f:DI 99)
                (const_int 24 [0x18])) [4 MEM[(struct yy_buffer_state *)_26].yy_buf_size+0 S8 A64])
        (reg:DI 88 [ D.6819 ])) lex.yy.c:1870 89 {*movdi_internal}
     (nil))
(insn 37 36 38 7 (set (mem/f:DI (plus:DI (reg/f:DI 99)
                (const_int 8 [0x8])) [1 MEM[(struct yy_buffer_state *)_26].yy_ch_buf+0 S8 A64])
        (reg/v/f:DI 101 [orig:97 base ] [97])) lex.yy.c:1871 89 {*movdi_internal}
     (nil))
(insn 38 37 39 7 (set (mem/f:DI (plus:DI (reg/f:DI 99)
                (const_int 16 [0x10])) [1 MEM[(struct yy_buffer_state *)_26].yy_buf_pos+0 S8 A64])
        (reg/v/f:DI 101 [orig:97 base ] [97])) lex.yy.c:1871 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 101 [orig:97 base ] [97])
        (nil)))
(insn 39 38 40 7 (set (mem:SI (plus:DI (reg/f:DI 99)
                (const_int 36 [0x24])) [2 MEM[(struct yy_buffer_state *)_26].yy_is_our_buffer+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1872 90 {*movsi_internal}
     (nil))
(insn 40 39 41 7 (set (mem/f:DI (reg/f:DI 99) [1 MEM[(struct yy_buffer_state *)_26].yy_input_file+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:1873 89 {*movdi_internal}
     (nil))
(insn 41 40 42 7 (set (mem:SI (plus:DI (reg/f:DI 99)
                (const_int 32 [0x20])) [2 MEM[(struct yy_buffer_state *)_26].yy_n_chars+0 S4 A64])
        (subreg:SI (reg:DI 88 [ D.6819 ]) 0)) lex.yy.c:1874 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 88 [ D.6819 ])
        (nil)))
(insn 42 41 43 7 (set (mem:SI (plus:DI (reg/f:DI 99)
                (const_int 40 [0x28])) [2 MEM[(struct yy_buffer_state *)_26].yy_is_interactive+0 S4 A64])
        (const_int 0 [0])) lex.yy.c:1875 90 {*movsi_internal}
     (nil))
(insn 43 42 44 7 (set (mem:SI (plus:DI (reg/f:DI 99)
                (const_int 44 [0x2c])) [2 MEM[(struct yy_buffer_state *)_26].yy_at_bol+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:1876 90 {*movsi_internal}
     (nil))
(insn 44 43 45 7 (set (mem:SI (plus:DI (reg/f:DI 99)
                (const_int 56 [0x38])) [2 MEM[(struct yy_buffer_state *)_26].yy_fill_buffer+0 S4 A64])
        (const_int 0 [0])) lex.yy.c:1877 90 {*movsi_internal}
     (nil))
(insn 45 44 46 7 (set (mem:SI (plus:DI (reg/f:DI 99)
                (const_int 60 [0x3c])) [2 MEM[(struct yy_buffer_state *)_26].yy_buffer_status+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1878 90 {*movsi_internal}
     (nil))
(insn 46 45 47 7 (set (reg:DI 5 di)
        (reg/f:DI 99)) lex.yy.c:1880 89 {*movdi_internal}
     (nil))
(call_insn 47 46 6 7 (call (mem:QI (symbol_ref:DI ("_Z19yy_switch_to_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c288 yy_switch_to_buffer>) [0 yy_switch_to_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:1880 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z19yy_switch_to_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c288 yy_switch_to_buffer>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 6 47 69 7 (set (reg/f:DI 87 [ D.6818 ])
        (reg/f:DI 99)) lex.yy.c:1882 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99)
        (nil)))
(jump_insn 69 6 70 7 (set (pc)
        (label_ref 48)) lex.yy.c:1882 654 {jump}
     (nil)
 -> 48)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 70 69 60)
;; basic block 8, loop depth 0, count 0, freq 395, maybe hot
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [4.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u60(6){ }u61(7){ }u62(16){ }u63(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 60 70 59 8 320 "" [1 uses])
(note 59 60 7 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 7 59 71 8 (set (reg/f:DI 87 [ D.6818 ])
        (const_int 0 [0])) lex.yy.c:1864 89 {*movdi_internal}
     (nil))
(jump_insn 71 7 72 8 (set (pc)
        (label_ref 48)) 654 {jump}
     (nil)
 -> 48)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 72 71 64)
;; basic block 9, loop depth 0, count 0, freq 961, maybe hot
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [10.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u64(6){ }u65(7){ }u66(16){ }u67(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 64 72 63 9 321 "" [1 uses])
(note 63 64 5 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 5 63 73 9 (set (reg/f:DI 87 [ D.6818 ])
        (const_int 0 [0])) lex.yy.c:1864 89 {*movdi_internal}
     (nil))
(jump_insn 73 5 74 9 (set (pc)
        (label_ref 48)) 654 {jump}
     (nil)
 -> 48)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

(barrier 74 73 68)
;; basic block 10, loop depth 0, count 0, freq 1849, maybe hot
;;  prev block 9, next block 11, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [21.4%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u68(6){ }u69(7){ }u70(16){ }u71(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(code_label 68 74 67 10 322 "" [1 uses])
(note 67 68 8 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 8 67 48 10 (set (reg/f:DI 87 [ D.6818 ])
        (const_int 0 [0])) lex.yy.c:1864 89 {*movdi_internal}
     (nil))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87

;; basic block 11, loop depth 0, count 0, freq 9997, maybe hot
;;  prev block 10, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       7 [100.0%] 
;;              10 [100.0%]  (FALLTHRU)
;;              8 [100.0%] 
;;              9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u72(6){ }u73(7){ }u74(16){ }u75(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87
;; lr  def 	 0 [ax]
(code_label 48 8 49 11 318 "" [3 uses])
(note 49 48 54 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 54 49 55 11 (set (reg/i:DI 0 ax)
        (reg/f:DI 87 [ D.6818 ])) lex.yy.c:1883 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.6818 ])
        (nil)))
(insn 55 54 0 11 (use (reg/i:DI 0 ax)) lex.yy.c:1883 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function yy_buffer_state* yy_scan_bytes(const char*, yy_size_t) (_Z13yy_scan_bytesPKcm, funcdef_no=103, decl_uid=4277, cgraph_uid=103, symbol_order=130)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 12 count 12 (  1.1)
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 97 uninteresting (no unique first use)
Reg 94 uninteresting (no unique first use)
Reg 93 uninteresting
Ignoring reg 99, has equiv memory
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 7, latch 7
;;  depth 1, outer 0
;;  nodes: 7
;; 2 succs { 6 3 }
;; 3 succs { 4 7 }
;; 4 succs { 5 10 }
;; 5 succs { 9 }
;; 6 succs { }
;; 7 succs { 8 7 }
;; 8 succs { 4 }
;; 9 succs { }
;; 10 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 99: (insn_list:REG_DEP_TRUE 45 (nil))

Pass 0 for finding pseudo/allocno costs

    a11 (r99,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a10 (r97,l1) best SIREG, allocno SIREG
    a3 (r97,l0) best SIREG, allocno SIREG
    a9 (r96,l1) best DIREG, allocno DIREG
    a5 (r96,l0) best DIREG, allocno DIREG
    a8 (r94,l1) best AREG, allocno AREG
    a2 (r94,l0) best AREG, allocno AREG
    a0 (r93,l0) best AREG, allocno AREG
    a7 (r89,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r87,l1) best SIREG, allocno SIREG
    a1 (r87,l0) best SIREG, allocno SIREG

  a0(r93,l0) costs: AREG:-180,-180 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2880,2880 NO_REX_SSE_REGS:2880,2880 SSE_REGS:2880,2880 MMX_REGS:4230,4230 INT_SSE_REGS:3150,3150 ALL_REGS:65160,65160 MEM:1080,1080
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-90,-90 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2610,2610 NO_REX_SSE_REGS:2610,2610 SSE_REGS:2610,2610 MMX_REGS:3510,3510 INT_SSE_REGS:2790,2790 ALL_REGS:56160,56160 MEM:900,900
  a2(r94,l0) costs: AREG:-90,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3600,10880 NO_REX_SSE_REGS:3600,10880 SSE_REGS:3600,10880 MMX_REGS:5400,17230 INT_SSE_REGS:3960,12150 ALL_REGS:83880,273160 MEM:1440,5080
  a3(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-90,-90 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3600,10880 NO_REX_SSE_REGS:3600,10880 SSE_REGS:3600,10880 MMX_REGS:5400,17230 INT_SSE_REGS:3960,12150 ALL_REGS:83880,273160 MEM:1530,4260
  a4(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:720,48950 NO_REX_SSE_REGS:720,48950 SSE_REGS:720,48950 MMX_REGS:720,71700 INT_SSE_REGS:720,53500 ALL_REGS:9000,1144680 MEM:90,19200
  a5(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:720,15280 NO_REX_SSE_REGS:720,15280 SSE_REGS:720,15280 MMX_REGS:720,24380 INT_SSE_REGS:720,17100 ALL_REGS:9000,387560 MEM:90,7370
  a6(r87,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a7(r89,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:48230,48230 NO_REX_SSE_REGS:48230,48230 SSE_REGS:48230,48230 MMX_REGS:70980,70980 INT_SSE_REGS:52780,52780 ALL_REGS:1135680,1135680 MEM:19110,19110
  a8(r94,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7280,7280 NO_REX_SSE_REGS:7280,7280 SSE_REGS:7280,7280 MMX_REGS:11830,11830 INT_SSE_REGS:8190,8190 ALL_REGS:189280,189280 MEM:3640,3640
  a9(r96,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14560,14560 NO_REX_SSE_REGS:14560,14560 SSE_REGS:14560,14560 MMX_REGS:23660,23660 INT_SSE_REGS:16380,16380 ALL_REGS:378560,378560 MEM:7280,7280
  a10(r97,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7280,7280 NO_REX_SSE_REGS:7280,7280 SSE_REGS:7280,7280 MMX_REGS:11830,11830 INT_SSE_REGS:8190,8190 ALL_REGS:189280,189280 MEM:2730,2730
  a11(r99,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r97: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r97,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r96,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r94,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r87,l1) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r93,l0) costs: AREG:0,-180 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3240,3240 NO_REX_SSE_REGS:3240,3240 SSE_REGS:3240,3240 MMX_REGS:4590,4590 INT_SSE_REGS:3510,3510 ALL_REGS:65520,65520 MEM:1350,1350
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-90 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2610,2610 NO_REX_SSE_REGS:2610,2610 SSE_REGS:2610,2610 MMX_REGS:3510,3510 INT_SSE_REGS:2790,2790 ALL_REGS:56160,56160 MEM:900,900
  a2(r94,l0) costs: AREG:0,-90 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-90,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3960,11240 NO_REX_SSE_REGS:3960,11240 SSE_REGS:3960,11240 MMX_REGS:5760,17590 INT_SSE_REGS:4320,12510 ALL_REGS:84240,273520 MEM:1710,5350
  a3(r97,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-90 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3960,11240 NO_REX_SSE_REGS:3960,11240 SSE_REGS:3960,11240 MMX_REGS:5760,17590 INT_SSE_REGS:4320,12510 ALL_REGS:84240,273520 MEM:1800,4530
  a4(r89,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1080,49310 NO_REX_SSE_REGS:1080,49310 SSE_REGS:1080,49310 MMX_REGS:1080,72060 INT_SSE_REGS:1080,53860 ALL_REGS:9360,1145040 MEM:360,19470
  a5(r96,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-90 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1080,15640 NO_REX_SSE_REGS:1080,15640 SSE_REGS:1080,15640 MMX_REGS:1080,24740 INT_SSE_REGS:1080,17460 ALL_REGS:9360,387920 MEM:360,7640
  a6(r87,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:0,0 NO_REX_SSE_REGS:0,0 SSE_REGS:0,0 MMX_REGS:0,0 INT_SSE_REGS:0,0 ALL_REGS:0,0 MEM:0,0
  a7(r89,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:48230,48230 NO_REX_SSE_REGS:48230,48230 SSE_REGS:48230,48230 MMX_REGS:70980,70980 INT_SSE_REGS:52780,52780 ALL_REGS:1135680,1135680 MEM:19110,19110
  a8(r94,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7280,7280 NO_REX_SSE_REGS:7280,7280 SSE_REGS:7280,7280 MMX_REGS:11830,11830 INT_SSE_REGS:8190,8190 ALL_REGS:189280,189280 MEM:3640,3640
  a9(r96,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:14560,14560 NO_REX_SSE_REGS:14560,14560 SSE_REGS:14560,14560 MMX_REGS:23660,23660 INT_SSE_REGS:16380,16380 ALL_REGS:378560,378560 MEM:7280,7280
  a10(r97,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:7280,7280 NO_REX_SSE_REGS:7280,7280 SSE_REGS:7280,7280 MMX_REGS:11830,11830 INT_SSE_REGS:8190,8190 ALL_REGS:189280,189280 MEM:2730,2730
  a11(r99,l1) costs: GENERAL_REGS:0,0 MEM:0,0

   Insn 70(l0): point = 0
   Insn 69(l0): point = 2
   Insn 64(l0): point = 4
   Insn 60(l0): point = 7
   Insn 59(l0): point = 9
   Insn 39(l0): point = 12
   Insn 38(l0): point = 14
   Insn 79(l0): point = 17
   Insn 32(l0): point = 20
   Insn 31(l0): point = 22
   Insn 29(l0): point = 24
   Insn 28(l0): point = 26
   Insn 27(l0): point = 28
   Insn 26(l0): point = 30
   Insn 25(l0): point = 32
   Insn 24(l0): point = 34
   Insn 82(l0): point = 37
   Insn 22(l0): point = 40
   Insn 21(l0): point = 42
   Insn 5(l0): point = 44
   Insn 18(l0): point = 47
   Insn 17(l0): point = 49
   Insn 13(l0): point = 51
   Insn 12(l0): point = 53
   Insn 11(l0): point = 55
   Insn 8(l0): point = 57
   Insn 3(l0): point = 59
   Insn 2(l0): point = 61
   Insn 52(l1): point = 64
   Insn 51(l1): point = 66
   Insn 47(l1): point = 68
   Insn 46(l1): point = 70
   Insn 45(l1): point = 72
 a0(r93): [20..24] [3..6]
 a1(r87): [31..57]
 a2(r94): [29..51]
 a3(r97): [33..59]
 a4(r89): [40..44]
 a5(r96): [40..61]
 a6(r87): [64..74]
 a7(r89): [64..74]
 a8(r94): [64..74]
 a9(r96): [64..74]
 a10(r97): [64..74]
 a11(r99): [71..72]
 Rebuilding regno allocno list for 99
      Moving ranges of a10r97 to a3r97:  [64..74]
      Moving ranges of a9r96 to a5r96:  [64..74]
      Moving ranges of a8r94 to a2r94:  [64..74]
      Moving ranges of a7r89 to a4r89:  [64..74]
      Moving ranges of a6r87 to a1r87:  [64..74]
Compressing live ranges: from 75 to 8 - 10%
Ranges after the compression:
 a0(r93): [0..3]
 a1(r87): [4..7]
 a2(r94): [4..7]
 a3(r97): [4..7]
 a4(r89): [4..7]
 a5(r96): [4..7]
 a11(r99): [6..7]
+++Allocating 48 bytes for conflict table (uncompressed size 96)
;; a0(r93,l0) conflicts:;; a1(r87,l0) conflicts: a2(r94,l0) a3(r97,l0) a4(r89,l0) a5(r96,l0) a11(r99,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a2(r94,l0) conflicts: a1(r87,l0) a3(r97,l0) a4(r89,l0) a5(r96,l0) a11(r99,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a3(r97,l0) conflicts: a1(r87,l0) a2(r94,l0) a4(r89,l0) a5(r96,l0) a11(r99,l0)
;;     total conflict hard regs: 0 5
;;     conflict hard regs: 0 5

;; a4(r89,l0) conflicts: a1(r87,l0) a2(r94,l0) a3(r97,l0) a5(r96,l0) a11(r99,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r96,l0) conflicts: a1(r87,l0) a2(r94,l0) a3(r97,l0) a4(r89,l0) a11(r99,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a11(r99,l0) conflicts: a1(r87,l0) a2(r94,l0) a3(r97,l0) a4(r89,l0) a5(r96,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a3(r97)<-hr4@135
  pref1:a5(r96)<-hr5@135
  pref2:a2(r94)<-hr0@135
  pref3:a0(r93)<-hr0@270
  pref4:a1(r87)<-hr4@135
  pref5:a2(r94)<-hr5@90
  pref6:a1(r87)<-hr5@90
  regions=2, blocks=11, points=8
    allocnos=12 (big 0), copies=0, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 10 9 8 7 6 5 4 3 2
    all: 0r93 1r87 2r94 3r97 4r89 5r96 11r99
    modified regnos: 87 89 93 94 96 97 99
    border:
    Pressure: GENERAL_REGS=6
 Removing pref6:hr5@90
 Removing pref1:hr5@135
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@42720
          2:( 0-3 5 6 37-44)@11240
            3:( 1-3 6 37-44)@20710
      Allocno a0r93 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a1r87 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, ^node:  0-6 37-44 (confl regs =  0 5 7-36 45-79)
      Allocno a2r94 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a3r97 of GENERAL_REGS(15) has 13 avail. regs  1-4 6 37-44, ^node:  0-6 37-44 (confl regs =  0 5 7-36 45-79)
      Allocno a4r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a5r96 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a11r99 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r87,l0)(cost 0)
      Pushing a0(r93,l0)(cost 0)
      Pushing a5(r96,l0)(cost 0)
      Pushing a3(r97,l0)(cost 0)
      Pushing a2(r94,l0)(cost 0)
      Pushing a11(r99,l0)(cost 0)
      Pushing a4(r89,l0)(cost 0)
      Popping a4(r89,l0)  -- assign reg 1
      Popping a11(r99,l0)  -- assign reg 2
      Popping a2(r94,l0)  -- assign reg 0
      Popping a3(r97,l0)  -- assign reg 3
      Popping a5(r96,l0)  -- assign reg 6
      Popping a0(r93,l0)  -- assign reg 0
      Popping a1(r87,l0)  -- assign reg 41
Disposition:
    1:r87  l0    41    4:r89  l0     1    0:r93  l0     0    2:r94  l0     0
    5:r96  l0     6    3:r97  l0     3   11:r99  l0     2
New iteration of spill/restore move
+++Costs: overall -810, reg -810, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


yy_buffer_state* yy_scan_bytes(const char*, yy_size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={6d,4u} r1={5d} r2={5d} r4={6d,2u} r5={9d,5u} r6={1d,10u} r7={1d,14u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,9u} r17={10d,4u} r18={4d} r19={4d} r20={1d,10u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,4u} r89={2d,6u,1e} r93={1d,4u} r94={1d,5u} r96={1d,1u,1e} r97={1d,5u} r99={1d,1u} 
;;    total ref usage 413{327d,84u,2e} in 41{37 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 94 96 97
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (reg/v/f:DI 96 [ yybytes ])
        (reg:DI 5 di [ yybytes ])) lex.yy.c:1907 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ yybytes ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:DI 97 [ _yybytes_len ])
        (reg:DI 4 si [ _yybytes_len ])) lex.yy.c:1907 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ _yybytes_len ])
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 4 9 2 (parallel [
            (set (reg/v:DI 87 [ n ])
                (plus:DI (reg/v:DI 97 [ _yybytes_len ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1914 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 9 8 10 2 (var_location:DI n (reg/v:DI 87 [ n ])) lex.yy.c:1914 -1
     (nil))
(debug_insn 10 9 11 2 (var_location:DI size (reg/v:DI 87 [ n ])) lex.yy.c:1914 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/v:DI 87 [ n ])) lex.yy.c:2123 89 {*movdi_internal}
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 13 12 15 2 (set (reg/f:DI 94 [ D.6837 ])
        (reg:DI 0 ax)) lex.yy.c:2123 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 98)
            (nil))))
(debug_insn 15 13 16 2 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1915 -1
     (nil))
(debug_insn 16 15 17 2 (var_location:DI buf (clobber (const_int 0 [0]))) lex.yy.c:1915 -1
     (nil))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 94 [ D.6837 ])
            (const_int 0 [0]))) lex.yy.c:1916 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) lex.yy.c:1916 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 36)
;;  succ:       6 [0.0%] 
;;              3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 94 96 97

;; basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 94 96 97
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 97
;; lr  def 	 17 [flags] 89
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 20 19 5 3 (var_location:DI i (const_int 0 [0])) -1
     (nil))
(insn 5 20 21 3 (set (reg/v:DI 89 [ i ])
        (const_int 0 [0])) lex.yy.c:1919 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 21 5 22 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 97 [ _yybytes_len ])
            (const_int 0 [0]))) lex.yy.c:1919 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 22 21 50 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 75)
            (pc))) lex.yy.c:1919 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 75)
;;  succ:       4 [9.0%]  (FALLTHRU)
;;              7 [91.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 94 96 97

;; basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 3, next block 5, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [9.0%]  (FALLTHRU)
;;              8 [100.0%]  (LOOP_EXIT)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(6){ }u22(7){ }u23(16){ }u24(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 94 97
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 94 97
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 93
(code_label 50 22 23 4 330 "" [1 uses])
(note 23 50 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (mem:QI (plus:DI (plus:DI (reg/f:DI 94 [ D.6837 ])
                    (reg/v:DI 97 [ _yybytes_len ]))
                (const_int 1 [0x1])) [0 *_16+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1922 93 {*movqi_internal}
     (nil))
(insn 25 24 26 4 (set (mem:QI (plus:DI (reg/f:DI 94 [ D.6837 ])
                (reg/v:DI 97 [ _yybytes_len ])) [0 *_14+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1922 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v:DI 97 [ _yybytes_len ])
        (nil)))
(insn 26 25 27 4 (set (reg:DI 4 si)
        (reg/v:DI 87 [ n ])) lex.yy.c:1924 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 87 [ n ])
        (nil)))
(insn 27 26 28 4 (set (reg:DI 5 di)
        (reg/f:DI 94 [ D.6837 ])) lex.yy.c:1924 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.6837 ])
        (nil)))
(call_insn 28 27 29 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z14yy_scan_bufferPcm") [flags 0x3]  <function_decl 0x7f88bc07ca20 yy_scan_buffer>) [0 yy_scan_buffer S1 A8])
            (const_int 0 [0]))) lex.yy.c:1924 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z14yy_scan_bufferPcm") [flags 0x3]  <function_decl 0x7f88bc07ca20 yy_scan_buffer>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 29 28 30 4 (set (reg/v/f:DI 93 [ b ])
        (reg:DI 0 ax)) lex.yy.c:1924 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 30 29 31 4 (var_location:DI b (reg/v/f:DI 93 [ b ])) lex.yy.c:1924 -1
     (nil))
(insn 31 30 32 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 93 [ b ])
            (const_int 0 [0]))) lex.yy.c:1925 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 32 31 78 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 77)
            (pc))) lex.yy.c:1925 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 77)
;;  succ:       5 [0.0%]  (FALLTHRU)
;;              10 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [0.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 78 32 79 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 79 78 80 5 (set (pc)
        (label_ref 57)) 654 {jump}
     (nil)
 -> 57)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 80 79 36)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [0.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(6){ }u39(7){ }u40(16){ }u41(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 36 80 37 6 326 "" [1 uses])
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f88bbcc7a20 *.LC29>)) lex.yy.c:1917 89 {*movdi_internal}
     (nil))
(call_insn 39 38 40 6 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1917 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 40 39 75)
;; basic block 7, loop depth 1, count 0, freq 9100, maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [91.0%] 
;;              7 [91.0%]  (DFS_BACK)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u44(6){ }u45(7){ }u46(16){ }u47(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 94 96 97
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 94 96 97
;; lr  def 	 17 [flags] 89 99
(code_label 75 40 74 7 332 "" [2 uses])
(note 74 75 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 44 74 45 7 (var_location:DI i (reg/v:DI 89 [ i ])) -1
     (nil))
(insn 45 44 46 7 (set (reg:QI 99 [ MEM[base: yybytes_9(D), index: i_27, offset: 0B] ])
        (mem:QI (plus:DI (reg/v/f:DI 96 [ yybytes ])
                (reg/v:DI 89 [ i ])) [0 MEM[base: yybytes_9(D), index: i_27, offset: 0B]+0 S1 A8])) lex.yy.c:1920 93 {*movqi_internal}
     (expr_list:REG_EQUIV (mem:QI (plus:DI (reg/v/f:DI 96 [ yybytes ])
                (reg/v:DI 89 [ i ])) [0 MEM[base: yybytes_9(D), index: i_27, offset: 0B]+0 S1 A8])
        (nil)))
(insn 46 45 47 7 (set (mem:QI (plus:DI (reg/f:DI 94 [ D.6837 ])
                (reg/v:DI 89 [ i ])) [0 MEM[base: _24, index: i_27, offset: 0B]+0 S1 A8])
        (reg:QI 99 [ MEM[base: yybytes_9(D), index: i_27, offset: 0B] ])) lex.yy.c:1920 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 99 [ MEM[base: yybytes_9(D), index: i_27, offset: 0B] ])
        (nil)))
(insn 47 46 49 7 (parallel [
            (set (reg/v:DI 89 [ i ])
                (plus:DI (reg/v:DI 89 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1919 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 49 47 51 7 (var_location:DI i (reg/v:DI 89 [ i ])) -1
     (nil))
(insn 51 49 52 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 97 [ _yybytes_len ])
            (reg/v:DI 89 [ i ]))) lex.yy.c:1919 8 {*cmpdi_1}
     (nil))
(jump_insn 52 51 81 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 75)
            (pc))) lex.yy.c:1919 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 75)
;;  succ:       8 [9.0%]  (FALLTHRU)
;;              7 [91.0%]  (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 89 94 96 97

;; basic block 8, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 7, next block 9, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       7 [9.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 94 97
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 81 52 82 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 82 81 83 8 (set (pc)
        (label_ref 50)) 654 {jump}
     (nil)
 -> 50)
;;  succ:       4 [100.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 87 94 97

(barrier 83 82 57)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u59(6){ }u60(7){ }u61(16){ }u62(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 57 83 58 9 328 "" [1 uses])
(note 58 57 59 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f88bbcc7ab0 *.LC30>)) lex.yy.c:1926 89 {*movdi_internal}
     (nil))
(call_insn 60 59 61 9 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1926 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 61 60 77)
;; basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 9, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       4 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u65(6){ }u66(7){ }u67(16){ }u68(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 93
;; lr  def 	 0 [ax]
(code_label 77 61 63 10 333 "" [1 uses])
(note 63 77 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 69 10 (set (mem:SI (plus:DI (reg/v/f:DI 93 [ b ])
                (const_int 36 [0x24])) [2 b_20->yy_is_our_buffer+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:1931 90 {*movsi_internal}
     (nil))
(insn 69 64 70 10 (set (reg/i:DI 0 ax)
        (reg/v/f:DI 93 [ b ])) lex.yy.c:1934 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 93 [ b ])
        (nil)))
(insn 70 69 0 10 (use (reg/i:DI 0 ax)) lex.yy.c:1934 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function yy_buffer_state* yy_scan_string(const char*) (_Z14yy_scan_stringPKc, funcdef_no=102, decl_uid=4274, cgraph_uid=102, symbol_order=129)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 90 uninteresting
Reg 92 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r92,l0) best AREG, allocno AREG
    a0 (r90,l0) best DIREG, allocno DIREG

  a0(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24000,24000 NO_REX_SSE_REGS:24000,24000 SSE_REGS:24000,24000 MMX_REGS:34000,34000 INT_SSE_REGS:26000,26000 ALL_REGS:516000,516000 MEM:7000,7000
  a1(r92,l0) costs: AREG:-1000,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000


Pass 1 for finding pseudo/allocno costs

    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:28000,28000 NO_REX_SSE_REGS:28000,28000 SSE_REGS:28000,28000 MMX_REGS:38000,38000 INT_SSE_REGS:30000,30000 ALL_REGS:520000,520000 MEM:10000,10000
  a1(r92,l0) costs: AREG:0,-1000 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-1000,-1000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000

   Insn 13(l0): point = 0
   Insn 12(l0): point = 2
   Insn 11(l0): point = 4
   Insn 8(l0): point = 6
   Insn 7(l0): point = 8
   Insn 6(l0): point = 10
   Insn 2(l0): point = 12
 a0(r90): [3..12]
 a1(r92): [5..6]
Compressing live ranges: from 15 to 2 - 13%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r92): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r90,l0) conflicts: a1(r92,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a1(r92,l0) conflicts: a0(r90,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a1(r92)<-hr0@1500
  pref1:a0(r90)<-hr5@4000
  pref2:a1(r92)<-hr4@1000
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r90 1r92
    modified regnos: 90 92
    border:
    Pressure: GENERAL_REGS=2
 Removing pref1:hr5@4000
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@20000
          2:( 1-3 6 37-44)@20000
      Allocno a0r90 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 37-44, node:  1-3 6 37-44 (confl regs =  0 4 5 7-36 45-79)
      Allocno a1r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r92,l0)(cost 0)
      Pushing a0(r90,l0)(cost 0)
      Popping a0(r90,l0)  -- assign reg 3
      Popping a1(r92,l0)  -- assign reg 0
Disposition:
    0:r90  l0     3    1:r92  l0     0
New iteration of spill/restore move
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


yy_buffer_state* yy_scan_string(const char*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={3d,2u} r1={3d} r2={3d} r4={4d,1u} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r90={1d,2u} r92={1d,1u} 
;;    total ref usage 186{168d,18u,0e} in 7{5 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 90 92
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 90 [ yystr ])
        (reg:DI 5 di [ yystr ])) lex.yy.c:1894 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ yystr ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ yystr ])) lex.yy.c:1896 89 {*movdi_internal}
     (nil))
(call_insn/i 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7f88bc2f60d8 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) lex.yy.c:1896 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7f88bc2f60d8 strlen>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 11 2 (set (reg:DI 92)
        (reg:DI 0 ax)) lex.yy.c:1896 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 8 12 2 (set (reg:DI 4 si)
        (reg:DI 92)) lex.yy.c:1896 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/v/f:DI 90 [ yystr ])) lex.yy.c:1896 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 90 [ yystr ])
        (nil)))
(call_insn/j 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z13yy_scan_bytesPKcm") [flags 0x3]  <function_decl 0x7f88bc07cbd0 yy_scan_bytes>) [0 yy_scan_bytes S1 A8])
            (const_int 0 [0]))) lex.yy.c:1896 671 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z13yy_scan_bytesPKcm") [flags 0x3]  <function_decl 0x7f88bc07cbd0 yy_scan_bytes>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 14 13 0)

;; Function int yyget_lineno() (_Z12yyget_linenov, funcdef_no=105, decl_uid=5475, cgraph_uid=105, symbol_order=132)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
rescanning insn with uid = 10.
deleting insn with uid = 5.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs




Pass 1 for finding pseudo/allocno costs



   Insn 11(l0): point = 0
   Insn 10(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int yyget_lineno()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 29{20d,9u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 2 11 2 (set (reg/i:SI 0 ax)
        (mem/c:SI (symbol_ref:DI ("yylineno") [flags 0x2]  <var_decl 0x7f88bc0807e0 yylineno>) [2 yylineno+0 S4 A32])) lex.yy.c:1972 90 {*movsi_internal}
     (nil))
(insn 11 10 0 2 (use (reg/i:SI 0 ax)) lex.yy.c:1972 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function FILE* yyget_in() (_Z8yyget_inv, funcdef_no=106, decl_uid=5467, cgraph_uid=106, symbol_order=133)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
rescanning insn with uid = 10.
deleting insn with uid = 5.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs




Pass 1 for finding pseudo/allocno costs



   Insn 11(l0): point = 0
   Insn 10(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


FILE* yyget_in()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 29{20d,9u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 2 11 2 (set (reg/i:DI 0 ax)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1980 89 {*movdi_internal}
     (nil))
(insn 11 10 0 2 (use (reg/i:DI 0 ax)) lex.yy.c:1980 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function FILE* yyget_out() (_Z9yyget_outv, funcdef_no=107, decl_uid=5470, cgraph_uid=107, symbol_order=134)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
rescanning insn with uid = 10.
deleting insn with uid = 5.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs




Pass 1 for finding pseudo/allocno costs



   Insn 11(l0): point = 0
   Insn 10(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


FILE* yyget_out()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 29{20d,9u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 2 11 2 (set (reg/i:DI 0 ax)
        (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])) lex.yy.c:1988 89 {*movdi_internal}
     (nil))
(insn 11 10 0 2 (use (reg/i:DI 0 ax)) lex.yy.c:1988 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function yy_size_t yyget_leng() (_Z10yyget_lengv, funcdef_no=108, decl_uid=5473, cgraph_uid=108, symbol_order=135)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
rescanning insn with uid = 10.
deleting insn with uid = 5.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs




Pass 1 for finding pseudo/allocno costs



   Insn 11(l0): point = 0
   Insn 10(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


yy_size_t yyget_leng()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 29{20d,9u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 2 11 2 (set (reg/i:DI 0 ax)
        (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])) lex.yy.c:1996 89 {*movdi_internal}
     (nil))
(insn 11 10 0 2 (use (reg/i:DI 0 ax)) lex.yy.c:1996 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function char* yyget_text() (_Z10yyget_textv, funcdef_no=109, decl_uid=5474, cgraph_uid=109, symbol_order=136)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
rescanning insn with uid = 10.
deleting insn with uid = 5.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs




Pass 1 for finding pseudo/allocno costs



   Insn 11(l0): point = 0
   Insn 10(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


char* yyget_text()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 29{20d,9u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 2 11 2 (set (reg/i:DI 0 ax)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:2005 89 {*movdi_internal}
     (nil))
(insn 11 10 0 2 (use (reg/i:DI 0 ax)) lex.yy.c:2005 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void yyset_lineno(int) (_Z12yyset_linenoi, funcdef_no=110, decl_uid=5477, cgraph_uid=110, symbol_order=137)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Ignoring reg 87, has equiv memory
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 87: (insn_list:REG_DEP_TRUE 6 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r87,l0) best DIREG, allocno DIREG

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 6(l0): point = 0
   Insn 2(l0): point = 2
 a0(r87): [1..2]
Compressing live ranges: from 5 to 2 - 40%
Ranges after the compression:
 a0(r87): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r87,l0) conflicts:  pref0:a0(r87)<-hr5@1500
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r87
    modified regnos: 87
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@22000
      Allocno a0r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a0(r87,l0)(cost 0)
      Popping a0(r87,l0)  -- assign reg 5
Disposition:
    0:r87  l0     5
New iteration of spill/restore move
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void yyset_lineno(int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} 
;;    total ref usage 29{20d,9u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v:SI 87 [ _line_number ])
        (reg:SI 5 di [ _line_number ])) lex.yy.c:2012 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ _line_number ])
        (expr_list:REG_EQUIV (mem/c:SI (symbol_ref:DI ("yylineno") [flags 0x2]  <var_decl 0x7f88bc0807e0 yylineno>) [2 yylineno+0 S4 A32])
            (nil))))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 0 2 (set (mem/c:SI (symbol_ref:DI ("yylineno") [flags 0x2]  <var_decl 0x7f88bc0807e0 yylineno>) [2 yylineno+0 S4 A32])
        (reg/v:SI 87 [ _line_number ])) lex.yy.c:2014 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 87 [ _line_number ])
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void yyset_in(FILE*) (_Z8yyset_inP8_IO_FILE, funcdef_no=111, decl_uid=5469, cgraph_uid=111, symbol_order=138)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Ignoring reg 87, has equiv memory
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 87: (insn_list:REG_DEP_TRUE 6 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r87,l0) best DIREG, allocno DIREG

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 6(l0): point = 0
   Insn 2(l0): point = 2
 a0(r87): [1..2]
Compressing live ranges: from 5 to 2 - 40%
Ranges after the compression:
 a0(r87): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r87,l0) conflicts:  pref0:a0(r87)<-hr5@1500
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r87
    modified regnos: 87
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@22000
      Allocno a0r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a0(r87,l0)(cost 0)
      Popping a0(r87,l0)  -- assign reg 5
Disposition:
    0:r87  l0     5
New iteration of spill/restore move
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void yyset_in(FILE*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} 
;;    total ref usage 29{20d,9u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 87 [ _in_str ])
        (reg:DI 5 di [ _in_str ])) lex.yy.c:2024 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ _in_str ])
        (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
            (nil))))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 0 2 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/v/f:DI 87 [ _in_str ])) lex.yy.c:2025 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 87 [ _in_str ])
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void yyset_out(FILE*) (_Z9yyset_outP8_IO_FILE, funcdef_no=112, decl_uid=5472, cgraph_uid=112, symbol_order=139)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Ignoring reg 87, has equiv memory
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 87: (insn_list:REG_DEP_TRUE 6 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r87,l0) best DIREG, allocno DIREG

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 6(l0): point = 0
   Insn 2(l0): point = 2
 a0(r87): [1..2]
Compressing live ranges: from 5 to 2 - 40%
Ranges after the compression:
 a0(r87): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r87,l0) conflicts:  pref0:a0(r87)<-hr5@1500
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r87
    modified regnos: 87
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@22000
      Allocno a0r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a0(r87,l0)(cost 0)
      Popping a0(r87,l0)  -- assign reg 5
Disposition:
    0:r87  l0     5
New iteration of spill/restore move
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void yyset_out(FILE*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} 
;;    total ref usage 29{20d,9u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 87 [ _out_str ])
        (reg:DI 5 di [ _out_str ])) lex.yy.c:2029 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ _out_str ])
        (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])
            (nil))))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 0 2 (set (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])
        (reg/v/f:DI 87 [ _out_str ])) lex.yy.c:2030 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 87 [ _out_str ])
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int yyget_debug() (_Z11yyget_debugv, funcdef_no=113, decl_uid=5461, cgraph_uid=113, symbol_order=140)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
rescanning insn with uid = 10.
deleting insn with uid = 5.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs




Pass 1 for finding pseudo/allocno costs



   Insn 11(l0): point = 0
   Insn 10(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int yyget_debug()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 29{20d,9u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax]
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 2 11 2 (set (reg/i:SI 0 ax)
        (mem/c:SI (symbol_ref:DI ("yy_flex_debug") [flags 0x2]  <var_decl 0x7f88bc080ab0 yy_flex_debug>) [2 yy_flex_debug+0 S4 A32])) lex.yy.c:2036 90 {*movsi_internal}
     (nil))
(insn 11 10 0 2 (use (reg/i:SI 0 ax)) lex.yy.c:2036 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void yyset_debug(int) (_Z11yyset_debugi, funcdef_no=114, decl_uid=5463, cgraph_uid=114, symbol_order=141)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Ignoring reg 87, has equiv memory
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 87: (insn_list:REG_DEP_TRUE 6 (nil))

Pass 0 for finding pseudo/allocno costs

    a0 (r87,l0) best DIREG, allocno DIREG

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-1000,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:5000,5000


Pass 1 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-1000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:8000,8000

   Insn 6(l0): point = 0
   Insn 2(l0): point = 2
 a0(r87): [1..2]
Compressing live ranges: from 5 to 2 - 40%
Ranges after the compression:
 a0(r87): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r87,l0) conflicts:  pref0:a0(r87)<-hr5@1500
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r87
    modified regnos: 87
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@22000
      Allocno a0r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a0(r87,l0)(cost 0)
      Popping a0(r87,l0)  -- assign reg 5
Disposition:
    0:r87  l0     5
New iteration of spill/restore move
+++Costs: overall -3000, reg -3000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void yyset_debug(int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r87={1d,1u} 
;;    total ref usage 29{20d,9u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 87
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v:SI 87 [ _bdebug ])
        (reg:SI 5 di [ _bdebug ])) lex.yy.c:2039 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ _bdebug ])
        (expr_list:REG_EQUIV (mem/c:SI (symbol_ref:DI ("yy_flex_debug") [flags 0x2]  <var_decl 0x7f88bc080ab0 yy_flex_debug>) [2 yy_flex_debug+0 S4 A32])
            (nil))))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 0 2 (set (mem/c:SI (symbol_ref:DI ("yy_flex_debug") [flags 0x2]  <var_decl 0x7f88bc080ab0 yy_flex_debug>) [2 yy_flex_debug+0 S4 A32])
        (reg/v:SI 87 [ _bdebug ])) lex.yy.c:2040 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 87 [ _bdebug ])
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int yylex_destroy() (_Z13yylex_destroyv, funcdef_no=116, decl_uid=5460, cgraph_uid=116, symbol_order=143)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 10 (    1)
scanning new insn with uid = 90.
verify found no changes in insn with uid = 90.
deleting insn with uid = 19.
scanning new insn with uid = 91.
verify found no changes in insn with uid = 91.
deleting insn with uid = 9.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 10 (    1)
Reg 91 uninteresting (no unique first use)
Ignoring reg 98, has equiv memory
Reg 92 uninteresting
Reg 95 uninteresting
Ignoring reg 100, has equiv memory
Reg 89 uninteresting
Reg 90 uninteresting
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 5, latch 7
;;  depth 1, outer 0
;;  nodes: 5 7
;; 2 succs { 6 3 }
;; 3 succs { 4 8 }
;; 4 succs { 6 }
;; 5 succs { 6 7 }
;; 6 succs { 9 }
;; 7 succs { 5 }
;; 8 succs { 5 }
;; 9 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 98: (insn_list:REG_DEP_TRUE 91 (nil))
init_insns for 100: (insn_list:REG_DEP_TRUE 90 (nil))

Pass 0 for finding pseudo/allocno costs

    a7 (r100,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r95,l0) best DIREG, allocno DIREG
    a0 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r91,l1) best DIREG, allocno DIREG
    a2 (r91,l0) best DIREG, allocno DIREG
    a6 (r90,l1) best DIREG, allocno DIREG
    a5 (r89,l1) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2404,2404 NO_REX_SSE_REGS:2404,2404 SSE_REGS:2404,2404 MMX_REGS:3224,3224 INT_SSE_REGS:2568,2568 ALL_REGS:51584,51584 MEM:992,992
  a1(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-80,-80 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2320,2320 NO_REX_SSE_REGS:2320,2320 SSE_REGS:2320,2320 MMX_REGS:3140,3140 INT_SSE_REGS:2484,2484 ALL_REGS:42848,42848 MEM:912,912
  a2(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-88,-88 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3136,10104 NO_REX_SSE_REGS:3136,10104 SSE_REGS:3136,10104 MMX_REGS:4436,15759 INT_SSE_REGS:3396,11235 ALL_REGS:63232,244400 MEM:1304,4788
  a3(r98,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:1680,1680 NO_REX_SSE_REGS:1680,1680 SSE_REGS:1680,1680 MMX_REGS:2100,2100 INT_SSE_REGS:1764,1764 ALL_REGS:26208,26208 MEM:0,0
  a4(r91,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:6968,6968 NO_REX_SSE_REGS:6968,6968 SSE_REGS:6968,6968 MMX_REGS:11323,11323 INT_SSE_REGS:7839,7839 ALL_REGS:181168,181168 MEM:3484,3484
  a5(r89,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24939,24939 NO_REX_SSE_REGS:24939,24939 SSE_REGS:24939,24939 MMX_REGS:33449,33449 INT_SSE_REGS:26641,26641 ALL_REGS:535184,535184 MEM:10292,10292
  a6(r90,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-831,-831 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24068,24068 NO_REX_SSE_REGS:24068,24068 SSE_REGS:24068,24068 MMX_REGS:32578,32578 INT_SSE_REGS:25770,25770 ALL_REGS:444600,444600 MEM:9461,9461
  a7(r100,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:17420,17420 NO_REX_SSE_REGS:17420,17420 SSE_REGS:17420,17420 MMX_REGS:21775,21775 INT_SSE_REGS:18291,18291 ALL_REGS:271752,271752 MEM:0,0


Pass 1 for finding pseudo/allocno costs

    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r91: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r91,l1) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r92,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:2404,2404 NO_REX_SSE_REGS:2404,2404 SSE_REGS:2404,2404 MMX_REGS:3224,3224 INT_SSE_REGS:2568,2568 ALL_REGS:51584,51584 MEM:992,992
  a1(r95,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-80 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:2404,2404 NO_REX_SSE_REGS:2404,2404 SSE_REGS:2404,2404 MMX_REGS:3224,3224 INT_SSE_REGS:2568,2568 ALL_REGS:43184,43184 MEM:912,912
  a2(r91,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-88 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:3224,10192 NO_REX_SSE_REGS:3224,10192 SSE_REGS:3224,10192 MMX_REGS:4524,15847 INT_SSE_REGS:3484,11323 ALL_REGS:63584,244752 MEM:1304,4788
  a3(r98,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:1764,1764 NO_REX_SSE_REGS:1764,1764 SSE_REGS:1764,1764 MMX_REGS:2184,2184 INT_SSE_REGS:1848,1848 ALL_REGS:26544,26544 MEM:0,0
  a4(r91,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:6968,6968 NO_REX_SSE_REGS:6968,6968 SSE_REGS:6968,6968 MMX_REGS:11323,11323 INT_SSE_REGS:7839,7839 ALL_REGS:181168,181168 MEM:3484,3484
  a5(r89,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:24939,24939 NO_REX_SSE_REGS:24939,24939 SSE_REGS:24939,24939 MMX_REGS:33449,33449 INT_SSE_REGS:26641,26641 ALL_REGS:535184,535184 MEM:10292,10292
  a6(r90,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-831 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:24939,24939 NO_REX_SSE_REGS:24939,24939 SSE_REGS:24939,24939 MMX_REGS:33449,33449 INT_SSE_REGS:26641,26641 ALL_REGS:448084,448084 MEM:9461,9461
  a7(r100,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:18291,18291 NO_REX_SSE_REGS:18291,18291 SSE_REGS:18291,18291 MMX_REGS:22646,22646 INT_SSE_REGS:19162,19162 ALL_REGS:275236,275236 MEM:0,0

   Insn 62(l0): point = 0
   Insn 61(l0): point = 2
   Insn 88(l0): point = 5
   Insn 57(l0): point = 7
   Insn 56(l0): point = 9
   Insn 55(l0): point = 11
   Insn 54(l0): point = 13
   Insn 84(l0): point = 16
   Insn 39(l0): point = 18
   Insn 38(l0): point = 20
   Insn 37(l0): point = 22
   Insn 36(l0): point = 24
   Insn 35(l0): point = 26
   Insn 34(l0): point = 28
   Insn 33(l0): point = 30
   Insn 32(l0): point = 32
   Insn 31(l0): point = 34
   Insn 29(l0): point = 36
   Insn 28(l0): point = 38
   Insn 81(l0): point = 41
   Insn 14(l0): point = 44
   Insn 13(l0): point = 46
   Insn 12(l0): point = 48
   Insn 11(l0): point = 50
   Insn 91(l0): point = 52
   Insn 7(l0): point = 55
   Insn 6(l0): point = 57
   Insn 5(l0): point = 59
   Insn 24(l1): point = 62
   Insn 23(l1): point = 64
   Insn 22(l1): point = 66
   Insn 21(l1): point = 68
   Insn 90(l1): point = 70
   Insn 86(l1): point = 73
   Insn 48(l1): point = 75
   Insn 47(l1): point = 77
   Insn 46(l1): point = 79
   Insn 45(l1): point = 81
 a0(r92): [44..50] [10..15]
 a1(r95): [44..48] [14..15]
 a2(r91): [39..59] [5..15]
 a3(r98): [51..52]
 a4(r91): [62..83]
 a5(r89): [78..83] [62..68]
 a6(r90): [82..83] [62..66]
 a7(r100): [69..70]
 Rebuilding regno allocno list for 100
      Moving ranges of a4r91 to a2r91:  [62..83]
 Rebuilding regno allocno list for 90
 Rebuilding regno allocno list for 89
Compressing live ranges: from 84 to 12 - 14%
Ranges after the compression:
 a0(r92): [0..3]
 a1(r95): [0..3]
 a2(r91): [0..11]
 a3(r98): [4..5]
 a5(r89): [10..11] [6..7]
 a6(r90): [10..11] [6..7]
 a7(r100): [8..9]
+++Allocating 56 bytes for conflict table (uncompressed size 64)
;; a0(r92,l0) conflicts: a1(r95,l0) a2(r91,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a1(r95,l0) conflicts: a0(r92,l0) a2(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r91,l0) conflicts: a0(r92,l0) a1(r95,l0) a3(r98,l0) a5(r89,l0) a6(r90,l0) a7(r100,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a3(r98,l0) conflicts: a2(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a5(r89,l0) conflicts: a2(r91,l0) a6(r90,l0)
;;     total conflict hard regs: 5
;;     conflict hard regs: 5

;; a6(r90,l0) conflicts: a2(r91,l0) a5(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r100,l0) conflicts: a2(r91,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a1(r95)<-hr5@120
  pref1:a2(r91)<-hr5@132
  pref2:a6(r90)<-hr5@1246
  regions=2, blocks=10, points=12
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=9

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 9 8 6 7 5 4 3 2
    all: 0r92 1r95 2r91 3r98 5r89 6r90 7r100
    modified regnos: 89 90 91 92 95 98 100
    border:
    Pressure: GENERAL_REGS=3
 Removing pref1:hr5@132
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@26212
          2:( 0-4 6 37-44)@22568
            3:( 3 6 41-44)@9576
      Allocno a0r92 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a1r95 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a2r91 of GENERAL_REGS(15) has 6 avail. regs  3 6 41-44, node:  3 6 41-44 (confl regs =  5 7-36 45-79)
      Allocno a3r98 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a5r89 of GENERAL_REGS(15) has 14 avail. regs  0-4 6 37-44, node:  0-4 6 37-44 (confl regs =  5 7-36 45-79)
      Allocno a6r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Allocno a7r100 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a3(r98,l0)(cost 0)
        Making a2(r91,l0) colorable
      Pushing a1(r95,l0)(cost 0)
      Pushing a0(r92,l0)(cost 0)
      Pushing a2(r91,l0)(cost 4788)
      Pushing a7(r100,l0)(cost 0)
      Pushing a6(r90,l0)(cost 0)
      Pushing a5(r89,l0)(cost 0)
      Popping a5(r89,l0)  -- assign reg 3
      Popping a6(r90,l0)  -- assign reg 5
      Popping a7(r100,l0)  -- assign reg 0
      Popping a2(r91,l0)  -- assign reg 6
      Popping a0(r92,l0)  -- assign reg 3
      Popping a1(r95,l0)  -- assign reg 5
      Popping a3(r98,l0)  -- assign reg 0
Disposition:
    5:r89  l0     3    6:r90  l0     5    2:r91  l0     6    0:r92  l0     3
    1:r95  l0     5    3:r98  l0     0    7:r100 l0     0
New iteration of spill/restore move
+++Costs: overall -2733, reg -2733, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int yylex_destroy()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={7d,2u} r1={6d} r2={6d} r4={6d} r5={9d,3u} r6={1d,9u} r7={1d,14u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,8u} r17={8d,3u} r18={5d} r19={5d} r20={1d,9u} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={6d} r38={6d} r39={5d} r40={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r89={1d,2u} r90={1d,2u} r91={1d,5u} r92={1d,2u} r95={1d,2u} r98={1d,1u} r100={1d,1u} 
;;    total ref usage 456{393d,63u,0e} in 40{35 regular + 5 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 880, maybe hot
;;  prev block 0, next block 3, flags: (HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 91
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 91 [ D.6873 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:2079 89 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 91 [ D.6873 ])
            (const_int 0 [0]))) lex.yy.c:2079 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) lex.yy.c:2079 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 450 (nil)))
 -> 25)
;;  succ:       6 [4.5%] 
;;              3 [95.5%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91

;; basic block 3, loop depth 0, count 0, freq 840, maybe hot
;;  prev block 2, next block 4, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [95.5%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u6(6){ }u7(7){ }u8(16){ }u9(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 17 [flags] 92 95 98
(note 8 7 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 10 8 91 3 NOTE_INSN_DELETED)
(insn 91 10 11 3 (set (reg:DI 98 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:2079 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 11 91 12 3 (set (reg/f:DI 92 [ D.6873 ])
        (plus:DI (mult:DI (reg:DI 98 [ yy_buffer_stack_top ])
                (const_int 8 [0x8]))
            (reg/f:DI 91 [ D.6873 ]))) lex.yy.c:2079 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 98 [ yy_buffer_stack_top ])
        (nil)))
(insn 12 11 13 3 (set (reg/f:DI 95 [ D.6874 ])
        (mem/f:DI (reg/f:DI 92 [ D.6873 ]) [1 *_12+0 S8 A64])) lex.yy.c:2079 89 {*movdi_internal}
     (nil))
(insn 13 12 14 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 95 [ D.6874 ])
            (const_int 0 [0]))) lex.yy.c:2079 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 14 13 80 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 79)
            (pc))) lex.yy.c:2079 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9550 (nil)))
 -> 79)
;;  succ:       4 [4.5%]  (FALLTHRU)
;;              8 [95.5%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 95

;; basic block 4, loop depth 0, count 0, freq 38, maybe hot
;;  prev block 3, next block 5, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [4.5%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 80 14 81 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 81 80 82 4 (set (pc)
        (label_ref 25)) 654 {jump}
     (nil)
 -> 25)
;;  succ:       6 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91

(barrier 82 81 49)
;; basic block 5, loop depth 1, count 0, freq 8710, maybe hot
;; Invalid sum of incoming frequencies 9120, should be 8710
;;  prev block 4, next block 6, flags: (HOT_PARTITION, RTL, MODIFIED)
;;  pred:       7 [100.0%]  (DFS_BACK)
;;              8 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u16(6){ }u17(7){ }u18(16){ }u19(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 17 [flags] 89 90 100
(code_label 49 82 18 5 353 "" [2 uses])
(note 18 49 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 20 18 90 5 NOTE_INSN_DELETED)
(insn 90 20 21 5 (set (reg:DI 100 [ yy_buffer_stack_top ])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:2079 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 21 90 22 5 (set (reg/f:DI 89 [ D.6873 ])
        (plus:DI (mult:DI (reg:DI 100 [ yy_buffer_stack_top ])
                (const_int 8 [0x8]))
            (reg/f:DI 91 [ D.6873 ]))) lex.yy.c:2079 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 100 [ yy_buffer_stack_top ])
        (nil)))
(insn 22 21 23 5 (set (reg/f:DI 90 [ D.6874 ])
        (mem/f:DI (reg/f:DI 89 [ D.6873 ]) [1 *_7+0 S8 A64])) lex.yy.c:2079 89 {*movdi_internal}
     (nil))
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 90 [ D.6874 ])
            (const_int 0 [0]))) lex.yy.c:2079 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) lex.yy.c:2079 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9550 (nil)))
 -> 43)
;;  succ:       6 [4.5%]  (FALLTHRU,LOOP_EXIT)
;;              7 [95.5%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 90 91

;; basic block 6, loop depth 0, count 0, freq 880, maybe hot
;; Invalid sum of incoming frequencies 470, should be 880
;;  prev block 5, next block 7, flags: (HOT_PARTITION, RTL)
;;  pred:       2 [4.5%] 
;;              5 [4.5%]  (FALLTHRU,LOOP_EXIT)
;;              4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u26(6){ }u27(7){ }u28(16){ }u29(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 25 24 26 6 350 "" [2 uses])
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 27 26 28 6 (var_location:DI ptr (reg/f:DI 91 [ D.6873 ])) lex.yy.c:2086 -1
     (nil))
(insn 28 27 29 6 (set (reg:DI 5 di)
        (reg/f:DI 91 [ D.6873 ])) lex.yy.c:2141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 91 [ D.6873 ])
        (nil)))
(call_insn 29 28 30 6 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) lex.yy.c:2141 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(debug_insn 30 29 31 6 (var_location:DI ptr (clobber (const_int 0 [0]))) lex.yy.c:2086 -1
     (nil))
(insn 31 30 32 6 (set (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2087 89 {*movdi_internal}
     (nil))
(insn 32 31 33 6 (set (mem/c:SI (symbol_ref:DI ("yylineno") [flags 0x2]  <var_decl 0x7f88bc0807e0 yylineno>) [2 yylineno+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:2050 90 {*movsi_internal}
     (nil))
(insn 33 32 34 6 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2053 89 {*movdi_internal}
     (nil))
(insn 34 33 35 6 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_max") [flags 0x2]  <var_decl 0x7f88bc0801b0 yy_buffer_stack_max>) [4 yy_buffer_stack_max+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2054 89 {*movdi_internal}
     (nil))
(insn 35 34 36 6 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2055 89 {*movdi_internal}
     (nil))
(insn 36 35 37 6 (set (mem/c:SI (symbol_ref:DI ("_ZL7yy_init") [flags 0x2]  <var_decl 0x7f88bc080510 yy_init>) [2 yy_init+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:2056 90 {*movsi_internal}
     (nil))
(insn 37 36 38 6 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:2057 90 {*movsi_internal}
     (nil))
(insn 38 37 39 6 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2064 89 {*movdi_internal}
     (nil))
(insn 39 38 84 6 (set (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2065 89 {*movdi_internal}
     (nil))
(jump_insn 84 39 85 6 (set (pc)
        (label_ref 83)) lex.yy.c:2093 654 {jump}
     (nil)
 -> 83)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 85 84 43)
;; basic block 7, loop depth 1, count 0, freq 8318, maybe hot
;;  prev block 6, next block 8, flags: (HOT_PARTITION, RTL)
;;  pred:       5 [95.5%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u34(6){ }u35(7){ }u36(16){ }u37(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 90 91
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 89 90
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 43 85 44 7 352 "" [1 uses])
(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 7 (set (reg:DI 5 di)
        (reg/f:DI 90 [ D.6874 ])) lex.yy.c:2080 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90 [ D.6874 ])
        (nil)))
(call_insn 46 45 47 7 (call (mem:QI (symbol_ref:DI ("_Z16yy_delete_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c438 yy_delete_buffer>) [0 yy_delete_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:2080 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_delete_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c438 yy_delete_buffer>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 47 46 48 7 (set (mem/f:DI (reg/f:DI 89 [ D.6873 ]) [1 *_7+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2081 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.6873 ])
        (nil)))
(call_insn 48 47 86 7 (call (mem:QI (symbol_ref:DI ("_Z18yypop_buffer_statev") [flags 0x3]  <function_decl 0x7f88bc07c6c0 yypop_buffer_state>) [0 yypop_buffer_state S1 A8])
        (const_int 0 [0])) lex.yy.c:2082 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z18yypop_buffer_statev") [flags 0x3]  <function_decl 0x7f88bc07c6c0 yypop_buffer_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(jump_insn 86 48 87 7 (set (pc)
        (label_ref 49)) 654 {jump}
     (nil)
 -> 49)
;;  succ:       5 [100.0%]  (DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91

(barrier 87 86 79)
;; basic block 8, loop depth 0, count 0, freq 802, maybe hot
;;  prev block 7, next block 9, flags: (HOT_PARTITION, RTL)
;;  pred:       3 [95.5%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u43(6){ }u44(7){ }u45(16){ }u46(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91 92 95
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 92 95
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 79 87 53 8 360 "" [1 uses])
(note 53 79 54 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 8 (set (reg:DI 5 di)
        (reg/f:DI 95 [ D.6874 ])) lex.yy.c:2080 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.6874 ])
        (nil)))
(call_insn 55 54 56 8 (call (mem:QI (symbol_ref:DI ("_Z16yy_delete_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c438 yy_delete_buffer>) [0 yy_delete_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:2080 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_delete_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c438 yy_delete_buffer>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 56 55 57 8 (set (mem/f:DI (reg/f:DI 92 [ D.6873 ]) [1 *_12+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2081 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.6873 ])
        (nil)))
(call_insn 57 56 88 8 (call (mem:QI (symbol_ref:DI ("_Z18yypop_buffer_statev") [flags 0x3]  <function_decl 0x7f88bc07c6c0 yypop_buffer_state>) [0 yypop_buffer_state S1 A8])
        (const_int 0 [0])) lex.yy.c:2082 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z18yypop_buffer_statev") [flags 0x3]  <function_decl 0x7f88bc07c6c0 yypop_buffer_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(jump_insn 88 57 89 8 (set (pc)
        (label_ref 49)) 654 {jump}
     (nil)
 -> 49)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 91

(barrier 89 88 83)
;; basic block 9, loop depth 0, count 0, freq 880, maybe hot
;;  prev block 8, next block 1, flags: (HOT_PARTITION, RTL)
;;  pred:       6 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u52(6){ }u53(7){ }u54(16){ }u55(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax]
(code_label 83 89 63 9 361 "" [1 uses])
(note 63 83 61 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 61 63 62 9 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) lex.yy.c:2094 90 {*movsi_internal}
     (nil))
(insn 62 61 0 9 (use (reg/i:SI 0 ax)) lex.yy.c:2094 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void* yyalloc(yy_size_t) (_Z7yyallocm, funcdef_no=117, decl_uid=4279, cgraph_uid=117, symbol_order=144)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 89 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r89,l0) best DIREG, allocno DIREG

  a0(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000


Pass 1 for finding pseudo/allocno costs

    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000

   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
   Insn 2(l0): point = 4
 a0(r89): [3..4]
Compressing live ranges: from 7 to 2 - 28%
Ranges after the compression:
 a0(r89): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r89,l0) conflicts:  pref0:a0(r89)<-hr5@3000
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r89
    modified regnos: 89
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@26000
      Allocno a0r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a0(r89,l0)(cost 0)
      Popping a0(r89,l0)  -- assign reg 5
Disposition:
    0:r89  l0     5
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void* yyalloc(yy_size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r89={1d,1u} 
;;    total ref usage 105{93d,12u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v:DI 89 [ size ])
        (reg:DI 5 di [ size ])) lex.yy.c:2122 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ size ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (reg/v:DI 89 [ size ])) lex.yy.c:2123 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 89 [ size ])
        (nil)))
(call_insn/j 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 671 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 8 7 0)

;; Function void* yyrealloc(void*, yy_size_t) (_Z9yyreallocPvm, funcdef_no=118, decl_uid=4282, cgraph_uid=118, symbol_order=145)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 89: local to bb 2 def dominates all uses has unique first use
Reg 90 uninteresting
Found def insn 2 for 89 to be not moveable
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a1 (r90,l0) best SIREG, allocno SIREG
    a0 (r89,l0) best DIREG, allocno DIREG

  a0(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:-2000,-2000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000


Pass 1 for finding pseudo/allocno costs

    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000
  a1(r90,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,-2000 DIREG:0,0 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000

   Insn 9(l0): point = 0
   Insn 8(l0): point = 2
   Insn 7(l0): point = 4
   Insn 3(l0): point = 6
   Insn 2(l0): point = 8
 a0(r89): [3..8]
 a1(r90): [5..6]
Compressing live ranges: from 11 to 2 - 18%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r90): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r89,l0) conflicts: a1(r90,l0)
;;     total conflict hard regs: 4
;;     conflict hard regs: 4

;; a1(r90,l0) conflicts: a0(r89,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  pref0:a1(r90)<-hr4@3000
  pref1:a0(r89)<-hr5@3000
  regions=1, blocks=3, points=2
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r89 1r90
    modified regnos: 89 90
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@26000
          2:( 0-3 5 6 37-44)@26000
      Allocno a0r89 of GENERAL_REGS(15) has 14 avail. regs  0-3 5 6 37-44, node:  0-3 5 6 37-44 (confl regs =  4 7-36 45-79)
      Allocno a1r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a1(r90,l0)(cost 0)
      Pushing a0(r89,l0)(cost 0)
      Popping a0(r89,l0)  -- assign reg 5
      Popping a1(r90,l0)  -- assign reg 4
Disposition:
    0:r89  l0     5    1:r90  l0     4
New iteration of spill/restore move
+++Costs: overall -12000, reg -12000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void* yyrealloc(void*, yy_size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={3d,2u} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 110{95d,15u,0e} in 5{4 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 89 90
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/v/f:DI 89 [ ptr ])
        (reg:DI 5 di [ ptr ])) lex.yy.c:2127 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ ptr ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:DI 90 [ size ])
        (reg:DI 4 si [ size ])) lex.yy.c:2127 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ size ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 4 si)
        (reg/v:DI 90 [ size ])) lex.yy.c:2136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 90 [ size ])
        (nil)))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg/v/f:DI 89 [ ptr ])) lex.yy.c:2136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 89 [ ptr ])
        (nil)))
(call_insn/j 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2136 671 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 10 9 0)

;; Function void yyfree(void*) (_Z6yyfreePv, funcdef_no=119, decl_uid=4284, cgraph_uid=119, symbol_order=146)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 87 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    a0 (r87,l0) best DIREG, allocno DIREG

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:-2000,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:16000,16000 NO_REX_SSE_REGS:16000,16000 SSE_REGS:16000,16000 MMX_REGS:21000,21000 INT_SSE_REGS:17000,17000 ALL_REGS:308000,308000 MEM:4000,4000


Pass 1 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,-2000 AD_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:20000,20000 NO_REX_SSE_REGS:20000,20000 SSE_REGS:20000,20000 MMX_REGS:25000,25000 INT_SSE_REGS:21000,21000 ALL_REGS:312000,312000 MEM:7000,7000

   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
   Insn 2(l0): point = 4
 a0(r87): [3..4]
Compressing live ranges: from 7 to 2 - 28%
Ranges after the compression:
 a0(r87): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r87,l0) conflicts:  pref0:a0(r87)<-hr5@3000
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r87
    modified regnos: 87
    border:
    Pressure: GENERAL_REGS=1
    Hard reg set forest:
      0:( 0-6 8-15 21-52)@0
        1:( 0-6 37-44)@26000
      Allocno a0r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 37-44, node:  0-6 37-44 (confl regs =  7-36 45-79)
      Pushing a0(r87,l0)(cost 0)
      Popping a0(r87,l0)  -- assign reg 5
Disposition:
    0:r87  l0     5
New iteration of spill/restore move
+++Costs: overall -6000, reg -6000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void yyfree(void*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} 
;;    total ref usage 104{93d,11u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/v/f:DI 87 [ ptr ])
        (reg:DI 5 di [ ptr ])) lex.yy.c:2140 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ ptr ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (reg/v/f:DI 87 [ ptr ])) lex.yy.c:2141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 87 [ ptr ])
        (nil)))
(call_insn/j 7 6 8 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) lex.yy.c:2141 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 8 7 0)
