
;; Function yy_state_type yy_get_previous_state() (_ZL21yy_get_previous_statev, funcdef_no=87, decl_uid=4292, cgraph_uid=87, symbol_order=114) (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 26 count 36 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 20 n_edges 26 count 37 (  1.9)

Pass 0 for finding pseudo/allocno costs


  r146 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:21000 FP_TOP_SSE_REGS:308000 INT_SSE_REGS:17000 ALL_REGS:308000 MEM:5000
  r141 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:21000 FP_TOP_SSE_REGS:308000 INT_SSE_REGS:17000 ALL_REGS:308000 MEM:5000
  r137 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 FP_TOP_SSE_REGS:416000 INT_SSE_REGS:22000 ALL_REGS:416000 MEM:7000
  r136 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 FP_TOP_SSE_REGS:416000 INT_SSE_REGS:22000 ALL_REGS:416000 MEM:8000
  r135 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29000 NO_REX_SSE_REGS:29000 SSE_REGS:29000 SSE_REGS:29000 MMX_REGS:34000 FP_TOP_SSE_REGS:516000 INT_SSE_REGS:30000 ALL_REGS:516000 MEM:8000
  r134 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29000 NO_REX_SSE_REGS:29000 SSE_REGS:29000 SSE_REGS:29000 MMX_REGS:34000 FP_TOP_SSE_REGS:516000 INT_SSE_REGS:30000 ALL_REGS:516000 MEM:9000
  r133 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 FP_TOP_SSE_REGS:416000 INT_SSE_REGS:22000 ALL_REGS:416000 MEM:8000
  r131 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:29000 NO_REX_SSE_REGS:29000 SSE_REGS:29000 SSE_REGS:29000 MMX_REGS:39000 FP_TOP_SSE_REGS:624000 INT_SSE_REGS:31000 ALL_REGS:624000 MEM:12000
  r129 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 FP_TOP_SSE_REGS:416000 INT_SSE_REGS:22000 ALL_REGS:416000 MEM:8000
  r127 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:21000 FP_TOP_SSE_REGS:308000 INT_SSE_REGS:17000 ALL_REGS:308000 MEM:5000
  r126 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:21000 FP_TOP_SSE_REGS:308000 INT_SSE_REGS:21000 ALL_REGS:308000 MEM:5000
  r123 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:28000 NO_REX_SSE_REGS:28000 SSE_REGS:28000 SSE_REGS:28000 MMX_REGS:33000 FP_TOP_SSE_REGS:412000 INT_SSE_REGS:29000 ALL_REGS:412000 MEM:9000
  r122 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 INT_SSE_REGS:408000 ALL_REGS:408000 MEM:6000
  r121 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:28000 NO_REX_SSE_REGS:28000 SSE_REGS:28000 SSE_REGS:28000 MMX_REGS:33000 FP_TOP_SSE_REGS:412000 INT_SSE_REGS:29000 ALL_REGS:412000 MEM:9000
  r120 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 INT_SSE_REGS:408000 ALL_REGS:408000 MEM:6000
  r114 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 INT_SSE_REGS:312000 ALL_REGS:312000 MEM:7000
  r108 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 INT_SSE_REGS:312000 ALL_REGS:312000 MEM:7000
  r104 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 INT_SSE_REGS:520000 ALL_REGS:520000 MEM:11000
  r103 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 FP_TOP_SSE_REGS:312000 INT_SSE_REGS:21000 ALL_REGS:312000 MEM:7000
  r102 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 INT_SSE_REGS:516000 ALL_REGS:516000 MEM:12000
  r101 costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:57000 NO_REX_SSE_REGS:57000 SSE_REGS:57000 SSE_REGS:57000 MMX_REGS:77000 FP_TOP_SSE_REGS:1144000 INT_SSE_REGS:61000 ALL_REGS:1144000 MEM:20000
  r100 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:86000 NO_REX_SSE_REGS:86000 SSE_REGS:86000 SSE_REGS:86000 MMX_REGS:116000 FP_TOP_SSE_REGS:1768000 INT_SSE_REGS:92000 ALL_REGS:1768000 MEM:30000


Pass 1 for finding pseudo/allocno costs

    r147: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r145: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r144: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r143: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r142: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r140: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r139: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r138: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r132: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r130: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r128: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r125: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r124: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r121: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r119: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r118: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r117: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r116: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r115: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r113: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r112: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r111: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r110: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r109: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r107: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r106: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r105: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r98: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r97: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r96: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r95: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r94: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r93: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r92: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r91: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r90: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r89: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r88: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r87: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r86: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r85: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r84: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r83: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r82: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS
    r81: preferred ALL_REGS, alternative NO_REGS, allocno ALL_REGS

  r146 costs: GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 FP_TOP_SSE_REGS:416000 INT_SSE_REGS:22000 ALL_REGS:416000 MEM:8000
  r141 costs: GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 FP_TOP_SSE_REGS:416000 INT_SSE_REGS:22000 ALL_REGS:416000 MEM:8000
  r137 costs: GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 FP_TOP_SSE_REGS:416000 INT_SSE_REGS:22000 ALL_REGS:416000 MEM:7000
  r136 costs: GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 FP_TOP_SSE_REGS:416000 INT_SSE_REGS:22000 ALL_REGS:416000 MEM:8000
  r135 costs: GENERAL_REGS:0 SSE_FIRST_REG:29000 NO_REX_SSE_REGS:29000 SSE_REGS:29000 SSE_REGS:29000 MMX_REGS:39000 FP_TOP_SSE_REGS:624000 INT_SSE_REGS:31000 ALL_REGS:624000 MEM:10000
  r134 costs: GENERAL_REGS:0 SSE_FIRST_REG:29000 NO_REX_SSE_REGS:29000 SSE_REGS:29000 SSE_REGS:29000 MMX_REGS:39000 FP_TOP_SSE_REGS:624000 INT_SSE_REGS:31000 ALL_REGS:624000 MEM:11000
  r133 costs: GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 FP_TOP_SSE_REGS:416000 INT_SSE_REGS:22000 ALL_REGS:416000 MEM:8000
  r131 costs: GENERAL_REGS:0 SSE_FIRST_REG:29000 NO_REX_SSE_REGS:29000 SSE_REGS:29000 SSE_REGS:29000 MMX_REGS:39000 FP_TOP_SSE_REGS:624000 INT_SSE_REGS:31000 ALL_REGS:624000 MEM:12000
  r129 costs: GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 FP_TOP_SSE_REGS:416000 INT_SSE_REGS:22000 ALL_REGS:416000 MEM:8000
  r127 costs: GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 FP_TOP_SSE_REGS:416000 INT_SSE_REGS:22000 ALL_REGS:416000 MEM:8000
  r126 costs: GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 FP_TOP_SSE_REGS:416000 INT_SSE_REGS:22000 ALL_REGS:416000 MEM:7000
  r123 costs: GENERAL_REGS:0 SSE_FIRST_REG:33000 NO_REX_SSE_REGS:33000 SSE_REGS:33000 SSE_REGS:33000 MMX_REGS:38000 FP_TOP_SSE_REGS:420000 INT_SSE_REGS:34000 ALL_REGS:420000 MEM:12000
  r122 costs: GENERAL_REGS:0 INT_SSE_REGS:416000 ALL_REGS:416000 MEM:12000
  r121 costs: GENERAL_REGS:0 SSE_FIRST_REG:33000 NO_REX_SSE_REGS:33000 SSE_REGS:33000 SSE_REGS:33000 MMX_REGS:38000 FP_TOP_SSE_REGS:420000 INT_SSE_REGS:34000 ALL_REGS:420000 MEM:12000
  r120 costs: GENERAL_REGS:0 INT_SSE_REGS:416000 ALL_REGS:416000 MEM:12000
  r114 costs: GENERAL_REGS:0 INT_SSE_REGS:316000 ALL_REGS:316000 MEM:7000
  r108 costs: GENERAL_REGS:0 INT_SSE_REGS:316000 ALL_REGS:316000 MEM:7000
  r104 costs: GENERAL_REGS:0 INT_SSE_REGS:524000 ALL_REGS:524000 MEM:11000
  r103 costs: GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 FP_TOP_SSE_REGS:316000 INT_SSE_REGS:22000 ALL_REGS:316000 MEM:7000
  r102 costs: GENERAL_REGS:0 INT_SSE_REGS:528000 ALL_REGS:528000 MEM:15000
  r101 costs: GENERAL_REGS:0 SSE_FIRST_REG:58000 NO_REX_SSE_REGS:58000 SSE_REGS:58000 SSE_REGS:58000 MMX_REGS:78000 FP_TOP_SSE_REGS:1148000 INT_SSE_REGS:62000 ALL_REGS:1148000 MEM:20000
  r100 costs: AREG:-1000 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:87000 NO_REX_SSE_REGS:87000 SSE_REGS:87000 SSE_REGS:87000 MMX_REGS:117000 FP_TOP_SSE_REGS:1772000 INT_SSE_REGS:93000 ALL_REGS:1772000 MEM:30000


Register Pressure: 
  Basic block 2: 
    GENERAL_REGS=7
  Basic block 3: 
    GENERAL_REGS=7
  Basic block 4: 
    GENERAL_REGS=8
  Basic block 5: 
    GENERAL_REGS=8
  Basic block 6: 
    GENERAL_REGS=8
  Basic block 7: 
    GENERAL_REGS=9
  Basic block 8: 
    GENERAL_REGS=8
  Basic block 9: 
    GENERAL_REGS=8
  Basic block 10: 
    GENERAL_REGS=8
  Basic block 11: 
    GENERAL_REGS=12
  Basic block 12: 
    GENERAL_REGS=9
  Basic block 13: 
    GENERAL_REGS=8
  Basic block 14: 
    GENERAL_REGS=7
  Basic block 15: 
    GENERAL_REGS=5
  Basic block 17: 
    GENERAL_REGS=4
  Basic block 18: 
    GENERAL_REGS=3
  Basic block 20: 
    GENERAL_REGS=2
  Basic block 21: 
    GENERAL_REGS=1

Code Hosting Expressions hash table (31 buckets, 23 entries)
Index 0 (hash value 0; max distance 4)
  (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
Index 1 (hash value 12; max distance 4)
  (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
Index 2 (hash value 16; max distance 4)
  (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
Index 3 (hash value 22; max distance 4)
  (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])
Index 4 (hash value 2; max distance 4)
  (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])
Index 5 (hash value 2; max distance 4)
  (mem:QI (reg/v/f:DI 101 [ yy_cp ]) [0 MEM[base: yy_cp_3, offset: 0B]+0 S1 A8])
Index 6 (hash value 15; max distance 6)
  (zero_extend:SI (reg:QI 104 [ D.6588 ]))
Index 7 (hash value 7; max distance 1)
  (zero_extend:DI (reg:SI 126 [ D.6590 ]))
Index 8 (hash value 5; max distance 8)
  (mem/u/j:QI (plus:DI (reg:DI 127 [ D.6590 ])
        (symbol_ref:DI ("_ZL5yy_ec") [flags 0x2]  <var_decl 0x7f88bc080b40 yy_ec>)) [0 yy_ec S1 A8])
Index 9 (hash value 11; max distance 6)
  (sign_extend:DI (reg/v:SI 100 [ yy_current_state ]))
Index 10 (hash value 21; max distance 10)
  (mem/u:HI (plus:DI (mult:DI (reg:DI 131 [ yy_current_state ])
            (const_int 2 [0x2]))
        (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16])
Index 11 (hash value 19; max distance 6)
  (zero_extend:SI (reg:HI 108 [ D.6592 ]))
Index 12 (hash value 13; max distance 6)
  (zero_extend:SI (reg/v:QI 102 [ yy_c ]))
Index 13 (hash value 13; max distance 4)
  (plus:SI (reg:SI 133 [ D.6593 ])
    (reg:SI 134 [ D.6593 ]))
Index 14 (hash value 15; max distance 6)
  (sign_extend:DI (reg:SI 135 [ D.6593 ]))
Index 15 (hash value 10; max distance 0)
  (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 136 [ D.6593 ])
                (const_int 2 [0x2]))
            (symbol_ref:DI ("_ZL6yy_chk") [flags 0x2]  <var_decl 0x7f88bc0806c0 yy_chk>)) [3 yy_chk S2 A16]))
Index 16 (hash value 16; max distance 10)
  (mem/u:HI (plus:DI (mult:DI (reg:DI 131 [ yy_current_state ])
            (const_int 2 [0x2]))
        (symbol_ref:DI ("_ZL6yy_def") [flags 0x2]  <var_decl 0x7f88bc080090 yy_def>)) [3 yy_def S2 A16])
Index 17 (hash value 24; max distance 6)
  (sign_extend:SI (reg:HI 114 [ D.6591 ]))
Index 18 (hash value 15; max distance 1)
  (zero_extend:DI (reg:SI 134 [ D.6593 ]))
Index 19 (hash value 29; max distance 8)
  (mem/u/j:QI (plus:DI (reg:DI 141 [ D.6590 ])
        (symbol_ref:DI ("_ZL7yy_meta") [flags 0x2]  <var_decl 0x7f88bc080cf0 yy_meta>)) [0 yy_meta S1 A8])
Index 20 (hash value 16; max distance 1)
  (zero_extend:DI (reg:SI 135 [ D.6593 ]))
Index 21 (hash value 13; max distance 0)
  (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 146 [ D.6590 ])
                (const_int 2 [0x2]))
            (symbol_ref:DI ("_ZL6yy_nxt") [flags 0x2]  <var_decl 0x7f88bc0803f0 yy_nxt>)) [3 yy_nxt S2 A16]))
Index 22 (hash value 3; max distance 4)
  (plus:DI (reg/v/f:DI 101 [ yy_cp ])
    (const_int 1 [0x1]))

hoisting vbeinout computation: 3 passes
vbein (2): n_bits = 23, set = {0 1 2 3 4 }
vbeout(2): n_bits = 23, set = {0 1 2 3 4 }
vbein (3): n_bits = 23, set = {}
vbeout(3): n_bits = 23, set = {}
vbein (4): n_bits = 23, set = {5 9 }
vbeout(4): n_bits = 23, set = {5 9 }
vbein (5): n_bits = 23, set = {6 9 }
vbeout(5): n_bits = 23, set = {6 7 8 9 12 }
vbein (6): n_bits = 23, set = {9 }
vbeout(6): n_bits = 23, set = {9 12 }
vbein (7): n_bits = 23, set = {9 12 }
vbeout(7): n_bits = 23, set = {9 12 }
vbein (8): n_bits = 23, set = {9 12 }
vbeout(8): n_bits = 23, set = {9 12 }
vbein (9): n_bits = 23, set = {9 12 }
vbeout(9): n_bits = 23, set = {9 12 }
vbein (10): n_bits = 23, set = {9 12 }
vbeout(10): n_bits = 23, set = {9 12 }
vbein (11): n_bits = 23, set = {9 12 }
vbeout(11): n_bits = 23, set = {9 10 11 12 13 14 15 }
vbein (12): n_bits = 23, set = {16 }
vbeout(12): n_bits = 23, set = {9 16 17 }
vbein (13): n_bits = 23, set = {9 18 }
vbeout(13): n_bits = 23, set = {9 12 18 19 }
vbein (14): n_bits = 23, set = {20 22 }
vbeout(14): n_bits = 23, set = {20 21 }
vbein (15): n_bits = 23, set = {}
vbeout(15): n_bits = 23, set = {}
vbein (17): n_bits = 23, set = {}
vbeout(17): n_bits = 23, set = {}
vbein (18): n_bits = 23, set = {}
vbeout(18): n_bits = 23, set = {}
vbein (20): n_bits = 23, set = {}
vbeout(20): n_bits = 23, set = {}
vbein (21): n_bits = 23, set = {}
vbeout(21): n_bits = 23, set = {}

HOIST of yy_state_type yy_get_previous_state(), 20 basic blocks, 7320 bytes needed, 0 substs, 0 insns created
starting the processing of deferred insns
ending the processing of deferred insns


yy_state_type yy_get_previous_state()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 17[flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r6={1d,19u} r7={1d,19u} r16={1d,18u} r17={9d,7u} r20={1d,19u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r100={3d,11u} r101={2d,7u} r102={3d,4u} r103={1d,1u} r104={1d,2u} r108={1d,1u} r114={1d,1u} r120={2d,1u} r121={2d,1u} r122={2d,1u} r123={2d,1u} r126={1d,1u} r127={1d,1u} r129={1d,1u} r131={1d,2u} r133={1d,1u} r134={1d,2u} r135={1d,2u} r136={1d,1u} r137={1d,1u} r141={1d,1u} r146={1d,1u} 
;;    total ref usage 189{60d,129u,0e} in 60{60 regular + 0 call} insns.
;; basic block 2, loop depth 0, count 0, freq 89, probably never executed
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(6){ }u1(7){ }u2(16){ }u3(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 100 101 103 120 121 122 123
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  gen 	 100 101 103 120 121 122 123
;; live  kill	
(note 23 0 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 15 23 25 2 NOTE_INSN_FUNCTION_BEG)
(insn 25 15 26 2 (set (reg/v:SI 100 [ yy_current_state ])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) lex.yy.c:1413 90 {*movsi_internal}
     (nil))
(debug_insn 26 25 27 2 (var_location:SI yy_current_state (reg/v:SI 100 [ yy_current_state ])) lex.yy.c:1413 -1
     (nil))
(insn 27 26 28 2 (set (reg/v/f:DI 101 [ yy_cp ])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1415 89 {*movdi_internal}
     (nil))
(debug_insn 28 27 29 2 (var_location:DI yy_cp (reg/v/f:DI 101 [ yy_cp ])) lex.yy.c:1415 -1
     (nil))
(insn 29 28 30 2 (set (reg/f:DI 103 [ D.6587 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) lex.yy.c:1415 89 {*movdi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:SI 123 [ yy_last_accepting_state_lsm.160 ])
        (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 31 30 16 2 (set (reg/f:DI 121 [ yy_last_accepting_cpos_lsm.162 ])
        (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 16 31 17 2 (set (reg:QI 120 [ yy_last_accepting_cpos_lsm.163 ])
        (const_int 0 [0])) lex.yy.c:1415 93 {*movqi_internal}
     (nil))
(insn 17 16 102 2 (set (reg:QI 122 [ yy_last_accepting_state_lsm.161 ])
        (const_int 0 [0])) lex.yy.c:1415 93 {*movqi_internal}
     (nil))
;;  succ:       3 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 120 121 122 123
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 120 121 122 123

;; basic block 3, loop depth 1, count 0, freq 989, probably never executed
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;;              14 [100.0%]  (FALLTHRU,DFS_BACK)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u6(6){ }u7(7){ }u8(16){ }u9(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 120 121 122 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 120 121 122 123
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 102 17 32 3 8 "" [0 uses])
(note 32 102 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 33 32 34 3 (var_location:DI yy_cp (reg/v/f:DI 101 [ yy_cp ])) -1
     (nil))
(debug_insn 34 33 35 3 (var_location:SI yy_current_state (reg/v:SI 100 [ yy_current_state ])) -1
     (nil))
(insn 35 34 36 3 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 101 [ yy_cp ])
            (reg/f:DI 103 [ D.6587 ]))) lex.yy.c:1415 8 {*cmpdi_1}
     (nil))
(jump_insn 36 35 37 3 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) lex.yy.c:1415 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 105)
;;  succ:       15 [9.0%] 
;;              4 [91.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 120 121 122 123
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 120 121 122 123

;; basic block 4, loop depth 1, count 0, freq 900, probably never executed
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [91.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(6){ }u16(7){ }u17(16){ }u18(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 120 121 122 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101
;; lr  def 	 17 [flags] 104
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 120 121 122 123
;; live  gen 	 17 [flags] 104
;; live  kill	
(note 37 36 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 4 (set (reg:QI 104 [ D.6588 ])
        (mem:QI (reg/v/f:DI 101 [ yy_cp ]) [0 MEM[base: yy_cp_3, offset: 0B]+0 S1 A8])) lex.yy.c:1417 93 {*movqi_internal}
     (nil))
(insn 39 38 40 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 104 [ D.6588 ])
            (const_int 0 [0]))) lex.yy.c:1417 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 40 39 41 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 129)
            (pc))) lex.yy.c:1417 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 129)
;;  succ:       5 [50.0%]  (FALLTHRU)
;;              6 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 104 120 121 122 123
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 104 120 121 122 123

;; basic block 5, loop depth 1, count 0, freq 450, probably never executed
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [50.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(6){ }u23(7){ }u24(16){ }u25(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 104 120 121 122 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 104
;; lr  def 	 102 126 127
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 104 120 121 122 123
;; live  gen 	 102 126 127
;; live  kill	
(note 41 40 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 43 41 44 5 (set (reg:SI 126 [ D.6590 ])
        (zero_extend:SI (reg:QI 104 [ D.6588 ]))) lex.yy.c:1417 138 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 104 [ D.6588 ])
        (nil)))
(insn 44 43 45 5 (set (reg:DI 127 [ D.6590 ])
        (zero_extend:DI (reg:SI 126 [ D.6590 ]))) lex.yy.c:1417 133 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:SI 126 [ D.6590 ])
        (nil)))
(insn 45 44 129 5 (set (reg/v:QI 102 [ yy_c ])
        (mem/u/j:QI (plus:DI (reg:DI 127 [ D.6590 ])
                (symbol_ref:DI ("_ZL5yy_ec") [flags 0x2]  <var_decl 0x7f88bc080b40 yy_ec>)) [0 yy_ec S1 A8])) lex.yy.c:1417 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 127 [ D.6590 ])
        (expr_list:REG_DEAD (reg/f:DI 125)
            (nil))))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123

;; basic block 6, loop depth 1, count 0, freq 450, probably never executed
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [50.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u30(6){ }u31(7){ }u32(16){ }u33(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 120 121 122 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 102
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 120 121 122 123
;; live  gen 	 102
;; live  kill	
(code_label 129 45 128 6 11 "" [1 uses])
(note 128 129 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 18 128 46 6 (set (reg/v:QI 102 [ yy_c ])
        (const_int 1 [0x1])) lex.yy.c:1417 93 {*movqi_internal}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123

;; basic block 7, loop depth 1, count 0, freq 900, probably never executed
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%]  (FALLTHRU)
;;              5 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u34(6){ }u35(7){ }u36(16){ }u37(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 17 [flags] 129
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123
;; live  gen 	 17 [flags] 129
;; live  kill	
(code_label 46 18 47 7 3 "" [0 uses])
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 48 47 50 7 (var_location:QI yy_c (reg/v:QI 102 [ yy_c ])) lex.yy.c:1417 -1
     (nil))
(insn 50 48 51 7 (set (reg:DI 129 [ yy_current_state ])
        (sign_extend:DI (reg/v:SI 100 [ yy_current_state ]))) lex.yy.c:1418 142 {*extendsidi2_rex64}
     (nil))
(insn 51 50 52 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/u:HI (plus:DI (mult:DI (reg:DI 129 [ yy_current_state ])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])
            (const_int 0 [0]))) lex.yy.c:1418 2 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 129 [ yy_current_state ])
        (expr_list:REG_DEAD (reg/f:DI 128)
            (nil))))
(jump_insn 52 51 53 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) lex.yy.c:1418 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 54)
;;  succ:       8 [50.0%]  (FALLTHRU)
;;              9 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123

;; basic block 8, loop depth 1, count 0, freq 450, probably never executed
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 [50.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u43(6){ }u44(7){ }u45(16){ }u46(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101
;; lr  def 	 120 121 122 123
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103
;; live  gen 	 120 121 122 123
;; live  kill	
(note 53 52 19 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 19 53 20 8 (set (reg/f:DI 121 [ yy_last_accepting_cpos_lsm.162 ])
        (reg/v/f:DI 101 [ yy_cp ])) lex.yy.c:1418 89 {*movdi_internal}
     (nil))
(insn 20 19 21 8 (set (reg:SI 123 [ yy_last_accepting_state_lsm.160 ])
        (reg/v:SI 100 [ yy_current_state ])) lex.yy.c:1418 90 {*movsi_internal}
     (nil))
(insn 21 20 22 8 (set (reg:QI 120 [ yy_last_accepting_cpos_lsm.163 ])
        (const_int 1 [0x1])) lex.yy.c:1418 93 {*movqi_internal}
     (nil))
(insn 22 21 54 8 (set (reg:QI 122 [ yy_last_accepting_state_lsm.161 ])
        (const_int 1 [0x1])) lex.yy.c:1418 93 {*movqi_internal}
     (nil))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123

;; basic block 9, loop depth 1, count 0, freq 900, probably never executed
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 [100.0%]  (FALLTHRU)
;;              7 [50.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u49(6){ }u50(7){ }u51(16){ }u52(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123
;; live  gen 	
;; live  kill	
(code_label 54 22 55 9 4 "" [1 uses])
(note 55 54 80 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123

;; basic block 10, loop depth 2, count 0, freq 9100, probably never executed
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [50.0%] 
;;              13 [100.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u53(6){ }u54(7){ }u55(16){ }u56(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123
;; live  gen 	
;; live  kill	
(code_label 80 55 58 10 7 "" [1 uses])
(note 58 80 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;;  succ:       11 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123

;; basic block 11, loop depth 2, count 0, freq 10000, probably never executed
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              10 [100.0%]  (FALLTHRU,DFS_BACK)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u57(6){ }u58(7){ }u59(16){ }u60(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 102
;; lr  def 	 17 [flags] 108 131 133 134 135 136 137
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123
;; live  gen 	 17 [flags] 108 131 133 134 135 136 137
;; live  kill	 17 [flags]
(code_label 59 58 60 11 5 "" [0 uses])
(note 60 59 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(debug_insn 61 60 62 11 (var_location:QI yy_c (reg/v:QI 102 [ yy_c ])) -1
     (nil))
(debug_insn 62 61 64 11 (var_location:SI yy_current_state (reg/v:SI 100 [ yy_current_state ])) -1
     (nil))
(insn 64 62 65 11 (set (reg:DI 131 [ yy_current_state ])
        (sign_extend:DI (reg/v:SI 100 [ yy_current_state ]))) lex.yy.c:1423 142 {*extendsidi2_rex64}
     (nil))
(insn 65 64 67 11 (set (reg:HI 108 [ D.6592 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 131 [ yy_current_state ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16])) lex.yy.c:1423 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 130)
        (nil)))
(insn 67 65 68 11 (set (reg:SI 133 [ D.6593 ])
        (zero_extend:SI (reg:HI 108 [ D.6592 ]))) lex.yy.c:1423 139 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 108 [ D.6592 ])
        (nil)))
(insn 68 67 69 11 (set (reg:SI 134 [ D.6593 ])
        (zero_extend:SI (reg/v:QI 102 [ yy_c ]))) lex.yy.c:1423 138 {*zero_extendqisi2}
     (nil))
(insn 69 68 70 11 (parallel [
            (set (reg:SI 135 [ D.6593 ])
                (plus:SI (reg:SI 133 [ D.6593 ])
                    (reg:SI 134 [ D.6593 ])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1423 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 70 69 71 11 (set (reg:DI 136 [ D.6593 ])
        (sign_extend:DI (reg:SI 135 [ D.6593 ]))) lex.yy.c:1423 142 {*extendsidi2_rex64}
     (nil))
(insn 71 70 72 11 (set (reg:SI 137 [ D.6593 ])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 136 [ D.6593 ])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL6yy_chk") [flags 0x2]  <var_decl 0x7f88bc0806c0 yy_chk>)) [3 yy_chk S2 A16]))) lex.yy.c:1423 146 {extendhisi2}
     (expr_list:REG_DEAD (reg:DI 136 [ D.6593 ])
        (expr_list:REG_DEAD (reg/f:DI 132)
            (nil))))
(insn 72 71 73 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 100 [ yy_current_state ])
            (reg:SI 137 [ D.6593 ]))) lex.yy.c:1423 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 137 [ D.6593 ])
        (expr_list:REG_DEAD (reg/v:SI 100 [ yy_current_state ])
            (nil))))
(jump_insn 73 72 74 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) lex.yy.c:1423 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 91)
;;  succ:       14 [9.0%] 
;;              12 [91.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 120 121 122 123 131 134 135
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 120 121 122 123 131 134 135

;; basic block 12, loop depth 2, count 0, freq 9100, probably never executed
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [91.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u76(6){ }u77(7){ }u78(16){ }u79(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 120 121 122 123 131 134
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 131
;; lr  def 	 17 [flags] 100 114
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 102 103 120 121 122 123 131 134
;; live  gen 	 17 [flags] 100 114
;; live  kill	
(note 74 73 77 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 77 74 78 12 (set (reg:HI 114 [ D.6591 ])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 131 [ yy_current_state ])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL6yy_def") [flags 0x2]  <var_decl 0x7f88bc080090 yy_def>)) [3 yy_def S2 A16])) lex.yy.c:1425 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:DI 138)
        (expr_list:REG_DEAD (reg:DI 131 [ yy_current_state ])
            (nil))))
(insn 78 77 79 12 (set (reg/v:SI 100 [ yy_current_state ])
        (sign_extend:SI (reg:HI 114 [ D.6591 ]))) lex.yy.c:1425 146 {extendhisi2}
     (expr_list:REG_DEAD (reg:HI 114 [ D.6591 ])
        (nil)))
(debug_insn 79 78 81 12 (var_location:SI yy_current_state (reg/v:SI 100 [ yy_current_state ])) lex.yy.c:1425 -1
     (nil))
(insn 81 79 82 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 100 [ yy_current_state ])
            (const_int 101 [0x65]))) lex.yy.c:1426 7 {*cmpsi_1}
     (nil))
(jump_insn 82 81 83 12 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 80)
            (pc))) lex.yy.c:1426 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 80)
;;  succ:       13 [50.0%]  (FALLTHRU)
;;              10 [50.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123 134
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123 134

;; basic block 13, loop depth 2, count 0, freq 4550, probably never executed
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [50.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u87(6){ }u88(7){ }u89(16){ }u90(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 120 121 122 123 134
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134
;; lr  def 	 102 141
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 120 121 122 123 134
;; live  gen 	 102 141
;; live  kill	
(note 83 82 86 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 86 83 87 13 (set (reg:DI 141 [ D.6590 ])
        (zero_extend:DI (reg:SI 134 [ D.6593 ]))) lex.yy.c:1427 133 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:SI 134 [ D.6593 ])
        (nil)))
(insn 87 86 88 13 (set (reg/v:QI 102 [ yy_c ])
        (mem/u/j:QI (plus:DI (reg:DI 141 [ D.6590 ])
                (symbol_ref:DI ("_ZL7yy_meta") [flags 0x2]  <var_decl 0x7f88bc080cf0 yy_meta>)) [0 yy_meta S1 A8])) lex.yy.c:1427 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 141 [ D.6590 ])
        (expr_list:REG_DEAD (reg/f:DI 140)
            (nil))))
(debug_insn 88 87 91 13 (var_location:QI yy_c (reg/v:QI 102 [ yy_c ])) lex.yy.c:1427 -1
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 102 103 120 121 122 123

;; basic block 14, loop depth 1, count 0, freq 900, probably never executed
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [9.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u96(6){ }u97(7){ }u98(16){ }u99(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103 120 121 122 123 135
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 135
;; lr  def 	 17 [flags] 100 101 146
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 101 103 120 121 122 123 135
;; live  gen 	 100 101 146
;; live  kill	 17 [flags]
(code_label 91 88 92 14 6 "" [1 uses])
(note 92 91 97 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 97 92 98 14 (set (reg:DI 146 [ D.6590 ])
        (zero_extend:DI (reg:SI 135 [ D.6593 ]))) lex.yy.c:1429 133 {*zero_extendsidi2}
     (expr_list:REG_DEAD (reg:SI 135 [ D.6593 ])
        (nil)))
(insn 98 97 99 14 (set (reg/v:SI 100 [ yy_current_state ])
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 146 [ D.6590 ])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL6yy_nxt") [flags 0x2]  <var_decl 0x7f88bc0803f0 yy_nxt>)) [3 yy_nxt S2 A16]))) lex.yy.c:1429 139 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:DI 146 [ D.6590 ])
        (expr_list:REG_DEAD (reg/f:DI 142)
            (nil))))
(debug_insn 99 98 100 14 (var_location:SI yy_current_state (reg/v:SI 100 [ yy_current_state ])) lex.yy.c:1429 -1
     (nil))
(insn 100 99 101 14 (parallel [
            (set (reg/v/f:DI 101 [ yy_cp ])
                (plus:DI (reg/v/f:DI 101 [ yy_cp ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1415 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 101 100 105 14 (var_location:DI yy_cp (reg/v/f:DI 101 [ yy_cp ])) lex.yy.c:1415 -1
     (nil))
;;  succ:       3 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 120 121 122 123
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 101 103 120 121 122 123

;; basic block 15, loop depth 0, count 0, freq 89, probably never executed
;;  prev block 14, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [9.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u109(6){ }u110(7){ }u111(16){ }u112(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 120 121 122 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 122
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 120 121 122 123
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 105 101 106 15 2 "" [1 uses])
(note 106 105 107 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 122 [ yy_last_accepting_state_lsm.161 ])
            (const_int 0 [0]))) 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 122 [ yy_last_accepting_state_lsm.161 ])
        (nil)))
(jump_insn 108 107 109 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 111)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 111)
;;  succ:       18 [100.0%] 
;;              17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 120 121 123
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 120 121 123

;; basic block 17, loop depth 0, count 0, freq 0, probably never executed
;;  prev block 15, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u115(6){ }u116(7){ }u117(16){ }u118(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 120 121 123
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 123
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 120 121 123
;; live  gen 	
;; live  kill	
(note 109 108 110 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 17 (set (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])
        (reg:SI 123 [ yy_last_accepting_state_lsm.160 ])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 123 [ yy_last_accepting_state_lsm.160 ])
        (nil)))
;;  succ:       18 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 120 121
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 120 121

;; basic block 18, loop depth 0, count 0, freq 0, probably never executed
;;  prev block 17, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [100.0%]  (FALLTHRU)
;;              15 [100.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u120(6){ }u121(7){ }u122(16){ }u123(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 120 121
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 120
;; lr  def 	 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 120 121
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 111 110 112 18 9 "" [1 uses])
(note 112 111 113 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 120 [ yy_last_accepting_cpos_lsm.163 ])
            (const_int 0 [0]))) 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 120 [ yy_last_accepting_cpos_lsm.163 ])
        (nil)))
(jump_insn 114 113 115 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 117)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 117)
;;  succ:       21 [100.0%] 
;;              20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 121
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 121

;; basic block 20, loop depth 0, count 0, freq 0, probably never executed
;;  prev block 18, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u126(6){ }u127(7){ }u128(16){ }u129(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 121
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 121
;; lr  def 	
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100 121
;; live  gen 	
;; live  kill	
(note 115 114 116 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 20 (set (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])
        (reg/f:DI 121 [ yy_last_accepting_cpos_lsm.162 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 121 [ yy_last_accepting_cpos_lsm.162 ])
        (nil)))
;;  succ:       21 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; live  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100

;; basic block 21, loop depth 0, count 0, freq 89, probably never executed
;;  prev block 20, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 [100.0%]  (FALLTHRU)
;;              18 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u131(6){ }u132(7){ }u133(16){ }u134(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 0 [ax]
;; live  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 117 116 118 21 10 "" [1 uses])
(note 118 117 123 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 123 118 124 21 (set (reg/i:SI 0 ax)
        (reg/v:SI 100 [ yy_current_state ])) lex.yy.c:1433 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 100 [ yy_current_state ])
        (nil)))
(insn 124 123 0 21 (use (reg/i:SI 0 ax)) lex.yy.c:1433 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

