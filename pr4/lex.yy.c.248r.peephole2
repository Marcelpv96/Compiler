
;; Function yy_state_type yy_get_previous_state() (_ZL21yy_get_previous_statev, funcdef_no=87, decl_uid=4292, cgraph_uid=87, symbol_order=114) (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Splitting with gen_peephole2_5748
scanning new insn with uid = 163.
deleting insn with uid = 16.
verify found no changes in insn with uid = 163.
Splitting with gen_peephole2_5748
scanning new insn with uid = 164.
deleting insn with uid = 17.
verify found no changes in insn with uid = 164.
starting the processing of deferred insns
ending the processing of deferred insns


yy_state_type yy_get_previous_state()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 38[r9] 39[r10] 40[r11] 41[r12]
;;  ref usage 	r0={4d,12u} r1={6d,7u} r2={3d,7u} r3={3d,3u} r4={2d,2u} r5={4d,4u} r6={3d,4u} r7={7d,22u} r17={11d,7u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={3d,1u} r38={3d,1u} r39={2d,1u} r40={2d,1u} r41={4d,4u} 
;;    total ref usage 141{65d,76u,0e} in 63{63 regular + 0 call} insns.
(note 14 0 23 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 89, probably never executed
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 2 [cx] 3 [bx] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  kill	
(note 23 14 151 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 151 23 152 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) lex.yy.c:1409 -1
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn/f 152 151 153 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) lex.yy.c:1409 -1
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 153 152 154 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) lex.yy.c:1409 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(note 154 153 15 2 NOTE_INSN_PROLOGUE_END)
(note 15 154 25 2 NOTE_INSN_FUNCTION_BEG)
(insn 25 15 26 2 (set (reg/v:SI 0 ax [orig:100 yy_current_state ] [100])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) lex.yy.c:1413 90 {*movsi_internal}
     (nil))
(debug_insn 26 25 27 2 (var_location:SI yy_current_state (reg/v:SI 0 ax [orig:100 yy_current_state ] [100])) lex.yy.c:1413 -1
     (nil))
(insn 27 26 28 2 (set (reg/v/f:DI 2 cx [orig:101 yy_cp ] [101])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1415 89 {*movdi_internal}
     (nil))
(debug_insn 28 27 29 2 (var_location:DI yy_cp (reg/v/f:DI 2 cx [orig:101 yy_cp ] [101])) lex.yy.c:1415 -1
     (nil))
(insn 29 28 30 2 (set (reg/f:DI 3 bx [orig:103 D.6587 ] [103])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) lex.yy.c:1415 89 {*movdi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:SI 39 r10 [orig:123 yy_last_accepting_state_lsm.160 ] [123])
        (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 31 30 163 2 (set (reg/f:DI 37 r8 [orig:121 yy_last_accepting_cpos_lsm.162 ] [121])
        (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 163 31 164 2 (parallel [
            (set (reg:DI 38 r9 [orig:120 yy_last_accepting_cpos_lsm.163 ] [120])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1415 -1
     (nil))
(insn 164 163 102 2 (parallel [
            (set (reg:DI 40 r11 [orig:122 yy_last_accepting_state_lsm.161 ] [122])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1415 -1
     (nil))
;;  succ:       3 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]

;; basic block 3, loop depth 0, count 0, freq 989, probably never executed
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 [100.0%]  (FALLTHRU)
;;              11 [100.0%]  (DFS_BACK)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; lr  use 	 2 [cx] 3 [bx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 102 164 32 3 8 "" [1 uses])
(note 32 102 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 33 32 34 3 (var_location:DI yy_cp (reg/v/f:DI 2 cx [orig:101 yy_cp ] [101])) -1
     (nil))
(debug_insn 34 33 35 3 (var_location:SI yy_current_state (reg/v:SI 0 ax [orig:100 yy_current_state ] [100])) -1
     (nil))
(insn 35 34 36 3 (set (reg:CC 17 flags)
        (compare:CC (reg/v/f:DI 2 cx [orig:101 yy_cp ] [101])
            (reg/f:DI 3 bx [orig:103 D.6587 ] [103]))) lex.yy.c:1415 8 {*cmpdi_1}
     (nil))
(jump_insn 36 35 37 3 (set (pc)
        (if_then_else (geu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 105)
            (pc))) lex.yy.c:1415 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 105)
;;  succ:       12 [9.0%]  (LOOP_EXIT)
;;              4 [91.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]

;; basic block 4, loop depth 0, count 0, freq 900, probably never executed
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 [91.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 1 [dx] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  gen 	 1 [dx] 5 [di] 17 [flags]
;; live  kill	
(note 37 36 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 18 4 (set (reg:DI 1 dx)
        (zero_extend:DI (mem:QI (reg/v/f:DI 2 cx [orig:101 yy_cp ] [101]) [0 MEM[base: yy_cp_3, offset: 0B]+0 S1 A8]))) lex.yy.c:1417 134 {zero_extendqidi2}
     (nil))
(insn 18 38 39 4 (set (reg/v:QI 5 di [orig:102 yy_c ] [102])
        (const_int 1 [0x1])) lex.yy.c:1417 93 {*movqi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 39 18 40 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 1 dx [orig:104 D.6588 ] [104])
            (const_int 0 [0]))) lex.yy.c:1417 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 40 39 41 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 46)
            (pc))) lex.yy.c:1417 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 46)
;;  succ:       5 [50.0%]  (FALLTHRU)
;;              6 [50.0%] 
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]

;; basic block 5, loop depth 0, count 0, freq 450, probably never executed
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 [50.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 5 [di]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  gen 	 5 [di]
;; live  kill	
(note 41 40 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(note 43 41 45 5 NOTE_INSN_DELETED)
(insn 45 43 46 5 (set (reg/v:QI 5 di [orig:102 yy_c ] [102])
        (mem/u/j:QI (plus:DI (reg:DI 1 dx [orig:127 D.6590 ] [127])
                (symbol_ref:DI ("_ZL5yy_ec") [flags 0x2]  <var_decl 0x7f88bc080b40 yy_ec>)) [0 yy_ec S1 A8])) lex.yy.c:1417 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:127 D.6590 ] [127])
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]

;; basic block 6, loop depth 0, count 0, freq 900, probably never executed
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       4 [50.0%] 
;;              5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
(code_label 46 45 47 6 3 "" [1 uses])
(note 47 46 48 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 48 47 50 6 (var_location:QI yy_c (reg/v:QI 5 di [orig:102 yy_c ] [102])) lex.yy.c:1417 -1
     (nil))
(insn 50 48 51 6 (set (reg:DI 1 dx [orig:129 yy_current_state ] [129])
        (sign_extend:DI (reg/v:SI 0 ax [orig:100 yy_current_state ] [100]))) lex.yy.c:1418 142 {*extendsidi2_rex64}
     (nil))
(insn 51 50 52 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/u:HI (plus:DI (mult:DI (reg:DI 1 dx [orig:129 yy_current_state ] [129])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])
            (const_int 0 [0]))) lex.yy.c:1418 2 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:129 yy_current_state ] [129])
        (nil)))
(jump_insn 52 51 53 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) lex.yy.c:1418 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 59)
;;  succ:       7 [50.0%]  (FALLTHRU)
;;              8 [50.0%] 
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]

;; basic block 7, loop depth 0, count 0, freq 450, probably never executed
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 [50.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 2 [cx] 7 [sp]
;; lr  def 	 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  kill	
(note 53 52 19 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 19 53 20 7 (set (reg/f:DI 37 r8 [orig:121 yy_last_accepting_cpos_lsm.162 ] [121])
        (reg/v/f:DI 2 cx [orig:101 yy_cp ] [101])) lex.yy.c:1418 89 {*movdi_internal}
     (nil))
(insn 20 19 21 7 (set (reg:SI 39 r10 [orig:123 yy_last_accepting_state_lsm.160 ] [123])
        (reg/v:SI 0 ax [orig:100 yy_current_state ] [100])) lex.yy.c:1418 90 {*movsi_internal}
     (nil))
(insn 21 20 22 7 (set (reg:QI 38 r9 [orig:120 yy_last_accepting_cpos_lsm.163 ] [120])
        (const_int 1 [0x1])) lex.yy.c:1418 93 {*movqi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 22 21 59 7 (set (reg:QI 40 r11 [orig:122 yy_last_accepting_state_lsm.161 ] [122])
        (const_int 1 [0x1])) lex.yy.c:1418 93 {*movqi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]

;; basic block 8, loop depth 0, count 0, freq 10000, probably never executed
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       7 [100.0%]  (FALLTHRU)
;;              9 [50.0%]  (DFS_BACK)
;;              6 [50.0%] 
;;              10 [100.0%]  (DFS_BACK)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; lr  use 	 0 [ax] 5 [di] 7 [sp]
;; lr  def 	 1 [dx] 4 [si] 6 [bp] 17 [flags] 41 [r12]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  gen 	 1 [dx] 4 [si] 6 [bp] 17 [flags] 41 [r12]
;; live  kill	 17 [flags]
(code_label 59 22 60 8 5 "" [3 uses])
(note 60 59 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 61 60 62 8 (var_location:QI yy_c (reg/v:QI 5 di [orig:102 yy_c ] [102])) -1
     (nil))
(debug_insn 62 61 64 8 (var_location:SI yy_current_state (reg/v:SI 0 ax [orig:100 yy_current_state ] [100])) -1
     (nil))
(insn 64 62 65 8 (set (reg:DI 6 bp [orig:131 yy_current_state ] [131])
        (sign_extend:DI (reg/v:SI 0 ax [orig:100 yy_current_state ] [100]))) lex.yy.c:1423 142 {*extendsidi2_rex64}
     (nil))
(note 65 64 67 8 NOTE_INSN_DELETED)
(insn 67 65 68 8 (set (reg:SI 1 dx [orig:133 D.6593 ] [133])
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 6 bp [orig:131 yy_current_state ] [131])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16]))) lex.yy.c:1423 139 {*zero_extendhisi2}
     (nil))
(insn 68 67 69 8 (set (reg:DI 4 si)
        (zero_extend:DI (reg/v:QI 5 di [orig:102 yy_c ] [102]))) lex.yy.c:1423 134 {zero_extendqidi2}
     (nil))
(insn 69 68 70 8 (parallel [
            (set (reg:SI 1 dx [orig:135 D.6593 ] [135])
                (plus:SI (reg:SI 1 dx [orig:133 D.6593 ] [133])
                    (reg:SI 4 si [orig:134 D.6593 ] [134])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1423 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 70 69 71 8 (set (reg:DI 41 r12 [orig:136 D.6593 ] [136])
        (sign_extend:DI (reg:SI 1 dx [orig:135 D.6593 ] [135]))) lex.yy.c:1423 142 {*extendsidi2_rex64}
     (nil))
(insn 71 70 72 8 (set (reg:SI 41 r12 [orig:137 D.6593 ] [137])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 41 r12 [orig:136 D.6593 ] [136])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL6yy_chk") [flags 0x2]  <var_decl 0x7f88bc0806c0 yy_chk>)) [3 yy_chk S2 A16]))) lex.yy.c:1423 146 {extendhisi2}
     (nil))
(insn 72 71 73 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 0 ax [orig:100 yy_current_state ] [100])
            (reg:SI 41 r12 [orig:137 D.6593 ] [137]))) lex.yy.c:1423 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 41 r12 [orig:137 D.6593 ] [137])
        (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:100 yy_current_state ] [100])
            (nil))))
(jump_insn 73 72 74 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 91)
            (pc))) lex.yy.c:1423 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 91)
;;  succ:       11 [9.0%]  (LOOP_EXIT)
;;              9 [91.0%]  (FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]

;; basic block 9, loop depth 0, count 0, freq 9100, probably never executed
;;  prev block 8, next block 10, flags: (RTL)
;;  pred:       8 [91.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(note 74 73 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(note 77 74 78 9 NOTE_INSN_DELETED)
(insn 78 77 79 9 (set (reg/v:SI 0 ax [orig:100 yy_current_state ] [100])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 6 bp [orig:131 yy_current_state ] [131])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL6yy_def") [flags 0x2]  <var_decl 0x7f88bc080090 yy_def>)) [3 yy_def S2 A16]))) lex.yy.c:1425 146 {extendhisi2}
     (expr_list:REG_DEAD (reg:DI 6 bp [orig:131 yy_current_state ] [131])
        (nil)))
(debug_insn 79 78 81 9 (var_location:SI yy_current_state (reg/v:SI 0 ax [orig:100 yy_current_state ] [100])) lex.yy.c:1425 -1
     (nil))
(insn 81 79 82 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 0 ax [orig:100 yy_current_state ] [100])
            (const_int 101 [0x65]))) lex.yy.c:1426 7 {*cmpsi_1}
     (nil))
(jump_insn 82 81 83 9 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 59)
            (pc))) lex.yy.c:1426 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 59)
;;  succ:       10 [50.0%]  (FALLTHRU)
;;              8 [50.0%]  (DFS_BACK)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]

;; basic block 10, loop depth 0, count 0, freq 4550, probably never executed
;;  prev block 9, next block 11, flags: (RTL)
;;  pred:       9 [50.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 5 [di]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  gen 	 5 [di]
;; live  kill	
(note 83 82 87 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 87 83 88 10 (set (reg/v:QI 5 di [orig:102 yy_c ] [102])
        (mem/u/j:QI (plus:DI (reg:DI 4 si [orig:141 D.6590 ] [141])
                (symbol_ref:DI ("_ZL7yy_meta") [flags 0x2]  <var_decl 0x7f88bc080cf0 yy_meta>)) [0 yy_meta S1 A8])) lex.yy.c:1427 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:141 D.6590 ] [141])
        (nil)))
(debug_insn 88 87 145 10 (var_location:QI yy_c (reg/v:QI 5 di [orig:102 yy_c ] [102])) lex.yy.c:1427 -1
     (nil))
(jump_insn 145 88 146 10 (set (pc)
        (label_ref 59)) 654 {jump}
     (nil)
 -> 59)
;;  succ:       8 [100.0%]  (DFS_BACK)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]

(barrier 146 145 91)
;; basic block 11, loop depth 0, count 0, freq 900, probably never executed
;;  prev block 10, next block 12, flags: (RTL)
;;  pred:       8 [9.0%]  (LOOP_EXIT)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; lr  use 	 1 [dx] 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	 17 [flags]
(code_label 91 146 92 11 6 "" [1 uses])
(note 92 91 97 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 97 92 98 11 (set (reg:DI 1 dx [orig:146 D.6590 ] [146])
        (zero_extend:DI (reg:SI 1 dx [orig:135 D.6593 ] [135]))) lex.yy.c:1429 133 {*zero_extendsidi2}
     (nil))
(insn 98 97 99 11 (set (reg/v:SI 0 ax [orig:100 yy_current_state ] [100])
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 1 dx [orig:146 D.6590 ] [146])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL6yy_nxt") [flags 0x2]  <var_decl 0x7f88bc0803f0 yy_nxt>)) [3 yy_nxt S2 A16]))) lex.yy.c:1429 139 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:146 D.6590 ] [146])
        (nil)))
(debug_insn 99 98 100 11 (var_location:SI yy_current_state (reg/v:SI 0 ax [orig:100 yy_current_state ] [100])) lex.yy.c:1429 -1
     (nil))
(insn 100 99 101 11 (parallel [
            (set (reg/v/f:DI 2 cx [orig:101 yy_cp ] [101])
                (plus:DI (reg/v/f:DI 2 cx [orig:101 yy_cp ] [101])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1415 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 101 100 147 11 (var_location:DI yy_cp (reg/v/f:DI 2 cx [orig:101 yy_cp ] [101])) lex.yy.c:1415 -1
     (nil))
(jump_insn 147 101 148 11 (set (pc)
        (label_ref 102)) lex.yy.c:1415 654 {jump}
     (nil)
 -> 102)
;;  succ:       3 [100.0%]  (DFS_BACK)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]

(barrier 148 147 105)
;; basic block 12, loop depth 0, count 0, freq 89, probably never executed
;;  prev block 11, next block 13, flags: (RTL)
;;  pred:       3 [9.0%]  (LOOP_EXIT)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; lr  use 	 7 [sp] 40 [r11]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 7 [sp] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 105 148 106 12 2 "" [1 uses])
(note 106 105 107 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 40 r11 [orig:122 yy_last_accepting_state_lsm.161 ] [122])
            (const_int 0 [0]))) 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 40 r11 [orig:122 yy_last_accepting_state_lsm.161 ] [122])
        (nil)))
(jump_insn 108 107 109 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 111)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 111)
;;  succ:       14 [100.0%] 
;;              13 (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; live  out 	 0 [ax] 7 [sp] 37 [r8] 38 [r9] 39 [r10]

;; basic block 13, loop depth 0, count 0, freq 0, probably never executed
;;  prev block 12, next block 14, flags: (RTL)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; lr  use 	 7 [sp] 39 [r10]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp] 37 [r8] 38 [r9] 39 [r10]
;; live  gen 	
;; live  kill	
(note 109 108 110 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 13 (set (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])
        (reg:SI 39 r10 [orig:123 yy_last_accepting_state_lsm.160 ] [123])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 39 r10 [orig:123 yy_last_accepting_state_lsm.160 ] [123])
        (nil)))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp] 37 [r8] 38 [r9]
;; live  out 	 0 [ax] 7 [sp] 37 [r8] 38 [r9]

;; basic block 14, loop depth 0, count 0, freq 0, probably never executed
;;  prev block 13, next block 15, flags: (RTL)
;;  pred:       13 [100.0%]  (FALLTHRU)
;;              12 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 37 [r8] 38 [r9]
;; lr  use 	 7 [sp] 38 [r9]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 7 [sp] 37 [r8] 38 [r9]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 111 110 112 14 9 "" [1 uses])
(note 112 111 113 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 38 r9 [orig:120 yy_last_accepting_cpos_lsm.163 ] [120])
            (const_int 0 [0]))) 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 38 r9 [orig:120 yy_last_accepting_cpos_lsm.163 ] [120])
        (nil)))
(jump_insn 114 113 115 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 117)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 117)
;;  succ:       16 [100.0%] 
;;              15 (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp] 37 [r8]
;; live  out 	 0 [ax] 7 [sp] 37 [r8]

;; basic block 15, loop depth 0, count 0, freq 0, probably never executed
;;  prev block 14, next block 16, flags: (RTL)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 37 [r8]
;; lr  use 	 7 [sp] 37 [r8]
;; lr  def 	
;; live  in  	 0 [ax] 7 [sp] 37 [r8]
;; live  gen 	
;; live  kill	
(note 115 114 116 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 15 (set (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])
        (reg/f:DI 37 r8 [orig:121 yy_last_accepting_cpos_lsm.162 ] [121])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 37 r8 [orig:121 yy_last_accepting_cpos_lsm.162 ] [121])
        (nil)))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 16, loop depth 0, count 0, freq 89, probably never executed
;;  prev block 15, next block 1, flags: (RTL)
;;  pred:       15 [100.0%]  (FALLTHRU)
;;              14 [100.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  kill	
(code_label 117 116 118 16 10 "" [1 uses])
(note 118 117 124 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 124 118 157 16 (use (reg/i:SI 0 ax)) lex.yy.c:1433 -1
     (nil))
(note 157 124 158 16 NOTE_INSN_EPILOGUE_BEG)
(insn/f 158 157 159 16 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1433 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 159 158 160 16 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1433 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 160 159 161 16 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1433 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn 161 160 162 16 (simple_return) lex.yy.c:1433 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

(barrier 162 161 149)
(note 149 162 0 NOTE_INSN_DELETED)

;; Function void yy_fatal_error(const char*) (_ZL14yy_fatal_errorPKc, funcdef_no=104, decl_uid=4297, cgraph_uid=104, symbol_order=131) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 1 count 3 (    1)


void yy_fatal_error(const char*)

Dataflow summary:
def_info->table_size = 166, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={4d,1u} r1={4d,1u} r2={4d,1u} r4={4d,1u} r5={5d,3u} r7={2d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={3d} r18={2d} r19={2d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 181{168d,13u,0e} in 13{11 regular + 2 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d7(1){ }d11(2){ }d15(4){ }d20(5){ }d21(7){ }d46(21){ }d49(22){ }d52(23){ }d55(24){ }d58(25){ }d61(26){ }d64(27){ }d67(28){ }d86(37){ }d89(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; lr  out 	 5 [di] 7 [sp]
;; live  out 	 5 [di] 7 [sp]

( 0 )->[2]->( )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 17 to worklist
  Adding insn 13 to worklist
Finished finding needed instructions:
processing block 2 lr out =  7 [sp]
  Adding insn 16 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 2 to worklist
  Adding insn 22 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 1 count 3 (    1)
Splitting with gen_peephole2_5748
scanning new insn with uid = 26.
deleting insn with uid = 12.
verify found no changes in insn with uid = 26.
starting the processing of deferred insns
ending the processing of deferred insns


void yy_fatal_error(const char*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={4d,1u} r1={4d,1u} r2={4d,1u} r4={4d,1u} r5={5d,3u} r7={2d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={4d} r18={2d} r19={2d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 182{169d,13u,0e} in 13{11 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp]
;; live  kill	 17 [flags]
(note 4 1 22 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 22 4 23 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) lex.yy.c:1941 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (nil))))
(note 23 22 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 23 3 2 (set (reg/v/f:DI 2 cx [orig:88 msg ] [88])
        (reg:DI 5 di [ msg ])) lex.yy.c:1941 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ msg ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 6 3 7 2 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x7f88bc3c9ea0 stderr>) [1 stderr+0 S8 A64])) lex.yy.c:1942 -1
     (nil))
(debug_insn 7 6 9 2 (var_location:DI __fmt (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f88bbed7240 *.LC1>)) lex.yy.c:1942 -1
     (nil))
(insn 9 7 10 2 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f88bbed7240 *.LC1>)) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 90 {*movsi_internal}
     (nil))
(insn 11 10 26 2 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("stderr") [flags 0x40]  <var_decl 0x7f88bc3c9ea0 stderr>) [1 stderr+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 89 {*movdi_internal}
     (nil))
(insn 26 11 13 2 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 -1
     (nil))
(call_insn 13 26 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f88bc333948 __fprintf_chk>) [0 __builtin___fprintf_chk S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:98 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("__fprintf_chk") [flags 0x41]  <function_decl 0x7f88bc333948 __fprintf_chk>)
                            (nil)))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(debug_insn 14 13 15 2 (var_location:DI __stream (clobber (const_int 0 [0]))) lex.yy.c:1942 -1
     (nil))
(debug_insn 15 14 16 2 (var_location:DI __fmt (clobber (const_int 0 [0]))) lex.yy.c:1942 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 5 di)
        (const_int 2 [0x2])) lex.yy.c:1943 90 {*movsi_internal}
     (nil))
(call_insn 17 16 18 2 (call (mem:QI (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f88bc31bca8 exit>) [0 __builtin_exit S1 A8])
        (const_int 0 [0])) lex.yy.c:1943 660 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("exit") [flags 0x41]  <function_decl 0x7f88bc31bca8 exit>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 18 17 21)
(note 21 18 0 NOTE_INSN_DELETED)

;; Function void yyensure_buffer_stack() (_ZL21yyensure_buffer_stackv, funcdef_no=100, decl_uid=4265, cgraph_uid=100, symbol_order=127)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 10 (    1)


void yyensure_buffer_stack()

Dataflow summary:
def_info->table_size = 251, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={6d,9u} r1={6d,2u} r2={6d,2u} r3={3d,5u} r4={6d,2u} r5={9d,7u} r6={3d,6u} r7={7d,20u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={9d,4u} r18={3d} r19={3d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} 
;;    total ref usage 320{263d,57u,0e} in 56{53 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 0 )->[2]->( 3 6 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 5 [di] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 5 [di] 7 [sp]
;; live  out 	 5 [di] 7 [sp]

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 3 7 )->[4]->( )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 3 )->[5]->( 9 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 2 )->[6]->( 7 9 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 5 [di] 7 [sp]

( 6 )->[7]->( 4 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]

( 7 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 5 [di]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 5 [di]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 8 6 5 )->[9]->( 1 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 9 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(3){ }u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 7 to worklist
  Adding insn 95 to worklist
  Adding insn 94 to worklist
  Adding insn 19 to worklist
  Adding insn 17 to worklist
  Adding insn 13 to worklist
  Adding insn 22 to worklist
  Adding insn 106 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 41 to worklist
  Adding insn 58 to worklist
  Adding insn 55 to worklist
  Adding insn 51 to worklist
  Adding insn 72 to worklist
  Adding insn 68 to worklist
  Adding insn 104 to worklist
Finished finding needed instructions:
processing block 4 lr out =  7 [sp]
  Adding insn 21 to worklist
processing block 9 lr out =  3 [bx] 6 [bp] 7 [sp]
  Adding insn 103 to worklist
  Adding insn 102 to worklist
  Adding insn 101 to worklist
processing block 5 lr out =  7 [sp]
processing block 3 lr out =  7 [sp]
  Adding insn 18 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
processing block 8 lr out =  7 [sp]
  Adding insn 90 to worklist
  Adding insn 88 to worklist
  Adding insn 67 to worklist
  Adding insn 64 to worklist
processing block 7 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp]
  Adding insn 57 to worklist
  Adding insn 49 to worklist
  Adding insn 92 to worklist
  Adding insn 91 to worklist
processing block 6 lr out =  0 [ax] 5 [di] 7 [sp]
  Adding insn 40 to worklist
  Adding insn 93 to worklist
  Adding insn 38 to worklist
processing block 2 lr out =  5 [di] 7 [sp]
  Adding insn 6 to worklist
  Adding insn 5 to worklist
  Adding insn 96 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 10 (    1)
Splitting with gen_peephole2_5748
scanning new insn with uid = 108.
deleting insn with uid = 88.
verify found no changes in insn with uid = 108.
starting the processing of deferred insns
ending the processing of deferred insns


void yyensure_buffer_stack()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={6d,9u} r1={6d,2u} r2={6d,2u} r3={3d,5u} r4={6d,2u} r5={9d,7u} r6={3d,6u} r7={7d,20u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={10d,4u} r18={3d} r19={3d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} 
;;    total ref usage 321{264d,57u,0e} in 56{53 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 5 [di] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 5 [di] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(note 3 1 94 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 94 3 95 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) lex.yy.c:1808 -1
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 95 94 96 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) lex.yy.c:1808 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f 96 95 97 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) lex.yy.c:1808 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (nil))))
(note 97 96 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 97 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 5 di [orig:87 D.6619 ] [87])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1811 89 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:87 D.6619 ] [87])
            (const_int 0 [0]))) lex.yy.c:1811 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) lex.yy.c:1811 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9328 (nil)))
 -> 36)
;;  succ:       3 [6.7%]  (FALLTHRU)
;;              6 [93.3%] 
;; lr  out 	 5 [di] 7 [sp]
;; live  out 	 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 672, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       2 [6.7%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags]
;; live  kill	
(note 8 7 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 9 8 10 3 (var_location:DI num_to_alloc (const_int 1 [0x1])) lex.yy.c:1817 -1
     (nil))
(debug_insn 10 9 11 3 (var_location:DI size (const_int 8 [0x8])) lex.yy.c:1819 -1
     (nil))
(insn 11 10 12 3 (set (reg:DI 4 si)
        (const_int 1 [0x1])) lex.yy.c:2123 89 {*movdi_internal}
     (nil))
(insn 12 11 13 3 (set (reg:DI 5 di)
        (const_int 8 [0x8])) lex.yy.c:2123 89 {*movdi_internal}
     (nil))
(call_insn 13 12 16 3 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x7f88bc316438 __builtin_calloc>) [0 __builtin_calloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("calloc") [flags 0x41]  <function_decl 0x7f88bc316438 __builtin_calloc>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(debug_insn 16 13 17 3 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1819 -1
     (nil))
(insn 17 16 18 3 (set (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (reg/f:DI 0 ax [97])) lex.yy.c:1820 89 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [97])
            (const_int 0 [0]))) lex.yy.c:1821 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [97])
        (nil)))
(jump_insn 19 18 56 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 24)
            (pc))) lex.yy.c:1821 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 24)
;;  succ:       4 [0.0%]  (FALLTHRU)
;;              5 [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 1
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       3 [0.0%]  (FALLTHRU)
;;              7 [0.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 56 19 20 4 27 "" [1 uses])
(note 20 56 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f88bbee21b0 *.LC3>)) lex.yy.c:1822 89 {*movdi_internal}
     (nil))
(call_insn 22 21 23 4 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1822 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 23 22 24)
;; basic block 5, loop depth 0, count 0, freq 672, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(code_label 24 23 25 5 25 "" [1 uses])
(note 25 24 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 29 25 30 5 (var_location:DI __dest (clobber (const_int 0 [0]))) lex.yy.c:1824 -1
     (nil))
(debug_insn 30 29 31 5 (var_location:SI __ch (clobber (const_int 0 [0]))) lex.yy.c:1824 -1
     (nil))
(debug_insn 31 30 32 5 (var_location:DI __len (clobber (const_int 0 [0]))) lex.yy.c:1824 -1
     (nil))
(insn 32 31 33 5 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_max") [flags 0x2]  <var_decl 0x7f88bc0801b0 yy_buffer_stack_max>) [4 yy_buffer_stack_max+0 S8 A64])
        (const_int 1 [0x1])) lex.yy.c:1826 89 {*movdi_internal}
     (nil))
(insn 33 32 106 5 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:1827 89 {*movdi_internal}
     (nil))
(jump_insn 106 33 107 5 (set (pc)
        (label_ref 75)) -1
     (nil)
 -> 75)
;;  succ:       9 [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 107 106 36)
;; basic block 6, loop depth 0, count 0, freq 9328, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       2 [93.3%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
(code_label 36 107 37 6 24 "" [1 uses])
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 93 6 (set (reg:DI 0 ax [orig:89 D.6621 ] [89])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_max") [flags 0x2]  <var_decl 0x7f88bc0801b0 yy_buffer_stack_max>) [4 yy_buffer_stack_max+0 S8 A64])) lex.yy.c:1831 89 {*movdi_internal}
     (nil))
(insn 93 38 40 6 (set (reg:DI 1 dx [orig:98 D.6621 ] [98])
        (plus:DI (reg:DI 0 ax [orig:89 D.6621 ] [89])
            (const_int -1 [0xffffffffffffffff]))) lex.yy.c:1831 214 {*leadi}
     (nil))
(insn 40 93 41 6 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 1 dx [orig:98 D.6621 ] [98])
            (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64]))) lex.yy.c:1831 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:98 D.6621 ] [98])
        (nil)))
(jump_insn 41 40 42 6 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 75)
            (pc))) lex.yy.c:1831 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 6102 (nil)))
 -> 75)
;;  succ:       7 [39.0%]  (FALLTHRU)
;;              9 [61.0%] 
;; lr  out 	 0 [ax] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 5 [di] 7 [sp]

;; basic block 7, loop depth 0, count 0, freq 3636, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       6 [39.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 6 [bp] 17 [flags]
;; live  kill	
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 43 42 91 7 (var_location:DI grow_size (const_int 8 [0x8])) lex.yy.c:1834 -1
     (nil))
(insn 91 43 45 7 (set (reg/v:DI 3 bx [orig:92 num_to_alloc ] [92])
        (plus:DI (reg:DI 0 ax [orig:89 D.6621 ] [89])
            (const_int 8 [0x8]))) lex.yy.c:1836 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:89 D.6621 ] [89])
        (nil)))
(debug_insn 45 91 92 7 (var_location:DI num_to_alloc (reg/v:DI 3 bx [orig:92 num_to_alloc ] [92])) lex.yy.c:1836 -1
     (nil))
(insn 92 45 47 7 (set (reg:DI 6 bp [orig:93 D.6621 ] [93])
        (mult:DI (reg/v:DI 3 bx [orig:92 num_to_alloc ] [92])
            (const_int 8 [0x8]))) lex.yy.c:1838 214 {*leadi}
     (nil))
(debug_insn 47 92 48 7 (var_location:DI ptr (reg/f:DI 5 di [orig:87 D.6619 ] [87])) lex.yy.c:1838 -1
     (nil))
(debug_insn 48 47 49 7 (var_location:DI size (reg:DI 6 bp [orig:93 D.6621 ] [93])) lex.yy.c:1838 -1
     (nil))
(insn 49 48 51 7 (set (reg:DI 4 si)
        (reg:DI 6 bp [orig:93 D.6621 ] [93])) lex.yy.c:2136 89 {*movdi_internal}
     (nil))
(call_insn 51 49 53 7 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2136 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(debug_insn 53 51 54 7 (var_location:DI ptr (clobber (const_int 0 [0]))) lex.yy.c:1838 -1
     (nil))
(debug_insn 54 53 55 7 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1838 -1
     (nil))
(insn 55 54 57 7 (set (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (reg/f:DI 0 ax [orig:88 D.6620 ] [88])) lex.yy.c:1840 89 {*movdi_internal}
     (nil))
(insn 57 55 58 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:88 D.6620 ] [88])
            (const_int 0 [0]))) lex.yy.c:1841 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 58 57 59 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 56)
            (pc))) lex.yy.c:1841 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 56)
;;  succ:       4 [0.0%] 
;;              8 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]

;; basic block 8, loop depth 0, count 0, freq 3635, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 5 [di]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 5 [di]
;; live  kill	
(note 59 58 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 60 59 61 8 (var_location:DI __dest (plus:DI (plus:DI (reg/f:DI 0 ax [orig:88 D.6620 ] [88])
            (reg:DI 6 bp [orig:93 D.6621 ] [93]))
        (const_int -64 [0xffffffffffffffc0]))) lex.yy.c:1845 -1
     (nil))
(debug_insn 61 60 62 8 (var_location:SI __ch (const_int 0 [0])) lex.yy.c:1845 -1
     (nil))
(debug_insn 62 61 63 8 (var_location:DI __len (const_int 64 [0x40])) lex.yy.c:1845 -1
     (nil))
(note 63 62 64 8 NOTE_INSN_DELETED)
(insn 64 63 67 8 (set (reg:DI 1 dx [orig:100 D.6619 ] [100])
        (plus:DI (plus:DI (reg/f:DI 0 ax [orig:88 D.6620 ] [88])
                (reg:DI 6 bp [orig:93 D.6621 ] [93]))
            (const_int -64 [0xffffffffffffffc0]))) /usr/include/x86_64-linux-gnu/bits/string3.h:90 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 6 bp [orig:93 D.6621 ] [93])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:88 D.6620 ] [88])
            (nil))))
(insn 67 64 108 8 (set (reg:DI 2 cx [103])
        (const_int 8 [0x8])) /usr/include/x86_64-linux-gnu/bits/string3.h:90 89 {*movdi_internal}
     (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))
(insn 108 67 90 8 (parallel [
            (set (reg:DI 0 ax [102])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/string3.h:90 -1
     (nil))
(insn 90 108 68 8 (set (reg/f:DI 5 di [orig:101 D.6619 ] [101])
        (reg:DI 1 dx [orig:100 D.6619 ] [100])) /usr/include/x86_64-linux-gnu/bits/string3.h:90 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:100 D.6619 ] [100])
        (nil)))
(insn 68 90 69 8 (parallel [
            (set (reg:DI 2 cx [103])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [orig:101 D.6619 ] [101])
                (plus:DI (ashift:DI (reg:DI 2 cx [103])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [orig:101 D.6619 ] [101])))
            (set (mem:BLK (reg/f:DI 5 di [orig:101 D.6619 ] [101]) [0 MEM[(void *)_13]+0 S64 A64])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [102]))
            (use (reg:DI 2 cx [103]))
        ]) /usr/include/x86_64-linux-gnu/bits/string3.h:90 935 {*rep_stosdi_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [102])
        (expr_list:REG_UNUSED (reg/f:DI 5 di [orig:101 D.6619 ] [101])
            (expr_list:REG_UNUSED (reg:DI 2 cx [103])
                (nil)))))
(debug_insn 69 68 70 8 (var_location:DI __dest (clobber (const_int 0 [0]))) lex.yy.c:1845 -1
     (nil))
(debug_insn 70 69 71 8 (var_location:SI __ch (clobber (const_int 0 [0]))) lex.yy.c:1845 -1
     (nil))
(debug_insn 71 70 72 8 (var_location:DI __len (clobber (const_int 0 [0]))) lex.yy.c:1845 -1
     (nil))
(insn 72 71 75 8 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_max") [flags 0x2]  <var_decl 0x7f88bc0801b0 yy_buffer_stack_max>) [4 yy_buffer_stack_max+0 S8 A64])
        (reg/v:DI 3 bx [orig:92 num_to_alloc ] [92])) lex.yy.c:1846 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 3 bx [orig:92 num_to_alloc ] [92])
        (nil)))
;;  succ:       9 [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 9, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 8, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       8 [100.0%]  (FALLTHRU)
;;              6 [61.0%] 
;;              5 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
(code_label 75 72 76 9 23 "" [2 uses])
(note 76 75 100 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(note 100 76 101 9 NOTE_INSN_EPILOGUE_BEG)
(insn/f 101 100 102 9 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) lex.yy.c:1848 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn/f 102 101 103 9 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1848 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 103 102 104 9 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1848 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn 104 103 105 9 (simple_return) lex.yy.c:1848 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

(barrier 105 104 89)
(note 89 105 0 NOTE_INSN_DELETED)

;; Function void yy_switch_to_buffer(YY_BUFFER_STATE) (_Z19yy_switch_to_bufferP15yy_buffer_state, funcdef_no=92, decl_uid=4254, cgraph_uid=92, symbol_order=119)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 10 (    1)


void yy_switch_to_buffer(YY_BUFFER_STATE)

Dataflow summary:
def_info->table_size = 110, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 3 [bx] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={9d,11u,2e} r1={8d,10u} r2={5d,3u} r3={3d,7u,1e} r4={2d} r5={2d,1u} r7={3d,12u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={6d,4u} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 165{114d,48u,3e} in 40{39 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(7){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 7 [sp]

( 0 )->[2]->( 3 7 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 3 [bx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 2 )->[3]->( 9 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 7 [sp]

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx]
;; live  in  	 0 [ax] 3 [bx] 7 [sp]
;; live  gen 	 1 [dx] 2 [cx]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 5 4 8 )->[6]->( 9 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 0 [ax] 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 2 )->[7]->( 9 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 7 )->[8]->( 6 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 7 3 6 )->[9]->( 1 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 7 [sp]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx] 7 [sp]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 9 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(3){ }u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 6 to worklist
  Adding insn 76 to worklist
  Adding insn 16 to worklist
  Adding insn 19 to worklist
  Adding insn 28 to worklist
  Adding insn 25 to worklist
  Adding insn 23 to worklist
  Adding insn 84 to worklist
  Adding insn 41 to worklist
  Adding insn 39 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
  Adding insn 49 to worklist
  Adding insn 86 to worklist
  Adding insn 82 to worklist
Finished finding needed instructions:
processing block 9 lr out =  3 [bx] 7 [sp]
  Adding insn 81 to worklist
processing block 6 lr out =  7 [sp]
  Adding insn 40 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 34 to worklist
  Adding insn 32 to worklist
processing block 5 lr out =  0 [ax] 3 [bx] 7 [sp]
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
processing block 4 lr out =  0 [ax] 3 [bx] 7 [sp]
  Adding insn 18 to worklist
processing block 3 lr out =  0 [ax] 1 [dx] 3 [bx] 7 [sp]
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 73 to worklist
processing block 8 lr out =  0 [ax] 3 [bx] 7 [sp]
  Adding insn 52 to worklist
  Adding insn 75 to worklist
processing block 7 lr out =  3 [bx] 7 [sp]
  Adding insn 48 to worklist
processing block 2 lr out =  0 [ax] 3 [bx] 7 [sp]
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 10 (    1)
starting the processing of deferred insns
ending the processing of deferred insns


void yy_switch_to_buffer(YY_BUFFER_STATE)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 3 [bx] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={9d,11u,2e} r1={8d,10u} r2={5d,3u} r3={3d,7u,1e} r4={2d} r5={2d,1u} r7={3d,12u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={6d,4u} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 165{114d,48u,3e} in 40{39 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 3 [bx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;; live  kill	
(note 4 1 76 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 76 4 77 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) lex.yy.c:1610 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(note 77 76 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 77 3 2 (set (reg/v/f:DI 3 bx [orig:104 new_buffer ] [104])
        (reg:DI 5 di [ new_buffer ])) lex.yy.c:1610 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ new_buffer ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 3 7 2 (call (mem:QI (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>) [0 yyensure_buffer_stack S1 A8])
        (const_int 0 [0])) lex.yy.c:1617 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>)
        (nil))
    (nil))
(insn 7 6 8 2 (set (reg/f:DI 0 ax [orig:88 D.6626 ] [88])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1618 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:88 D.6626 ] [88])
            (const_int 0 [0]))) lex.yy.c:1618 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 46)
            (pc))) lex.yy.c:1618 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 46)
;;  succ:       3 [85.0%]  (FALLTHRU)
;;              7 [15.0%] 
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 8500, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       2 [85.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 12 10 73 3 NOTE_INSN_DELETED)
(insn 73 12 13 3 (set (reg:DI 1 dx [orig:106 yy_buffer_stack_top ] [106])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1618 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 13 73 14 3 (set (reg/f:DI 0 ax [orig:91 D.6626 ] [91])
        (plus:DI (mult:DI (reg:DI 1 dx [orig:106 yy_buffer_stack_top ] [106])
                (const_int 8 [0x8]))
            (reg/f:DI 0 ax [orig:88 D.6626 ] [88]))) lex.yy.c:1618 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:106 yy_buffer_stack_top ] [106])
        (nil)))
(insn 14 13 15 3 (set (reg/f:DI 1 dx [orig:92 D.6627 ] [92])
        (mem/f:DI (reg/f:DI 0 ax [orig:91 D.6626 ] [91]) [1 *_9+0 S8 A64])) lex.yy.c:1618 89 {*movdi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 1 dx [orig:92 D.6627 ] [92])
            (reg/v/f:DI 3 bx [orig:104 new_buffer ] [104]))) lex.yy.c:1618 8 {*cmpdi_1}
     (nil))
(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 55)
            (pc))) lex.yy.c:1618 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 55)
;;  succ:       9 [10.1%] 
;;              4 [89.9%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 7638, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       3 [89.9%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 7 [sp]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 1 dx [orig:92 D.6627 ] [92])
            (const_int 0 [0]))) lex.yy.c:1621 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:92 D.6627 ] [92])
        (nil)))
(jump_insn 19 18 20 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 29)
            (pc))) lex.yy.c:1621 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 29)
;;  succ:       5 [85.0%]  (FALLTHRU)
;;              6 [15.0%] 
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

;; basic block 5, loop depth 0, count 0, freq 6492, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       4 [85.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx]
;; live  in  	 0 [ax] 3 [bx] 7 [sp]
;; live  gen 	 1 [dx] 2 [cx]
;; live  kill	
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg/f:DI 1 dx [orig:93 D.6628 ] [93])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) lex.yy.c:1624 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (nil)))
(insn 22 21 23 5 (set (reg:QI 2 cx [orig:107 yy_hold_char ] [107])
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) lex.yy.c:1624 93 {*movqi_internal}
     (expr_list:REG_EQUIV (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (nil)))
(insn 23 22 24 5 (set (mem:QI (reg/f:DI 1 dx [orig:93 D.6628 ] [93]) [0 *_16+0 S1 A8])
        (reg:QI 2 cx [orig:107 yy_hold_char ] [107])) lex.yy.c:1624 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 2 cx [orig:107 yy_hold_char ] [107])
        (nil)))
(insn 24 23 25 5 (set (reg/f:DI 2 cx [orig:95 D.6630 ] [95])
        (mem/f:DI (reg/f:DI 0 ax [orig:91 D.6626 ] [91]) [1 *_9+0 S8 A64])) lex.yy.c:1625 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 0 ax [orig:91 D.6626 ] [91]) [1 *_9+0 S8 A64])
        (nil)))
(insn 25 24 26 5 (set (mem/f:DI (plus:DI (reg/f:DI 2 cx [orig:95 D.6630 ] [95])
                (const_int 16 [0x10])) [1 _19->yy_buf_pos+0 S8 A64])
        (reg/f:DI 1 dx [orig:93 D.6628 ] [93])) lex.yy.c:1625 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:95 D.6630 ] [95])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:93 D.6628 ] [93])
            (nil))))
(insn 26 25 27 5 (set (reg/f:DI 1 dx [orig:108 *_9 ] [108])
        (mem/f:DI (reg/f:DI 0 ax [orig:91 D.6626 ] [91]) [1 *_9+0 S8 A64])) lex.yy.c:1626 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 0 ax [orig:91 D.6626 ] [91]) [1 *_9+0 S8 A64])
        (nil)))
(insn 27 26 28 5 (set (reg:SI 2 cx [orig:109 yy_n_chars ] [109])
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) lex.yy.c:1626 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (nil)))
(insn 28 27 29 5 (set (mem:SI (plus:DI (reg/f:DI 1 dx [orig:108 *_9 ] [108])
                (const_int 32 [0x20])) [2 _21->yy_n_chars+0 S4 A64])
        (reg:SI 2 cx [orig:109 yy_n_chars ] [109])) lex.yy.c:1626 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:109 yy_n_chars ] [109])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:108 *_9 ] [108])
            (nil))))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

;; basic block 6, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU)
;;              4 [15.0%] 
;;              8 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx]
;; live  in  	 0 [ax] 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	
(code_label 29 28 30 6 37 "" [2 uses])
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (mem/f:DI (reg/f:DI 0 ax [orig:91 D.6626 ] [91]) [1 *_29+0 S8 A64])
        (reg/v/f:DI 3 bx [orig:104 new_buffer ] [104])) lex.yy.c:1629 89 {*movdi_internal}
     (nil))
(insn 32 31 33 6 (set (reg:SI 1 dx [orig:110 new_buffer_11(D)->yy_n_chars ] [110])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:104 new_buffer ] [104])
                (const_int 32 [0x20])) [2 new_buffer_11(D)->yy_n_chars+0 S4 A64])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:104 new_buffer ] [104])
                (const_int 32 [0x20])) [2 new_buffer_11(D)->yy_n_chars+0 S4 A64])
        (nil)))
(insn 33 32 34 6 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 1 dx [orig:110 new_buffer_11(D)->yy_n_chars ] [110])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:110 new_buffer_11(D)->yy_n_chars ] [110])
        (nil)))
(insn 34 33 35 6 (set (reg/f:DI 1 dx [orig:99 D.6628 ] [99])
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:104 new_buffer ] [104])
                (const_int 16 [0x10])) [1 new_buffer_11(D)->yy_buf_pos+0 S8 A64])) lex.yy.c:1643 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:104 new_buffer ] [104])
        (nil)))
(insn 35 34 36 6 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 1 dx [orig:99 D.6628 ] [99])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 36 35 37 6 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 1 dx [orig:99 D.6628 ] [99])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 37 36 38 6 (set (reg/f:DI 0 ax [orig:111 *_29 ] [111])
        (mem/f:DI (reg/f:DI 0 ax [orig:91 D.6626 ] [91]) [1 *_29+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (nil))
(insn 38 37 39 6 (set (reg/f:DI 0 ax [orig:112 _32->yy_input_file ] [112])
        (mem/f:DI (reg/f:DI 0 ax [orig:111 *_29 ] [111]) [1 _32->yy_input_file+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (nil)))
(insn 39 38 40 6 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 0 ax [orig:112 _32->yy_input_file ] [112])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:112 _32->yy_input_file ] [112])
        (nil)))
(insn 40 39 41 6 (set (reg:QI 0 ax [orig:113 *_31 ] [113])
        (mem:QI (reg/f:DI 1 dx [orig:99 D.6628 ] [99]) [0 *_31+0 S1 A8])) lex.yy.c:1645 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:99 D.6628 ] [99])
        (expr_list:REG_EQUIV (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
            (nil))))
(insn 41 40 84 6 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 0 ax [orig:113 *_31 ] [113])) lex.yy.c:1645 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:113 *_31 ] [113])
        (nil)))
(jump_insn 84 41 85 6 (set (pc)
        (label_ref 55)) -1
     (nil)
 -> 55)
;;  succ:       9 [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 85 84 46)
;; basic block 7, loop depth 0, count 0, freq 1500, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       2 [15.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 46 85 47 7 35 "" [1 uses])
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 3 bx [orig:104 new_buffer ] [104])
            (const_int 0 [0]))) lex.yy.c:1618 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 49 48 50 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 55)
            (pc))) lex.yy.c:1618 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 55)
;;  succ:       9 [10.1%] 
;;              8 [89.9%]  (FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

;; basic block 8, loop depth 0, count 0, freq 1348, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       7 [89.9%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(note 51 50 75 8 NOTE_INSN_DELETED)
(insn 75 51 52 8 (set (reg:DI 0 ax [115])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 52 75 86 8 (parallel [
            (set (reg/f:DI 0 ax [orig:91 D.6626 ] [91])
                (ashift:DI (reg:DI 0 ax [115])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(jump_insn 86 52 87 8 (set (pc)
        (label_ref 29)) -1
     (nil)
 -> 29)
;;  succ:       6 [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 87 86 55)
;; basic block 9, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 8, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       7 [10.1%] 
;;              3 [10.1%] 
;;              6 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 7 [sp]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx] 7 [sp]
;; live  kill	
(code_label 55 87 56 9 34 "" [3 uses])
(note 56 55 80 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(note 80 56 81 9 NOTE_INSN_EPILOGUE_BEG)
(insn/f 81 80 82 9 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1638 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn 82 81 83 9 (simple_return) lex.yy.c:1638 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 83 82 74)
(note 74 83 0 NOTE_INSN_DELETED)

;; Function void yy_delete_buffer(YY_BUFFER_STATE) (_Z16yy_delete_bufferP15yy_buffer_state, funcdef_no=95, decl_uid=4259, cgraph_uid=95, symbol_order=122)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Splitting with gen_peephole2_5725
scanning new insn with uid = 58.
scanning new insn with uid = 59.
deleting insn with uid = 22.
verify found no changes in insn with uid = 59.
verify found no changes in insn with uid = 58.
starting the processing of deferred insns
ending the processing of deferred insns


void yy_delete_buffer(YY_BUFFER_STATE)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 3 [bx] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 3[bx] 5[di] 7[sp] 17[flags]
;;  ref usage 	r0={6d,5u} r1={4d,1u} r2={3d} r3={3d,7u,1e} r4={3d} r5={5d,5u} r7={3d,13u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={6d,4u} r18={2d} r19={2d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 211{175d,35u,1e} in 23{21 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 5 di [orig:94 b ] [94])
            (const_int 0 [0]))) lex.yy.c:1685 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 55)
            (pc))) lex.yy.c:1685 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 55)
;;  succ:       9 [10.1%] 
;;              3 [89.9%]  (FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       2 [89.9%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 7 [sp] 17 [flags]
;; live  kill	
(note 8 7 48 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn/f 48 8 49 3 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) lex.yy.c:1683 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(note 49 48 9 3 NOTE_INSN_PROLOGUE_END)
(insn 9 49 10 3 (set (reg/f:DI 0 ax [orig:87 D.6635 ] [87])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1688 89 {*movdi_internal}
     (nil))
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:87 D.6635 ] [87])
            (const_int 0 [0]))) lex.yy.c:1688 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 20)
            (pc))) lex.yy.c:1688 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 20)
;;  succ:       4 [85.0%]  (FALLTHRU)
;;              6 [15.0%] 
;; lr  out 	 0 [ax] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 5 [di] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 7638, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       3 [85.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
(note 12 11 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 14 12 46 4 NOTE_INSN_DELETED)
(insn 46 14 15 4 (set (reg:DI 1 dx [orig:96 yy_buffer_stack_top ] [96])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1688 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 15 46 16 4 (set (reg/f:DI 0 ax [orig:90 D.6635 ] [90])
        (plus:DI (mult:DI (reg:DI 1 dx [orig:96 yy_buffer_stack_top ] [96])
                (const_int 8 [0x8]))
            (reg/f:DI 0 ax [orig:87 D.6635 ] [87]))) lex.yy.c:1688 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:96 yy_buffer_stack_top ] [96])
        (nil)))
(insn 16 15 17 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 5 di [orig:94 b ] [94])
            (mem/f:DI (reg/f:DI 0 ax [orig:90 D.6635 ] [90]) [1 *_10+0 S8 A64]))) lex.yy.c:1688 8 {*cmpdi_1}
     (nil))
(jump_insn 17 16 18 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) lex.yy.c:1688 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8235 (nil)))
 -> 20)
;;  succ:       5 [17.6%]  (FALLTHRU)
;;              6 [82.3%] 
;; lr  out 	 0 [ax] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 5 [di] 7 [sp]

;; basic block 5, loop depth 0, count 0, freq 1348, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       4 [17.6%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 5 [di] 7 [sp]
;; live  gen 	
;; live  kill	
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (mem/f:DI (reg/f:DI 0 ax [orig:90 D.6635 ] [90]) [1 *_10+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:1689 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:90 D.6635 ] [90])
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 5 [di] 7 [sp]
;; live  out 	 5 [di] 7 [sp]

;; basic block 6, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [82.3%] 
;;              5 [100.0%]  (FALLTHRU)
;;              3 [15.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 3 [bx] 17 [flags]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 3 [bx] 17 [flags]
;; live  kill	
(code_label 20 19 21 6 47 "" [2 uses])
(note 21 20 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 45 21 58 6 (set (reg/v/f:DI 3 bx [orig:94 b ] [94])
        (reg/v/f:DI 5 di [orig:94 b ] [94])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:94 b ] [94])
        (nil)))
(insn 58 45 59 6 (set (reg:SI 0 ax)
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:94 b ] [94])
                (const_int 36 [0x24])) [2 b_5(D)->yy_is_our_buffer+0 S4 A32])) lex.yy.c:1691 -1
     (nil))
(insn 59 58 23 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax)
            (const_int 0 [0]))) lex.yy.c:1691 -1
     (nil))
(jump_insn 23 59 24 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 29)
            (pc))) lex.yy.c:1691 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 29)
;;  succ:       7 [29.0%]  (FALLTHRU)
;;              8 [71.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

;; basic block 7, loop depth 0, count 0, freq 2606, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       6 [29.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(note 24 23 25 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 25 24 26 7 (var_location:DI ptr (mem/f/j:DI (plus:DI (reg/v/f:DI 3 bx [orig:94 b ] [94])
            (const_int 8 [0x8])) [0 b_5(D)->yy_ch_buf+0 S8 A64])) lex.yy.c:1692 -1
     (nil))
(insn 26 25 28 7 (set (reg/f:DI 5 di [orig:97 b_5(D)->yy_ch_buf ] [97])
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:94 b ] [94])
                (const_int 8 [0x8])) [1 b_5(D)->yy_ch_buf+0 S8 A64])) lex.yy.c:2141 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:94 b ] [94])
                (const_int 8 [0x8])) [1 b_5(D)->yy_ch_buf+0 S8 A64])
        (nil)))
(call_insn 28 26 29 7 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) lex.yy.c:2141 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

;; basic block 8, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       6 [71.0%] 
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 3 [bx] 5 [di] 7 [sp]
;; live  kill	
(code_label 29 28 30 8 48 "" [1 uses])
(note 30 29 31 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(debug_insn 31 30 32 8 (var_location:DI ptr (reg/v/f:DI 3 bx [orig:94 b ] [94])) -1
     (nil))
(insn 32 31 57 8 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:94 b ] [94])) lex.yy.c:2141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:94 b ] [94])
        (nil)))
(note 57 32 56 8 NOTE_INSN_EPILOGUE_BEG)
(insn/f 56 57 33 8 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1695 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 3 bx)
            (nil))))
(call_insn/j 33 56 34 8 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) lex.yy.c:2141 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 34 33 55)
;; basic block 9, loop depth 0, count 0, freq 1014, maybe hot
;;  prev block 8, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       2 [10.1%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	
;; live  kill	
(code_label 55 34 54 9 53 "" [1 uses])
(note 54 55 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 53 54 52 9 (simple_return) -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 52 53 47)
(note 47 52 0 NOTE_INSN_DELETED)

;; Function void yy_flush_buffer(YY_BUFFER_STATE) (_Z15yy_flush_bufferP15yy_buffer_state, funcdef_no=97, decl_uid=4261, cgraph_uid=97, symbol_order=124)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns


void yy_flush_buffer(YY_BUFFER_STATE)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 5[di] 17[flags]
;;  ref usage 	r0={8d,9u} r1={2d,4u} r2={3d,2u} r4={1d} r5={1d,10u,2e} r7={1d,6u} r17={3d,3u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 65{29d,34u,2e} in 28{28 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(note 4 1 57 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 57 4 3 2 NOTE_INSN_PROLOGUE_END)
(note 3 57 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 5 di [orig:99 b ] [99])
            (const_int 0 [0]))) lex.yy.c:1731 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 44)
            (pc))) lex.yy.c:1731 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 44)
;;  succ:       6 [10.1%] 
;;              3 [89.9%]  (FALLTHRU)
;; lr  out 	 5 [di] 7 [sp]
;; live  out 	 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       2 [89.9%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
(note 12 7 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (mem:SI (plus:DI (reg/v/f:DI 5 di [orig:99 b ] [99])
                (const_int 32 [0x20])) [2 b_3(D)->yy_n_chars+0 S4 A64])
        (const_int 0 [0])) lex.yy.c:1734 90 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (set (reg/f:DI 0 ax [orig:87 D.6642 ] [87])
        (mem/f:DI (plus:DI (reg/v/f:DI 5 di [orig:99 b ] [99])
                (const_int 8 [0x8])) [1 b_3(D)->yy_ch_buf+0 S8 A64])) lex.yy.c:1740 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 5 di [orig:99 b ] [99])
                (const_int 8 [0x8])) [1 b_3(D)->yy_ch_buf+0 S8 A64])
        (nil)))
(insn 15 14 16 3 (set (mem:QI (reg/f:DI 0 ax [orig:87 D.6642 ] [87]) [0 *_6+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1740 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:87 D.6642 ] [87])
        (nil)))
(insn 16 15 17 3 (set (reg/f:DI 0 ax [orig:88 D.6642 ] [88])
        (mem/f:DI (plus:DI (reg/v/f:DI 5 di [orig:99 b ] [99])
                (const_int 8 [0x8])) [1 b_3(D)->yy_ch_buf+0 S8 A64])) lex.yy.c:1741 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/v/f:DI 5 di [orig:99 b ] [99])
                (const_int 8 [0x8])) [1 b_3(D)->yy_ch_buf+0 S8 A64])
        (nil)))
(insn 17 16 18 3 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:88 D.6642 ] [88])
                (const_int 1 [0x1])) [0 MEM[(char *)_8 + 1B]+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1741 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:88 D.6642 ] [88])
        (nil)))
(insn 18 17 19 3 (set (reg/f:DI 1 dx [orig:89 D.6642 ] [89])
        (mem/f:DI (plus:DI (reg/v/f:DI 5 di [orig:99 b ] [99])
                (const_int 8 [0x8])) [1 b_3(D)->yy_ch_buf+0 S8 A64])) lex.yy.c:1743 89 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (mem/f:DI (plus:DI (reg/v/f:DI 5 di [orig:99 b ] [99])
                (const_int 16 [0x10])) [1 b_3(D)->yy_buf_pos+0 S8 A64])
        (reg/f:DI 1 dx [orig:89 D.6642 ] [89])) lex.yy.c:1743 89 {*movdi_internal}
     (nil))
(insn 20 19 21 3 (set (mem:SI (plus:DI (reg/v/f:DI 5 di [orig:99 b ] [99])
                (const_int 44 [0x2c])) [2 b_3(D)->yy_at_bol+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:1745 90 {*movsi_internal}
     (nil))
(insn 21 20 22 3 (set (mem:SI (plus:DI (reg/v/f:DI 5 di [orig:99 b ] [99])
                (const_int 60 [0x3c])) [2 b_3(D)->yy_buffer_status+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1746 90 {*movsi_internal}
     (nil))
(insn 22 21 24 3 (set (reg/f:DI 0 ax [orig:90 D.6643 ] [90])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1748 89 {*movdi_internal}
     (nil))
(insn 24 22 25 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:90 D.6643 ] [90])
            (const_int 0 [0]))) lex.yy.c:1748 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 25 24 26 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 44)
            (pc))) lex.yy.c:1748 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 44)
;;  succ:       4 [85.0%]  (FALLTHRU)
;;              6 [15.0%] 
;; lr  out 	 0 [ax] 1 [dx] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 5 [di] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 7638, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       3 [85.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags]
;; live  kill	
(note 26 25 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 28 26 55 4 NOTE_INSN_DELETED)
(insn 55 28 29 4 (set (reg:DI 2 cx [orig:101 yy_buffer_stack_top ] [101])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1748 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 29 55 30 4 (set (reg/f:DI 0 ax [orig:93 D.6643 ] [93])
        (plus:DI (mult:DI (reg:DI 2 cx [orig:101 yy_buffer_stack_top ] [101])
                (const_int 8 [0x8]))
            (reg/f:DI 0 ax [orig:90 D.6643 ] [90]))) lex.yy.c:1748 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:101 yy_buffer_stack_top ] [101])
        (nil)))
(insn 30 29 31 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 5 di [orig:99 b ] [99])
            (mem/f:DI (reg/f:DI 0 ax [orig:93 D.6643 ] [93]) [1 *_17+0 S8 A64]))) lex.yy.c:1748 8 {*cmpdi_1}
     (nil))
(jump_insn 31 30 32 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 44)
            (pc))) lex.yy.c:1748 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7455 (nil)))
 -> 44)
;;  succ:       5 [25.4%]  (FALLTHRU)
;;              6 [74.5%] 
;; lr  out 	 0 [ax] 1 [dx] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 5 [di] 7 [sp]

;; basic block 5, loop depth 0, count 0, freq 1944, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       4 [25.4%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 5 [di] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx]
;; live  in  	 0 [ax] 1 [dx] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 2 [cx]
;; live  kill	
(note 32 31 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 5 (set (reg:SI 2 cx [orig:102 b_3(D)->yy_n_chars ] [102])
        (mem:SI (plus:DI (reg/v/f:DI 5 di [orig:99 b ] [99])
                (const_int 32 [0x20])) [2 b_3(D)->yy_n_chars+0 S4 A64])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:99 b ] [99])
        (expr_list:REG_EQUIV (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
            (nil))))
(insn 34 33 35 5 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 2 cx [orig:102 b_3(D)->yy_n_chars ] [102])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:102 b_3(D)->yy_n_chars ] [102])
        (nil)))
(insn 35 34 36 5 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 1 dx [orig:89 D.6642 ] [89])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 36 35 37 5 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 1 dx [orig:89 D.6642 ] [89])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 37 36 38 5 (set (reg/f:DI 0 ax [orig:103 *_17 ] [103])
        (mem/f:DI (reg/f:DI 0 ax [orig:93 D.6643 ] [93]) [1 *_17+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (nil))
(insn 38 37 39 5 (set (reg/f:DI 0 ax [orig:104 _26->yy_input_file ] [104])
        (mem/f:DI (reg/f:DI 0 ax [orig:103 *_17 ] [103]) [1 _26->yy_input_file+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (nil)))
(insn 39 38 40 5 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 0 ax [orig:104 _26->yy_input_file ] [104])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:104 _26->yy_input_file ] [104])
        (nil)))
(insn 40 39 41 5 (set (reg:QI 0 ax [orig:105 *_10 ] [105])
        (mem:QI (reg/f:DI 1 dx [orig:89 D.6642 ] [89]) [0 *_10+0 S1 A8])) lex.yy.c:1645 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:89 D.6642 ] [89])
        (expr_list:REG_EQUIV (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
            (nil))))
(insn 41 40 44 5 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 0 ax [orig:105 *_10 ] [105])) lex.yy.c:1645 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:105 *_10 ] [105])
        (nil)))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 6, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 5, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       5 [100.0%]  (FALLTHRU)
;;              2 [10.1%] 
;;              3 [15.0%] 
;;              4 [74.5%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(code_label 44 41 45 6 56 "" [3 uses])
(note 45 44 59 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 59 45 58 6 (simple_return) -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 58 59 56)
(note 56 58 0 NOTE_INSN_DELETED)

;; Function void yy_init_buffer(YY_BUFFER_STATE, FILE*) (_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE, funcdef_no=96, decl_uid=4269, cgraph_uid=96, symbol_order=123)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Splitting with gen_peephole2_5748
scanning new insn with uid = 79.
deleting insn with uid = 5.
verify found no changes in insn with uid = 79.
starting the processing of deferred insns
ending the processing of deferred insns


void yy_init_buffer(YY_BUFFER_STATE, FILE*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;;  regs ever live 	 0[ax] 1[dx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12] 42[r13]
;;  ref usage 	r0={9d,8u} r1={6d,1u} r2={5d} r3={3d,9u} r4={4d,1u} r5={7d,4u} r6={3d,5u} r7={11d,23u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={11d,4u} r18={4d} r19={4d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r41={3d,3u} r42={3d,4u} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} 
;;    total ref usage 373{311d,62u,0e} in 41{37 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
(note 6 1 63 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 63 6 64 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 42 r13)) lex.yy.c:1703 -1
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))
(insn/f 64 63 65 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) lex.yy.c:1703 -1
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn/f 65 64 66 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) lex.yy.c:1703 -1
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 66 65 67 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) lex.yy.c:1703 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f 67 66 68 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) lex.yy.c:1703 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (nil))))
(note 68 67 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 68 3 2 (set (reg/v/f:DI 3 bx [orig:98 b ] [98])
        (reg:DI 5 di [ b ])) lex.yy.c:1703 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ b ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 6 bp [orig:99 file ] [99])
        (reg:DI 4 si [ file ])) lex.yy.c:1703 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ file ])
        (nil)))
(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)
(call_insn/u 8 4 9 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f88bbffbca8 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) lex.yy.c:1704 669 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f88bbffbca8 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 9 8 10 2 (set (reg/f:DI 41 r12 [orig:89 D.6654 ] [89])
        (reg:DI 0 ax)) lex.yy.c:1704 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg/v:SI 42 r13 [orig:90 oerrno ] [90])
        (mem:SI (reg/f:DI 0 ax [orig:89 D.6654 ] [89]) [2 *_5+0 S4 A32])) lex.yy.c:1704 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:89 D.6654 ] [89])
        (nil)))
(debug_insn 11 10 12 2 (var_location:SI oerrno (reg/v:SI 42 r13 [orig:90 oerrno ] [90])) lex.yy.c:1704 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:98 b ] [98])) lex.yy.c:1706 89 {*movdi_internal}
     (nil))
(call_insn 13 12 14 2 (call (mem:QI (symbol_ref:DI ("_Z15yy_flush_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c510 yy_flush_buffer>) [0 yy_flush_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:1706 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z15yy_flush_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c510 yy_flush_buffer>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 14 13 15 2 (set (mem/f:DI (reg/v/f:DI 3 bx [orig:98 b ] [98]) [1 b_8(D)->yy_input_file+0 S8 A64])
        (reg/v/f:DI 6 bp [orig:99 file ] [99])) lex.yy.c:1708 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:98 b ] [98])
                (const_int 56 [0x38])) [2 b_8(D)->yy_fill_buffer+0 S4 A64])
        (const_int 1 [0x1])) lex.yy.c:1709 90 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 0 ax [orig:91 D.6655 ] [91])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1715 89 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:91 D.6655 ] [91])
            (const_int 0 [0]))) lex.yy.c:1715 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 23)
            (pc))) lex.yy.c:1715 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 23)
;;  succ:       3 [85.0%]  (FALLTHRU)
;;              4 [15.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

;; basic block 3, loop depth 0, count 0, freq 8500, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       2 [85.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 3 (set (reg:DI 1 dx [orig:100 yy_buffer_stack_top ] [100])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1715 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 21 20 22 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 3 bx [orig:98 b ] [98])
            (mem/f:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:100 yy_buffer_stack_top ] [100])
                        (const_int 8 [0x8]))
                    (reg/f:DI 0 ax [orig:91 D.6655 ] [91])) [1 *_16+0 S8 A64]))) lex.yy.c:1715 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:100 yy_buffer_stack_top ] [100])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:91 D.6655 ] [91])
            (nil))))
(jump_insn 22 21 23 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) lex.yy.c:1715 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1765 (nil)))
 -> 27)
;;  succ:       4 [82.3%]  (FALLTHRU)
;;              5 [17.6%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

;; basic block 4, loop depth 0, count 0, freq 8500, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       3 [82.3%]  (FALLTHRU)
;;              2 [15.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	
;; live  kill	
(code_label 23 22 24 4 65 "" [1 uses])
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:98 b ] [98])
                (const_int 48 [0x30])) [2 b_8(D)->yy_bs_lineno+0 S4 A64])
        (const_int 1 [0x1])) lex.yy.c:1716 90 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:98 b ] [98])
                (const_int 52 [0x34])) [2 b_8(D)->yy_bs_column+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1717 90 {*movsi_internal}
     (nil))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

;; basic block 5, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [17.6%] 
;;              4 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 27 26 28 5 66 "" [1 uses])
(note 28 27 79 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 79 28 29 5 (parallel [
            (set (reg:DI 0 ax [orig:88 D.6653 ] [88])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1720 -1
     (nil))
(insn 29 79 30 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 6 bp [orig:99 file ] [99])
            (const_int 0 [0]))) lex.yy.c:1720 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 30 29 31 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 42)
            (pc))) lex.yy.c:1720 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 42)
;;  succ:       6 [78.3%]  (FALLTHRU)
;;              7 [21.6%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

;; basic block 6, loop depth 0, count 0, freq 7835, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       5 [78.3%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 6 (set (reg:DI 5 di)
        (reg/v/f:DI 6 bp [orig:99 file ] [99])) lex.yy.c:1720 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:99 file ] [99])
        (nil)))
(call_insn 33 32 35 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fileno") [flags 0x41]  <function_decl 0x7f88bbf95af8 fileno>) [0 fileno S1 A8])
            (const_int 0 [0]))) lex.yy.c:1720 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("fileno") [flags 0x41]  <function_decl 0x7f88bbf95af8 fileno>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 35 33 36 6 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:96 D.6653 ] [96])) lex.yy.c:1720 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:96 D.6653 ] [96])
        (nil)))
(call_insn 36 35 38 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("isatty") [flags 0x41]  <function_decl 0x7f88bc0d7e58 isatty>) [0 isatty S1 A8])
            (const_int 0 [0]))) lex.yy.c:1720 669 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("isatty") [flags 0x41]  <function_decl 0x7f88bc0d7e58 isatty>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 38 36 39 6 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:97 D.6653 ] [97])
            (const_int 0 [0]))) lex.yy.c:1720 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:97 D.6653 ] [97])
        (nil)))
(note 39 38 61 6 NOTE_INSN_DELETED)
(insn 61 39 62 6 (set (reg:QI 0 ax [orig:88 D.6653 ] [88])
        (gt:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) lex.yy.c:1720 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCNO 17 flags)
        (nil)))
(insn 62 61 42 6 (set (reg:SI 0 ax [orig:88 D.6653 ] [88])
        (zero_extend:SI (reg:QI 0 ax [orig:88 D.6653 ] [88]))) lex.yy.c:1720 138 {*zero_extendqisi2}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]

;; basic block 7, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 6, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       5 [21.6%] 
;;              6 [100.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13]
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  kill	 17 [flags]
(code_label 42 62 43 7 67 "" [1 uses])
(note 43 42 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 7 (set (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:98 b ] [98])
                (const_int 40 [0x28])) [2 b_8(D)->yy_is_interactive+0 S4 A64])
        (reg:SI 0 ax [orig:88 D.6653 ] [88])) lex.yy.c:1720 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:98 b ] [98])
        (expr_list:REG_DEAD (reg:SI 0 ax [orig:88 D.6653 ] [88])
            (nil))))
(insn 45 44 71 7 (set (mem:SI (reg/f:DI 41 r12 [orig:89 D.6654 ] [89]) [2 *_5+0 S4 A32])
        (reg/v:SI 42 r13 [orig:90 oerrno ] [90])) lex.yy.c:1722 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 42 r13 [orig:90 oerrno ] [90])
        (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:89 D.6654 ] [89])
            (nil))))
(note 71 45 72 7 NOTE_INSN_EPILOGUE_BEG)
(insn/f 72 71 73 7 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) lex.yy.c:1723 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn/f 73 72 74 7 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1723 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 74 73 75 7 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1723 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 75 74 76 7 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1723 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 76 75 77 7 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1723 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn 77 76 78 7 (simple_return) lex.yy.c:1723 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

(barrier 78 77 60)
(note 60 78 0 NOTE_INSN_DELETED)

;; Function yy_buffer_state* yy_create_buffer(FILE*, int) (_Z16yy_create_bufferP8_IO_FILEi, funcdef_no=94, decl_uid=4257, cgraph_uid=94, symbol_order=121)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)


yy_buffer_state* yy_create_buffer(FILE*, int)

Dataflow summary:
def_info->table_size = 316, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;;  regs ever live 	 0[ax] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12]
;;  ref usage 	r0={6d,6u} r1={5d} r2={5d} r3={3d,7u} r4={7d,5u} r5={9d,5u} r6={3d,3u} r7={7d,15u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={6d,2u} r18={4d} r19={4d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r41={3d,3u} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} 
;;    total ref usage 374{328d,46u,0e} in 34{30 regular + 4 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12]

( 2 4 )->[3]->( )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 2 )->[4]->( 3 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 7 [sp] 41 [r12]

( 4 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 15 to worklist
  Adding insn 9 to worklist
  Adding insn 60 to worklist
  Adding insn 59 to worklist
  Adding insn 58 to worklist
  Adding insn 18 to worklist
  Adding insn 34 to worklist
  Adding insn 31 to worklist
  Adding insn 27 to worklist
  Adding insn 23 to worklist
  Adding insn 69 to worklist
  Adding insn 45 to worklist
  Adding insn 39 to worklist
  Adding insn 36 to worklist
Finished finding needed instructions:
processing block 3 lr out =  7 [sp]
  Adding insn 17 to worklist
processing block 5 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
  Adding insn 68 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 44 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
processing block 4 lr out =  3 [bx] 7 [sp] 41 [r12]
  Adding insn 33 to worklist
  Adding insn 57 to worklist
  Adding insn 22 to worklist
  Adding insn 62 to worklist
processing block 2 lr out =  0 [ax] 6 [bp] 7 [sp] 41 [r12]
  Adding insn 14 to worklist
  Adding insn 8 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
starting the processing of deferred insns
ending the processing of deferred insns


yy_buffer_state* yy_create_buffer(FILE*, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;;  regs ever live 	 0[ax] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12]
;;  ref usage 	r0={6d,6u} r1={5d} r2={5d} r3={3d,7u} r4={7d,5u} r5={9d,5u} r6={3d,3u} r7={7d,15u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={6d,2u} r18={4d} r19={4d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r41={3d,3u} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} 
;;    total ref usage 374{328d,46u,0e} in 34{30 regular + 4 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	
(note 5 1 58 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 58 5 59 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) lex.yy.c:1655 -1
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn/f 59 58 60 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) lex.yy.c:1655 -1
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 60 59 61 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) lex.yy.c:1655 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(note 61 60 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 61 3 2 (set (reg/v/f:DI 41 r12 [orig:92 file ] [92])
        (reg:DI 5 di [ file ])) lex.yy.c:1655 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ file ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:SI 6 bp [orig:93 size ] [93])
        (reg:SI 4 si [ size ])) lex.yy.c:1655 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ size ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 4 8 2 (var_location:DI size (const_int 64 [0x40])) -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (const_int 64 [0x40])) lex.yy.c:2123 89 {*movdi_internal}
     (nil))
(call_insn 9 8 12 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(debug_insn 12 9 13 2 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1658 -1
     (nil))
(debug_insn 13 12 14 2 (var_location:DI b (clobber (const_int 0 [0]))) lex.yy.c:1658 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [94])
            (const_int 0 [0]))) lex.yy.c:1659 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 15 14 32 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 20)
            (pc))) lex.yy.c:1659 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 20)
;;  succ:       3 [0.0%]  (FALLTHRU)
;;              4 [100.0%] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12]

;; basic block 3, loop depth 0, count 0, freq 8
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       2 [0.0%]  (FALLTHRU)
;;              4 [0.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 32 15 16 3 76 "" [1 uses])
(note 16 32 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f88bbf1aa20 *.LC9>)) lex.yy.c:1660 89 {*movdi_internal}
     (nil))
(call_insn 18 17 19 3 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1660 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 19 18 20)
;; basic block 4, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 17 [flags]
;; live  kill	
(code_label 20 19 21 4 75 "" [1 uses])
(note 21 20 62 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 62 21 22 4 (set (reg/f:DI 3 bx [94])
        (reg:DI 0 ax)) -1
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 22 62 23 4 (set (reg:DI 4 si [orig:88 D.6665 ] [88])
        (sign_extend:DI (reg/v:SI 6 bp [orig:93 size ] [93]))) lex.yy.c:1662 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg/v:SI 6 bp [orig:93 size ] [93])
        (nil)))
(insn 23 22 24 4 (set (mem:DI (plus:DI (reg/f:DI 3 bx [94])
                (const_int 24 [0x18])) [4 MEM[(struct yy_buffer_state *)_14].yy_buf_size+0 S8 A64])
        (reg:DI 4 si [orig:88 D.6665 ] [88])) lex.yy.c:1662 89 {*movdi_internal}
     (nil))
(debug_insn 24 23 57 4 (var_location:DI size (plus:DI (reg:DI 4 si [orig:88 D.6665 ] [88])
        (const_int 2 [0x2]))) lex.yy.c:1667 -1
     (nil))
(insn 57 24 27 4 (set (reg:DI 5 di [orig:95 D.6665 ] [95])
        (plus:DI (reg:DI 4 si [orig:88 D.6665 ] [88])
            (const_int 2 [0x2]))) lex.yy.c:2123 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:88 D.6665 ] [88])
        (nil)))
(call_insn 27 57 30 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(debug_insn 30 27 31 4 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1667 -1
     (nil))
(insn 31 30 33 4 (set (mem/f:DI (plus:DI (reg/f:DI 3 bx [94])
                (const_int 8 [0x8])) [1 MEM[(struct yy_buffer_state *)_14].yy_ch_buf+0 S8 A64])
        (reg/f:DI 0 ax [96])) lex.yy.c:1667 89 {*movdi_internal}
     (nil))
(insn 33 31 34 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [96])
            (const_int 0 [0]))) lex.yy.c:1668 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [96])
        (nil)))
(jump_insn 34 33 35 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 32)
            (pc))) lex.yy.c:1668 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 32)
;;  succ:       3 [0.0%] 
;;              5 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 7 [sp] 41 [r12]

;; basic block 5, loop depth 0, count 0, freq 9992, maybe hot
;;  prev block 4, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       4 [100.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  kill	
(note 35 34 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 5 (set (mem:SI (plus:DI (reg/f:DI 3 bx [94])
                (const_int 36 [0x24])) [2 MEM[(struct yy_buffer_state *)_14].yy_is_our_buffer+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:1671 90 {*movsi_internal}
     (nil))
(insn 37 36 38 5 (set (reg:DI 4 si)
        (reg/v/f:DI 41 r12 [orig:92 file ] [92])) lex.yy.c:1673 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:92 file ] [92])
        (nil)))
(insn 38 37 39 5 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [94])) lex.yy.c:1673 89 {*movdi_internal}
     (nil))
(call_insn 39 38 44 5 (call (mem:QI (symbol_ref:DI ("_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c948 yy_init_buffer>) [0 yy_init_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:1673 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c948 yy_init_buffer>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 44 39 45 5 (set (reg/i:DI 0 ax)
        (reg/f:DI 3 bx [94])) lex.yy.c:1676 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [94])
        (nil)))
(insn 45 44 65 5 (use (reg/i:DI 0 ax)) lex.yy.c:1676 -1
     (nil))
(note 65 45 66 5 NOTE_INSN_EPILOGUE_BEG)
(insn/f 66 65 67 5 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1676 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 67 66 68 5 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1676 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 68 67 69 5 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1676 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn 69 68 70 5 (simple_return) lex.yy.c:1676 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

(barrier 70 69 56)
(note 56 70 0 NOTE_INSN_DELETED)

;; Function void yyrestart(FILE*) (_Z9yyrestartP8_IO_FILE, funcdef_no=91, decl_uid=4252, cgraph_uid=91, symbol_order=118)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Splitting with gen_peephole2_5748
scanning new insn with uid = 87.
deleting insn with uid = 4.
verify found no changes in insn with uid = 87.
starting the processing of deferred insns
ending the processing of deferred insns


void yyrestart(FILE*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={11d,13u,1e} r1={11d,8u,1e} r2={5d,1u} r3={3d,3u} r4={6d,2u} r5={8d,4u} r6={3d,3u} r7={7d,17u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={9d,3u} r18={3d} r19={3d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} 
;;    total ref usage 327{271d,54u,2e} in 45{42 regular + 3 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(note 5 1 75 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 75 5 76 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) lex.yy.c:1593 -1
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 76 75 77 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) lex.yy.c:1593 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f 77 76 78 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) lex.yy.c:1593 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (nil))))
(note 78 77 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 78 3 2 (set (reg/v/f:DI 3 bx [orig:112 input_file ] [112])
        (reg:DI 5 di [ input_file ])) lex.yy.c:1593 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ input_file ])
        (nil)))
(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 3 8 2 (set (reg/f:DI 0 ax [orig:87 D.6669 ] [87])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1595 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:87 D.6669 ] [87])
            (const_int 0 [0]))) lex.yy.c:1595 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 15)
            (pc))) lex.yy.c:1595 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 672 (nil)))
 -> 15)
;;  succ:       4 [6.7%] 
;;              3 [93.3%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 9328, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       2 [93.3%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 1 [dx] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 7 [sp]
;; live  gen 	 1 [dx] 5 [di] 17 [flags]
;; live  kill	
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 3 (set (reg:DI 1 dx [orig:113 yy_buffer_stack_top ] [113])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1595 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 12 11 13 3 (set (reg/f:DI 5 di [orig:91 D.6671 ] [91])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:113 yy_buffer_stack_top ] [113])
                    (const_int 8 [0x8]))
                (reg/f:DI 0 ax [orig:87 D.6669 ] [87])) [1 *_7+0 S8 A64])) lex.yy.c:1595 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:113 yy_buffer_stack_top ] [113])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:87 D.6669 ] [87])
            (nil))))
(insn 13 12 14 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:91 D.6671 ] [91])
            (const_int 0 [0]))) lex.yy.c:1595 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 14 13 15 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 35)
            (pc))) lex.yy.c:1595 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8500 (nil)))
 -> 35)
;;  succ:       4 [15.0%]  (FALLTHRU)
;;              6 [85.0%] 
;; lr  out 	 3 [bx] 5 [di] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 2071, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [15.0%]  (FALLTHRU)
;;              2 [6.7%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 17 [flags]
;; live  kill	
(code_label 15 14 16 4 82 "" [1 uses])
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 17 16 19 4 (call (mem:QI (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>) [0 yyensure_buffer_stack S1 A8])
        (const_int 0 [0])) lex.yy.c:1596 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>)
        (nil))
    (nil))
(note 19 17 20 4 NOTE_INSN_DELETED)
(insn 20 19 73 4 (set (reg/f:DI 0 ax [orig:116 yy_buffer_stack ] [116])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1597 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (nil)))
(insn 73 20 21 4 (set (reg:DI 1 dx [orig:115 yy_buffer_stack_top ] [115])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1597 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 21 73 22 4 (set (reg/f:DI 6 bp [orig:95 D.6669 ] [95])
        (plus:DI (mult:DI (reg:DI 1 dx [orig:115 yy_buffer_stack_top ] [115])
                (const_int 8 [0x8]))
            (reg/f:DI 0 ax [orig:116 yy_buffer_stack ] [116]))) lex.yy.c:1597 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:115 yy_buffer_stack_top ] [115])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:116 yy_buffer_stack ] [116])
            (nil))))
(insn 22 21 23 4 (set (reg:SI 4 si)
        (const_int 16384 [0x4000])) lex.yy.c:1598 90 {*movsi_internal}
     (nil))
(insn 23 22 24 4 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1598 89 {*movdi_internal}
     (nil))
(call_insn 24 23 26 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>) [0 yy_create_buffer S1 A8])
            (const_int 0 [0]))) lex.yy.c:1598 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 26 24 27 4 (set (mem/f:DI (reg/f:DI 6 bp [orig:95 D.6669 ] [95]) [1 *_13+0 S8 A64])
        (reg/f:DI 0 ax [orig:97 D.6671 ] [97])) lex.yy.c:1598 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [orig:95 D.6669 ] [95])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:97 D.6671 ] [97])
            (nil))))
(insn 27 26 87 4 (set (reg/f:DI 0 ax [orig:98 D.6669 ] [98])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1601 89 {*movdi_internal}
     (nil))
(insn 87 27 28 4 (parallel [
            (set (reg/f:DI 5 di [orig:91 D.6671 ] [91])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1601 -1
     (nil))
(insn 28 87 29 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:98 D.6669 ] [98])
            (const_int 0 [0]))) lex.yy.c:1601 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 29 28 30 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 35)
            (pc))) lex.yy.c:1601 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4896 (nil)))
 -> 35)
;;  succ:       5 [51.0%]  (FALLTHRU)
;;              6 [49.0%] 
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 7 [sp]

;; basic block 5, loop depth 0, count 0, freq 1057, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       4 [51.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 1 [dx] 5 [di]
;; live  in  	 0 [ax] 3 [bx] 7 [sp]
;; live  gen 	 1 [dx] 5 [di]
;; live  kill	
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 5 (set (reg:DI 1 dx [orig:117 yy_buffer_stack_top ] [117])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 32 31 35 5 (set (reg/f:DI 5 di [orig:91 D.6671 ] [91])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:117 yy_buffer_stack_top ] [117])
                    (const_int 8 [0x8]))
                (reg/f:DI 0 ax [orig:98 D.6669 ] [98])) [1 *_50+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:117 yy_buffer_stack_top ] [117])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:98 D.6669 ] [98])
            (nil))))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 7 [sp]

;; basic block 6, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 5, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       4 [49.0%] 
;;              5 [100.0%]  (FALLTHRU)
;;              3 [85.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 3 [bx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
(code_label 35 32 36 6 84 "" [2 uses])
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 39 6 (set (reg:DI 4 si)
        (reg/v/f:DI 3 bx [orig:112 input_file ] [112])) lex.yy.c:1601 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:112 input_file ] [112])
        (nil)))
(call_insn 39 37 41 6 (call (mem:QI (symbol_ref:DI ("_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c948 yy_init_buffer>) [0 yy_init_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:1601 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_init_bufferP15yy_buffer_stateP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c948 yy_init_buffer>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(note 41 39 42 6 NOTE_INSN_DELETED)
(insn 42 41 72 6 (set (reg/f:DI 0 ax [orig:120 yy_buffer_stack ] [120])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1642 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (nil)))
(insn 72 42 43 6 (set (reg:DI 1 dx [orig:119 yy_buffer_stack_top ] [119])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1642 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 43 72 44 6 (set (reg/f:DI 1 dx [orig:102 D.6669 ] [102])
        (plus:DI (mult:DI (reg:DI 1 dx [orig:119 yy_buffer_stack_top ] [119])
                (const_int 8 [0x8]))
            (reg/f:DI 0 ax [orig:120 yy_buffer_stack ] [120]))) lex.yy.c:1642 214 {*leadi}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:120 yy_buffer_stack ] [120])
        (nil)))
(insn 44 43 45 6 (set (reg/f:DI 0 ax [orig:103 D.6671 ] [103])
        (mem/f:DI (reg/f:DI 1 dx [orig:102 D.6669 ] [102]) [1 *_29+0 S8 A64])) lex.yy.c:1642 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 1 dx [orig:102 D.6669 ] [102]) [1 *_29+0 S8 A64])
        (nil)))
(insn 45 44 46 6 (set (reg:SI 2 cx [orig:121 _30->yy_n_chars ] [121])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:103 D.6671 ] [103])
                (const_int 32 [0x20])) [2 _30->yy_n_chars+0 S4 A64])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 0 ax [orig:103 D.6671 ] [103])
                (const_int 32 [0x20])) [2 _30->yy_n_chars+0 S4 A64])
        (nil)))
(insn 46 45 47 6 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 2 cx [orig:121 _30->yy_n_chars ] [121])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:121 _30->yy_n_chars ] [121])
        (nil)))
(insn 47 46 48 6 (set (reg/f:DI 0 ax [orig:105 D.6674 ] [105])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:103 D.6671 ] [103])
                (const_int 16 [0x10])) [1 _30->yy_buf_pos+0 S8 A64])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 48 47 49 6 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 0 ax [orig:105 D.6674 ] [105])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 49 48 50 6 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 0 ax [orig:105 D.6674 ] [105])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 50 49 51 6 (set (reg/f:DI 1 dx [orig:122 *_29 ] [122])
        (mem/f:DI (reg/f:DI 1 dx [orig:102 D.6669 ] [102]) [1 *_29+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (nil))
(insn 51 50 52 6 (set (reg/f:DI 1 dx [orig:123 _33->yy_input_file ] [123])
        (mem/f:DI (reg/f:DI 1 dx [orig:122 *_29 ] [122]) [1 _33->yy_input_file+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (nil)))
(insn 52 51 53 6 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 1 dx [orig:123 _33->yy_input_file ] [123])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:123 _33->yy_input_file ] [123])
        (nil)))
(insn 53 52 54 6 (set (reg:QI 0 ax [orig:124 *_32 ] [124])
        (mem:QI (reg/f:DI 0 ax [orig:105 D.6674 ] [105]) [0 *_32+0 S1 A8])) lex.yy.c:1645 93 {*movqi_internal}
     (expr_list:REG_EQUIV (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (nil)))
(insn 54 53 81 6 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 0 ax [orig:124 *_32 ] [124])) lex.yy.c:1645 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:124 *_32 ] [124])
        (nil)))
(note 81 54 82 6 NOTE_INSN_EPILOGUE_BEG)
(insn/f 82 81 83 6 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) lex.yy.c:1603 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn/f 83 82 84 6 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1603 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 84 83 85 6 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1603 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn 85 84 86 6 (simple_return) lex.yy.c:1603 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

(barrier 86 85 74)
(note 74 86 0 NOTE_INSN_DELETED)

;; Function void yypush_buffer_state(YY_BUFFER_STATE) (_Z19yypush_buffer_stateP15yy_buffer_state, funcdef_no=98, decl_uid=4263, cgraph_uid=98, symbol_order=125)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 9 (    1)


void yypush_buffer_state(YY_BUFFER_STATE)

Dataflow summary:
def_info->table_size = 112, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 3 [bx] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={10d,10u,1e} r1={6d,7u} r2={3d,3u} r3={3d,5u,1e} r4={3d,2u} r5={4d,5u} r7={3d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={6d,3u} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={4d,2u} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 166{116d,48u,2e} in 40{39 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(7){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 7 [sp]

( 0 )->[2]->( 8 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 7 [sp]

( 2 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 3 [bx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 7 [sp]

( 3 )->[4]->( 7 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 3 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 7 [sp]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

( 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 5 [di] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 37 [r8]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

( 6 5 4 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 7 [sp]
;; live  in  	 0 [ax] 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 7 [sp]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 7 2 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(3){ }u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 7 to worklist
  Adding insn 12 to worklist
  Adding insn 9 to worklist
  Adding insn 68 to worklist
  Adding insn 83 to worklist
  Adding insn 24 to worklist
  Adding insn 35 to worklist
  Adding insn 33 to worklist
  Adding insn 30 to worklist
  Adding insn 28 to worklist
  Adding insn 50 to worklist
  Adding insn 48 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 42 to worklist
  Adding insn 40 to worklist
  Adding insn 79 to worklist
Finished finding needed instructions:
processing block 8 lr out =  3 [bx] 7 [sp]
processing block 7 lr out =  3 [bx] 7 [sp]
  Adding insn 78 to worklist
  Adding insn 49 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
  Adding insn 43 to worklist
  Adding insn 41 to worklist
processing block 6 lr out =  0 [ax] 3 [bx] 7 [sp]
  Adding insn 37 to worklist
  Adding insn 34 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 29 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
processing block 5 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
  Adding insn 23 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 20 to worklist
processing block 4 lr out =  0 [ax] 3 [bx] 7 [sp]
  Adding insn 15 to worklist
  Adding insn 65 to worklist
processing block 3 lr out =  2 [cx] 3 [bx] 7 [sp]
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 63 to worklist
processing block 2 lr out =  3 [bx] 5 [di] 7 [sp]
  Adding insn 6 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 9 (    1)
starting the processing of deferred insns
ending the processing of deferred insns


void yypush_buffer_state(YY_BUFFER_STATE)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 3 [bx] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 7[sp] 17[flags] 37[r8]
;;  ref usage 	r0={10d,10u,1e} r1={6d,7u} r2={3d,3u} r3={3d,5u,1e} r4={3d,2u} r5={4d,5u} r7={3d,11u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={6d,3u} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={4d,2u} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 166{116d,48u,2e} in 40{39 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 5 di [orig:106 new_buffer ] [106])
            (const_int 0 [0]))) lex.yy.c:1760 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 82)
            (pc))) lex.yy.c:1760 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2164 (nil)))
 -> 82)
;;  succ:       8 [21.6%] 
;;              3 [78.4%]  (FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 7836, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       2 [78.4%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 3 [bx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 2 [cx] 3 [bx] 7 [sp] 17 [flags]
;; live  kill	
(note 8 7 68 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn/f 68 8 69 3 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) lex.yy.c:1759 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(note 69 68 63 3 NOTE_INSN_PROLOGUE_END)
(insn 63 69 9 3 (set (reg/v/f:DI 3 bx [orig:106 new_buffer ] [106])
        (reg/v/f:DI 5 di [orig:106 new_buffer ] [106])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:106 new_buffer ] [106])
        (nil)))
(call_insn 9 63 10 3 (call (mem:QI (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>) [0 yyensure_buffer_stack S1 A8])
        (const_int 0 [0])) lex.yy.c:1763 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>)
        (nil))
    (nil))
(insn 10 9 11 3 (set (reg/f:DI 2 cx [orig:87 D.6678 ] [87])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1766 89 {*movdi_internal}
     (nil))
(insn 11 10 12 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 2 cx [orig:87 D.6678 ] [87])
            (const_int 0 [0]))) lex.yy.c:1766 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 12 11 13 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 18)
            (pc))) lex.yy.c:1766 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8500 (nil)))
 -> 18)
;;  succ:       5 [85.0%] 
;;              4 [15.0%]  (FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 7 [sp]
;; live  out 	 2 [cx] 3 [bx] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 1175, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [15.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(note 14 13 65 4 NOTE_INSN_DELETED)
(insn 65 14 15 4 (set (reg:DI 0 ax [118])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 15 65 83 4 (parallel [
            (set (reg/f:DI 0 ax [orig:103 D.6678 ] [103])
                (ashift:DI (reg:DI 0 ax [118])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) 512 {*ashldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (ashift:DI (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
                (const_int 3 [0x3]))
            (nil))))
(jump_insn 83 15 84 4 (set (pc)
        (label_ref 38)) -1
     (nil)
 -> 38)
;;  succ:       7 [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 84 83 18)
;; basic block 5, loop depth 0, count 0, freq 6661, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       3 [85.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 7 [sp]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 4 [si] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 17 [flags]
;; live  kill	
(code_label 18 84 19 5 93 "" [1 uses])
(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 66 5 (set (reg:DI 1 dx [orig:88 D.6679 ] [88])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1766 89 {*movdi_internal}
     (nil))
(insn 66 20 67 5 (set (reg:DI 4 si [orig:89 D.6679 ] [89])
        (mult:DI (reg:DI 1 dx [orig:88 D.6679 ] [88])
            (const_int 8 [0x8]))) lex.yy.c:1766 214 {*leadi}
     (nil))
(insn 67 66 23 5 (set (reg/f:DI 0 ax [orig:103 D.6678 ] [103])
        (plus:DI (reg/f:DI 2 cx [orig:87 D.6678 ] [87])
            (reg:DI 4 si [orig:89 D.6679 ] [89]))) lex.yy.c:1766 214 {*leadi}
     (nil))
(insn 23 67 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (reg/f:DI 0 ax [orig:103 D.6678 ] [103]) [1 *_10+0 S8 A64])
            (const_int 0 [0]))) lex.yy.c:1766 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 38)
            (pc))) lex.yy.c:1766 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1500 (nil)))
 -> 38)
;;  succ:       6 [85.0%]  (FALLTHRU)
;;              7 [15.0%] 
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]

;; basic block 6, loop depth 0, count 0, freq 5662, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       5 [85.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 5 [di] 17 [flags] 37 [r8]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 37 [r8]
;; live  kill	 17 [flags]
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg/f:DI 5 di [orig:91 D.6681 ] [91])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) lex.yy.c:1769 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (nil)))
(insn 27 26 28 6 (set (reg:QI 37 r8 [orig:108 yy_hold_char ] [108])
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) lex.yy.c:1769 93 {*movqi_internal}
     (expr_list:REG_EQUIV (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (nil)))
(insn 28 27 29 6 (set (mem:QI (reg/f:DI 5 di [orig:91 D.6681 ] [91]) [0 *_12+0 S1 A8])
        (reg:QI 37 r8 [orig:108 yy_hold_char ] [108])) lex.yy.c:1769 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 37 r8 [orig:108 yy_hold_char ] [108])
        (nil)))
(insn 29 28 30 6 (set (reg/f:DI 37 r8 [orig:93 D.6680 ] [93])
        (mem/f:DI (reg/f:DI 0 ax [orig:103 D.6678 ] [103]) [1 *_10+0 S8 A64])) lex.yy.c:1770 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 0 ax [orig:103 D.6678 ] [103]) [1 *_10+0 S8 A64])
        (nil)))
(insn 30 29 31 6 (set (mem/f:DI (plus:DI (reg/f:DI 37 r8 [orig:93 D.6680 ] [93])
                (const_int 16 [0x10])) [1 _15->yy_buf_pos+0 S8 A64])
        (reg/f:DI 5 di [orig:91 D.6681 ] [91])) lex.yy.c:1770 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 37 r8 [orig:93 D.6680 ] [93])
        (expr_list:REG_DEAD (reg/f:DI 5 di [orig:91 D.6681 ] [91])
            (nil))))
(insn 31 30 32 6 (set (reg/f:DI 0 ax [orig:109 *_10 ] [109])
        (mem/f:DI (reg/f:DI 0 ax [orig:103 D.6678 ] [103]) [1 *_10+0 S8 A64])) lex.yy.c:1771 89 {*movdi_internal}
     (nil))
(insn 32 31 33 6 (set (reg:SI 5 di [orig:110 yy_n_chars ] [110])
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) lex.yy.c:1771 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (nil)))
(insn 33 32 34 6 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:109 *_10 ] [109])
                (const_int 32 [0x20])) [2 _17->yy_n_chars+0 S4 A64])
        (reg:SI 5 di [orig:110 yy_n_chars ] [110])) lex.yy.c:1771 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [orig:110 yy_n_chars ] [110])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:109 *_10 ] [109])
            (nil))))
(insn 34 33 35 6 (parallel [
            (set (reg:DI 1 dx [111])
                (plus:DI (reg:DI 1 dx [orig:88 D.6679 ] [88])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1776 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
            (nil))))
(insn 35 34 36 6 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (reg:DI 1 dx [111])) lex.yy.c:1776 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [111])
        (nil)))
(note 36 35 37 6 NOTE_INSN_DELETED)
(insn 37 36 38 6 (set (reg/f:DI 0 ax [orig:103 D.6678 ] [103])
        (plus:DI (plus:DI (reg/f:DI 2 cx [orig:87 D.6678 ] [87])
                (reg:DI 4 si [orig:89 D.6679 ] [89]))
            (const_int 8 [0x8]))) 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:89 D.6679 ] [89])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:87 D.6678 ] [87])
            (nil))))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

;; basic block 7, loop depth 0, count 0, freq 7836, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       6 [100.0%]  (FALLTHRU)
;;              5 [15.0%] 
;;              4 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 7 [sp]
;; live  in  	 0 [ax] 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 7 [sp]
;; live  kill	
(code_label 38 37 39 7 94 "" [2 uses])
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 7 (set (mem/f:DI (reg/f:DI 0 ax [orig:103 D.6678 ] [103]) [1 *_41+0 S8 A64])
        (reg/v/f:DI 3 bx [orig:106 new_buffer ] [106])) lex.yy.c:1777 89 {*movdi_internal}
     (nil))
(insn 41 40 42 7 (set (reg:SI 1 dx [orig:113 new_buffer_4(D)->yy_n_chars ] [113])
        (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:106 new_buffer ] [106])
                (const_int 32 [0x20])) [2 new_buffer_4(D)->yy_n_chars+0 S4 A64])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/v/f:DI 3 bx [orig:106 new_buffer ] [106])
                (const_int 32 [0x20])) [2 new_buffer_4(D)->yy_n_chars+0 S4 A64])
        (nil)))
(insn 42 41 43 7 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 1 dx [orig:113 new_buffer_4(D)->yy_n_chars ] [113])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:113 new_buffer_4(D)->yy_n_chars ] [113])
        (nil)))
(insn 43 42 44 7 (set (reg/f:DI 1 dx [orig:99 D.6681 ] [99])
        (mem/f:DI (plus:DI (reg/v/f:DI 3 bx [orig:106 new_buffer ] [106])
                (const_int 16 [0x10])) [1 new_buffer_4(D)->yy_buf_pos+0 S8 A64])) lex.yy.c:1643 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:106 new_buffer ] [106])
        (nil)))
(insn 44 43 45 7 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 1 dx [orig:99 D.6681 ] [99])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 45 44 46 7 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 1 dx [orig:99 D.6681 ] [99])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 46 45 47 7 (set (reg/f:DI 0 ax [orig:114 *_41 ] [114])
        (mem/f:DI (reg/f:DI 0 ax [orig:103 D.6678 ] [103]) [1 *_41+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (nil))
(insn 47 46 48 7 (set (reg/f:DI 0 ax [orig:115 _34->yy_input_file ] [115])
        (mem/f:DI (reg/f:DI 0 ax [orig:114 *_41 ] [114]) [1 _34->yy_input_file+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (nil)))
(insn 48 47 49 7 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 0 ax [orig:115 _34->yy_input_file ] [115])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:115 _34->yy_input_file ] [115])
        (nil)))
(insn 49 48 50 7 (set (reg:QI 0 ax [orig:116 *_33 ] [116])
        (mem:QI (reg/f:DI 1 dx [orig:99 D.6681 ] [99]) [0 *_33+0 S1 A8])) lex.yy.c:1645 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:99 D.6681 ] [99])
        (expr_list:REG_EQUIV (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
            (nil))))
(insn 50 49 77 7 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 0 ax [orig:116 *_33 ] [116])) lex.yy.c:1645 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:116 *_33 ] [116])
        (nil)))
(note 77 50 78 7 NOTE_INSN_EPILOGUE_BEG)
(insn/f 78 77 82 7 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1782 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 3 bx)
            (nil))))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

;; basic block 8, loop depth 0, count 0, freq 7836, maybe hot
;; Invalid sum of incoming frequencies 10000, should be 7836
;;  prev block 7, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       7 [100.0%]  (FALLTHRU)
;;              2 [21.6%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	
;; live  kill	
(code_label 82 78 81 8 100 "" [1 uses])
(note 81 82 79 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 79 81 80 8 (simple_return) lex.yy.c:1782 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 80 79 64)
(note 64 80 0 NOTE_INSN_DELETED)

;; Function void yypop_buffer_state() (_Z18yypop_buffer_statev, funcdef_no=99, decl_uid=4264, cgraph_uid=99, symbol_order=126)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 12 count 9 (    1)


void yypop_buffer_state()

Dataflow summary:
def_info->table_size = 105, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 5[di] 6[bp] 7[sp] 17[flags] 41[r12]
;;  ref usage 	r0={5d,7u,1e} r1={5d,4u} r2={3d,1u} r3={4d,7u} r4={2d} r5={3d,2u} r6={3d,5u} r7={7d,15u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={6d,4u} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r41={3d,4u} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 167{117d,49u,1e} in 37{36 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]

( 0 )->[2]->( 8 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags]
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp]
;; live  out 	 6 [bp] 7 [sp]

( 2 )->[3]->( 4 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 5 [di] 17 [flags] 41 [r12]
;; live  in  	 6 [bp] 7 [sp]
;; live  gen 	 3 [bx] 5 [di] 17 [flags] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]

( 3 )->[4]->( 8 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	

( 7 )->[5]->( 6 8 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 7 [sp]

( 5 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx]
;; live  in  	 0 [ax] 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 3 )->[7]->( 5 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 5 [di] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 4 2 7 5 6 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 7 to worklist
  Adding insn 86 to worklist
  Adding insn 85 to worklist
  Adding insn 84 to worklist
  Adding insn 19 to worklist
  Adding insn 97 to worklist
  Adding insn 30 to worklist
  Adding insn 25 to worklist
  Adding insn 99 to worklist
  Adding insn 41 to worklist
  Adding insn 39 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 33 to worklist
  Adding insn 53 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
  Adding insn 94 to worklist
Finished finding needed instructions:
processing block 8 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12]
  Adding insn 93 to worklist
  Adding insn 92 to worklist
  Adding insn 91 to worklist
processing block 4 lr out =  7 [sp]
processing block 6 lr out =  7 [sp]
  Adding insn 40 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 34 to worklist
  Adding insn 32 to worklist
processing block 5 lr out =  0 [ax] 1 [dx] 7 [sp]
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 24 to worklist
processing block 7 lr out =  3 [bx] 6 [bp] 7 [sp]
  Adding insn 52 to worklist
processing block 3 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
processing block 2 lr out =  6 [bp] 7 [sp]
  Adding insn 6 to worklist
  Adding insn 5 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 12 count 9 (    1)
starting the processing of deferred insns
ending the processing of deferred insns


void yypop_buffer_state()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 5[di] 6[bp] 7[sp] 17[flags] 41[r12]
;;  ref usage 	r0={5d,7u,1e} r1={5d,4u} r2={3d,1u} r3={4d,7u} r4={2d} r5={3d,2u} r6={3d,5u} r7={7d,15u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={6d,4u} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r41={3d,4u} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 167{117d,49u,1e} in 37{36 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags]
;; live  kill	
(note 3 1 84 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 84 3 85 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) lex.yy.c:1789 -1
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn/f 85 84 86 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) lex.yy.c:1789 -1
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 86 85 87 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) lex.yy.c:1789 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(note 87 86 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 87 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 6 bp [orig:88 D.6687 ] [88])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1790 89 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 6 bp [orig:88 D.6687 ] [88])
            (const_int 0 [0]))) lex.yy.c:1790 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 57)
            (pc))) lex.yy.c:1790 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1014 (nil)))
 -> 57)
;;  succ:       8 [10.1%] 
;;              3 [89.9%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp]
;; live  out 	 6 [bp] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 8986, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [89.9%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 3 [bx] 5 [di] 17 [flags] 41 [r12]
;; live  in  	 6 [bp] 7 [sp]
;; live  gen 	 3 [bx] 5 [di] 17 [flags] 41 [r12]
;; live  kill	
(note 12 7 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:DI 3 bx [orig:89 D.6688 ] [89])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1790 89 {*movdi_internal}
     (nil))
(note 14 13 15 3 NOTE_INSN_DELETED)
(insn 15 14 16 3 (set (reg/f:DI 41 r12 [orig:91 D.6687 ] [91])
        (plus:DI (mult:DI (reg:DI 3 bx [orig:89 D.6688 ] [89])
                (const_int 8 [0x8]))
            (reg/f:DI 6 bp [orig:88 D.6687 ] [88]))) lex.yy.c:1790 214 {*leadi}
     (nil))
(insn 16 15 18 3 (set (reg/f:DI 5 di [orig:92 D.6689 ] [92])
        (mem/f:DI (reg/f:DI 41 r12 [orig:91 D.6687 ] [91]) [1 *_8+0 S8 A64])) lex.yy.c:1790 89 {*movdi_internal}
     (nil))
(insn 18 16 19 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:92 D.6689 ] [92])
            (const_int 0 [0]))) lex.yy.c:1790 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 19 18 96 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 77)
            (pc))) lex.yy.c:1790 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8986 (nil)))
 -> 77)
;;  succ:       4 [10.1%]  (FALLTHRU)
;;              7 [89.9%] 
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]

;; basic block 4, loop depth 0, count 0, freq 911, maybe hot
;;  prev block 3, next block 5, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [10.1%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(note 96 19 97 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(jump_insn 97 96 98 4 (set (pc)
        (label_ref 57)) -1
     (nil)
 -> 57)
;;  succ:       8 [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 98 97 51)
;; basic block 5, loop depth 0, count 0, freq 4037, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       7 [50.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 51 98 23 5 106 "" [1 uses])
(note 23 51 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (parallel [
            (set (reg:DI 3 bx [orig:94 D.6688 ] [94])
                (plus:DI (reg:DI 3 bx [orig:89 D.6688 ] [89])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1796 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 25 24 26 5 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (reg:DI 3 bx [orig:94 D.6688 ] [94])) lex.yy.c:1796 89 {*movdi_internal}
     (nil))
(note 26 25 27 5 NOTE_INSN_DELETED)
(insn 27 26 28 5 (set (reg/f:DI 1 dx [orig:87 D.6687 ] [87])
        (plus:DI (mult:DI (reg:DI 3 bx [orig:94 D.6688 ] [94])
                (const_int 8 [0x8]))
            (reg/f:DI 6 bp [orig:88 D.6687 ] [88]))) 214 {*leadi}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [orig:88 D.6687 ] [88])
        (expr_list:REG_DEAD (reg:DI 3 bx [orig:94 D.6688 ] [94])
            (nil))))
(insn 28 27 29 5 (set (reg/f:DI 0 ax [orig:95 D.6689 ] [95])
        (mem/f:DI (reg/f:DI 1 dx [orig:87 D.6687 ] [87]) [1 *_1+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 29 28 30 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:95 D.6689 ] [95])
            (const_int 0 [0]))) lex.yy.c:1798 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 30 29 31 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 57)
            (pc))) lex.yy.c:1798 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 0 (nil)))
 -> 57)
;;  succ:       6 [100.0%]  (FALLTHRU)
;;              8
;; lr  out 	 0 [ax] 1 [dx] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 7 [sp]

;; basic block 6, loop depth 0, count 0, freq 6520, maybe hot
;; Invalid sum of incoming frequencies 4037, should be 6520
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx]
;; live  in  	 0 [ax] 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 6 (set (reg:SI 2 cx [orig:103 _23->yy_n_chars ] [103])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:95 D.6689 ] [95])
                (const_int 32 [0x20])) [2 _23->yy_n_chars+0 S4 A64])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 0 ax [orig:95 D.6689 ] [95])
                (const_int 32 [0x20])) [2 _23->yy_n_chars+0 S4 A64])
        (nil)))
(insn 33 32 34 6 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 2 cx [orig:103 _23->yy_n_chars ] [103])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:103 _23->yy_n_chars ] [103])
        (nil)))
(insn 34 33 35 6 (set (reg/f:DI 0 ax [orig:97 D.6691 ] [97])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:95 D.6689 ] [95])
                (const_int 16 [0x10])) [1 _23->yy_buf_pos+0 S8 A64])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 35 34 36 6 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 0 ax [orig:97 D.6691 ] [97])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 36 35 37 6 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 0 ax [orig:97 D.6691 ] [97])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 37 36 38 6 (set (reg/f:DI 1 dx [orig:104 *_1 ] [104])
        (mem/f:DI (reg/f:DI 1 dx [orig:87 D.6687 ] [87]) [1 *_1+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (nil))
(insn 38 37 39 6 (set (reg/f:DI 1 dx [orig:105 _26->yy_input_file ] [105])
        (mem/f:DI (reg/f:DI 1 dx [orig:104 *_1 ] [104]) [1 _26->yy_input_file+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (nil)))
(insn 39 38 40 6 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 1 dx [orig:105 _26->yy_input_file ] [105])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:105 _26->yy_input_file ] [105])
        (nil)))
(insn 40 39 41 6 (set (reg:QI 0 ax [orig:106 *_25 ] [106])
        (mem:QI (reg/f:DI 0 ax [orig:97 D.6691 ] [97]) [0 *_25+0 S1 A8])) lex.yy.c:1645 93 {*movqi_internal}
     (expr_list:REG_EQUIV (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (nil)))
(insn 41 40 99 6 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 0 ax [orig:106 *_25 ] [106])) lex.yy.c:1645 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:106 *_25 ] [106])
        (nil)))
(jump_insn 99 41 100 6 (set (pc)
        (label_ref 57)) -1
     (nil)
 -> 57)
;;  succ:       8 [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 100 99 77)
;; basic block 7, loop depth 0, count 0, freq 8075, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       3 [89.9%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 5 [di] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 77 100 47 7 113 "" [1 uses])
(note 47 77 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(call_insn 49 47 50 7 (call (mem:QI (symbol_ref:DI ("_Z16yy_delete_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c438 yy_delete_buffer>) [0 yy_delete_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:1793 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_delete_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c438 yy_delete_buffer>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 50 49 52 7 (set (mem/f:DI (reg/f:DI 41 r12 [orig:91 D.6687 ] [91]) [1 *_8+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:1794 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:91 D.6687 ] [91])
        (nil)))
(insn 52 50 53 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 3 bx [orig:89 D.6688 ] [89])
            (const_int 0 [0]))) lex.yy.c:1795 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 53 52 57 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) lex.yy.c:1795 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 51)
;;  succ:       5 [50.0%] 
;;              8 [50.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

;; basic block 8, loop depth 0, count 0, freq 10000, maybe hot
;; Invalid sum of incoming frequencies 12483, should be 10000
;;  prev block 7, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       4 [100.0%] 
;;              2 [10.1%] 
;;              7 [50.0%]  (FALLTHRU)
;;              5
;;              6 [100.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  kill	
(code_label 57 53 58 8 101 "" [4 uses])
(note 58 57 90 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(note 90 58 91 8 NOTE_INSN_EPILOGUE_BEG)
(insn/f 91 90 92 8 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1802 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 92 91 93 8 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1802 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 93 92 94 8 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1802 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn 94 93 95 8 (simple_return) lex.yy.c:1802 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]

(barrier 95 94 83)
(note 83 95 0 NOTE_INSN_DELETED)

;; Function int yylex() (_Z5yylexv, funcdef_no=85, decl_uid=5394, cgraph_uid=85, symbol_order=112)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 169 n_edges 261 count 344 (    2)


int yylex()

Dataflow summary:
def_info->table_size = 2914, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 39[r10] 40[r11] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={108d,126u,2e} r1={98d,86u,2e} r2={64d,33u} r3={51d,38u,1e} r4={67d,35u} r5={76d,49u,1e} r6={10d,24u} r7={15d,237u} r8={33d} r9={33d} r10={33d} r11={33d} r12={33d} r13={33d} r14={33d} r15={33d} r17={123d,61u,1e} r18={33d} r19={33d} r21={31d} r22={31d} r23={31d} r24={31d} r25={31d} r26={31d} r27={31d} r28={31d} r29={30d} r30={30d} r31={30d} r32={30d} r33={30d} r34={30d} r35={30d} r36={30d} r37={34d} r38={34d} r39={42d,14u,1e} r40={36d,8u} r41={6d,9u} r42={3d,4u} r43={15d,40u} r44={10d,18u,5e} r45={30d} r46={30d} r47={30d} r48={30d} r49={30d} r50={30d} r51={30d} r52={30d} r53={33d} r54={33d} r55={33d} r56={33d} r57={33d} r58={33d} r59={33d} r60={33d} r61={33d} r62={33d} r63={33d} r64={33d} r65={33d} r66={33d} r67={33d} r68={33d} r69={33d} r70={33d} r71={33d} r72={33d} r73={33d} r74={33d} r75={33d} r76={33d} r77={33d} r78={33d} r79={33d} r80={33d} 
;;    total ref usage 3569{2774d,782u,13e} in 807{774 regular + 33 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }d-1(42){ }d-1(43){ }d-1(44){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp] 43 [r14] 44 [r15]

( 2 )->[3]->( 14 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 4 [si]
;; live  in  	 7 [sp] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx] 4 [si]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp] 43 [r14] 44 [r15]

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 7 [sp] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp] 43 [r14] 44 [r15]

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp] 43 [r14] 44 [r15]

( 4 5 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 7 [sp] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp] 43 [r14] 44 [r15]

( 6 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp] 43 [r14] 44 [r15]

( 6 7 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 7 [sp] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp] 43 [r14] 44 [r15]

( 8 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp] 43 [r14] 44 [r15]

( 8 9 )->[10]->( 12 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 7 [sp] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp] 43 [r14] 44 [r15]

( 10 )->[11]->( 12 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 7 [sp] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 7 [sp] 43 [r14] 44 [r15]

( 11 10 )->[12]->( 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 7 [sp] 43 [r14] 44 [r15]

( 11 12 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 3 [bx] 4 [si]
;; live  in  	 0 [ax] 1 [dx] 7 [sp] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 4 [si]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp] 43 [r14] 44 [r15]

( 13 3 )->[14]->( 17 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 42 [r13]
;; live  in  	 3 [bx] 4 [si] 7 [sp] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 42 [r13]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 51 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx]
;; live  in  	 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 47 45 15 92 49 46 93 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 4 [si]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx] 4 [si]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 16 14 43 )->[17]->( 19 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; lr  use 	 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 41 [r12]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 41 [r12]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 104 151 )->[18]->( 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 4 [si]
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 2 [cx] 4 [si]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 18 17 )->[19]->( 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di] 6 [bp] 39 [r10] 40 [r11]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 6 [bp] 39 [r10] 40 [r11]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 19 26 )->[20]->( 22 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 42 [r13]
;; lr  def 	 2 [cx] 5 [di] 6 [bp] 17 [flags] 39 [r10] 40 [r11]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx] 5 [di] 6 [bp] 17 [flags] 39 [r10] 40 [r11]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 23 24 )->[21]->( 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 21 20 )->[22]->( 25 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;; lr  def 	 1 [dx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 22 )->[23]->( 24 21 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 23 )->[24]->( 21 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 2 [cx]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx]
;; live  kill	
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 22 )->[25]->( 27 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 25 )->[26]->( 20 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 2 [cx] 3 [bx] 7 [sp]
;; lr  def 	 2 [cx] 4 [si]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx] 4 [si]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 25 )->[27]->( 29 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 27 )->[28]->( 29 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 28 27 )->[29]->( 31 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 40 [r11]
;; lr  def 	 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 7 [sp] 39 [r10] 41 [r12] 42 [r13]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 29 )->[30]->( 31 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 7 [sp] 39 [r10] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 39 [r10]
;; lr  def 	
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 30 29 )->[31]->( 32 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 31 102 44 103 152 )->[32]->( 33 34 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 32 )->[33]->( 34 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 32 33 )->[34]->( 35 40 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 34 )->[35]->( 36 40 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 35 )->[36]->( 40 37 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 2 [cx] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 36 39 )->[37]->( 38 39 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 37 )->[38]->( 39 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 37 38 )->[39]->( 40 37 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 39 36 34 35 150 )->[40]->( 153 41 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 40 )->[41]->( 91 44 45 43 50 46 49 47 94 48 93 92 53 56 60 63 64 66 67 154 155 42 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[42]->( 157 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[43]->( 17 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si]
;; live  in  	 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[44]->( 32 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[45]->( 16 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx]
;; live  in  	 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[46]->( 16 )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[47]->( 16 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx]
;; live  in  	 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[48]->( 49 )
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 7 [sp] 42 [r13]
;; live  out 	 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 48 41 )->[49]->( 16 )
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx]
;; live  in  	 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[50]->( 156 51 )
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 50 )->[51]->( 52 15 )
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
;; lr  out 	 7 [sp] 42 [r13]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 51 )->[52]->( 156 )
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	

( 41 )->[53]->( 54 55 )
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 53 )->[54]->( 55 )
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 53 54 )->[55]->( 157 )
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[56]->( 61 )
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx] 4 [si]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 4 [si]
;; live  kill	
;; lr  out 	 1 [dx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 61 )->[57]->( 58 59 )
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 57 )->[58]->( 157 )
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 57 )->[59]->( 157 )
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[60]->( 61 )
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx] 4 [si]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 4 [si]
;; live  kill	
;; lr  out 	 1 [dx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 60 56 63 )->[61]->( 62 57 )
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 7 [sp]
;; lr  use 	 1 [dx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 61 )->[62]->( 65 )
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	

( 41 )->[63]->( 61 )
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx] 4 [si]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 4 [si]
;; live  kill	
;; lr  out 	 1 [dx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[64]->( 65 )
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 64 62 )->[65]->( 157 )
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[66]->( 157 )
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[67]->( 68 157 )
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 67 )->[68]->( 157 )
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[69]->( 157 )
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[70]->( 157 )
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[71]->( 157 )
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[72]->( 157 )
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[73]->( 157 )
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[74]->( 157 )
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[75]->( 157 )
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[76]->( 157 )
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[77]->( 157 )
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[78]->( 157 )
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[79]->( 157 )
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[80]->( 157 )
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[81]->( 157 )
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[82]->( 157 )
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[83]->( 157 )
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[84]->( 157 )
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[85]->( 157 )
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[86]->( 157 )
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[87]->( 157 )
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[88]->( 157 )
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[89]->( 157 )
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[90]->( 157 )
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[91]->( 157 )
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[92]->( 16 )
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[93]->( 16 )
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[94]->( 96 95 )
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 4 [si] 17 [flags] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 2 [cx] 4 [si] 17 [flags] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 94 )->[95]->( 97 )
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 94 )->[96]->( 97 )
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 5 [di] 43 [r14]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 43 [r14]
;; live  kill	
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 96 95 )->[97]->( 98 105 )
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 6 [bp] 17 [flags] 39 [r10] 40 [r11]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 6 [bp] 17 [flags] 39 [r10] 40 [r11]
;; live  kill	
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 97 )->[98]->( 99 100 )
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 98 )->[99]->( 100 )
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 98 99 )->[100]->( 102 101 )
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 2 [cx] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 100 101 )->[101]->( 102 101 )
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 101 100 )->[102]->( 103 32 )
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 7 [sp] 42 [r13]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags] 41 [r12]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 102 )->[103]->( 104 32 )
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 103 )->[104]->( 18 )
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 3 [bx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 97 )->[105]->( 106 107 )
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 39 [r10] 40 [r11]
;; lr  def 	 5 [di] 17 [flags] 39 [r10]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags] 39 [r10]
;; live  kill	
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 105 )->[106]->( )
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 105 )->[107]->( 108 110 )
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 107 )->[108]->( 149 109 )
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 108 )->[109]->( 152 )
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 107 )->[110]->( 114 111 )
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 5 [di] 7 [sp]
;; lr  def 	 6 [bp] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 6 [bp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 110 )->[111]->( 112 )
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 44 [r15]

( 111 112 )->[112]->( 113 112 )
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 1 [dx] 5 [di] 6 [bp] 7 [sp] 40 [r11]
;; lr  def 	 1 [dx] 17 [flags] 39 [r10]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 17 [flags] 39 [r10]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 44 [r15]

( 112 )->[113]->( 114 )
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 43 [r14]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 43 [r14]
;; live  kill	
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 113 110 )->[114]->( 115 125 )
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 114 )->[115]->( 139 )
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

( 125 )->[116]->( 117 122 )
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 116 )->[117]->( 118 119 )
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 117 )->[118]->( 120 )
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 117 )->[119]->( 120 )
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 43 [r14]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 119 118 )->[120]->( 121 124 )
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 5 [di] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 120 )->[121]->( 123 )
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	

( 116 )->[122]->( 123 )
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 43 [r14]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 122 121 )->[123]->( )
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 120 )->[124]->( 125 )
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 43 [r14]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 43 [r14]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 124 114 )->[125]->( 126 116 )
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 125 )->[126]->( 127 133 )
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 126 )->[127]->( 128 )
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 43 [r14]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 43 [r14]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 127 159 )->[128]->( 129 165 )
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 128 )->[129]->( 159 130 )
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

( 129 )->[130]->( 164 )
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	

( 165 163 )->[131]->( )
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 164 160 166 )->[132]->( 138 )
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 1 [dx]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

( 126 )->[133]->( 134 )
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 44 [r15]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 133 137 )->[134]->( 135 161 )
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 134 )->[135]->( 162 136 )
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 135 )->[136]->( 161 )
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

( 162 )->[137]->( 134 )
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 43 [r14]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 132 161 )->[138]->( 139 142 )
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp] 44 [r15]
;; lr  def 	 17 [flags] 39 [r10] 43 [r14]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags] 39 [r10] 43 [r14]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 138 115 )->[139]->( 140 141 )
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

( 139 )->[140]->( 142 )
;; bb 140 artificial_defs: { }
;; bb 140 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 5 [di] 39 [r10] 43 [r14] 44 [r15]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 139 )->[141]->( 142 )
;; bb 141 artificial_defs: { }
;; bb 141 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 39 [r10] 43 [r14] 44 [r15]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx] 39 [r10] 43 [r14] 44 [r15]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 138 141 140 )->[142]->( 143 145 )
;; bb 142 artificial_defs: { }
;; bb 142 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 39 [r10]
;; lr  def 	 2 [cx] 6 [bp] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx] 6 [bp] 17 [flags]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 142 )->[143]->( 144 146 )
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 7 [sp] 39 [r10] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 2 [cx] 4 [si] 5 [di] 17 [flags] 39 [r10]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 143 )->[144]->( )
;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 142 )->[145]->( 146 )
;; bb 145 artificial_defs: { }
;; bb 145 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 39 [r10]
;; lr  def 	 0 [ax]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 145 143 )->[146]->( 150 147 )
;; bb 146 artificial_defs: { }
;; bb 146 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 2 [cx] 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 146 )->[147]->( 148 151 )
;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 147 )->[148]->( 152 )
;; bb 148 artificial_defs: { }
;; bb 148 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx]
;; live  kill	 17 [flags]
;; lr  out 	 3 [bx] 7 [sp] 42 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]

( 108 )->[149]->( 150 )
;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 149 146 )->[150]->( 40 )
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 147 )->[151]->( 18 )
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx] 41 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 109 148 )->[152]->( 32 )
;; bb 152 artificial_defs: { }
;; bb 152 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 42 [r13]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 41 [r12]
;; live  kill	
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 40 )->[153]->( )
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[154]->( 157 )
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 41 )->[155]->( 157 )
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 50 52 )->[156]->( 157 )
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 3 [bx]
;; live  kill	
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 55 89 154 42 67 58 59 65 91 90 156 66 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 155 )->[157]->( 168 158 )
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 5 [di]
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 157 )->[158]->( 167 )
;; bb 158 artificial_defs: { }
;; bb 158 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	

( 129 )->[159]->( 128 160 )
;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 43 [r14] 44 [r15]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 159 )->[160]->( 132 )
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	

( 134 136 )->[161]->( 138 )
;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 2 [cx] 4 [si] 44 [r15]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 2 [cx] 4 [si] 44 [r15]
;; live  kill	
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

( 135 )->[162]->( 163 137 )
;; bb 162 artificial_defs: { }
;; bb 162 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 162 )->[163]->( 131 )
;; bb 163 artificial_defs: { }
;; bb 163 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	

( 130 )->[164]->( 132 )
;; bb 164 artificial_defs: { }
;; bb 164 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 2 [cx] 4 [si] 5 [di] 17 [flags] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 2 [cx] 4 [si] 5 [di] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 128 )->[165]->( 131 166 )
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 165 )->[166]->( 132 )
;; bb 166 artificial_defs: { }
;; bb 166 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 2 [cx] 4 [si] 44 [r15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx] 4 [si] 44 [r15]
;; live  kill	
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 158 )->[167]->( )
;; bb 167 artificial_defs: { }
;; bb 167 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 157 )->[168]->( 1 )
;; bb 168 artificial_defs: { }
;; bb 168 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

( 168 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }u-1(42){ }u-1(43){ }u-1(44){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 72 to worklist
  Adding insn 3 to worklist
  Adding insn 1751 to worklist
  Adding insn 1750 to worklist
  Adding insn 1749 to worklist
  Adding insn 1748 to worklist
  Adding insn 1747 to worklist
  Adding insn 1746 to worklist
  Adding insn 1800 to worklist
  Adding insn 82 to worklist
  Adding insn 80 to worklist
  Adding insn 84 to worklist
  Adding insn 88 to worklist
  Adding insn 91 to worklist
  Adding insn 95 to worklist
  Adding insn 98 to worklist
  Adding insn 103 to worklist
  Adding insn 110 to worklist
  Adding insn 122 to worklist
  Adding insn 120 to worklist
  Adding insn 113 to worklist
  Adding insn 139 to worklist
  Adding insn 137 to worklist
  Adding insn 134 to worklist
  Adding insn 133 to worklist
  Adding insn 131 to worklist
  Adding insn 1802 to worklist
  Adding insn 1804 to worklist
  Adding insn 167 to worklist
  Adding insn 1806 to worklist
  Adding insn 216 to worklist
  Adding insn 225 to worklist
  Adding insn 1808 to worklist
  Adding insn 249 to worklist
  Adding insn 1810 to worklist
  Adding insn 261 to worklist
  Adding insn 263 to worklist
  Adding insn 267 to worklist
  Adding insn 269 to worklist
  Adding insn 286 to worklist
  Adding insn 309 to worklist
  Adding insn 307 to worklist
  Adding insn 306 to worklist
  Adding insn 305 to worklist
  Adding insn 303 to worklist
  Adding insn 300 to worklist
  Adding insn 314 to worklist
  Adding insn 319 to worklist
  Adding insn 332 to worklist
  Adding insn 334 to worklist
  Adding insn 342 to worklist
  Adding insn 351 to worklist
  Adding insn 355 to worklist
  Adding insn 1812 to worklist
  Adding insn 1814 to worklist
  Adding insn 1816 to worklist
  Adding insn 382 to worklist
  Adding insn 1818 to worklist
  Adding insn 395 to worklist
  Adding insn 1820 to worklist
  Adding insn 401 to worklist
  Adding insn 1822 to worklist
  Adding insn 418 to worklist
  Adding insn 433 to worklist
  Adding insn 430 to worklist
  Adding insn 427 to worklist
  Adding insn 425 to worklist
  Adding insn 1824 to worklist
  Adding insn 434 to worklist
  Adding insn 442 to worklist
  Adding insn 439 to worklist
  Adding insn 446 to worklist
  Adding insn 1827 to worklist
  Adding insn 458 to worklist
  Adding insn 456 to worklist
  Adding insn 454 to worklist
  Adding insn 468 to worklist
  Adding insn 467 to worklist
  Adding insn 464 to worklist
  Adding insn 462 to worklist
  Adding insn 1829 to worklist
  Adding insn 1831 to worklist
  Adding insn 491 to worklist
  Adding insn 1833 to worklist
  Adding insn 1835 to worklist
  Adding insn 510 to worklist
  Adding insn 505 to worklist
  Adding insn 1839 to worklist
  Adding insn 1841 to worklist
  Adding insn 547 to worklist
  Adding insn 544 to worklist
  Adding insn 1843 to worklist
  Adding insn 1845 to worklist
  Adding insn 557 to worklist
  Adding insn 570 to worklist
  Adding insn 568 to worklist
  Adding insn 565 to worklist
  Adding insn 1847 to worklist
  Adding insn 581 to worklist
  Adding insn 578 to worklist
  Adding insn 1849 to worklist
  Adding insn 1851 to worklist
  Adding insn 1853 to worklist
  Adding insn 1855 to worklist
  Adding insn 1857 to worklist
  Adding insn 1859 to worklist
  Adding insn 1861 to worklist
  Adding insn 1863 to worklist
  Adding insn 1865 to worklist
  Adding insn 1867 to worklist
  Adding insn 1869 to worklist
  Adding insn 1871 to worklist
  Adding insn 1873 to worklist
  Adding insn 1875 to worklist
  Adding insn 1877 to worklist
  Adding insn 1879 to worklist
  Adding insn 1881 to worklist
  Adding insn 1883 to worklist
  Adding insn 1885 to worklist
  Adding insn 1887 to worklist
  Adding insn 1889 to worklist
  Adding insn 1891 to worklist
  Adding insn 1893 to worklist
  Adding insn 1895 to worklist
  Adding insn 681 to worklist
  Adding insn 1897 to worklist
  Adding insn 697 to worklist
  Adding insn 721 to worklist
  Adding insn 714 to worklist
  Adding insn 1672 to worklist
  Adding insn 1899 to worklist
  Adding insn 733 to worklist
  Adding insn 731 to worklist
  Adding insn 729 to worklist
  Adding insn 741 to worklist
  Adding insn 757 to worklist
  Adding insn 747 to worklist
  Adding insn 746 to worklist
  Adding insn 760 to worklist
  Adding insn 759 to worklist
  Adding insn 774 to worklist
  Adding insn 796 to worklist
  Adding insn 808 to worklist
  Adding insn 816 to worklist
  Adding insn 1901 to worklist
  Adding insn 819 to worklist
  Adding insn 833 to worklist
  Adding insn 836 to worklist
  Adding insn 841 to worklist
  Adding insn 845 to worklist
  Adding insn 1903 to worklist
  Adding insn 859 to worklist
  Adding insn 877 to worklist
  Adding insn 869 to worklist
  Adding insn 883 to worklist
  Adding insn 1905 to worklist
  Adding insn 886 to worklist
  Adding insn 885 to worklist
  Adding insn 912 to worklist
  Adding insn 1679 to worklist
  Adding insn 918 to worklist
  Adding insn 1907 to worklist
  Adding insn 922 to worklist
  Adding insn 927 to worklist
  Adding insn 941 to worklist
  Adding insn 939 to worklist
  Adding insn 935 to worklist
  Adding insn 1910 to worklist
  Adding insn 947 to worklist
  Adding insn 951 to worklist
  Adding insn 957 to worklist
  Adding insn 966 to worklist
  Adding insn 974 to worklist
  Adding insn 1687 to worklist
  Adding insn 984 to worklist
  Adding insn 980 to worklist
  Adding insn 987 to worklist
  Adding insn 1914 to worklist
  Adding insn 993 to worklist
  Adding insn 1916 to worklist
  Adding insn 997 to worklist
  Adding insn 1004 to worklist
  Adding insn 1002 to worklist
  Adding insn 1025 to worklist
  Adding insn 1023 to worklist
  Adding insn 1016 to worklist
  Adding insn 1031 to worklist
  Adding insn 1028 to worklist
  Adding insn 1918 to worklist
  Adding insn 1920 to worklist
  Adding insn 1039 to worklist
  Adding insn 1037 to worklist
  Adding insn 1051 to worklist
  Adding insn 1049 to worklist
  Adding insn 1055 to worklist
  Adding insn 1922 to worklist
  Adding insn 1059 to worklist
  Adding insn 1076 to worklist
  Adding insn 1085 to worklist
  Adding insn 1104 to worklist
  Adding insn 1100 to worklist
  Adding insn 1096 to worklist
  Adding insn 1705 to worklist
  Adding insn 1707 to worklist
  Adding insn 1107 to worklist
  Adding insn 1135 to worklist
  Adding insn 1121 to worklist
  Adding insn 1118 to worklist
  Adding insn 1115 to worklist
  Adding insn 1114 to worklist
  Adding insn 1137 to worklist
  Adding insn 1924 to worklist
  Adding insn 1926 to worklist
  Adding insn 1161 to worklist
  Adding insn 1928 to worklist
  Adding insn 1176 to worklist
  Adding insn 1175 to worklist
  Adding insn 1930 to worklist
  Adding insn 1207 to worklist
  Adding insn 1206 to worklist
  Adding insn 1221 to worklist
  Adding insn 1932 to worklist
  Adding insn 1934 to worklist
  Adding insn 1321 to worklist
  Adding insn 1320 to worklist
  Adding insn 1938 to worklist
  Adding insn 1258 to worklist
  Adding insn 1251 to worklist
  Adding insn 1941 to worklist
  Adding insn 1943 to worklist
  Adding insn 1275 to worklist
  Adding insn 1946 to worklist
  Adding insn 1948 to worklist
  Adding insn 1295 to worklist
  Adding insn 1309 to worklist
  Adding insn 1306 to worklist
  Adding insn 1950 to worklist
  Adding insn 1322 to worklist
  Adding insn 1764 to worklist
  Adding insn 1325 to worklist
Finished finding needed instructions:
processing block 153 lr out =  7 [sp]
  Adding insn 1220 to worklist
processing block 168 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1763 to worklist
  Adding insn 1762 to worklist
  Adding insn 1761 to worklist
  Adding insn 1760 to worklist
  Adding insn 1759 to worklist
  Adding insn 1758 to worklist
  Adding insn 1757 to worklist
processing block 167 lr out =  7 [sp]
processing block 158 lr out =  7 [sp]
processing block 157 lr out =  0 [ax] 7 [sp]
  Adding insn 1319 to worklist
processing block 91 lr out =  3 [bx] 7 [sp]
  Adding insn 675 to worklist
  Adding insn 674 to worklist
processing block 44 lr out =  1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 389 to worklist
  Adding insn 388 to worklist
  Adding insn 383 to worklist
  Adding insn 381 to worklist
processing block 16 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
  Adding insn 161 to worklist
  Adding insn 160 to worklist
processing block 45 lr out =  0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
  Adding insn 6 to worklist
  Adding insn 5 to worklist
  Adding insn 4 to worklist
processing block 43 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
  Adding insn 374 to worklist
  Adding insn 373 to worklist
  Adding insn 370 to worklist
  Adding insn 1741 to worklist
  Adding insn 367 to worklist
  Adding insn 366 to worklist
processing block 156 lr out =  3 [bx] 7 [sp]
  Adding insn 67 to worklist
processing block 52 lr out =  7 [sp]
processing block 15 lr out =  0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
  Adding insn 158 to worklist
  Adding insn 155 to worklist
  Adding insn 1739 to worklist
  Adding insn 152 to worklist
processing block 51 lr out =  7 [sp] 42 [r13]
  Adding insn 445 to worklist
  Adding insn 444 to worklist
processing block 50 lr out =  0 [ax] 7 [sp] 42 [r13]
  Adding insn 441 to worklist
  Adding insn 440 to worklist
processing block 46 lr out =  0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
  Adding insn 408 to worklist
  Adding insn 405 to worklist
  Adding insn 1742 to worklist
  Adding insn 402 to worklist
processing block 49 lr out =  0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
processing block 47 lr out =  0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
processing block 18 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 180 to worklist
  Adding insn 177 to worklist
  Adding insn 176 to worklist
  Adding insn 174 to worklist
processing block 104 lr out =  0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 818 to worklist
processing block 103 lr out =  0 [ax] 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 815 to worklist
processing block 102 lr out =  0 [ax] 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 807 to worklist
  Adding insn 1235 to worklist
  Adding insn 803 to worklist
  Adding insn 1715 to worklist
processing block 101 lr out =  1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
  Adding insn 795 to worklist
  Adding insn 794 to worklist
  Adding insn 793 to worklist
  Adding insn 1716 to worklist
  Adding insn 791 to worklist
  Adding insn 1745 to worklist
  Adding insn 782 to worklist
processing block 100 lr out =  1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
  Adding insn 773 to worklist
  Adding insn 772 to worklist
  Adding insn 771 to worklist
  Adding insn 1717 to worklist
  Adding insn 769 to worklist
processing block 99 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
processing block 98 lr out =  0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
  Adding insn 756 to worklist
  Adding insn 755 to worklist
  Adding insn 754 to worklist
  Adding insn 745 to worklist
  Adding insn 743 to worklist
processing block 106 lr out =  7 [sp]
  Adding insn 835 to worklist
processing block 150 lr out =  1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 1167 to worklist
  Adding insn 1166 to worklist
  Adding insn 1165 to worklist
  Adding insn 1164 to worklist
  Adding insn 1696 to worklist
  Adding insn 1163 to worklist
  Adding insn 1695 to worklist
processing block 149 lr out =  0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 32 to worklist
processing block 152 lr out =  1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 1215 to worklist
  Adding insn 1214 to worklist
  Adding insn 1211 to worklist
processing block 109 lr out =  3 [bx] 7 [sp] 42 [r13]
  Adding insn 34 to worklist
processing block 108 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 844 to worklist
  Adding insn 843 to worklist
processing block 144 lr out =  7 [sp]
  Adding insn 1106 to worklist
processing block 148 lr out =  3 [bx] 7 [sp] 42 [r13]
  Adding insn 33 to worklist
  Adding insn 1693 to worklist
  Adding insn 1142 to worklist
processing block 151 lr out =  0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 1180 to worklist
  Adding insn 1174 to worklist
  Adding insn 1173 to worklist
processing block 147 lr out =  0 [ax] 6 [bp] 7 [sp] 42 [r13] 44 [r15]
  Adding insn 1136 to worklist
processing block 146 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1134 to worklist
  Adding insn 1120 to worklist
  Adding insn 1119 to worklist
  Adding insn 1117 to worklist
  Adding insn 1116 to worklist
processing block 143 lr out =  0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1708 to worklist
  Adding insn 1103 to worklist
  Adding insn 1102 to worklist
  Adding insn 1101 to worklist
  Adding insn 1706 to worklist
  Adding insn 1093 to worklist
  Adding insn 1092 to worklist
  Adding insn 1091 to worklist
  Adding insn 1090 to worklist
  Adding insn 1691 to worklist
processing block 145 lr out =  0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1111 to worklist
processing block 142 lr out =  1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1084 to worklist
  Adding insn 1083 to worklist
  Adding insn 1713 to worklist
processing block 140 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 30 to worklist
  Adding insn 1065 to worklist
  Adding insn 1064 to worklist
  Adding insn 1659 to worklist
  Adding insn 1063 to worklist
  Adding insn 1060 to worklist
  Adding insn 1058 to worklist
processing block 141 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 31 to worklist
  Adding insn 1077 to worklist
  Adding insn 1075 to worklist
  Adding insn 1074 to worklist
processing block 139 lr out =  2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 1054 to worklist
processing block 115 lr out =  2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
processing block 138 lr out =  1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1050 to worklist
  Adding insn 29 to worklist
  Adding insn 1048 to worklist
processing block 132 lr out =  1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 996 to worklist
processing block 160 lr out =  2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 159 lr out =  2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1257 to worklist
  Adding insn 1252 to worklist
  Adding insn 1700 to worklist
  Adding insn 1249 to worklist
  Adding insn 1699 to worklist
  Adding insn 1247 to worklist
  Adding insn 1246 to worklist
  Adding insn 1245 to worklist
  Adding insn 1243 to worklist
processing block 164 lr out =  2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 28 to worklist
  Adding insn 1703 to worklist
  Adding insn 1293 to worklist
  Adding insn 1702 to worklist
  Adding insn 1291 to worklist
  Adding insn 1288 to worklist
  Adding insn 1287 to worklist
  Adding insn 1285 to worklist
processing block 130 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
processing block 129 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 986 to worklist
processing block 131 lr out =  7 [sp]
  Adding insn 992 to worklist
processing block 166 lr out =  2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1314 to worklist
  Adding insn 1313 to worklist
  Adding insn 1311 to worklist
processing block 165 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 1308 to worklist
  Adding insn 1305 to worklist
processing block 128 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 983 to worklist
  Adding insn 979 to worklist
processing block 127 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 27 to worklist
processing block 163 lr out =  7 [sp]
processing block 137 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1042 to worklist
  Adding insn 1660 to worklist
  Adding insn 1041 to worklist
  Adding insn 1038 to worklist
processing block 162 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 1274 to worklist
processing block 161 lr out =  1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 1268 to worklist
  Adding insn 1267 to worklist
  Adding insn 1265 to worklist
processing block 136 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 1033 to worklist
processing block 135 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 1030 to worklist
  Adding insn 1027 to worklist
processing block 134 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 1024 to worklist
  Adding insn 1022 to worklist
  Adding insn 1014 to worklist
  Adding insn 1013 to worklist
  Adding insn 1012 to worklist
  Adding insn 1011 to worklist
  Adding insn 1689 to worklist
processing block 133 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 1003 to worklist
processing block 126 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
  Adding insn 973 to worklist
  Adding insn 971 to worklist
  Adding insn 1688 to worklist
  Adding insn 969 to worklist
processing block 123 lr out =  7 [sp]
  Adding insn 950 to worklist
processing block 121 lr out =  7 [sp]
processing block 124 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 958 to worklist
  Adding insn 956 to worklist
  Adding insn 955 to worklist
processing block 120 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 940 to worklist
  Adding insn 1714 to worklist
processing block 118 lr out =  0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 921 to worklist
  Adding insn 920 to worklist
  Adding insn 1682 to worklist
processing block 119 lr out =  0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
processing block 117 lr out =  0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 917 to worklist
  Adding insn 1680 to worklist
  Adding insn 914 to worklist
processing block 122 lr out =  7 [sp]
processing block 116 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 911 to worklist
  Adding insn 908 to worklist
  Adding insn 907 to worklist
processing block 125 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 965 to worklist
  Adding insn 960 to worklist
  Adding insn 1684 to worklist
processing block 114 lr out =  0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 882 to worklist
processing block 113 lr out =  0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 879 to worklist
processing block 112 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 876 to worklist
  Adding insn 870 to worklist
  Adding insn 868 to worklist
processing block 111 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 44 [r15]
  Adding insn 25 to worklist
processing block 110 lr out =  0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 858 to worklist
  Adding insn 851 to worklist
  Adding insn 1674 to worklist
processing block 107 lr out =  0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 840 to worklist
processing block 105 lr out =  0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 832 to worklist
  Adding insn 831 to worklist
  Adding insn 828 to worklist
processing block 97 lr out =  0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 740 to worklist
  Adding insn 739 to worklist
  Adding insn 1718 to worklist
  Adding insn 737 to worklist
  Adding insn 736 to worklist
processing block 96 lr out =  0 [ax] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 732 to worklist
  Adding insn 730 to worklist
  Adding insn 728 to worklist
processing block 95 lr out =  0 [ax] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 723 to worklist
processing block 94 lr out =  2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
  Adding insn 720 to worklist
  Adding insn 719 to worklist
  Adding insn 718 to worklist
  Adding insn 717 to worklist
  Adding insn 715 to worklist
  Adding insn 713 to worklist
  Adding insn 1719 to worklist
  Adding insn 710 to worklist
  Adding insn 1670 to worklist
processing block 48 lr out =  7 [sp] 42 [r13]
  Adding insn 432 to worklist
  Adding insn 429 to worklist
  Adding insn 428 to worklist
  Adding insn 424 to worklist
  Adding insn 423 to worklist
processing block 93 lr out =  0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
  Adding insn 704 to worklist
  Adding insn 701 to worklist
  Adding insn 1744 to worklist
  Adding insn 698 to worklist
  Adding insn 696 to worklist
  Adding insn 695 to worklist
  Adding insn 694 to worklist
  Adding insn 693 to worklist
processing block 92 lr out =  0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
  Adding insn 688 to worklist
  Adding insn 685 to worklist
  Adding insn 1743 to worklist
  Adding insn 682 to worklist
  Adding insn 680 to worklist
processing block 55 lr out =  3 [bx] 7 [sp]
  Adding insn 471 to worklist
processing block 54 lr out =  0 [ax] 7 [sp]
  Adding insn 1723 to worklist
  Adding insn 465 to worklist
  Adding insn 461 to worklist
  Adding insn 460 to worklist
processing block 53 lr out =  0 [ax] 7 [sp]
  Adding insn 457 to worklist
  Adding insn 453 to worklist
processing block 65 lr out =  3 [bx] 7 [sp]
  Adding insn 39 to worklist
processing block 62 lr out =  7 [sp]
processing block 58 lr out =  3 [bx] 7 [sp]
  Adding insn 36 to worklist
processing block 59 lr out =  3 [bx] 7 [sp]
  Adding insn 35 to worklist
processing block 57 lr out =  7 [sp]
  Adding insn 490 to worklist
processing block 61 lr out =  0 [ax] 7 [sp]
  Adding insn 509 to worklist
  Adding insn 507 to worklist
  Adding insn 504 to worklist
  Adding insn 503 to worklist
processing block 56 lr out =  1 [dx] 4 [si] 7 [sp]
  Adding insn 477 to worklist
  Adding insn 476 to worklist
processing block 60 lr out =  1 [dx] 4 [si] 7 [sp]
  Adding insn 502 to worklist
  Adding insn 501 to worklist
processing block 63 lr out =  1 [dx] 4 [si] 7 [sp]
  Adding insn 521 to worklist
  Adding insn 520 to worklist
processing block 64 lr out =  7 [sp]
  Adding insn 546 to worklist
  Adding insn 543 to worklist
  Adding insn 541 to worklist
  Adding insn 1668 to worklist
  Adding insn 1722 to worklist
  Adding insn 1667 to worklist
processing block 66 lr out =  3 [bx] 7 [sp]
  Adding insn 40 to worklist
  Adding insn 556 to worklist
  Adding insn 555 to worklist
  Adding insn 554 to worklist
  Adding insn 553 to worklist
processing block 68 lr out =  3 [bx] 7 [sp]
  Adding insn 1704 to worklist
  Adding insn 577 to worklist
  Adding insn 1720 to worklist
  Adding insn 1669 to worklist
processing block 67 lr out =  1 [dx] 3 [bx] 6 [bp] 7 [sp]
  Adding insn 569 to worklist
  Adding insn 38 to worklist
  Adding insn 566 to worklist
  Adding insn 1721 to worklist
  Adding insn 562 to worklist
processing block 154 lr out =  3 [bx] 7 [sp]
  Adding insn 42 to worklist
processing block 155 lr out =  3 [bx] 7 [sp]
  Adding insn 43 to worklist
processing block 42 lr out =  3 [bx] 7 [sp]
  Adding insn 44 to worklist
processing block 69 lr out =  3 [bx] 7 [sp]
  Adding insn 45 to worklist
processing block 70 lr out =  3 [bx] 7 [sp]
  Adding insn 46 to worklist
processing block 71 lr out =  3 [bx] 7 [sp]
  Adding insn 47 to worklist
processing block 72 lr out =  3 [bx] 7 [sp]
  Adding insn 48 to worklist
processing block 73 lr out =  3 [bx] 7 [sp]
  Adding insn 49 to worklist
processing block 74 lr out =  3 [bx] 7 [sp]
  Adding insn 50 to worklist
processing block 75 lr out =  3 [bx] 7 [sp]
  Adding insn 51 to worklist
processing block 76 lr out =  3 [bx] 7 [sp]
  Adding insn 52 to worklist
processing block 77 lr out =  3 [bx] 7 [sp]
  Adding insn 53 to worklist
processing block 78 lr out =  3 [bx] 7 [sp]
  Adding insn 54 to worklist
processing block 79 lr out =  3 [bx] 7 [sp]
  Adding insn 55 to worklist
processing block 80 lr out =  3 [bx] 7 [sp]
  Adding insn 56 to worklist
processing block 81 lr out =  3 [bx] 7 [sp]
  Adding insn 57 to worklist
processing block 82 lr out =  3 [bx] 7 [sp]
  Adding insn 58 to worklist
processing block 83 lr out =  3 [bx] 7 [sp]
  Adding insn 59 to worklist
processing block 84 lr out =  3 [bx] 7 [sp]
  Adding insn 60 to worklist
processing block 85 lr out =  3 [bx] 7 [sp]
  Adding insn 61 to worklist
processing block 86 lr out =  3 [bx] 7 [sp]
  Adding insn 62 to worklist
processing block 87 lr out =  3 [bx] 7 [sp]
  Adding insn 63 to worklist
processing block 88 lr out =  3 [bx] 7 [sp]
  Adding insn 64 to worklist
processing block 89 lr out =  3 [bx] 7 [sp]
  Adding insn 65 to worklist
processing block 90 lr out =  3 [bx] 7 [sp]
  Adding insn 66 to worklist
processing block 41 lr out =  3 [bx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 352 to worklist
processing block 40 lr out =  1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 350 to worklist
processing block 39 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 341 to worklist
  Adding insn 340 to worklist
processing block 38 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
processing block 37 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 331 to worklist
processing block 36 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 318 to worklist
  Adding insn 1724 to worklist
  Adding insn 326 to worklist
  Adding insn 317 to worklist
processing block 35 lr out =  1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 313 to worklist
  Adding insn 312 to worklist
processing block 34 lr out =  1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 308 to worklist
  Adding insn 304 to worklist
  Adding insn 302 to worklist
  Adding insn 1665 to worklist
processing block 33 lr out =  1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 294 to worklist
  Adding insn 293 to worklist
  Adding insn 288 to worklist
processing block 32 lr out =  1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 285 to worklist
processing block 31 lr out =  1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 274 to worklist
processing block 30 lr out =  2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
processing block 29 lr out =  2 [cx] 3 [bx] 7 [sp] 39 [r10] 41 [r12] 42 [r13]
  Adding insn 266 to worklist
processing block 28 lr out =  2 [cx] 3 [bx] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
processing block 27 lr out =  2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
  Adding insn 260 to worklist
processing block 26 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
  Adding insn 254 to worklist
  Adding insn 251 to worklist
processing block 25 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
  Adding insn 248 to worklist
  Adding insn 247 to worklist
  Adding insn 243 to worklist
  Adding insn 1740 to worklist
  Adding insn 241 to worklist
  Adding insn 240 to worklist
processing block 21 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
  Adding insn 204 to worklist
  Adding insn 203 to worklist
processing block 24 lr out =  0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
  Adding insn 1390 to worklist
processing block 23 lr out =  0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
  Adding insn 224 to worklist
  Adding insn 221 to worklist
  Adding insn 219 to worklist
processing block 22 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
  Adding insn 215 to worklist
  Adding insn 214 to worklist
  Adding insn 213 to worklist
  Adding insn 212 to worklist
processing block 20 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
  Adding insn 1389 to worklist
  Adding insn 1726 to worklist
  Adding insn 1725 to worklist
  Adding insn 1436 to worklist
  Adding insn 1434 to worklist
  Adding insn 1433 to worklist
processing block 19 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 184 to worklist
  Adding insn 183 to worklist
processing block 17 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13]
  Adding insn 18 to worklist
processing block 14 lr out =  0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
  Adding insn 1438 to worklist
  Adding insn 148 to worklist
  Adding insn 145 to worklist
  Adding insn 1738 to worklist
  Adding insn 142 to worklist
processing block 13 lr out =  3 [bx] 4 [si] 7 [sp]
  Adding insn 138 to worklist
  Adding insn 136 to worklist
  Adding insn 135 to worklist
  Adding insn 132 to worklist
  Adding insn 130 to worklist
processing block 12 lr out =  0 [ax] 1 [dx] 7 [sp]
  Adding insn 127 to worklist
  Adding insn 126 to worklist
  Adding insn 1661 to worklist
  Adding insn 125 to worklist
  Adding insn 119 to worklist
  Adding insn 118 to worklist
  Adding insn 117 to worklist
  Adding insn 1662 to worklist
  Adding insn 116 to worklist
processing block 11 lr out =  0 [ax] 1 [dx] 7 [sp]
  Adding insn 109 to worklist
  Adding insn 108 to worklist
  Adding insn 107 to worklist
  Adding insn 1663 to worklist
processing block 10 lr out =  0 [ax] 7 [sp]
  Adding insn 102 to worklist
  Adding insn 101 to worklist
processing block 9 lr out =  7 [sp]
  Adding insn 97 to worklist
processing block 8 lr out =  7 [sp]
  Adding insn 94 to worklist
processing block 7 lr out =  7 [sp]
  Adding insn 90 to worklist
processing block 6 lr out =  7 [sp]
  Adding insn 87 to worklist
processing block 5 lr out =  7 [sp]
processing block 4 lr out =  7 [sp]
  Adding insn 81 to worklist
processing block 3 lr out =  3 [bx] 4 [si] 7 [sp]
  Adding insn 75 to worklist
  Adding insn 74 to worklist
processing block 2 lr out =  7 [sp]
  Adding insn 71 to worklist
  Adding insn 1752 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 169 n_edges 261 count 306 (  1.8)
Splitting with gen_peephole2_5754
scanning new insn with uid = 1952.
deleting insn with uid = 28.
verify found no changes in insn with uid = 1952.
Splitting with gen_peephole2_5748
scanning new insn with uid = 1953.
deleting insn with uid = 67.
verify found no changes in insn with uid = 1953.
Splitting with gen_peephole2_5748
scanning new insn with uid = 1954.
deleting insn with uid = 29.
verify found no changes in insn with uid = 1954.
Splitting with gen_peephole2_5748
scanning new insn with uid = 1955.
deleting insn with uid = 27.
verify found no changes in insn with uid = 1955.
Splitting with gen_peephole2_5725
scanning new insn with uid = 1956.
scanning new insn with uid = 1957.
deleting insn with uid = 973.
verify found no changes in insn with uid = 1957.
verify found no changes in insn with uid = 1956.
Splitting with gen_peephole2_5725
scanning new insn with uid = 1958.
scanning new insn with uid = 1959.
deleting insn with uid = 911.
verify found no changes in insn with uid = 1959.
verify found no changes in insn with uid = 1958.
Splitting with gen_peephole2_5748
scanning new insn with uid = 1960.
deleting insn with uid = 25.
verify found no changes in insn with uid = 1960.
Splitting with gen_peephole2_5725
scanning new insn with uid = 1961.
scanning new insn with uid = 1962.
deleting insn with uid = 840.
verify found no changes in insn with uid = 1962.
verify found no changes in insn with uid = 1961.
Splitting with gen_peephole2_5725
scanning new insn with uid = 1963.
scanning new insn with uid = 1964.
deleting insn with uid = 720.
verify found no changes in insn with uid = 1964.
verify found no changes in insn with uid = 1963.
Splitting with gen_peephole2_5748
scanning new insn with uid = 1965.
deleting insn with uid = 556.
verify found no changes in insn with uid = 1965.
Splitting with gen_peephole2_5748
scanning new insn with uid = 1966.
deleting insn with uid = 543.
verify found no changes in insn with uid = 1966.
Splitting with gen_peephole2_5748
scanning new insn with uid = 1967.
deleting insn with uid = 504.
verify found no changes in insn with uid = 1967.
Splitting with gen_peephole2_5748
scanning new insn with uid = 1968.
deleting insn with uid = 13.
verify found no changes in insn with uid = 1968.
Splitting with gen_peephole2_5748
scanning new insn with uid = 1969.
deleting insn with uid = 14.
verify found no changes in insn with uid = 1969.
Splitting with gen_peephole2_5725
scanning new insn with uid = 1970.
scanning new insn with uid = 1971.
deleting insn with uid = 313.
verify found no changes in insn with uid = 1971.
verify found no changes in insn with uid = 1970.
Splitting with gen_peephole2_5748
scanning new insn with uid = 1972.
deleting insn with uid = 19.
verify found no changes in insn with uid = 1972.
Splitting with gen_peephole2_5748
scanning new insn with uid = 1973.
deleting insn with uid = 20.
verify found no changes in insn with uid = 1973.
Splitting with gen_peephole2_5725
scanning new insn with uid = 1974.
scanning new insn with uid = 1975.
deleting insn with uid = 81.
verify found no changes in insn with uid = 1975.
verify found no changes in insn with uid = 1974.
Splitting with gen_peephole2_5725
scanning new insn with uid = 1976.
scanning new insn with uid = 1977.
deleting insn with uid = 71.
verify found no changes in insn with uid = 1977.
verify found no changes in insn with uid = 1976.
starting the processing of deferred insns
ending the processing of deferred insns


int yylex()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 39[r10] 40[r11] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={109d,127u,2e} r1={99d,87u,2e} r2={64d,33u} r3={52d,39u,1e} r4={67d,35u} r5={76d,49u,1e} r6={10d,24u} r7={15d,237u} r8={33d} r9={33d} r10={33d} r11={33d} r12={33d} r13={33d} r14={33d} r15={33d} r17={135d,61u,1e} r18={33d} r19={33d} r21={31d} r22={31d} r23={31d} r24={31d} r25={31d} r26={31d} r27={31d} r28={31d} r29={30d} r30={30d} r31={30d} r32={30d} r33={30d} r34={30d} r35={30d} r36={30d} r37={35d,1u} r38={35d,1u} r39={43d,15u,1e} r40={37d,9u} r41={6d,9u} r42={3d,4u} r43={15d,40u} r44={10d,18u,5e} r45={30d} r46={30d} r47={30d} r48={30d} r49={30d} r50={30d} r51={30d} r52={30d} r53={33d} r54={33d} r55={33d} r56={33d} r57={33d} r58={33d} r59={33d} r60={33d} r61={33d} r62={33d} r63={33d} r64={33d} r65={33d} r66={33d} r67={33d} r68={33d} r69={33d} r70={33d} r71={33d} r72={33d} r73={33d} r74={33d} r75={33d} r76={33d} r77={33d} r78={33d} r79={33d} r80={33d} 
;;    total ref usage 3595{2793d,789u,13e} in 814{781 regular + 33 call} insns.
(note 1 0 69 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 63, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(note 69 1 1746 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 1746 69 1747 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 44 r15)) lex.yy.c:787 -1
     (expr_list:REG_DEAD (reg:DI 44 r15)
        (nil)))
(insn/f 1747 1746 1748 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 43 r14)) lex.yy.c:787 -1
     (expr_list:REG_DEAD (reg:DI 43 r14)
        (nil)))
(insn/f 1748 1747 1749 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 42 r13)) lex.yy.c:787 -1
     (expr_list:REG_DEAD (reg:DI 42 r13)
        (nil)))
(insn/f 1749 1748 1750 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) lex.yy.c:787 -1
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn/f 1750 1749 1751 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) lex.yy.c:787 -1
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 1751 1750 1752 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) lex.yy.c:787 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f 1752 1751 1753 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -40 [0xffffffffffffffd8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) lex.yy.c:787 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -40 [0xffffffffffffffd8])))
            (nil))))
(note 1753 1752 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 1753 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 1976 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                        (const_int 24 [0x18])) [1 D.6797+0 S8 A64])
                (unspec:DI [
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_SET))
            (set (reg:DI 0 ax [576])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:787 986 {stack_tls_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_UNUSED (reg:DI 0 ax [576])
            (nil))))
(insn 1976 3 1977 2 (set (reg:SI 3 bx)
        (mem/c:SI (symbol_ref:DI ("_ZL7yy_init") [flags 0x2]  <var_decl 0x7f88bc080510 yy_init>) [2 yy_init+0 S4 A32])) lex.yy.c:792 -1
     (nil))
(insn 1977 1976 72 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 3 bx)
            (const_int 0 [0]))) lex.yy.c:792 -1
     (nil))
(jump_insn 72 1977 73 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) lex.yy.c:792 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 78)
;;  succ:       4 [50.0%] 
;;              3 [50.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 32, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 4 [si]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx] 4 [si]
;; live  kill	
(note 73 72 74 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 3 (set (reg/f:DI 3 bx [orig:318 D.6783 ] [318])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 75 74 1800 3 (set (reg:DI 4 si)
        (zero_extend:DI (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(jump_insn 1800 75 1801 3 (set (pc)
        (label_ref 140)) -1
     (nil)
 -> 140)
;;  succ:       14 [100.0%] 
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

(barrier 1801 1800 78)
;; basic block 4, loop depth 0, count 0, freq 32, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [50.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 78 1801 79 4 116 "" [1 uses])
(note 79 78 80 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 1974 4 (set (mem/c:SI (symbol_ref:DI ("_ZL7yy_init") [flags 0x2]  <var_decl 0x7f88bc080510 yy_init>) [2 yy_init+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:794 90 {*movsi_internal}
     (nil))
(insn 1974 80 1975 4 (set (reg:SI 40 r11)
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) lex.yy.c:800 -1
     (nil))
(insn 1975 1974 82 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 40 r11)
            (const_int 0 [0]))) lex.yy.c:800 -1
     (nil))
(jump_insn 82 1975 83 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 85)
            (pc))) lex.yy.c:800 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 85)
;;  succ:       5 [50.0%]  (FALLTHRU)
;;              6 [50.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 5, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       4 [50.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(note 83 82 84 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 5 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:801 90 {*movsi_internal}
     (nil))
;;  succ:       6 [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 6, loop depth 0, count 0, freq 32, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       4 [50.0%] 
;;              5 [100.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 85 84 86 6 118 "" [1 uses])
(note 86 85 87 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
            (const_int 0 [0]))) lex.yy.c:803 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 88 87 89 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) lex.yy.c:803 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8500 (nil)))
 -> 92)
;;  succ:       7 [15.0%]  (FALLTHRU)
;;              8 [85.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 7, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       6 [15.0%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(note 89 88 90 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 7 (set (reg/f:DI 0 ax [orig:349 stdin ] [349])
        (mem/f/c:DI (symbol_ref:DI ("stdin") [flags 0x40]  <var_decl 0x7f88bc3c9d80 stdin>) [1 stdin+0 S8 A64])) lex.yy.c:804 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("stdin") [flags 0x40]  <var_decl 0x7f88bc3c9d80 stdin>) [1 stdin+0 S8 A64])
        (nil)))
(insn 91 90 92 7 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 0 ax [orig:349 stdin ] [349])) lex.yy.c:804 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:349 stdin ] [349])
        (nil)))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 8, loop depth 0, count 0, freq 32, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       6 [85.0%] 
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 92 91 93 8 119 "" [1 uses])
(note 93 92 94 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])
            (const_int 0 [0]))) lex.yy.c:806 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 95 94 96 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) lex.yy.c:806 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8500 (nil)))
 -> 99)
;;  succ:       9 [15.0%]  (FALLTHRU)
;;              10 [85.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 9, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       8 [15.0%]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(note 96 95 97 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 9 (set (reg/f:DI 0 ax [orig:350 stdout ] [350])
        (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f88bc3c9e10 stdout>) [1 stdout+0 S8 A64])) lex.yy.c:807 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7f88bc3c9e10 stdout>) [1 stdout+0 S8 A64])
        (nil)))
(insn 98 97 99 9 (set (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])
        (reg/f:DI 0 ax [orig:350 stdout ] [350])) lex.yy.c:807 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:350 stdout ] [350])
        (nil)))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 10, loop depth 0, count 0, freq 32, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       8 [85.0%] 
;;              9 [100.0%]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 99 98 100 10 120 "" [1 uses])
(note 100 99 101 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 10 (set (reg/f:DI 0 ax [orig:99 D.6780 ] [99])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:809 89 {*movdi_internal}
     (nil))
(insn 102 101 103 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:99 D.6780 ] [99])
            (const_int 0 [0]))) lex.yy.c:809 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 103 102 104 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 111)
            (pc))) lex.yy.c:809 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 672 (nil)))
 -> 111)
;;  succ:       12 [6.7%] 
;;              11 [93.3%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 11, loop depth 0, count 0, freq 30, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       10 [93.3%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
(note 104 103 106 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(note 106 104 1663 11 NOTE_INSN_DELETED)
(insn 1663 106 107 11 (set (reg:DI 1 dx [orig:352 yy_buffer_stack_top ] [352])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:809 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 107 1663 108 11 (set (reg/f:DI 1 dx [orig:102 D.6780 ] [102])
        (plus:DI (mult:DI (reg:DI 1 dx [orig:352 yy_buffer_stack_top ] [352])
                (const_int 8 [0x8]))
            (reg/f:DI 0 ax [orig:99 D.6780 ] [99]))) lex.yy.c:809 214 {*leadi}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:99 D.6780 ] [99])
        (nil)))
(insn 108 107 109 11 (set (reg/f:DI 0 ax [orig:103 D.6782 ] [103])
        (mem/f:DI (reg/f:DI 1 dx [orig:102 D.6780 ] [102]) [1 *_42+0 S8 A64])) lex.yy.c:809 89 {*movdi_internal}
     (nil))
(insn 109 108 110 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:103 D.6782 ] [103])
            (const_int 0 [0]))) lex.yy.c:809 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 110 109 111 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 128)
            (pc))) lex.yy.c:809 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8500 (nil)))
 -> 128)
;;  succ:       12 [15.0%]  (FALLTHRU)
;;              13 [85.0%] 
;; lr  out 	 0 [ax] 1 [dx] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 7 [sp]

;; basic block 12, loop depth 0, count 0, freq 7, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       11 [15.0%]  (FALLTHRU)
;;              10 [6.7%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(code_label 111 110 112 12 121 "" [1 uses])
(note 112 111 113 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(call_insn 113 112 115 12 (call (mem:QI (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>) [0 yyensure_buffer_stack S1 A8])
        (const_int 0 [0])) lex.yy.c:810 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yyensure_buffer_stackv") [flags 0x3]  <function_decl 0x7f88bc07c798 yyensure_buffer_stack>)
        (nil))
    (nil))
(note 115 113 116 12 NOTE_INSN_DELETED)
(insn 116 115 1662 12 (set (reg/f:DI 0 ax [orig:355 yy_buffer_stack ] [355])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:811 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (nil)))
(insn 1662 116 117 12 (set (reg:DI 1 dx [orig:354 yy_buffer_stack_top ] [354])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:811 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 117 1662 118 12 (set (reg/f:DI 3 bx [orig:107 D.6780 ] [107])
        (plus:DI (mult:DI (reg:DI 1 dx [orig:354 yy_buffer_stack_top ] [354])
                (const_int 8 [0x8]))
            (reg/f:DI 0 ax [orig:355 yy_buffer_stack ] [355]))) lex.yy.c:811 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:354 yy_buffer_stack_top ] [354])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:355 yy_buffer_stack ] [355])
            (nil))))
(insn 118 117 119 12 (set (reg:SI 4 si)
        (const_int 16384 [0x4000])) lex.yy.c:812 90 {*movsi_internal}
     (nil))
(insn 119 118 120 12 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:812 89 {*movdi_internal}
     (nil))
(call_insn 120 119 122 12 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>) [0 yy_create_buffer S1 A8])
            (const_int 0 [0]))) lex.yy.c:812 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 122 120 124 12 (set (mem/f:DI (reg/f:DI 3 bx [orig:107 D.6780 ] [107]) [1 *_48+0 S8 A64])
        (reg/f:DI 0 ax [orig:109 D.6782 ] [109])) lex.yy.c:812 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:107 D.6780 ] [107])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:109 D.6782 ] [109])
            (nil))))
(note 124 122 125 12 NOTE_INSN_DELETED)
(insn 125 124 1661 12 (set (reg/f:DI 0 ax [orig:358 yy_buffer_stack ] [358])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (nil)))
(insn 1661 125 126 12 (set (reg:DI 1 dx [orig:357 yy_buffer_stack_top ] [357])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 126 1661 127 12 (set (reg/f:DI 1 dx [orig:102 D.6780 ] [102])
        (plus:DI (mult:DI (reg:DI 1 dx [orig:357 yy_buffer_stack_top ] [357])
                (const_int 8 [0x8]))
            (reg/f:DI 0 ax [orig:358 yy_buffer_stack ] [358]))) 214 {*leadi}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:358 yy_buffer_stack ] [358])
        (nil)))
(insn 127 126 128 12 (set (reg/f:DI 0 ax [orig:103 D.6782 ] [103])
        (mem/f:DI (reg/f:DI 1 dx [orig:102 D.6780 ] [102]) [1 *_1030+0 S8 A64])) 89 {*movdi_internal}
     (nil))
;;  succ:       13 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 7 [sp]
;; live  out 	 0 [ax] 1 [dx] 7 [sp]

;; basic block 13, loop depth 0, count 0, freq 32, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       11 [85.0%] 
;;              12 [100.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 7 [sp]
;; lr  use 	 0 [ax] 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 3 [bx] 4 [si]
;; live  in  	 0 [ax] 1 [dx] 7 [sp]
;; live  gen 	 0 [ax] 2 [cx] 3 [bx] 4 [si]
;; live  kill	
(code_label 128 127 129 13 122 "" [1 uses])
(note 129 128 130 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 131 13 (set (reg:SI 2 cx [orig:359 _1033->yy_n_chars ] [359])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:103 D.6782 ] [103])
                (const_int 32 [0x20])) [2 _1033->yy_n_chars+0 S4 A64])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 0 ax [orig:103 D.6782 ] [103])
                (const_int 32 [0x20])) [2 _1033->yy_n_chars+0 S4 A64])
        (nil)))
(insn 131 130 132 13 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 2 cx [orig:359 _1033->yy_n_chars ] [359])) lex.yy.c:1642 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:359 _1033->yy_n_chars ] [359])
        (nil)))
(insn 132 131 133 13 (set (reg/f:DI 3 bx [orig:318 D.6783 ] [318])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:103 D.6782 ] [103])
                (const_int 16 [0x10])) [1 _1033->yy_buf_pos+0 S8 A64])) lex.yy.c:1643 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:103 D.6782 ] [103])
        (nil)))
(insn 133 132 134 13 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 3 bx [orig:318 D.6783 ] [318])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 134 133 135 13 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 3 bx [orig:318 D.6783 ] [318])) lex.yy.c:1643 89 {*movdi_internal}
     (nil))
(insn 135 134 136 13 (set (reg/f:DI 0 ax [orig:360 *_1031 ] [360])
        (mem/f:DI (reg/f:DI 1 dx [orig:102 D.6780 ] [102]) [1 *_1031+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:102 D.6780 ] [102])
        (nil)))
(insn 136 135 137 13 (set (reg/f:DI 0 ax [orig:361 _249->yy_input_file ] [361])
        (mem/f:DI (reg/f:DI 0 ax [orig:360 *_1031 ] [360]) [1 _249->yy_input_file+0 S8 A64])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (nil)))
(insn 137 136 138 13 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 0 ax [orig:361 _249->yy_input_file ] [361])) lex.yy.c:1644 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:361 _249->yy_input_file ] [361])
        (nil)))
(insn 138 137 139 13 (set (reg:DI 4 si)
        (zero_extend:DI (mem:QI (reg/f:DI 3 bx [orig:318 D.6783 ] [318]) [0 *_248+0 S1 A8]))) lex.yy.c:1645 134 {zero_extendqidi2}
     (nil))
(insn 139 138 140 13 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 4 si [orig:320 D.6789 ] [320])) lex.yy.c:1645 93 {*movqi_internal}
     (nil))
;;  succ:       14 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 7 [sp]
;; live  out 	 3 [bx] 4 [si] 7 [sp]

;; basic block 14, loop depth 0, count 0, freq 64, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       13 [100.0%]  (FALLTHRU)
;;              3 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 42 [r13]
;; live  in  	 3 [bx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 42 [r13]
;; live  kill	
(code_label 140 139 141 14 117 "" [1 uses])
(note 141 140 142 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 1738 14 (set (reg:DI 1 dx)
        (sign_extend:DI (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32]))) 142 {*extendsidi2_rex64}
     (nil))
(insn 1738 142 145 14 (set (reg:DI 0 ax)
        (reg:DI 1 dx)) -1
     (nil))
(insn 145 1738 148 14 (set (reg:HI 2 cx [orig:343 D.6786 ] [343])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 1 dx [orig:363 D.6777 ] [363])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])) 92 {*movhi_internal}
     (nil))
(insn 148 145 1438 14 (set (reg:SI 1 dx)
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 1 dx [orig:363 D.6777 ] [363])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16]))) 139 {*zero_extendhisi2}
     (nil))
(insn 1438 148 1802 14 (set (reg:QI 42 r13 [564])
        (const_int 1 [0x1])) lex.yy.c:844 93 {*movqi_internal}
     (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))
(jump_insn 1802 1438 1803 14 (set (pc)
        (label_ref 376)) -1
     (nil)
 -> 376)
;;  succ:       17 [100.0%] 
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]

(barrier 1803 1802 1527)
;; basic block 15, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       51 [98.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx]
;; live  in  	 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	
(code_label 1527 1803 151 15 280 "" [1 uses])
(note 151 1527 152 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 152 151 1739 15 (set (reg:DI 1 dx)
        (sign_extend:DI (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32]))) 142 {*extendsidi2_rex64}
     (nil))
(insn 1739 152 155 15 (set (reg:DI 0 ax)
        (reg:DI 1 dx)) -1
     (nil))
(insn 155 1739 158 15 (set (reg:HI 2 cx [orig:343 D.6786 ] [343])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 1 dx [orig:367 D.6777 ] [367])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])) 92 {*movhi_internal}
     (nil))
(insn 158 155 396 15 (set (reg:SI 1 dx)
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 1 dx [orig:367 D.6777 ] [367])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16]))) 139 {*zero_extendhisi2}
     (nil))
;;  succ:       16 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]

;; basic block 16, loop depth 0, count 0, freq 17, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       47 [100.0%] 
;;              45 [100.0%] 
;;              15 [100.0%]  (FALLTHRU)
;;              92 [100.0%] 
;;              49 [100.0%] 
;;              46 [100.0%] 
;;              93 [100.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx] 4 [si]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
;; live  gen 	 3 [bx] 4 [si]
;; live  kill	
(code_label 396 158 159 16 188 "" [6 uses])
(note 159 396 160 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 16 (set (reg/f:DI 3 bx [orig:318 D.6783 ] [318])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 161 160 970 16 (set (reg:DI 4 si)
        (zero_extend:DI (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(note 970 161 376 16 NOTE_INSN_DELETED)
;;  succ:       17 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]

;; basic block 17, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       16 [100.0%]  (FALLTHRU)
;;              14 [100.0%] 
;;              43 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; lr  use 	 3 [bx] 4 [si] 7 [sp]
;; lr  def 	 41 [r12]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; live  gen 	 41 [r12]
;; live  kill	
(code_label 376 970 164 17 186 "" [2 uses])
(note 164 376 165 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 165 164 166 17 (var_location:DI D#16 (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) lex.yy.c:827 -1
     (nil))
(debug_insn 166 165 167 17 (var_location:DI yy_cp (debug_expr:DI D#16)) lex.yy.c:827 -1
     (nil))
(insn 167 166 168 17 (set (mem:QI (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88]) [0 *yy_cp_916+0 S1 A8])
        (reg:QI 4 si [orig:320 D.6789 ] [320])) lex.yy.c:830 93 {*movqi_internal}
     (nil))
(debug_insn 168 167 169 17 (var_location:DI yy_bp (debug_expr:DI D#16)) lex.yy.c:835 -1
     (nil))
(debug_insn 169 168 170 17 (var_location:SI D#15 (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) lex.yy.c:837 -1
     (nil))
(debug_insn 170 169 18 17 (var_location:SI yy_current_state (debug_expr:SI D#15)) lex.yy.c:837 -1
     (nil))
(insn 18 170 1804 17 (set (reg/v/f:DI 41 r12 [orig:89 yy_cp ] [89])
        (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])) lex.yy.c:830 89 {*movdi_internal}
     (nil))
(jump_insn 1804 18 1805 17 (set (pc)
        (label_ref 181)) -1
     (nil)
 -> 181)
;;  succ:       19 [100.0%] 
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13]

(barrier 1805 1804 822)
;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       104 [100.0%] 
;;              151 [100.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 4 [si]
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx] 2 [cx] 4 [si]
;; live  kill	
(code_label 822 1805 173 18 202 "" [2 uses])
(note 173 822 174 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 176 18 (set (reg:DI 4 si)
        (zero_extend:DI (mem:QI (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88]) [0 *yy_cp_147+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 176 174 177 18 (set (reg:DI 1 dx [orig:371 yy_current_state ] [371])
        (sign_extend:DI (reg/v:SI 0 ax [orig:87 yy_current_state ] [87]))) 142 {*extendsidi2_rex64}
     (nil))
(insn 177 176 180 18 (set (reg:HI 2 cx [orig:343 D.6786 ] [343])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 1 dx [orig:371 yy_current_state ] [371])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])) 92 {*movhi_internal}
     (nil))
(insn 180 177 181 18 (set (reg:SI 1 dx)
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 1 dx [orig:371 yy_current_state ] [371])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16]))) 139 {*zero_extendhisi2}
     (nil))
;;  succ:       19 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13]

;; basic block 19, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       18 [100.0%]  (FALLTHRU,DFS_BACK)
;;              17 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 5 [di] 6 [bp] 39 [r10] 40 [r11]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 5 [di] 6 [bp] 39 [r10] 40 [r11]
;; live  kill	
(code_label 181 180 182 19 124 "" [1 uses])
(note 182 181 183 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 19 (set (reg:SI 39 r10 [orig:314 yy_last_accepting_state_lsm.193 ] [314])
        (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 184 183 1972 19 (set (reg/f:DI 6 bp [orig:316 yy_last_accepting_cpos_lsm.191 ] [316])
        (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 1972 184 1973 19 (parallel [
            (set (reg:DI 40 r11 [orig:313 yy_last_accepting_state_lsm.194 ] [313])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:830 -1
     (nil))
(insn 1973 1972 255 19 (parallel [
            (set (reg:DI 5 di [orig:315 yy_last_accepting_cpos_lsm.192 ] [315])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:830 -1
     (nil))
;;  succ:       20 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]

;; basic block 20, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       19 [100.0%]  (FALLTHRU)
;;              26 [100.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 42 [r13]
;; lr  def 	 2 [cx] 5 [di] 6 [bp] 17 [flags] 39 [r10] 40 [r11]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  gen 	 2 [cx] 5 [di] 6 [bp] 17 [flags] 39 [r10] 40 [r11]
;; live  kill	
(code_label 255 1973 185 20 130 "" [1 uses])
(note 185 255 186 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(debug_insn 186 185 187 20 (var_location:DI yy_bp (reg/v/f:DI 41 r12 [orig:89 yy_cp ] [89])) -1
     (nil))
(debug_insn 187 186 188 20 (var_location:DI yy_cp (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])) -1
     (nil))
(debug_insn 188 187 190 20 (var_location:SI yy_current_state (reg/v:SI 0 ax [orig:87 yy_current_state ] [87])) -1
     (nil))
(note 190 188 1409 20 NOTE_INSN_DELETED)
(debug_insn 1409 190 192 20 (var_location:QI D#23 (mem/u/j:QI (plus:DI (reg:DI 4 si [orig:376 D.6785 ] [376])
            (symbol_ref:DI ("_ZL5yy_ec") [flags 0x2]  <var_decl 0x7f88bc080b40 yy_ec>)) [0 yy_ec S1 A8])) -1
     (nil))
(note 192 1409 193 20 NOTE_INSN_DELETED)
(debug_insn 193 192 1433 20 (var_location:QI yy_c (debug_expr:QI D#23)) lex.yy.c:841 -1
     (nil))
(insn 1433 193 1434 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 2 cx [orig:343 D.6786 ] [343])
            (const_int 0 [0]))) lex.yy.c:844 2 {*cmphi_ccno_1}
     (expr_list:REG_DEAD (reg:HI 2 cx [orig:343 D.6786 ] [343])
        (nil)))
(insn 1434 1433 1436 20 (set (reg:SI 39 r10 [orig:314 yy_last_accepting_state_lsm.193 ] [314])
        (if_then_else:SI (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:SI 39 r10 [orig:314 yy_last_accepting_state_lsm.193 ] [314])
            (reg/v:SI 0 ax [orig:87 yy_current_state ] [87]))) lex.yy.c:844 953 {*movsicc_noc}
     (nil))
(insn 1436 1434 1725 20 (set (reg/f:DI 6 bp [orig:316 yy_last_accepting_cpos_lsm.191 ] [316])
        (if_then_else:DI (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg/f:DI 6 bp [orig:316 yy_last_accepting_cpos_lsm.191 ] [316])
            (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88]))) lex.yy.c:844 954 {*movdicc_noc}
     (nil))
(insn 1725 1436 1726 20 (set (reg:SI 40 r11 [orig:313 yy_last_accepting_state_lsm.194 ] [313])
        (if_then_else:SI (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:SI 40 r11 [orig:313 yy_last_accepting_state_lsm.194 ] [313])
            (reg:SI 42 r13 [564]))) lex.yy.c:844 953 {*movsicc_noc}
     (nil))
(insn 1726 1725 1389 20 (set (reg:SI 5 di [orig:315 yy_last_accepting_cpos_lsm.192 ] [315])
        (if_then_else:SI (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:SI 5 di [orig:315 yy_last_accepting_cpos_lsm.192 ] [315])
            (reg:SI 42 r13 [564]))) lex.yy.c:844 953 {*movsicc_noc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 1389 1726 1806 20 (set (reg:DI 2 cx)
        (zero_extend:DI (mem/u/j:QI (plus:DI (reg:DI 4 si [orig:376 D.6785 ] [376])
                    (symbol_ref:DI ("_ZL5yy_ec") [flags 0x2]  <var_decl 0x7f88bc080b40 yy_ec>)) [0 yy_ec S1 A8]))) 134 {zero_extendqidi2}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:376 D.6785 ] [376])
        (nil)))
(jump_insn 1806 1389 1807 20 (set (pc)
        (label_ref 205)) -1
     (nil)
 -> 205)
;;  succ:       22 [100.0%] 
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]

(barrier 1807 1806 223)
;; basic block 21, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       23 [50.0%] 
;;              24 [100.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx]
;; live  kill	
(code_label 223 1807 201 21 128 "" [2 uses])
(note 201 223 203 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 203 201 204 21 (set (reg:DI 1 dx [orig:378 yy_current_state ] [378])
        (sign_extend:DI (reg/v:SI 0 ax [orig:87 yy_current_state ] [87]))) 142 {*extendsidi2_rex64}
     (nil))
(insn 204 203 205 21 (set (reg:SI 1 dx)
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 1 dx [orig:378 yy_current_state ] [378])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16]))) 139 {*zero_extendhisi2}
     (nil))
;;  succ:       22 [100.0%]  (FALLTHRU,DFS_BACK)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]

;; basic block 22, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       21 [100.0%]  (FALLTHRU,DFS_BACK)
;;              20 [100.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;; lr  def 	 1 [dx] 4 [si] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]
(code_label 205 204 206 22 126 "" [1 uses])
(note 206 205 207 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(debug_insn 207 206 208 22 (var_location:QI yy_c (debug_expr:QI D#23)) -1
     (nil))
(debug_insn 208 207 212 22 (var_location:SI yy_current_state (reg/v:SI 0 ax [orig:87 yy_current_state ] [87])) -1
     (nil))
(insn 212 208 213 22 (parallel [
            (set (reg:SI 1 dx [orig:382 D.6777 ] [382])
                (plus:SI (reg:SI 1 dx [orig:380 D.6777 ] [380])
                    (reg:SI 2 cx [orig:539 D.6777 ] [539])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:847 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 213 212 214 22 (set (reg:DI 4 si [orig:383 D.6777 ] [383])
        (sign_extend:DI (reg:SI 1 dx [orig:382 D.6777 ] [382]))) lex.yy.c:847 142 {*extendsidi2_rex64}
     (nil))
(insn 214 213 215 22 (set (reg:SI 4 si [orig:384 D.6777 ] [384])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 4 si [orig:383 D.6777 ] [383])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL6yy_chk") [flags 0x2]  <var_decl 0x7f88bc0806c0 yy_chk>)) [3 yy_chk S2 A16]))) lex.yy.c:847 146 {extendhisi2}
     (nil))
(insn 215 214 216 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 0 ax [orig:87 yy_current_state ] [87])
            (reg:SI 4 si [orig:384 D.6777 ] [384]))) lex.yy.c:847 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 4 si [orig:384 D.6777 ] [384])
        (nil)))
(jump_insn 216 215 217 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 234)
            (pc))) lex.yy.c:847 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 234)
;;  succ:       25 [9.0%]  (LOOP_EXIT)
;;              23 [91.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]

;; basic block 23, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       22 [91.0%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(note 217 216 219 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 219 217 220 23 (set (reg:DI 0 ax [orig:386 yy_current_state ] [386])
        (sign_extend:DI (reg/v:SI 0 ax [orig:87 yy_current_state ] [87]))) lex.yy.c:849 142 {*extendsidi2_rex64}
     (nil))
(note 220 219 221 23 NOTE_INSN_DELETED)
(insn 221 220 222 23 (set (reg/v:SI 0 ax [orig:87 yy_current_state ] [87])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 0 ax [orig:386 yy_current_state ] [386])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL6yy_def") [flags 0x2]  <var_decl 0x7f88bc080090 yy_def>)) [3 yy_def S2 A16]))) lex.yy.c:849 146 {extendhisi2}
     (nil))
(debug_insn 222 221 224 23 (var_location:SI yy_current_state (reg/v:SI 0 ax [orig:87 yy_current_state ] [87])) lex.yy.c:849 -1
     (nil))
(insn 224 222 225 23 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:SI 0 ax [orig:87 yy_current_state ] [87])
            (const_int 101 [0x65]))) lex.yy.c:850 7 {*cmpsi_1}
     (nil))
(jump_insn 225 224 226 23 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 223)
            (pc))) lex.yy.c:850 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 223)
;;  succ:       24 [50.0%]  (FALLTHRU)
;;              21 [50.0%] 
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]

;; basic block 24, loop depth 0, count 0, freq 4550, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       23 [50.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 2 [cx]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  gen 	 2 [cx]
;; live  kill	
(note 226 225 1408 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1408 226 230 24 (var_location:QI D#23 (mem/u/j:QI (plus:DI (reg:DI 2 cx [orig:388 D.6785 ] [388])
            (symbol_ref:DI ("_ZL7yy_meta") [flags 0x2]  <var_decl 0x7f88bc080cf0 yy_meta>)) [0 yy_meta S1 A8])) -1
     (nil))
(note 230 1408 231 24 NOTE_INSN_DELETED)
(debug_insn 231 230 1390 24 (var_location:QI yy_c (debug_expr:QI D#23)) lex.yy.c:851 -1
     (nil))
(insn 1390 231 1808 24 (set (reg:DI 2 cx)
        (zero_extend:DI (mem/u/j:QI (plus:DI (reg:DI 2 cx [orig:388 D.6785 ] [388])
                    (symbol_ref:DI ("_ZL7yy_meta") [flags 0x2]  <var_decl 0x7f88bc080cf0 yy_meta>)) [0 yy_meta S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(jump_insn 1808 1390 1809 24 (set (pc)
        (label_ref 223)) -1
     (nil)
 -> 223)
;;  succ:       21 [100.0%] 
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]

(barrier 1809 1808 234)
;; basic block 25, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       22 [9.0%]  (LOOP_EXIT)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 234 1809 235 25 127 "" [1 uses])
(note 235 234 240 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 240 235 241 25 (set (reg:DI 1 dx [orig:393 D.6785 ] [393])
        (zero_extend:DI (reg:SI 1 dx [orig:382 D.6777 ] [382]))) lex.yy.c:853 133 {*zero_extendsidi2}
     (nil))
(insn 241 240 1740 25 (set (reg:DI 2 cx)
        (zero_extend:DI (mem/u:HI (plus:DI (mult:DI (reg:DI 1 dx [orig:393 D.6785 ] [393])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL6yy_nxt") [flags 0x2]  <var_decl 0x7f88bc0803f0 yy_nxt>)) [3 yy_nxt S2 A16]))) lex.yy.c:853 135 {zero_extendhidi2}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:393 D.6785 ] [393])
        (nil)))
(insn 1740 241 242 25 (set (reg:DI 0 ax)
        (reg:DI 2 cx)) lex.yy.c:853 -1
     (nil))
(debug_insn 242 1740 243 25 (var_location:SI yy_current_state (reg/v:SI 0 ax [orig:87 yy_current_state ] [87])) lex.yy.c:853 -1
     (nil))
(insn 243 242 244 25 (parallel [
            (set (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])
                (plus:DI (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:854 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 244 243 247 25 (var_location:DI yy_cp (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])) lex.yy.c:854 -1
     (nil))
(insn 247 244 248 25 (set (reg:SI 1 dx)
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 2 cx [orig:538 yy_current_state ] [538])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16]))) lex.yy.c:856 139 {*zero_extendhisi2}
     (nil))
(insn 248 247 249 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 1 dx [orig:321 D.6787 ] [321])
            (const_int 190 [0xbe]))) lex.yy.c:856 6 {*cmphi_1}
     (nil))
(jump_insn 249 248 250 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 258)
            (pc))) lex.yy.c:856 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 258)
;;  succ:       27 [9.0%]  (LOOP_EXIT)
;;              26 [91.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]

;; basic block 26, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       25 [91.0%]  (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 2 [cx] 3 [bx] 7 [sp]
;; lr  def 	 2 [cx] 4 [si]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  gen 	 2 [cx] 4 [si]
;; live  kill	
(note 250 249 251 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 254 26 (set (reg:DI 4 si)
        (zero_extend:DI (mem:QI (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88]) [0 MEM[base: yy_cp_82, offset: 0B]+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 254 251 1810 26 (set (reg:HI 2 cx [orig:343 D.6786 ] [343])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 2 cx [orig:538 yy_current_state ] [538])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])) 92 {*movhi_internal}
     (nil))
(jump_insn 1810 254 1811 26 (set (pc)
        (label_ref 255)) -1
     (nil)
 -> 255)
;;  succ:       20 [100.0%] 
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]

(barrier 1811 1810 258)
;; basic block 27, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 26, next block 28, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       25 [9.0%]  (LOOP_EXIT)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 258 1811 259 27 129 "" [1 uses])
(note 259 258 260 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 5 di [orig:315 yy_last_accepting_cpos_lsm.192 ] [315])
            (const_int 0 [0]))) 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 5 di [orig:315 yy_last_accepting_cpos_lsm.192 ] [315])
        (nil)))
(jump_insn 261 260 262 27 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 264)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 264)
;;  succ:       29 [100.0%] 
;;              28 (FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]

;; basic block 28, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 27, next block 29, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  gen 	
;; live  kill	
(note 262 261 263 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 263 262 264 28 (set (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])
        (reg/f:DI 6 bp [orig:316 yy_last_accepting_cpos_lsm.191 ] [316])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [orig:316 yy_last_accepting_cpos_lsm.191 ] [316])
        (nil)))
;;  succ:       29 [100.0%]  (FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  out 	 2 [cx] 3 [bx] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]

;; basic block 29, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 28, next block 30, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       28 [100.0%]  (FALLTHRU)
;;              27 [100.0%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 40 [r11]
;; lr  def 	 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 264 263 265 29 131 "" [1 uses])
(note 265 264 266 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 267 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 40 r11 [orig:313 yy_last_accepting_state_lsm.194 ] [313])
            (const_int 0 [0]))) 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 40 r11 [orig:313 yy_last_accepting_state_lsm.194 ] [313])
        (nil)))
(jump_insn 267 266 268 29 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 270)
            (pc))) 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 270)
;;  succ:       31 [100.0%] 
;;              30 (FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 7 [sp] 39 [r10] 41 [r12] 42 [r13]
;; live  out 	 2 [cx] 3 [bx] 7 [sp] 39 [r10] 41 [r12] 42 [r13]

;; basic block 30, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 29, next block 31, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       29 (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 7 [sp] 39 [r10] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp] 39 [r10]
;; lr  def 	
;; live  in  	 2 [cx] 3 [bx] 7 [sp] 39 [r10] 41 [r12] 42 [r13]
;; live  gen 	
;; live  kill	
(note 268 267 269 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 269 268 270 30 (set (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])
        (reg:SI 39 r10 [orig:314 yy_last_accepting_state_lsm.193 ] [314])) 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 39 r10 [orig:314 yy_last_accepting_state_lsm.193 ] [314])
        (nil)))
;;  succ:       31 [100.0%]  (FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]

;; basic block 31, loop depth 0, count 0, freq 81, maybe hot
;;  prev block 30, next block 32, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       30 [100.0%]  (FALLTHRU)
;;              29 [100.0%] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx]
;; live  kill	
(code_label 270 269 271 31 132 "" [1 uses])
(note 271 270 274 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 274 271 278 31 (set (reg:SI 1 dx)
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 2 cx [orig:538 yy_current_state ] [538])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16]))) 146 {extendhisi2}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:538 yy_current_state ] [538])
        (nil)))
;;  succ:       32 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]

;; basic block 32, loop depth 0, count 0, freq 83, maybe hot
;;  prev block 31, next block 33, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       31 [100.0%]  (FALLTHRU)
;;              102 [28.0%] 
;;              44 [100.0%] 
;;              103 [98.0%] 
;;              152 [100.0%] 
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 278 274 279 32 133 "" [4 uses])
(note 279 278 280 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(debug_insn 280 279 281 32 (var_location:DI yy_bp (reg/v/f:DI 41 r12 [orig:89 yy_cp ] [89])) -1
     (nil))
(debug_insn 281 280 282 32 (var_location:DI yy_cp (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])) -1
     (nil))
(debug_insn 282 281 284 32 (var_location:SI yy_current_state (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 284 282 285 32 (var_location:SI yy_act (reg/v:SI 1 dx [orig:90 yy_act ] [90])) lex.yy.c:859 -1
     (nil))
(insn 285 284 286 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:90 yy_act ] [90])
            (const_int 0 [0]))) lex.yy.c:860 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 286 285 287 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 296)
            (pc))) lex.yy.c:860 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 296)
;;  succ:       33 [50.0%]  (FALLTHRU)
;;              34 [50.0%] 
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]

;; basic block 33, loop depth 0, count 0, freq 42, maybe hot
;;  prev block 32, next block 34, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       32 [50.0%]  (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
(note 287 286 288 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 288 287 289 33 (set (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])
        (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])) lex.yy.c:862 89 {*movdi_internal}
     (nil))
(debug_insn 289 288 290 33 (var_location:DI yy_cp (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])) lex.yy.c:862 -1
     (nil))
(debug_insn 290 289 292 33 (var_location:SI yy_current_state (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])) lex.yy.c:863 -1
     (nil))
(note 292 290 293 33 NOTE_INSN_DELETED)
(insn 293 292 294 33 (set (reg:DI 0 ax [orig:401 yy_last_accepting_state ] [401])
        (sign_extend:DI (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32]))) lex.yy.c:864 142 {*extendsidi2_rex64}
     (nil))
(insn 294 293 295 33 (set (reg/v:SI 1 dx [orig:90 yy_act ] [90])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 0 ax [orig:401 yy_last_accepting_state ] [401])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16]))) lex.yy.c:864 146 {extendhisi2}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:401 yy_last_accepting_state ] [401])
        (nil)))
(debug_insn 295 294 296 33 (var_location:SI yy_act (reg/v:SI 1 dx [orig:90 yy_act ] [90])) lex.yy.c:864 -1
     (nil))
;;  succ:       34 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]

;; basic block 34, loop depth 0, count 0, freq 83, maybe hot
;;  prev block 33, next block 35, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       32 [50.0%] 
;;              33 [100.0%]  (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
(code_label 296 295 297 34 134 "" [1 uses])
(note 297 296 298 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(debug_insn 298 297 299 34 (var_location:SI yy_act (reg/v:SI 1 dx [orig:90 yy_act ] [90])) -1
     (nil))
(debug_insn 299 298 300 34 (var_location:DI yy_cp (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])) -1
     (nil))
(insn 300 299 1665 34 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/v/f:DI 41 r12 [orig:89 yy_cp ] [89])) lex.yy.c:867 89 {*movdi_internal}
     (nil))
(insn 1665 300 302 34 (set (reg:DI 0 ax [403])
        (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])) lex.yy.c:867 89 {*movdi_internal}
     (nil))
(insn 302 1665 303 34 (parallel [
            (set (reg:DI 0 ax [403])
                (minus:DI (reg:DI 0 ax [403])
                    (reg/v/f:DI 41 r12 [orig:89 yy_cp ] [89])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:867 261 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])
            (nil))))
(insn 303 302 304 34 (set (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])
        (reg:DI 0 ax [403])) lex.yy.c:867 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [403])
        (nil)))
(insn 304 303 305 34 (set (reg:QI 0 ax [orig:404 *yy_cp_6 ] [404])
        (mem:QI (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88]) [0 *yy_cp_6+0 S1 A8])) lex.yy.c:867 93 {*movqi_internal}
     (expr_list:REG_EQUIV (mem:QI (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88]) [0 *yy_cp_6+0 S1 A8])
        (nil)))
(insn 305 304 306 34 (set (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (reg:QI 0 ax [orig:404 *yy_cp_6 ] [404])) lex.yy.c:867 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:404 *yy_cp_6 ] [404])
        (nil)))
(insn 306 305 307 34 (set (mem:QI (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88]) [0 *yy_cp_6+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:867 93 {*movqi_internal}
     (nil))
(insn 307 306 308 34 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])) lex.yy.c:867 89 {*movdi_internal}
     (nil))
(insn 308 307 309 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 1 dx [orig:90 yy_act ] [90])
            (const_int 46 [0x2e]))) lex.yy.c:869 7 {*cmpsi_1}
     (nil))
(jump_insn 309 308 310 34 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 347)
            (pc))) lex.yy.c:869 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 347)
;;  succ:       35 [72.0%]  (FALLTHRU)
;;              40 [28.0%] 
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]

;; basic block 35, loop depth 0, count 0, freq 60, maybe hot
;;  prev block 34, next block 36, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       34 [72.0%]  (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(note 310 309 312 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 312 310 1970 35 (set (reg:DI 0 ax [orig:406 yy_act ] [406])
        (sign_extend:DI (reg/v:SI 1 dx [orig:90 yy_act ] [90]))) lex.yy.c:869 142 {*extendsidi2_rex64}
     (nil))
(insn 1970 312 1971 35 (set (reg:SI 39 r10)
        (mem/u:SI (plus:DI (mult:DI (reg:DI 0 ax [orig:406 yy_act ] [406])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("_ZL21yy_rule_can_match_eol") [flags 0x2]  <var_decl 0x7f88bc080750 yy_rule_can_match_eol>)) [2 yy_rule_can_match_eol S4 A32])) lex.yy.c:869 -1
     (nil))
(insn 1971 1970 314 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 39 r10)
            (const_int 0 [0]))) lex.yy.c:869 -1
     (nil))
(jump_insn 314 1971 315 35 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 347)
            (pc))) lex.yy.c:869 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 347)
;;  succ:       36 [50.0%]  (FALLTHRU)
;;              40 [50.0%] 
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]

;; basic block 36, loop depth 0, count 0, freq 30, maybe hot
;;  prev block 35, next block 37, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       35 [50.0%]  (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 4 [si] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 2 [cx] 4 [si] 17 [flags]
;; live  kill	
(note 315 314 316 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(debug_insn 316 315 317 36 (var_location:DI yyl (const_int 0 [0])) -1
     (nil))
(insn 317 316 326 36 (set (reg:DI 4 si [orig:307 D.6781 ] [307])
        (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])) lex.yy.c:872 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])
        (nil)))
(insn 326 317 1724 36 (set (reg:DI 0 ax [orig:311 ivtmp.210 ] [311])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 1724 326 318 36 (set (reg:DI 2 cx [orig:327 D.6796 ] [327])
        (plus:DI (reg:DI 0 ax [orig:311 ivtmp.210 ] [311])
            (reg:DI 4 si [orig:307 D.6781 ] [307]))) 214 {*leadi}
     (nil))
(insn 318 1724 319 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 4 si [orig:307 D.6781 ] [307])
            (const_int 0 [0]))) lex.yy.c:872 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:307 D.6781 ] [307])
        (nil)))
(jump_insn 319 318 1472 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 347)
            (pc))) lex.yy.c:872 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 347)
;;  succ:       40 [9.0%] 
;;              37 [91.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]

;; basic block 37, loop depth 0, count 0, freq 303, maybe hot
;;  prev block 36, next block 38, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       36 [91.0%]  (FALLTHRU)
;;              39 [91.0%]  (DFS_BACK)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 1472 319 1443 37 268 "" [1 uses])
(note 1443 1472 330 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(debug_insn 330 1443 331 37 (var_location:DI yyl (minus:DI (reg:DI 0 ax [orig:311 ivtmp.210 ] [311])
        (debug_expr:DI D#21))) -1
     (nil))
(insn 331 330 332 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (reg:DI 0 ax [orig:311 ivtmp.210 ] [311]) [0 MEM[base: _324, offset: 0B]+0 S1 A8])
            (const_int 10 [0xa]))) lex.yy.c:873 5 {*cmpqi_1}
     (nil))
(jump_insn 332 331 333 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 335)
            (pc))) lex.yy.c:873 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 335)
;;  succ:       38 [28.0%]  (FALLTHRU)
;;              39 [72.0%] 
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]

;; basic block 38, loop depth 0, count 0, freq 85, maybe hot
;;  prev block 37, next block 39, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       37 [28.0%]  (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	
;; live  kill	 17 [flags]
(note 333 332 334 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 334 333 335 38 (parallel [
            (set (mem/c:SI (symbol_ref:DI ("yylineno") [flags 0x2]  <var_decl 0x7f88bc0807e0 yylineno>) [2 yylineno+0 S4 A32])
                (plus:SI (mem/c:SI (symbol_ref:DI ("yylineno") [flags 0x2]  <var_decl 0x7f88bc0807e0 yylineno>) [2 yylineno+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:875 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       39 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]

;; basic block 39, loop depth 0, count 0, freq 303, maybe hot
;;  prev block 38, next block 40, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       37 [72.0%] 
;;              38 [100.0%]  (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
(code_label 335 334 336 39 138 "" [1 uses])
(note 336 335 337 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(debug_insn 337 336 339 39 (var_location:DI D#19 (plus:DI (minus:DI (reg:DI 0 ax [orig:311 ivtmp.210 ] [311])
            (debug_expr:DI D#21))
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 339 337 340 39 (var_location:DI yyl (debug_expr:DI D#19)) -1
     (nil))
(insn 340 339 341 39 (parallel [
            (set (reg:DI 0 ax [orig:311 ivtmp.210 ] [311])
                (plus:DI (reg:DI 0 ax [orig:311 ivtmp.210 ] [311])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 341 340 342 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:311 ivtmp.210 ] [311])
            (reg:DI 2 cx [orig:327 D.6796 ] [327]))) lex.yy.c:872 8 {*cmpdi_1}
     (nil))
(jump_insn 342 341 347 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1472)
            (pc))) lex.yy.c:872 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 1472)
;;  succ:       40 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              37 [91.0%]  (DFS_BACK)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]

;; basic block 40, loop depth 0, count 0, freq 84, maybe hot
;;  prev block 39, next block 41, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       39 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              36 [9.0%] 
;;              34 [28.0%] 
;;              35 [50.0%] 
;;              150 [100.0%] 
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 347 342 348 40 137 "" [4 uses])
(note 348 347 349 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(debug_insn 349 348 350 40 (var_location:SI yy_act (reg/v:SI 1 dx [orig:90 yy_act ] [90])) -1
     (nil))
(insn 350 349 351 40 (set (reg:CC 17 flags)
        (compare:CC (reg/v:SI 1 dx [orig:90 yy_act ] [90])
            (const_int 49 [0x31]))) lex.yy.c:881 7 {*cmpsi_1}
     (nil))
(jump_insn 351 350 1350 40 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1218)
            (pc))) lex.yy.c:881 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 222 (nil)))
 -> 1218)
;;  succ:       153 [2.2%]  (LOOP_EXIT)
;;              41 [97.8%]  (FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]

;; basic block 41, loop depth 0, count 0, freq 82, maybe hot
;;  prev block 40, next block 42, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       40 [97.8%]  (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 1 [dx] 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx]
;; live  kill	
(note 1350 351 352 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 352 1350 354 41 (set (reg:DI 1 dx [orig:407 yy_act ] [407])
        (zero_extend:DI (reg/v:SI 1 dx [orig:90 yy_act ] [90]))) lex.yy.c:881 133 {*zero_extendsidi2}
     (nil))
(note 354 352 355 41 NOTE_INSN_DELETED)
(jump_insn 355 354 356 41 (parallel [
            (set (pc)
                (mem/u/c:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:407 yy_act ] [407])
                            (const_int 8 [0x8]))
                        (label_ref:DI 357)) [0  S8 A8]))
            (use (label_ref 357))
        ]) lex.yy.c:881 658 {*tablejump_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:407 yy_act ] [407])
        (insn_list:REG_LABEL_OPERAND 357 (nil)))
 -> 357)
;;  succ:       91 [2.3%]  (LOOP_EXIT)
;;              44 [2.3%]  (LOOP_EXIT)
;;              45 [2.3%]  (LOOP_EXIT)
;;              43 [2.3%]  (LOOP_EXIT)
;;              50 [2.3%]  (LOOP_EXIT)
;;              46 [2.3%]  (LOOP_EXIT)
;;              49 [2.3%]  (LOOP_EXIT)
;;              47 [2.3%]  (LOOP_EXIT)
;;              94 [2.3%] 
;;              48 [2.3%]  (LOOP_EXIT)
;;              93 [2.3%]  (LOOP_EXIT)
;;              92 [2.3%]  (LOOP_EXIT)
;;              53 [2.3%]  (LOOP_EXIT)
;;              56 [2.3%]  (LOOP_EXIT)
;;              60 [2.3%]  (LOOP_EXIT)
;;              63 [2.3%]  (LOOP_EXIT)
;;              64 [2.3%]  (LOOP_EXIT)
;;              66 [2.3%]  (LOOP_EXIT)
;;              67 [2.3%]  (LOOP_EXIT)
;;              154 [2.3%]  (LOOP_EXIT)
;;              155 [2.3%]  (LOOP_EXIT)
;;              42 [2.3%]  (LOOP_EXIT)
;;              69 [2.3%]  (LOOP_EXIT)
;;              70 [2.3%]  (LOOP_EXIT)
;;              71 [2.3%]  (LOOP_EXIT)
;;              72 [2.3%]  (LOOP_EXIT)
;;              73 [2.3%]  (LOOP_EXIT)
;;              74 [2.3%]  (LOOP_EXIT)
;;              75 [2.3%]  (LOOP_EXIT)
;;              76 [2.3%]  (LOOP_EXIT)
;;              77 [2.3%]  (LOOP_EXIT)
;;              78 [2.3%]  (LOOP_EXIT)
;;              79 [2.3%]  (LOOP_EXIT)
;;              80 [2.3%]  (LOOP_EXIT)
;;              81 [2.3%]  (LOOP_EXIT)
;;              82 [2.3%]  (LOOP_EXIT)
;;              83 [2.3%]  (LOOP_EXIT)
;;              84 [2.3%]  (LOOP_EXIT)
;;              85 [2.3%]  (LOOP_EXIT)
;;              86 [2.3%]  (LOOP_EXIT)
;;              87 [2.3%]  (LOOP_EXIT)
;;              88 [2.3%]  (LOOP_EXIT)
;;              89 [2.3%]  (LOOP_EXIT)
;;              90 [2.3%]  (LOOP_EXIT)
;; lr  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 7 [sp] 41 [r12] 42 [r13]

(barrier 356 355 357)
;; Insn is not within a basic block
(code_label 357 356 358 142 "" [2 uses])
;; Insn is not within a basic block
(jump_table_data 358 357 359 (addr_vec:DI [
            (label_ref:DI 379)
            (label_ref:DI 393)
            (label_ref:DI 364)
            (label_ref:DI 364)
            (label_ref:DI 399)
            (label_ref:DI 1768)
            (label_ref:DI 416)
            (label_ref:DI 364)
            (label_ref:DI 421)
            (label_ref:DI 364)
            (label_ref:DI 364)
            (label_ref:DI 451)
            (label_ref:DI 474)
            (label_ref:DI 499)
            (label_ref:DI 518)
            (label_ref:DI 535)
            (label_ref:DI 551)
            (label_ref:DI 560)
            (label_ref:DI 1223)
            (label_ref:DI 1330)
            (label_ref:DI 360)
            (label_ref:DI 584)
            (label_ref:DI 588)
            (label_ref:DI 592)
            (label_ref:DI 596)
            (label_ref:DI 600)
            (label_ref:DI 604)
            (label_ref:DI 608)
            (label_ref:DI 612)
            (label_ref:DI 616)
            (label_ref:DI 620)
            (label_ref:DI 624)
            (label_ref:DI 628)
            (label_ref:DI 632)
            (label_ref:DI 636)
            (label_ref:DI 640)
            (label_ref:DI 644)
            (label_ref:DI 648)
            (label_ref:DI 652)
            (label_ref:DI 656)
            (label_ref:DI 660)
            (label_ref:DI 664)
            (label_ref:DI 668)
            (label_ref:DI 672)
            (label_ref:DI 678)
            (label_ref:DI 691)
            (label_ref:DI 707)
            (label_ref:DI 437)
            (label_ref:DI 437)
            (label_ref:DI 437)
        ]))
(barrier 359 358 360)
;; basic block 42, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 41, next block 43, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 360 359 361 42 158 "" [1 uses])
(note 361 360 44 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 44 361 1812 42 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 278 [0x116])) mycc.l:77 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 278 [0x116])
        (nil)))
(jump_insn 1812 44 1813 42 (set (pc)
        (label_ref 1225)) -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1813 1812 364)
;; basic block 43, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 42, next block 44, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si]
;; live  in  	 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si]
;; live  kill	
(code_label 364 1813 365 43 144 "" [5 uses])
(note 365 364 366 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 366 365 367 43 (set (reg:DI 4 si)
        (zero_extend:DI (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8]))) 134 {zero_extendqidi2}
     (nil))
(insn 367 366 1741 43 (set (reg:DI 1 dx)
        (sign_extend:DI (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32]))) 142 {*extendsidi2_rex64}
     (nil))
(insn 1741 367 370 43 (set (reg:DI 0 ax)
        (reg:DI 1 dx)) -1
     (nil))
(insn 370 1741 373 43 (set (reg:HI 2 cx [orig:343 D.6786 ] [343])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 1 dx [orig:411 D.6777 ] [411])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])) 92 {*movhi_internal}
     (nil))
(insn 373 370 374 43 (set (reg:SI 1 dx)
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 1 dx [orig:411 D.6777 ] [411])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16]))) 139 {*zero_extendhisi2}
     (nil))
(insn 374 373 1814 43 (set (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(jump_insn 1814 374 1815 43 (set (pc)
        (label_ref 376)) -1
     (nil)
 -> 376)
;;  succ:       17 [100.0%] 
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]

(barrier 1815 1814 379)
;; basic block 44, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 43, next block 45, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 3 [bx]
;; live  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx]
;; live  kill	
(code_label 379 1815 380 44 141 "" [1 uses])
(note 380 379 381 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 381 380 382 44 (set (reg:QI 0 ax [orig:414 yy_hold_char ] [414])
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) lex.yy.c:885 93 {*movqi_internal}
     (expr_list:REG_EQUIV (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (nil)))
(insn 382 381 383 44 (set (mem:QI (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88]) [0 *yy_cp_6+0 S1 A8])
        (reg:QI 0 ax [orig:414 yy_hold_char ] [414])) lex.yy.c:885 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])
        (expr_list:REG_DEAD (reg:QI 0 ax [orig:414 yy_hold_char ] [414])
            (nil))))
(insn 383 382 384 44 (set (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])
        (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])) lex.yy.c:886 89 {*movdi_internal}
     (nil))
(debug_insn 384 383 385 44 (var_location:DI yy_cp (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])) lex.yy.c:886 -1
     (nil))
(debug_insn 385 384 387 44 (var_location:SI yy_current_state (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])) lex.yy.c:887 -1
     (nil))
(note 387 385 388 44 NOTE_INSN_DELETED)
(insn 388 387 389 44 (set (reg:DI 0 ax [orig:416 yy_last_accepting_state ] [416])
        (sign_extend:DI (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32]))) 142 {*extendsidi2_rex64}
     (nil))
(insn 389 388 1816 44 (set (reg:SI 1 dx)
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 0 ax [orig:416 yy_last_accepting_state ] [416])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16]))) 146 {extendhisi2}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:416 yy_last_accepting_state ] [416])
        (nil)))
(jump_insn 1816 389 1817 44 (set (pc)
        (label_ref 278)) lex.yy.c:888 -1
     (nil)
 -> 278)
;;  succ:       32 [100.0%] 
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]

(barrier 1817 1816 393)
;; basic block 45, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 44, next block 46, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx]
;; live  in  	 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	
(code_label 393 1817 394 45 143 "" [1 uses])
(note 394 393 395 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 395 394 4 45 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 5 [0x5])) mycc.l:43 90 {*movsi_internal}
     (nil))
(insn 4 395 5 45 (set (reg:SI 1 dx)
        (const_int 40 [0x28])) mycc.l:44 90 {*movsi_internal}
     (nil))
(insn 5 4 6 45 (set (reg:HI 2 cx [orig:343 D.6786 ] [343])
        (const_int 2 [0x2])) mycc.l:44 92 {*movhi_internal}
     (nil))
(insn 6 5 1818 45 (set (reg:SI 0 ax [orig:341 D.6777 ] [341])
        (const_int 5 [0x5])) mycc.l:44 90 {*movsi_internal}
     (nil))
(jump_insn 1818 6 1819 45 (set (pc)
        (label_ref 396)) mycc.l:44 -1
     (nil)
 -> 396)
;;  succ:       16 [100.0%] 
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]

(barrier 1819 1818 399)
;; basic block 46, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 45, next block 47, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	 17 [flags]
(code_label 399 1819 400 46 145 "" [1 uses])
(note 400 399 401 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 401 400 402 46 (parallel [
            (set (mem/c:SI (symbol_ref:DI ("_ZL8line_num") [flags 0x2]  <var_decl 0x7f88bc119b40 line_num>) [2 line_num+0 S4 A32])
                (plus:SI (mem/c:SI (symbol_ref:DI ("_ZL8line_num") [flags 0x2]  <var_decl 0x7f88bc119b40 line_num>) [2 line_num+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) mycc.l:46 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 402 401 1742 46 (set (reg:DI 1 dx)
        (sign_extend:DI (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32]))) 142 {*extendsidi2_rex64}
     (nil))
(insn 1742 402 405 46 (set (reg:DI 0 ax)
        (reg:DI 1 dx)) -1
     (nil))
(insn 405 1742 408 46 (set (reg:HI 2 cx [orig:343 D.6786 ] [343])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 1 dx [orig:419 D.6777 ] [419])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])) 92 {*movhi_internal}
     (nil))
(insn 408 405 1820 46 (set (reg:SI 1 dx)
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 1 dx [orig:419 D.6777 ] [419])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16]))) 139 {*zero_extendhisi2}
     (nil))
(jump_insn 1820 408 1821 46 (set (pc)
        (label_ref 396)) mycc.l:47 -1
     (nil)
 -> 396)
;;  succ:       16 [100.0%] 
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]

(barrier 1821 1820 416)
;; basic block 47, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 46, next block 48, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx]
;; live  in  	 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	
(code_label 416 1821 417 47 147 "" [1 uses])
(note 417 416 418 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 418 417 10 47 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 3 [0x3])) mycc.l:49 90 {*movsi_internal}
     (nil))
(insn 10 418 11 47 (set (reg:SI 1 dx)
        (const_int 37 [0x25])) mycc.l:50 90 {*movsi_internal}
     (nil))
(insn 11 10 12 47 (set (reg:HI 2 cx [orig:343 D.6786 ] [343])
        (const_int 7 [0x7])) mycc.l:50 92 {*movhi_internal}
     (nil))
(insn 12 11 1822 47 (set (reg:SI 0 ax [orig:341 D.6777 ] [341])
        (const_int 3 [0x3])) mycc.l:50 90 {*movsi_internal}
     (nil))
(jump_insn 1822 12 1823 47 (set (pc)
        (label_ref 396)) mycc.l:50 -1
     (nil)
 -> 396)
;;  succ:       16 [100.0%] 
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]

(barrier 1823 1822 421)
;; basic block 48, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 47, next block 49, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 4 [si] 5 [di]
;; live  kill	
(code_label 421 1823 422 48 148 "" [1 uses])
(note 422 421 423 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 423 422 424 48 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f88bbbf2750 *.LC14>)) mycc.l:52 89 {*movdi_internal}
     (nil))
(insn 424 423 425 48 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:52 89 {*movdi_internal}
     (nil))
(call_insn 425 424 427 48 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f88bbf7aca8 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) mycc.l:52 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f88bbf7aca8 fopen>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 427 425 428 48 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/f:DI 0 ax [orig:136 D.6778 ] [136])) mycc.l:52 89 {*movdi_internal}
     (nil))
(insn 428 427 429 48 (set (reg:SI 4 si)
        (const_int 16384 [0x4000])) mycc.l:53 90 {*movsi_internal}
     (nil))
(insn 429 428 430 48 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:136 D.6778 ] [136])) mycc.l:53 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:136 D.6778 ] [136])
        (nil)))
(call_insn 430 429 432 48 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>) [0 yy_create_buffer S1 A8])
            (const_int 0 [0]))) mycc.l:53 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_create_bufferP8_IO_FILEi") [flags 0x3]  <function_decl 0x7f88bc07c360 yy_create_buffer>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 432 430 433 48 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:137 D.6782 ] [137])) mycc.l:53 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:137 D.6782 ] [137])
        (nil)))
(call_insn 433 432 1768 48 (call (mem:QI (symbol_ref:DI ("_Z19yypush_buffer_stateP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c5e8 yypush_buffer_state>) [0 yypush_buffer_state S1 A8])
        (const_int 0 [0])) mycc.l:53 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z19yypush_buffer_stateP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c5e8 yypush_buffer_state>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       49 [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp] 42 [r13]
;; live  out 	 7 [sp] 42 [r13]

;; basic block 49, loop depth 0, count 0, freq 4, maybe hot
;;  prev block 48, next block 50, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       48 [100.0%]  (FALLTHRU)
;;              41 [2.3%]  (LOOP_EXIT)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx]
;; live  in  	 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx]
;; live  kill	
(code_label 1768 433 1766 49 287 "" [1 uses])
(note 1766 1768 434 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 434 1766 1968 49 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 1 [0x1])) mycc.l:54 90 {*movsi_internal}
     (nil))
(insn 1968 434 1969 49 (parallel [
            (set (reg:DI 1 dx)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mycc.l:56 -1
     (nil))
(insn 1969 1968 15 49 (parallel [
            (set (reg:DI 2 cx [orig:343 D.6786 ] [343])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mycc.l:56 -1
     (nil))
(insn 15 1969 1824 49 (set (reg:SI 0 ax [orig:341 D.6777 ] [341])
        (const_int 1 [0x1])) mycc.l:56 90 {*movsi_internal}
     (nil))
(jump_insn 1824 15 1825 49 (set (pc)
        (label_ref 396)) mycc.l:56 -1
     (nil)
 -> 396)
;;  succ:       16 [100.0%] 
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]

(barrier 1825 1824 437)
;; basic block 50, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 49, next block 51, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 437 1825 438 50 185 "" [3 uses])
(note 438 437 439 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(call_insn 439 438 440 50 (call (mem:QI (symbol_ref:DI ("_Z18yypop_buffer_statev") [flags 0x3]  <function_decl 0x7f88bc07c6c0 yypop_buffer_state>) [0 yypop_buffer_state S1 A8])
        (const_int 0 [0])) mycc.l:58 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z18yypop_buffer_statev") [flags 0x3]  <function_decl 0x7f88bc07c6c0 yypop_buffer_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 440 439 441 50 (set (reg/f:DI 0 ax [orig:168 D.6780 ] [168])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) mycc.l:60 89 {*movdi_internal}
     (nil))
(insn 441 440 442 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:168 D.6780 ] [168])
            (const_int 0 [0]))) mycc.l:60 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 442 441 443 50 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1338)
            (pc))) mycc.l:60 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 200 (nil)))
 -> 1338)
;;  succ:       156 [2.0%]  (LOOP_EXIT)
;;              51 [98.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 7 [sp] 42 [r13]

;; basic block 51, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 50, next block 52, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       50 [98.0%]  (FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 7 [sp] 42 [r13]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
(note 443 442 444 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 444 443 445 51 (set (reg:DI 1 dx [orig:422 yy_buffer_stack_top ] [422])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) mycc.l:60 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 445 444 446 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:422 yy_buffer_stack_top ] [422])
                        (const_int 8 [0x8]))
                    (reg/f:DI 0 ax [orig:168 D.6780 ] [168])) [1 *_224+0 S8 A64])
            (const_int 0 [0]))) mycc.l:60 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:422 yy_buffer_stack_top ] [422])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:168 D.6780 ] [168])
            (nil))))
(jump_insn 446 445 1826 51 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1527)
            (pc))) mycc.l:60 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9800 (nil)))
 -> 1527)
;;  succ:       52 [2.0%]  (FALLTHRU)
;;              15 [98.0%] 
;; lr  out 	 7 [sp] 42 [r13]
;; live  out 	 7 [sp] 42 [r13]

;; basic block 52, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       51 [2.0%]  (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(note 1826 446 1827 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1827 1826 1828 52 (set (pc)
        (label_ref 1338)) -1
     (nil)
 -> 1338)
;;  succ:       156 [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 1828 1827 451)
;; basic block 53, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 52, next block 54, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(code_label 451 1828 452 53 149 "" [1 uses])
(note 452 451 453 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 453 452 454 53 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:109 89 {*movdi_internal}
     (nil))
(call_insn 454 453 456 53 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z6lookupPKc") [flags 0x41]  <function_decl 0x7f88bc12e798 lookup>) [0 lookup S1 A8])
            (const_int 0 [0]))) mycc.l:109 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z6lookupPKc") [flags 0x41]  <function_decl 0x7f88bc12e798 lookup>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 456 454 457 53 (set (mem/f/c:DI (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>) [0 yylval.sym+0 S8 A64])
        (reg/f:DI 0 ax [orig:198 D.6792 ] [198])) mycc.l:109 89 {*movdi_internal}
     (nil))
(insn 457 456 458 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:198 D.6792 ] [198])
            (const_int 0 [0]))) mycc.l:111 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 458 457 459 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 469)
            (pc))) mycc.l:111 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 8987 (nil)))
 -> 469)
;;  succ:       54 [10.1%]  (FALLTHRU)
;;              55 [89.9%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 54, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 53, next block 55, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       53 [10.1%]  (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
(note 459 458 460 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 460 459 461 54 (set (reg:SI 4 si)
        (const_int 258 [0x102])) mycc.l:113 90 {*movsi_internal}
     (nil))
(insn 461 460 462 54 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:113 89 {*movdi_internal}
     (nil))
(call_insn 462 461 464 54 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z6insertPKci") [flags 0x41]  <function_decl 0x7f88bc12e870 insert>) [0 insert S1 A8])
            (const_int 0 [0]))) mycc.l:113 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z6insertPKci") [flags 0x41]  <function_decl 0x7f88bc12e870 insert>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 464 462 465 54 (set (mem/f/c:DI (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>) [0 yylval.sym+0 S8 A64])
        (reg/f:DI 0 ax [orig:198 D.6792 ] [198])) mycc.l:113 89 {*movdi_internal}
     (nil))
(insn 465 464 1723 54 (set (reg:SI 1 dx [orig:200 D.6777 ] [200])
        (mem/c:SI (symbol_ref:DI ("_ZL8localvar") [flags 0x2]  <var_decl 0x7f88bc119ab0 localvar>) [2 localvar+0 S4 A32])) mycc.l:114 90 {*movsi_internal}
     (expr_list:REG_EQUIV (mem:SI (plus:DI (reg/f:DI 0 ax [orig:198 D.6792 ] [198])
                (const_int 12 [0xc])) [2 _284->localvar+0 S4 A32])
        (nil)))
(insn 1723 465 467 54 (set (reg:SI 2 cx [423])
        (plus:SI (reg:SI 1 dx [orig:200 D.6777 ] [200])
            (const_int 1 [0x1]))) mycc.l:114 213 {*leasi}
     (nil))
(insn 467 1723 468 54 (set (mem/c:SI (symbol_ref:DI ("_ZL8localvar") [flags 0x2]  <var_decl 0x7f88bc119ab0 localvar>) [2 localvar+0 S4 A32])
        (reg:SI 2 cx [423])) mycc.l:114 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [423])
        (nil)))
(insn 468 467 469 54 (set (mem:SI (plus:DI (reg/f:DI 0 ax [orig:198 D.6792 ] [198])
                (const_int 12 [0xc])) [2 _284->localvar+0 S4 A32])
        (reg:SI 1 dx [orig:200 D.6777 ] [200])) mycc.l:114 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:200 D.6777 ] [200])
        (nil)))
;;  succ:       55 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 55, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 54, next block 56, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       53 [89.9%] 
;;              54 [100.0%]  (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 469 468 470 55 190 "" [1 uses])
(note 470 469 471 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 471 470 1829 55 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (mem:SI (plus:DI (reg/f:DI 0 ax [orig:198 D.6792 ] [198])
                (const_int 8 [0x8])) [2 _991->token+0 S4 A64])) mycc.l:117 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:198 D.6792 ] [198])
        (nil)))
(jump_insn 1829 471 1830 55 (set (pc)
        (label_ref 1225)) mycc.l:68 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1830 1829 474)
;; basic block 56, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 55, next block 57, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx] 4 [si]
;; live  in  	 7 [sp]
;; live  gen 	 1 [dx] 4 [si]
;; live  kill	
(code_label 474 1830 475 56 150 "" [1 uses])
(note 475 474 476 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 476 475 477 56 (set (reg:DI 1 dx)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:137 89 {*movdi_internal}
     (nil))
(insn 477 476 1831 56 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f88bbbf27e0 *.LC15>)) mycc.l:137 89 {*movdi_internal}
     (nil))
(jump_insn 1831 477 1832 56 (set (pc)
        (label_ref 1794)) -1
     (nil)
 -> 1794)
;;  succ:       61 [100.0%] 
;; lr  out 	 1 [dx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 4 [si] 7 [sp]

(barrier 1832 1831 1837)
;; basic block 57, loop depth 0, count 0, freq 3, maybe hot
;;  prev block 56, next block 58, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       61 [61.0%] 
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 1837 1832 489 57 293 "" [1 uses])
(note 489 1837 490 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 490 489 491 57 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [orig:202 D.6785 ] [202])
            (const_int 32367 [0x7e6f]))) mycc.l:142 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:202 D.6785 ] [202])
        (nil)))
(jump_insn 491 490 492 57 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 495)
            (pc))) mycc.l:142 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 6100 (nil)))
 -> 495)
;;  succ:       58 [39.0%]  (FALLTHRU)
;;              59 [61.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 58, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 57, next block 59, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       57 [39.0%]  (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(note 492 491 36 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 36 492 1833 58 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 260 [0x104])) mycc.l:143 90 {*movsi_internal}
     (nil))
(jump_insn 1833 36 1834 58 (set (pc)
        (label_ref 1225)) -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1834 1833 495)
;; basic block 59, loop depth 0, count 0, freq 3, maybe hot
;;  prev block 58, next block 60, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       57 [61.0%] 
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 495 1834 496 59 192 "" [1 uses])
(note 496 495 35 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 35 496 1835 59 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 261 [0x105])) mycc.l:145 90 {*movsi_internal}
     (nil))
(jump_insn 1835 35 1836 59 (set (pc)
        (label_ref 1225)) -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1836 1835 499)
;; basic block 60, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 59, next block 61, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx] 4 [si]
;; live  in  	 7 [sp]
;; live  gen 	 1 [dx] 4 [si]
;; live  kill	
(code_label 499 1836 500 60 151 "" [1 uses])
(note 500 499 501 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 501 500 502 60 (set (reg:DI 1 dx)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:151 89 {*movdi_internal}
     (nil))
(insn 502 501 1794 60 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f88bbbf2870 *.LC16>)) mycc.l:151 89 {*movdi_internal}
     (nil))
;;  succ:       61 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [dx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 4 [si] 7 [sp]

;; basic block 61, loop depth 0, count 0, freq 6, maybe hot
;;  prev block 60, next block 62, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       60 [100.0%]  (FALLTHRU)
;;              56 [100.0%] 
;;              63 [100.0%] 
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 7 [sp]
;; lr  use 	 1 [dx] 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 4 [si] 7 [sp]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(code_label 1794 502 1792 61 292 "" [2 uses])
(note 1792 1794 503 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 503 1792 1967 61 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:151 89 {*movdi_internal}
     (nil))
(insn 1967 503 505 61 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mycc.l:151 -1
     (nil))
(call_insn 505 1967 507 61 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) mycc.l:151 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 507 505 509 61 (set (reg:SI 0 ax [orig:203 D.6785 ] [203])
        (mem/c:SI (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>) [0 yylval.num+0 S4 A64])) mycc.l:153 90 {*movsi_internal}
     (nil))
(insn 509 507 510 61 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 0 ax [orig:203 D.6785 ] [203])
            (const_int 127 [0x7f]))) mycc.l:153 7 {*cmpsi_1}
     (nil))
(jump_insn 510 509 1838 61 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1837)
            (pc))) mycc.l:153 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 6100 (nil)))
 -> 1837)
;;  succ:       62 [39.0%]  (FALLTHRU)
;;              57 [61.0%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 62, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 61, next block 63, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       61 [39.0%]  (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(note 1838 510 1839 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1839 1838 1840 62 (set (pc)
        (label_ref 1786)) -1
     (nil)
 -> 1786)
;;  succ:       65 [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 1840 1839 518)
;; basic block 63, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 62, next block 64, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx] 4 [si]
;; live  in  	 7 [sp]
;; live  gen 	 1 [dx] 4 [si]
;; live  kill	
(code_label 518 1840 519 63 152 "" [1 uses])
(note 519 518 520 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 520 519 521 63 (set (reg:DI 1 dx)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:123 89 {*movdi_internal}
     (nil))
(insn 521 520 1841 63 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f88bbbf2900 *.LC17>)) mycc.l:123 89 {*movdi_internal}
     (nil))
(jump_insn 1841 521 1842 63 (set (pc)
        (label_ref 1794)) -1
     (nil)
 -> 1794)
;;  succ:       61 [100.0%] 
;; lr  out 	 1 [dx] 4 [si] 7 [sp]
;; live  out 	 1 [dx] 4 [si] 7 [sp]

(barrier 1842 1841 535)
;; basic block 64, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 63, next block 65, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(code_label 535 1842 536 64 153 "" [1 uses])
(note 536 535 537 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(note 537 536 538 64 NOTE_INSN_DELETED)
(note 538 537 1667 64 NOTE_INSN_DELETED)
(insn 1667 538 1722 64 (set (reg:DI 0 ax [579])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:167 89 {*movdi_internal}
     (nil))
(insn 1722 1667 1668 64 (set (reg/f:DI 5 di [orig:428 D.6791 ] [428])
        (plus:DI (reg:DI 0 ax [579])
            (const_int 1 [0x1]))) mycc.l:167 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [579])
        (nil)))
(insn 1668 1722 541 64 (set (reg:DI 1 dx [580])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 23 [0x17]))) mycc.l:167 214 {*leadi}
     (nil))
(insn 541 1668 1966 64 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f88bbbf2990 *.LC18>)) mycc.l:167 89 {*movdi_internal}
     (nil))
(insn 1966 541 544 64 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mycc.l:167 -1
     (nil))
(call_insn 544 1966 546 64 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) mycc.l:167 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 546 544 547 64 (set (reg:SI 0 ax [orig:431 c ] [431])
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 7 sp)
                    (const_int 23 [0x17])) [0 c+0 S1 A8]))) mycc.l:168 148 {extendqisi2}
     (expr_list:REG_EQUIV (mem/c:SI (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>) [0 yylval.num+0 S4 A64])
        (nil)))
(insn 547 546 1786 64 (set (mem/c:SI (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>) [0 yylval.num+0 S4 A64])
        (reg:SI 0 ax [orig:431 c ] [431])) mycc.l:168 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:431 c ] [431])
        (nil)))
;;  succ:       65 [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 65, loop depth 0, count 0, freq 5, maybe hot
;;  prev block 64, next block 66, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       64 [100.0%]  (FALLTHRU)
;;              62 [100.0%] 
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 1786 547 1784 65 291 "" [1 uses])
(note 1784 1786 548 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(debug_insn 548 1784 39 65 (var_location:QI c (clobber (const_int 0 [0]))) mycc.l:72 -1
     (nil))
(insn 39 548 1843 65 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 259 [0x103])) mycc.l:72 90 {*movsi_internal}
     (nil))
(jump_insn 1843 39 1844 65 (set (pc)
        (label_ref 1225)) mycc.l:72 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1844 1843 551)
;; basic block 66, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 65, next block 67, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di]
;; live  kill	
(code_label 551 1844 552 66 154 "" [1 uses])
(note 552 551 553 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 553 552 554 66 (set (reg:DI 1 dx)
        (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>)) mycc.l:176 89 {*movdi_internal}
     (nil))
(insn 554 553 555 66 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f88bbbf2a20 *.LC19>)) mycc.l:176 89 {*movdi_internal}
     (nil))
(insn 555 554 1965 66 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:176 89 {*movdi_internal}
     (nil))
(insn 1965 555 557 66 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mycc.l:176 -1
     (nil))
(call_insn 557 1965 40 66 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>) [0 __builtin_sscanf S1 A8])
            (const_int 0 [0]))) mycc.l:176 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("sscanf") [flags 0x41]  <function_decl 0x7f88bc300d80 sscanf>)
                        (expr_list:REG_EH_REGION (const_int 0 [0])
                            (nil)))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 40 557 1845 66 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 262 [0x106])) mycc.l:73 90 {*movsi_internal}
     (nil))
(jump_insn 1845 40 1846 66 (set (pc)
        (label_ref 1225)) mycc.l:73 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1846 1845 560)
;; basic block 67, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 66, next block 68, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 17 [flags]
;; live  kill	
(code_label 560 1846 561 67 155 "" [1 uses])
(note 561 560 562 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 562 561 1721 67 (set (reg:DI 6 bp [orig:176 D.6781 ] [176])
        (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])) mycc.l:184 89 {*movdi_internal}
     (nil))
(insn 1721 562 565 67 (set (reg:DI 5 di [orig:432 D.6781 ] [432])
        (plus:DI (reg:DI 6 bp [orig:176 D.6781 ] [176])
            (const_int -1 [0xffffffffffffffff]))) mycc.l:184 214 {*leadi}
     (nil))
(call_insn 565 1721 566 67 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) mycc.l:184 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 566 565 568 67 (set (reg/f:DI 1 dx [433])
        (reg:DI 0 ax)) mycc.l:184 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 1 dx [433])
            (nil))))
(insn 568 566 38 67 (set (mem/f/c:DI (symbol_ref:DI ("yylval") [flags 0x40]  <var_decl 0x7f88bc119a20 yylval>) [0 yylval.str+0 S8 A64])
        (reg/f:DI 1 dx [433])) mycc.l:184 89 {*movdi_internal}
     (nil))
(insn 38 568 569 67 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 263 [0x107])) mycc.l:74 90 {*movsi_internal}
     (nil))
(insn 569 38 570 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 1 dx [433])
            (const_int 0 [0]))) mycc.l:186 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 570 569 571 67 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1225)
            (pc))) mycc.l:186 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2165 (nil)))
 -> 1225)
;;  succ:       68 [78.3%]  (FALLTHRU)
;;              157 [21.6%] 
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp]

;; basic block 68, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 67, next block 69, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       67 [78.3%]  (FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di]
;; live  kill	
(note 571 570 572 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(debug_insn 572 571 573 68 (var_location:DI __dest (reg/f:DI 1 dx [433])) mycc.l:188 -1
     (nil))
(debug_insn 573 572 574 68 (var_location:DI __src (plus:DI (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (const_int 1 [0x1]))) mycc.l:188 -1
     (nil))
(note 574 573 1669 68 NOTE_INSN_DELETED)
(insn 1669 574 1720 68 (set (reg:DI 0 ax [581])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/string3.h:110 89 {*movdi_internal}
     (nil))
(insn 1720 1669 577 68 (set (reg/f:DI 4 si [orig:434 D.6791 ] [434])
        (plus:DI (reg:DI 0 ax [581])
            (const_int 1 [0x1]))) /usr/include/x86_64-linux-gnu/bits/string3.h:110 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [581])
        (nil)))
(insn 577 1720 578 68 (set (reg:DI 5 di)
        (reg/f:DI 1 dx [433])) /usr/include/x86_64-linux-gnu/bits/string3.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [433])
        (nil)))
(call_insn 578 577 1712 68 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f88bc2f4510 __builtin_strcpy>) [0 __builtin_strcpy S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/string3.h:110 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_RETURNED (reg/f:DI 1 dx [433])
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("strcpy") [flags 0x41]  <function_decl 0x7f88bc2f4510 __builtin_strcpy>)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(note 1712 578 1704 68 NOTE_INSN_DELETED)
(insn 1704 1712 579 68 (set (reg/f:DI 1 dx [433])
        (reg:DI 0 ax)) /usr/include/x86_64-linux-gnu/bits/string3.h:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 579 1704 580 68 (var_location:DI __dest (clobber (const_int 0 [0]))) mycc.l:188 -1
     (nil))
(debug_insn 580 579 581 68 (var_location:DI __src (clobber (const_int 0 [0]))) mycc.l:188 -1
     (nil))
(insn 581 580 1847 68 (set (mem:QI (plus:DI (plus:DI (reg/f:DI 1 dx [433])
                    (reg:DI 6 bp [orig:176 D.6781 ] [176]))
                (const_int -2 [0xfffffffffffffffe])) [0 *_301+0 S1 A8])
        (const_int 0 [0])) mycc.l:189 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 6 bp [orig:176 D.6781 ] [176])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [433])
            (nil))))
(jump_insn 1847 581 1848 68 (set (pc)
        (label_ref 1225)) -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1848 1847 584)
;; basic block 69, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 68, next block 70, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 584 1848 585 69 159 "" [1 uses])
(note 585 584 45 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 45 585 1849 69 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 279 [0x117])) mycc.l:78 90 {*movsi_internal}
     (nil))
(jump_insn 1849 45 1850 69 (set (pc)
        (label_ref 1225)) mycc.l:78 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1850 1849 588)
;; basic block 70, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 69, next block 71, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 588 1850 589 70 160 "" [1 uses])
(note 589 588 46 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 46 589 1851 70 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 280 [0x118])) mycc.l:79 90 {*movsi_internal}
     (nil))
(jump_insn 1851 46 1852 70 (set (pc)
        (label_ref 1225)) mycc.l:79 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1852 1851 592)
;; basic block 71, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 70, next block 72, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 592 1852 593 71 161 "" [1 uses])
(note 593 592 47 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 47 593 1853 71 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 281 [0x119])) mycc.l:80 90 {*movsi_internal}
     (nil))
(jump_insn 1853 47 1854 71 (set (pc)
        (label_ref 1225)) mycc.l:80 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1854 1853 596)
;; basic block 72, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 71, next block 73, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 596 1854 597 72 162 "" [1 uses])
(note 597 596 48 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 48 597 1855 72 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 282 [0x11a])) mycc.l:81 90 {*movsi_internal}
     (nil))
(jump_insn 1855 48 1856 72 (set (pc)
        (label_ref 1225)) mycc.l:81 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1856 1855 600)
;; basic block 73, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 72, next block 74, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 600 1856 601 73 163 "" [1 uses])
(note 601 600 49 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 49 601 1857 73 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 283 [0x11b])) mycc.l:82 90 {*movsi_internal}
     (nil))
(jump_insn 1857 49 1858 73 (set (pc)
        (label_ref 1225)) mycc.l:82 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1858 1857 604)
;; basic block 74, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 73, next block 75, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 604 1858 605 74 164 "" [1 uses])
(note 605 604 50 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 50 605 1859 74 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 284 [0x11c])) mycc.l:83 90 {*movsi_internal}
     (nil))
(jump_insn 1859 50 1860 74 (set (pc)
        (label_ref 1225)) mycc.l:83 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1860 1859 608)
;; basic block 75, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 74, next block 76, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 608 1860 609 75 165 "" [1 uses])
(note 609 608 51 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 51 609 1861 75 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 285 [0x11d])) mycc.l:84 90 {*movsi_internal}
     (nil))
(jump_insn 1861 51 1862 75 (set (pc)
        (label_ref 1225)) mycc.l:84 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1862 1861 612)
;; basic block 76, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 75, next block 77, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 612 1862 613 76 166 "" [1 uses])
(note 613 612 52 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 52 613 1863 76 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 286 [0x11e])) mycc.l:85 90 {*movsi_internal}
     (nil))
(jump_insn 1863 52 1864 76 (set (pc)
        (label_ref 1225)) mycc.l:85 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1864 1863 616)
;; basic block 77, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 76, next block 78, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 616 1864 617 77 167 "" [1 uses])
(note 617 616 53 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 53 617 1865 77 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 287 [0x11f])) mycc.l:86 90 {*movsi_internal}
     (nil))
(jump_insn 1865 53 1866 77 (set (pc)
        (label_ref 1225)) mycc.l:86 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1866 1865 620)
;; basic block 78, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 77, next block 79, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 620 1866 621 78 168 "" [1 uses])
(note 621 620 54 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 54 621 1867 78 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 288 [0x120])) mycc.l:87 90 {*movsi_internal}
     (nil))
(jump_insn 1867 54 1868 78 (set (pc)
        (label_ref 1225)) mycc.l:87 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1868 1867 624)
;; basic block 79, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 78, next block 80, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 624 1868 625 79 169 "" [1 uses])
(note 625 624 55 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 55 625 1869 79 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 289 [0x121])) mycc.l:88 90 {*movsi_internal}
     (nil))
(jump_insn 1869 55 1870 79 (set (pc)
        (label_ref 1225)) mycc.l:88 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1870 1869 628)
;; basic block 80, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 79, next block 81, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 628 1870 629 80 170 "" [1 uses])
(note 629 628 56 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 56 629 1871 80 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 290 [0x122])) mycc.l:89 90 {*movsi_internal}
     (nil))
(jump_insn 1871 56 1872 80 (set (pc)
        (label_ref 1225)) mycc.l:89 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1872 1871 632)
;; basic block 81, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 80, next block 82, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 632 1872 633 81 171 "" [1 uses])
(note 633 632 57 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 57 633 1873 81 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 291 [0x123])) mycc.l:90 90 {*movsi_internal}
     (nil))
(jump_insn 1873 57 1874 81 (set (pc)
        (label_ref 1225)) mycc.l:90 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1874 1873 636)
;; basic block 82, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 81, next block 83, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 636 1874 637 82 172 "" [1 uses])
(note 637 636 58 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 58 637 1875 82 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 292 [0x124])) mycc.l:91 90 {*movsi_internal}
     (nil))
(jump_insn 1875 58 1876 82 (set (pc)
        (label_ref 1225)) mycc.l:91 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1876 1875 640)
;; basic block 83, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 82, next block 84, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 640 1876 641 83 173 "" [1 uses])
(note 641 640 59 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 59 641 1877 83 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 293 [0x125])) mycc.l:92 90 {*movsi_internal}
     (nil))
(jump_insn 1877 59 1878 83 (set (pc)
        (label_ref 1225)) mycc.l:92 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1878 1877 644)
;; basic block 84, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 83, next block 85, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 644 1878 645 84 174 "" [1 uses])
(note 645 644 60 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 60 645 1879 84 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 294 [0x126])) mycc.l:93 90 {*movsi_internal}
     (nil))
(jump_insn 1879 60 1880 84 (set (pc)
        (label_ref 1225)) mycc.l:93 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1880 1879 648)
;; basic block 85, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 84, next block 86, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 648 1880 649 85 175 "" [1 uses])
(note 649 648 61 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 61 649 1881 85 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 295 [0x127])) mycc.l:94 90 {*movsi_internal}
     (nil))
(jump_insn 1881 61 1882 85 (set (pc)
        (label_ref 1225)) mycc.l:94 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1882 1881 652)
;; basic block 86, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 85, next block 87, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 652 1882 653 86 176 "" [1 uses])
(note 653 652 62 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 62 653 1883 86 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 296 [0x128])) mycc.l:95 90 {*movsi_internal}
     (nil))
(jump_insn 1883 62 1884 86 (set (pc)
        (label_ref 1225)) mycc.l:95 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1884 1883 656)
;; basic block 87, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 86, next block 88, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 656 1884 657 87 177 "" [1 uses])
(note 657 656 63 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 63 657 1885 87 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 123 [0x7b])) mycc.l:96 90 {*movsi_internal}
     (nil))
(jump_insn 1885 63 1886 87 (set (pc)
        (label_ref 1225)) mycc.l:96 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1886 1885 660)
;; basic block 88, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 87, next block 89, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 660 1886 661 88 178 "" [1 uses])
(note 661 660 64 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 64 661 1887 88 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 125 [0x7d])) mycc.l:97 90 {*movsi_internal}
     (nil))
(jump_insn 1887 64 1888 88 (set (pc)
        (label_ref 1225)) mycc.l:97 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1888 1887 664)
;; basic block 89, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 88, next block 90, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 664 1888 665 89 179 "" [1 uses])
(note 665 664 65 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 65 665 1889 89 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 91 [0x5b])) mycc.l:98 90 {*movsi_internal}
     (nil))
(jump_insn 1889 65 1890 89 (set (pc)
        (label_ref 1225)) mycc.l:98 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1890 1889 668)
;; basic block 90, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 89, next block 91, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 668 1890 669 90 180 "" [1 uses])
(note 669 668 66 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 66 669 1891 90 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 93 [0x5d])) mycc.l:99 90 {*movsi_internal}
     (nil))
(jump_insn 1891 66 1892 90 (set (pc)
        (label_ref 1225)) mycc.l:99 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1892 1891 672)
;; basic block 91, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 90, next block 92, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 3 [bx]
;; live  kill	
(code_label 672 1892 673 91 181 "" [1 uses])
(note 673 672 674 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 674 673 675 91 (set (reg/f:DI 0 ax [orig:436 yytext ] [436])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:100 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (nil)))
(insn 675 674 1893 91 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (sign_extend:SI (mem:QI (reg/f:DI 0 ax [orig:436 yytext ] [436]) [0 *_238+0 S1 A8]))) mycc.l:100 148 {extendqisi2}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:436 yytext ] [436])
        (nil)))
(jump_insn 1893 675 1894 91 (set (pc)
        (label_ref 1225)) mycc.l:100 -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1894 1893 678)
;; basic block 92, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 91, next block 93, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 5 [di]
;; live  kill	
(code_label 678 1894 679 92 182 "" [1 uses])
(note 679 678 680 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 680 679 681 92 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f88bbbf2ab0 *.LC20>)) mycc.l:101 89 {*movdi_internal}
     (nil))
(call_insn 681 680 682 92 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z7yyerrorPKc") [flags 0x41]  <function_decl 0x7f88bc13b0d8 yyerror>) [0 yyerror S1 A8])
            (const_int 0 [0]))) mycc.l:101 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z7yyerrorPKc") [flags 0x41]  <function_decl 0x7f88bc13b0d8 yyerror>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 682 681 1743 92 (set (reg:DI 1 dx)
        (sign_extend:DI (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32]))) 142 {*extendsidi2_rex64}
     (nil))
(insn 1743 682 685 92 (set (reg:DI 0 ax)
        (reg:DI 1 dx)) -1
     (nil))
(insn 685 1743 688 92 (set (reg:HI 2 cx [orig:343 D.6786 ] [343])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 1 dx [orig:438 D.6777 ] [438])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])) 92 {*movhi_internal}
     (nil))
(insn 688 685 1895 92 (set (reg:SI 1 dx)
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 1 dx [orig:438 D.6777 ] [438])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16]))) 139 {*zero_extendhisi2}
     (nil))
(jump_insn 1895 688 1896 92 (set (pc)
        (label_ref 396)) mycc.l:102 -1
     (nil)
 -> 396)
;;  succ:       16 [100.0%] 
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]

(barrier 1896 1895 691)
;; basic block 93, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 92, next block 94, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di]
;; live  kill	
(code_label 691 1896 692 93 183 "" [1 uses])
(note 692 691 693 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 693 692 694 93 (set (reg:DI 2 cx)
        (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])) mycc.l:103 89 {*movdi_internal}
     (nil))
(insn 694 693 695 93 (set (reg:DI 1 dx)
        (const_int 1 [0x1])) mycc.l:103 89 {*movdi_internal}
     (nil))
(insn 695 694 696 93 (set (reg:DI 4 si)
        (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])) mycc.l:103 89 {*movdi_internal}
     (nil))
(insn 696 695 697 93 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) mycc.l:103 89 {*movdi_internal}
     (nil))
(call_insn 697 696 698 93 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7f88bc2ff0d8 fwrite>) [0 __builtin_fwrite S1 A8])
            (const_int 0 [0]))) mycc.l:103 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_UNUSED (reg:DI 0 ax)
                        (expr_list:REG_CALL_DECL (symbol_ref:DI ("fwrite") [flags 0x41]  <function_decl 0x7f88bc2ff0d8 fwrite>)
                            (nil)))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 698 697 1744 93 (set (reg:DI 1 dx)
        (sign_extend:DI (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32]))) 142 {*extendsidi2_rex64}
     (nil))
(insn 1744 698 701 93 (set (reg:DI 0 ax)
        (reg:DI 1 dx)) -1
     (nil))
(insn 701 1744 704 93 (set (reg:HI 2 cx [orig:343 D.6786 ] [343])
        (mem/u:HI (plus:DI (mult:DI (reg:DI 1 dx [orig:442 D.6777 ] [442])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16])) 92 {*movhi_internal}
     (nil))
(insn 704 701 1897 93 (set (reg:SI 1 dx)
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 1 dx [orig:442 D.6777 ] [442])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16]))) 139 {*zero_extendhisi2}
     (nil))
(jump_insn 1897 704 1898 93 (set (pc)
        (label_ref 396)) -1
     (nil)
 -> 396)
;;  succ:       16 [100.0%] 
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 42 [r13]

(barrier 1898 1897 707)
;; basic block 94, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 93, next block 95, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%] 
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 4 [si] 17 [flags] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 2 [cx] 4 [si] 17 [flags] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(code_label 707 1898 708 94 184 "" [1 uses])
(note 708 707 709 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(debug_insn 709 708 1670 94 (var_location:SI yy_act (const_int 46 [0x2e])) -1
     (nil))
(insn 1670 709 710 94 (set (reg:DI 43 r14 [orig:445 D.6788 ] [445])
        (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])) lex.yy.c:1140 89 {*movdi_internal}
     (nil))
(insn 710 1670 1719 94 (parallel [
            (set (reg:DI 43 r14 [orig:445 D.6788 ] [445])
                (minus:DI (reg:DI 43 r14 [orig:445 D.6788 ] [445])
                    (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1140 261 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1719 710 1672 94 (set (reg/v:SI 0 ax [orig:147 yy_amount_of_matched_text ] [147])
        (plus:SI (reg:SI 43 r14 [orig:445 D.6788 ] [445])
            (const_int -1 [0xffffffffffffffff]))) lex.yy.c:1140 213 {*leasi}
     (expr_list:REG_DEAD (reg:SI 43 r14 [orig:445 D.6788 ] [445])
        (nil)))
(insn 1672 1719 712 94 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [9 %sfp+-24 S4 A32])
        (reg/v:SI 0 ax [orig:147 yy_amount_of_matched_text ] [147])) lex.yy.c:1140 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:147 yy_amount_of_matched_text ] [147])
        (nil)))
(debug_insn 712 1672 713 94 (var_location:SI yy_amount_of_matched_text (mem/c:SI (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8])) [9 %sfp+-24 S4 A32])) lex.yy.c:1140 -1
     (nil))
(insn 713 712 714 94 (set (reg:QI 0 ax [orig:446 yy_hold_char ] [446])
        (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])) lex.yy.c:1143 93 {*movqi_internal}
     (expr_list:REG_EQUIV (mem/c:QI (symbol_ref:DI ("_ZL12yy_hold_char") [flags 0x2]  <var_decl 0x7f88bc0802d0 yy_hold_char>) [0 yy_hold_char+0 S1 A8])
        (nil)))
(insn 714 713 715 94 (set (mem:QI (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88]) [0 *yy_cp_6+0 S1 A8])
        (reg:QI 0 ax [orig:446 yy_hold_char ] [446])) lex.yy.c:1143 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax [orig:446 yy_hold_char ] [446])
        (nil)))
(insn 715 714 716 94 (set (reg:DI 4 si [orig:540 yy_buffer_stack_top ] [540])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1146 89 {*movdi_internal}
     (nil))
(note 716 715 717 94 NOTE_INSN_DELETED)
(insn 717 716 718 94 (set (reg/f:DI 2 cx [orig:541 yy_buffer_stack ] [541])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1146 89 {*movdi_internal}
     (nil))
(insn 718 717 719 94 (set (reg/f:DI 44 r15 [orig:152 D.6780 ] [152])
        (plus:DI (mult:DI (reg:DI 4 si [orig:540 yy_buffer_stack_top ] [540])
                (const_int 8 [0x8]))
            (reg/f:DI 2 cx [orig:541 yy_buffer_stack ] [541]))) lex.yy.c:1146 214 {*leadi}
     (nil))
(insn 719 718 1963 94 (set (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
        (mem/f:DI (reg/f:DI 44 r15 [orig:152 D.6780 ] [152]) [1 *_142+0 S8 A64])) lex.yy.c:1146 89 {*movdi_internal}
     (nil))
(insn 1963 719 1964 94 (set (reg:SI 38 r9)
        (mem:SI (plus:DI (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
                (const_int 60 [0x3c])) [2 _143->yy_buffer_status+0 S4 A32])) lex.yy.c:1146 -1
     (nil))
(insn 1964 1963 721 94 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 38 r9)
            (const_int 0 [0]))) lex.yy.c:1146 -1
     (nil))
(jump_insn 721 1964 722 94 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 726)
            (pc))) lex.yy.c:1146 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 726)
;;  succ:       96 [50.0%] 
;;              95 [50.0%]  (FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 95, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 94, next block 96, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       94 [50.0%]  (FALLTHRU)
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(note 722 721 723 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 723 722 1899 95 (set (reg:SI 0 ax [orig:154 D.6777 ] [154])
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(jump_insn 1899 723 1900 95 (set (pc)
        (label_ref 734)) -1
     (nil)
 -> 734)
;;  succ:       97 [100.0%] 
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1900 1899 726)
;; basic block 96, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 95, next block 97, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       94 [50.0%] 
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 5 [di] 43 [r14]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 43 [r14]
;; live  kill	
(code_label 726 1900 727 96 195 "" [1 uses])
(note 727 726 728 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 728 727 729 96 (set (reg:SI 0 ax [orig:154 D.6777 ] [154])
        (mem:SI (plus:DI (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
                (const_int 32 [0x20])) [2 _143->yy_n_chars+0 S4 A64])) lex.yy.c:1157 90 {*movsi_internal}
     (nil))
(insn 729 728 730 96 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 0 ax [orig:154 D.6777 ] [154])) lex.yy.c:1157 90 {*movsi_internal}
     (nil))
(insn 730 729 731 96 (set (reg/f:DI 5 di [orig:450 yyin ] [450])
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1158 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (nil)))
(insn 731 730 732 96 (set (mem/f:DI (reg/f:DI 43 r14 [orig:245 D.6782 ] [245]) [1 _143->yy_input_file+0 S8 A64])
        (reg/f:DI 5 di [orig:450 yyin ] [450])) lex.yy.c:1158 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
        (expr_list:REG_DEAD (reg/f:DI 5 di [orig:450 yyin ] [450])
            (nil))))
(insn 732 731 733 96 (set (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
        (mem/f:DI (reg/f:DI 44 r15 [orig:152 D.6780 ] [152]) [1 *_142+0 S8 A64])) lex.yy.c:1159 89 {*movdi_internal}
     (nil))
(insn 733 732 734 96 (set (mem:SI (plus:DI (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
                (const_int 60 [0x3c])) [2 _162->yy_buffer_status+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:1159 90 {*movsi_internal}
     (nil))
;;  succ:       97 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 97, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 96, next block 98, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       96 [100.0%]  (FALLTHRU)
;;              95 [100.0%] 
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 6 [bp] 17 [flags] 39 [r10] 40 [r11]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 6 [bp] 17 [flags] 39 [r10] 40 [r11]
;; live  kill	
(code_label 734 733 735 97 196 "" [1 uses])
(note 735 734 736 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 736 735 737 97 (set (reg/v/f:DI 40 r11 [orig:156 dest ] [156])
        (mem/f:DI (plus:DI (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
                (const_int 8 [0x8])) [1 _927->yy_ch_buf+0 S8 A64])) lex.yy.c:1169 89 {*movdi_internal}
     (nil))
(insn 737 736 1718 97 (set (reg:DI 39 r10 [orig:157 D.6790 ] [157])
        (sign_extend:DI (reg:SI 0 ax [orig:154 D.6777 ] [154]))) lex.yy.c:1169 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:154 D.6777 ] [154])
        (nil)))
(insn 1718 737 739 97 (set (reg/f:DI 6 bp [orig:158 D.6783 ] [158])
        (plus:DI (reg/v/f:DI 40 r11 [orig:156 dest ] [156])
            (reg:DI 39 r10 [orig:157 D.6790 ] [157]))) lex.yy.c:1169 214 {*leadi}
     (nil))
(insn 739 1718 740 97 (set (reg/f:DI 0 ax [orig:244 D.6783 ] [244])
        (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])) lex.yy.c:1169 89 {*movdi_internal}
     (nil))
(insn 740 739 741 97 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 6 bp [orig:158 D.6783 ] [158])
            (reg/f:DI 0 ax [orig:244 D.6783 ] [244]))) lex.yy.c:1169 8 {*cmpdi_1}
     (nil))
(jump_insn 741 740 742 97 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 825)
            (pc))) lex.yy.c:1169 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 9800 (nil)))
 -> 825)
;;  succ:       98 [2.0%]  (FALLTHRU,LOOP_EXIT)
;;              105 [98.0%] 
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 98, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 97, next block 99, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       97 [2.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 17 [flags]
;; live  kill	 17 [flags]
(note 742 741 1673 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(note 1673 742 1711 98 NOTE_INSN_DELETED)
(note 1711 1673 743 98 NOTE_INSN_DELETED)
(insn 743 1711 744 98 (set (reg:DI 3 bx [orig:451 D.6790 ] [451])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])) [9 %sfp+-24 S4 A32]))) lex.yy.c:1173 142 {*extendsidi2_rex64}
     (nil))
(note 744 743 745 98 NOTE_INSN_DELETED)
(insn 745 744 746 98 (parallel [
            (set (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])
                (plus:DI (reg:DI 3 bx [orig:451 D.6790 ] [451])
                    (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1173 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 746 745 747 98 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])) lex.yy.c:1173 89 {*movdi_internal}
     (nil))
(call_insn 747 746 1407 98 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>) [0 yy_get_previous_state S1 A8])
            (const_int 0 [0]))) lex.yy.c:1175 669 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(debug_insn 1407 747 749 98 (var_location:SI D#22 (reg:SI 0 ax)) -1
     (nil))
(debug_insn 749 1407 750 98 (var_location:SI yy_current_state (debug_expr:SI D#22)) lex.yy.c:1175 -1
     (nil))
(debug_insn 750 749 751 98 (var_location:SI yy_current_state (debug_expr:SI D#22)) lex.yy.c:1175 -1
     (nil))
(debug_insn 751 750 752 98 (var_location:DI yy_cp (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])) lex.yy.c:1443 -1
     (nil))
(debug_insn 752 751 754 98 (var_location:QI yy_c (const_int 1 [0x1])) lex.yy.c:1445 -1
     (nil))
(insn 754 752 755 98 (set (reg:DI 4 si [orig:543 yy_current_state ] [543])
        (sign_extend:DI (reg/v:SI 0 ax [orig:193 yy_current_state ] [193]))) lex.yy.c:1446 142 {*extendsidi2_rex64}
     (nil))
(insn 755 754 756 98 (set (reg:SI 1 dx)
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 4 si [orig:543 yy_current_state ] [543])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16]))) lex.yy.c:1446 146 {extendhisi2}
     (nil))
(insn 756 755 757 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:HI 1 dx [orig:186 D.6786 ] [186])
            (const_int 0 [0]))) lex.yy.c:1446 2 {*cmphi_ccno_1}
     (nil))
(jump_insn 757 756 758 98 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 761)
            (pc))) lex.yy.c:1446 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 761)
;;  succ:       99 [50.0%]  (FALLTHRU)
;;              100 [50.0%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 42 [r13]

;; basic block 99, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 98, next block 100, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       98 [50.0%]  (FALLTHRU)
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; live  gen 	
;; live  kill	
(note 758 757 759 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 759 758 760 99 (set (mem/c:SI (symbol_ref:DI ("_ZL23yy_last_accepting_state") [flags 0x2]  <var_decl 0x7f88bc080870 yy_last_accepting_state>) [2 yy_last_accepting_state+0 S4 A32])
        (reg/v:SI 0 ax [orig:193 yy_current_state ] [193])) lex.yy.c:1448 90 {*movsi_internal}
     (nil))
(insn 760 759 761 99 (set (mem/f/c:DI (symbol_ref:DI ("_ZL22yy_last_accepting_cpos") [flags 0x2]  <var_decl 0x7f88bc080a20 yy_last_accepting_cpos>) [1 yy_last_accepting_cpos+0 S8 A64])
        (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])) lex.yy.c:1449 89 {*movdi_internal}
     (nil))
;;  succ:       100 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 42 [r13]

;; basic block 100, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 99, next block 101, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       98 [50.0%] 
;;              99 [100.0%]  (FALLTHRU)
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; lr  use 	 0 [ax] 4 [si] 7 [sp]
;; lr  def 	 2 [cx] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; live  gen 	 2 [cx] 5 [di] 17 [flags]
;; live  kill	
(code_label 761 760 762 100 198 "" [1 uses])
(note 762 761 763 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(debug_insn 763 762 764 100 (var_location:QI yy_c (const_int 1 [0x1])) -1
     (nil))
(debug_insn 764 763 767 100 (var_location:SI yy_current_state (debug_expr:SI D#22)) -1
     (nil))
(note 767 764 769 100 NOTE_INSN_DELETED)
(insn 769 767 1717 100 (set (reg:SI 2 cx [orig:542 D.6785 ] [542])
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 4 si [orig:543 yy_current_state ] [543])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16]))) lex.yy.c:1451 139 {*zero_extendhisi2}
     (nil))
(insn 1717 769 771 100 (set (reg:SI 5 di [orig:459 D.6777 ] [459])
        (plus:SI (reg:SI 2 cx [orig:542 D.6785 ] [542])
            (const_int 1 [0x1]))) lex.yy.c:1451 213 {*leasi}
     (nil))
(insn 771 1717 772 100 (set (reg:DI 5 di [orig:460 D.6777 ] [460])
        (sign_extend:DI (reg:SI 5 di [orig:459 D.6777 ] [459]))) lex.yy.c:1451 142 {*extendsidi2_rex64}
     (nil))
(insn 772 771 773 100 (set (reg:SI 5 di [orig:461 D.6777 ] [461])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 5 di [orig:460 D.6777 ] [460])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL6yy_chk") [flags 0x2]  <var_decl 0x7f88bc0806c0 yy_chk>)) [3 yy_chk S2 A16]))) lex.yy.c:1451 146 {extendhisi2}
     (nil))
(insn 773 772 774 100 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 0 ax [orig:193 yy_current_state ] [193])
            (reg:SI 5 di [orig:461 D.6777 ] [461]))) lex.yy.c:1451 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 5 di [orig:461 D.6777 ] [461])
        (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:193 yy_current_state ] [193])
            (nil))))
(jump_insn 774 773 789 100 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 797)
            (pc))) lex.yy.c:1451 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 797)
;;  succ:       102 [9.0%] 
;;              101 [91.0%]  (FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]

;; basic block 101, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 100, next block 102, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       100 [91.0%]  (FALLTHRU)
;;              101 [91.0%]  (DFS_BACK)
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  kill	
(code_label 789 774 776 101 200 "" [1 uses])
(note 776 789 777 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(debug_insn 777 776 778 101 (var_location:QI yy_c (const_int 1 [0x1])) -1
     (nil))
(debug_insn 778 777 781 101 (var_location:SI yy_current_state (debug_expr:SI D#22)) -1
     (nil))
(note 781 778 1406 101 NOTE_INSN_DELETED)
(debug_insn 1406 781 782 101 (var_location:SI D#22 (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 4 si [orig:543 yy_current_state ] [543])
                    (const_int 2 [0x2]))
                (symbol_ref:DI ("_ZL6yy_def") [flags 0x2]  <var_decl 0x7f88bc080090 yy_def>)) [3 yy_def S2 A16]))) -1
     (nil))
(insn 782 1406 1745 101 (set (reg:DI 4 si)
        (sign_extend:DI (mem/u:HI (plus:DI (mult:DI (reg:DI 4 si [orig:543 yy_current_state ] [543])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL6yy_def") [flags 0x2]  <var_decl 0x7f88bc080090 yy_def>)) [3 yy_def S2 A16]))) lex.yy.c:1453 145 {extendhidi2}
     (nil))
(insn 1745 782 784 101 (set (reg:DI 0 ax)
        (reg:DI 4 si)) lex.yy.c:1453 -1
     (nil))
(debug_insn 784 1745 785 101 (var_location:QI yy_c (const_int 1 [0x1])) -1
     (nil))
(debug_insn 785 784 788 101 (var_location:SI yy_current_state (debug_expr:SI D#22)) -1
     (nil))
(note 788 785 791 101 NOTE_INSN_DELETED)
(insn 791 788 1716 101 (set (reg:SI 2 cx [orig:542 D.6785 ] [542])
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 4 si [orig:543 yy_current_state ] [543])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL7yy_base") [flags 0x2]  <var_decl 0x7f88bc080ea0 yy_base>)) [3 yy_base S2 A16]))) lex.yy.c:1451 139 {*zero_extendhisi2}
     (nil))
(insn 1716 791 793 101 (set (reg:SI 5 di [orig:468 D.6777 ] [468])
        (plus:SI (reg:SI 2 cx [orig:542 D.6785 ] [542])
            (const_int 1 [0x1]))) lex.yy.c:1451 213 {*leasi}
     (nil))
(insn 793 1716 794 101 (set (reg:DI 5 di [orig:469 D.6777 ] [469])
        (sign_extend:DI (reg:SI 5 di [orig:468 D.6777 ] [468]))) lex.yy.c:1451 142 {*extendsidi2_rex64}
     (nil))
(insn 794 793 795 101 (set (reg:SI 5 di [orig:470 D.6777 ] [470])
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 5 di [orig:469 D.6777 ] [469])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL6yy_chk") [flags 0x2]  <var_decl 0x7f88bc0806c0 yy_chk>)) [3 yy_chk S2 A16]))) lex.yy.c:1451 146 {extendhisi2}
     (nil))
(insn 795 794 796 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 5 di [orig:470 D.6777 ] [470])
            (reg/v:SI 0 ax [orig:193 yy_current_state ] [193]))) lex.yy.c:1451 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 5 di [orig:470 D.6777 ] [470])
        (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:193 yy_current_state ] [193])
            (nil))))
(jump_insn 796 795 797 101 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 789)
            (pc))) lex.yy.c:1451 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 789)
;;  succ:       102 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              101 [91.0%]  (DFS_BACK)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 7 [sp] 42 [r13]

;; basic block 102, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 101, next block 103, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       101 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              100 [9.0%] 
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 7 [sp] 42 [r13]
;; lr  use 	 2 [cx] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 41 [r12]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 17 [flags] 41 [r12]
;; live  kill	
(code_label 797 796 798 102 199 "" [1 uses])
(note 798 797 1715 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 1715 798 803 102 (set (reg:DI 0 ax)
        (zero_extend:DI (plus:SI (reg:SI 2 cx [orig:542 D.6785 ] [542])
                (const_int 1 [0x1])))) lex.yy.c:1457 214 {*leadi}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:542 D.6785 ] [542])
        (nil)))
(insn 803 1715 804 102 (set (reg/v:SI 0 ax [orig:87 yy_current_state ] [87])
        (zero_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 0 ax [orig:474 D.6785 ] [474])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL6yy_nxt") [flags 0x2]  <var_decl 0x7f88bc0803f0 yy_nxt>)) [3 yy_nxt S2 A16]))) lex.yy.c:1457 139 {*zero_extendhisi2}
     (nil))
(debug_insn 804 803 805 102 (var_location:SI yy_current_state (reg/v:SI 0 ax [orig:87 yy_current_state ] [87])) lex.yy.c:1457 -1
     (nil))
(debug_insn 805 804 806 102 (var_location:QI D#1 (eq:QI (reg/v:SI 0 ax [orig:87 yy_current_state ] [87])
        (const_int 101 [0x65]))) lex.yy.c:1458 -1
     (nil))
(debug_insn 806 805 1235 102 (var_location:SI yy_is_jam (zero_extend:SI (debug_expr:QI D#1))) lex.yy.c:1458 -1
     (nil))
(insn 1235 806 807 102 (set (reg/v/f:DI 41 r12 [orig:89 yy_cp ] [89])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1188 89 {*movdi_internal}
     (nil))
(insn 807 1235 808 102 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 0 ax [orig:87 yy_current_state ] [87])
            (const_int 101 [0x65]))) lex.yy.c:1460 7 {*cmpsi_1}
     (nil))
(jump_insn 808 807 809 102 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 278)
            (pc))) lex.yy.c:1460 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2800 (nil)))
 -> 278)
;;  succ:       103 [72.0%]  (FALLTHRU)
;;              32 [28.0%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]

;; basic block 103, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 102, next block 104, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       102 [72.0%]  (FALLTHRU)
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	
(note 809 808 810 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(debug_insn 810 809 811 103 (var_location:SI yy_current_state (clobber (const_int 0 [0]))) lex.yy.c:1186 -1
     (nil))
(debug_insn 811 810 812 103 (var_location:DI yy_cp (clobber (const_int 0 [0]))) lex.yy.c:1186 -1
     (nil))
(debug_insn 812 811 814 103 (var_location:SI yy_next_state (clobber (const_int 0 [0]))) lex.yy.c:1186 -1
     (nil))
(debug_insn 814 812 815 103 (var_location:DI yy_bp (reg/v/f:DI 41 r12 [orig:89 yy_cp ] [89])) lex.yy.c:1188 -1
     (nil))
(insn 815 814 816 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 0 ax [orig:87 yy_current_state ] [87])
            (const_int 0 [0]))) lex.yy.c:1190 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 816 815 817 103 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 278)
            (pc))) lex.yy.c:1190 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9800 (nil)))
 -> 278)
;;  succ:       104 [2.0%]  (FALLTHRU,LOOP_EXIT)
;;              32 [98.0%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]

;; basic block 104, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 103, next block 105, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       103 [2.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 3 [bx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 3 [bx]
;; live  kill	 17 [flags]
(note 817 816 818 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 818 817 819 104 (parallel [
            (set (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])
                (plus:DI (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1193 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 819 818 820 104 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])) lex.yy.c:1193 89 {*movdi_internal}
     (nil))
(debug_insn 820 819 821 104 (var_location:DI yy_cp (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])) lex.yy.c:1193 -1
     (nil))
(debug_insn 821 820 1901 104 (var_location:SI yy_current_state (reg/v:SI 0 ax [orig:87 yy_current_state ] [87])) lex.yy.c:1194 -1
     (nil))
(jump_insn 1901 821 1902 104 (set (pc)
        (label_ref 822)) lex.yy.c:1195 -1
     (nil)
 -> 822)
;;  succ:       18 [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]

(barrier 1902 1901 825)
;; basic block 105, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 104, next block 106, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       97 [98.0%] 
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 39 [r10] 40 [r11]
;; lr  def 	 5 [di] 17 [flags] 39 [r10]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 5 [di] 17 [flags] 39 [r10]
;; live  kill	
(code_label 825 1902 826 105 197 "" [1 uses])
(note 826 825 827 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(debug_insn 827 826 828 105 (var_location:DI dest (reg/v/f:DI 40 r11 [orig:156 dest ] [156])) lex.yy.c:1276 -1
     (nil))
(insn 828 827 829 105 (set (reg/v/f:DI 5 di [orig:213 source ] [213])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1277 89 {*movdi_internal}
     (nil))
(debug_insn 829 828 830 105 (var_location:DI source (reg/v/f:DI 5 di [orig:213 source ] [213])) lex.yy.c:1277 -1
     (nil))
(note 830 829 831 105 NOTE_INSN_DELETED)
(insn 831 830 832 105 (set (reg:DI 39 r10 [orig:476 D.6783 ] [476])
        (plus:DI (plus:DI (reg/v/f:DI 40 r11 [orig:156 dest ] [156])
                (reg:DI 39 r10 [orig:157 D.6790 ] [157]))
            (const_int 1 [0x1]))) lex.yy.c:1281 214 {*leadi}
     (nil))
(insn 832 831 833 105 (set (reg:CC 17 flags)
        (compare:CC (reg/f:DI 0 ax [orig:244 D.6783 ] [244])
            (reg:DI 39 r10 [orig:476 D.6783 ] [476]))) lex.yy.c:1281 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 39 r10 [orig:476 D.6783 ] [476])
        (nil)))
(jump_insn 833 832 834 105 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 838)
            (pc))) lex.yy.c:1281 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 838)
;;  succ:       106 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              107 [100.0%] 
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 106, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 105, next block 107, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       105 [0.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(note 834 833 835 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 835 834 836 106 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f88bbbf2b40 *.LC21>)) lex.yy.c:1283 89 {*movdi_internal}
     (nil))
(call_insn 836 835 837 106 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1283 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 837 836 838)
;; basic block 107, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 106, next block 108, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       105 [100.0%] 
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 838 837 839 107 203 "" [1 uses])
(note 839 838 1961 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 1961 839 1962 107 (set (reg:SI 37 r8)
        (mem:SI (plus:DI (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
                (const_int 56 [0x38])) [2 _927->yy_fill_buffer+0 S4 A64])) lex.yy.c:1285 -1
     (nil))
(insn 1962 1961 841 107 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 37 r8)
            (const_int 0 [0]))) lex.yy.c:1285 -1
     (nil))
(jump_insn 841 1962 842 107 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 849)
            (pc))) lex.yy.c:1285 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 849)
;;  succ:       108 [50.0%]  (FALLTHRU)
;;              110 [50.0%] 
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 108, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 107, next block 109, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       107 [50.0%]  (FALLTHRU)
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 17 [flags]
(note 842 841 843 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 843 842 844 108 (parallel [
            (set (reg:DI 0 ax [orig:477 D.6788 ] [477])
                (minus:DI (reg/f:DI 0 ax [orig:244 D.6783 ] [244])
                    (reg/v/f:DI 5 di [orig:213 source ] [213])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1287 261 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 844 843 845 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:477 D.6788 ] [477])
            (const_int 1 [0x1]))) lex.yy.c:1287 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:477 D.6788 ] [477])
        (nil)))
(jump_insn 845 844 848 108 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1344)
            (pc))) lex.yy.c:1287 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1608 (nil)))
 -> 1344)
;;  succ:       149 [16.1%] 
;;              109 [83.9%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

;; basic block 109, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 108, next block 110, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       108 [83.9%]  (FALLTHRU,LOOP_EXIT)
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 6 [bp] 7 [sp] 42 [r13]
;; live  gen 	 3 [bx]
;; live  kill	
(note 848 845 34 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 34 848 1903 109 (set (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])
        (reg/f:DI 6 bp [orig:158 D.6783 ] [158])) lex.yy.c:1169 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [orig:158 D.6783 ] [158])
        (nil)))
(jump_insn 1903 34 1904 109 (set (pc)
        (label_ref 1184)) -1
     (nil)
 -> 1184)
;;  succ:       152 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp] 42 [r13]
;; live  out 	 3 [bx] 7 [sp] 42 [r13]

(barrier 1904 1903 849)
;; basic block 110, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 109, next block 111, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       107 [50.0%] 
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 5 [di] 7 [sp]
;; lr  def 	 6 [bp] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 6 [bp] 17 [flags]
;; live  kill	 17 [flags]
(code_label 849 1904 850 110 204 "" [1 uses])
(note 850 849 1674 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 1674 850 851 110 (set (reg:DI 6 bp [orig:478 D.6788 ] [478])
        (reg/f:DI 0 ax [orig:244 D.6783 ] [244])) lex.yy.c:1307 89 {*movdi_internal}
     (nil))
(insn 851 1674 852 110 (parallel [
            (set (reg:DI 6 bp [orig:478 D.6788 ] [478])
                (minus:DI (reg:DI 6 bp [orig:478 D.6788 ] [478])
                    (reg/v/f:DI 5 di [orig:213 source ] [213])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1307 261 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(note 852 851 853 110 NOTE_INSN_DELETED)
(debug_insn 853 852 855 110 (var_location:DI number_to_move (plus:DI (reg:DI 6 bp [orig:478 D.6788 ] [478])
        (const_int -1 [0xffffffffffffffff]))) lex.yy.c:1307 -1
     (nil))
(debug_insn 855 853 856 110 (var_location:DI i (const_int 0 [0])) -1
     (nil))
(debug_insn 856 855 857 110 (var_location:DI source (reg/v/f:DI 5 di [orig:213 source ] [213])) -1
     (nil))
(debug_insn 857 856 858 110 (var_location:DI dest (reg/v/f:DI 40 r11 [orig:156 dest ] [156])) -1
     (nil))
(insn 858 857 859 110 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (plus:DI (reg:DI 6 bp [orig:478 D.6788 ] [478])
                        (const_int -1 [0xffffffffffffffff]))
                    (const_int 0 [0])))
            (set (reg/v:DI 6 bp [orig:224 number_to_move ] [224])
                (plus:DI (reg:DI 6 bp [orig:478 D.6788 ] [478])
                    (const_int -1 [0xffffffffffffffff])))
        ]) lex.yy.c:1309 226 {*adddi_2}
     (nil))
(jump_insn 859 858 1345 110 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 880)
            (pc))) lex.yy.c:1309 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 900 (nil)))
 -> 880)
;;  succ:       114 [9.0%] 
;;              111 [91.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 111, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 110, next block 112, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       110 [91.0%]  (FALLTHRU)
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx]
;; live  kill	
(note 1345 859 1960 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 1960 1345 875 111 (parallel [
            (set (reg/v:DI 1 dx [orig:227 i ] [227])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1309 -1
     (nil))
;;  succ:       112 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 44 [r15]

;; basic block 112, loop depth 0, count 0, freq 9, maybe hot
;;  prev block 111, next block 113, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       111 [100.0%]  (FALLTHRU)
;;              112 [91.0%]  (DFS_BACK)
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 1 [dx] 5 [di] 6 [bp] 7 [sp] 40 [r11]
;; lr  def 	 1 [dx] 17 [flags] 39 [r10]
;; live  in  	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 1 [dx] 17 [flags] 39 [r10]
;; live  kill	 17 [flags]
(code_label 875 1960 860 112 208 "" [1 uses])
(note 860 875 861 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(debug_insn 861 860 864 112 (var_location:DI i (reg/v:DI 1 dx [orig:227 i ] [227])) -1
     (nil))
(debug_insn 864 861 865 112 (var_location:DI D#17 (plus:DI (plus:DI (reg/v/f:DI 40 r11 [orig:156 dest ] [156])
            (reg/v:DI 1 dx [orig:227 i ] [227]))
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 865 864 866 112 (var_location:DI dest (debug_expr:DI D#17)) lex.yy.c:1310 -1
     (nil))
(debug_insn 866 865 867 112 (var_location:DI D#18 (plus:DI (plus:DI (reg/v/f:DI 5 di [orig:213 source ] [213])
            (reg/v:DI 1 dx [orig:227 i ] [227]))
        (const_int 1 [0x1]))) -1
     (nil))
(debug_insn 867 866 868 112 (var_location:DI source (debug_expr:DI D#18)) lex.yy.c:1310 -1
     (nil))
(insn 868 867 869 112 (set (reg:QI 39 r10 [orig:226 D.6789 ] [226])
        (mem:QI (plus:DI (reg/v/f:DI 5 di [orig:213 source ] [213])
                (reg/v:DI 1 dx [orig:227 i ] [227])) [0 MEM[base: source_307, index: i_563, offset: 0B]+0 S1 A8])) lex.yy.c:1310 93 {*movqi_internal}
     (expr_list:REG_EQUIV (mem:QI (plus:DI (reg/v/f:DI 5 di [orig:213 source ] [213])
                (reg/v:DI 1 dx [orig:227 i ] [227])) [0 MEM[base: source_307, index: i_563, offset: 0B]+0 S1 A8])
        (nil)))
(insn 869 868 870 112 (set (mem:QI (plus:DI (reg/v/f:DI 40 r11 [orig:156 dest ] [156])
                (reg/v:DI 1 dx [orig:227 i ] [227])) [0 MEM[base: dest_168, index: i_563, offset: 0B]+0 S1 A8])
        (reg:QI 39 r10 [orig:226 D.6789 ] [226])) lex.yy.c:1310 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 39 r10 [orig:226 D.6789 ] [226])
        (nil)))
(insn 870 869 872 112 (parallel [
            (set (reg/v:DI 1 dx [orig:227 i ] [227])
                (plus:DI (reg/v:DI 1 dx [orig:227 i ] [227])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1309 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 872 870 873 112 (var_location:DI i (reg/v:DI 1 dx [orig:227 i ] [227])) -1
     (nil))
(debug_insn 873 872 874 112 (var_location:DI source (debug_expr:DI D#18)) -1
     (nil))
(debug_insn 874 873 876 112 (var_location:DI dest (debug_expr:DI D#17)) -1
     (nil))
(insn 876 874 877 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 6 bp [orig:224 number_to_move ] [224])
            (reg/v:DI 1 dx [orig:227 i ] [227]))) lex.yy.c:1309 8 {*cmpdi_1}
     (nil))
(jump_insn 877 876 878 112 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 875)
            (pc))) lex.yy.c:1309 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 875)
;;  succ:       113 [9.0%]  (FALLTHRU,LOOP_EXIT)
;;              112 [91.0%]  (DFS_BACK)
;; lr  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 40 [r11] 41 [r12] 42 [r13] 44 [r15]

;; basic block 113, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 112, next block 114, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       112 [9.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 43 [r14]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 43 [r14]
;; live  kill	
(note 878 877 879 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 879 878 880 113 (set (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
        (mem/f:DI (reg/f:DI 44 r15 [orig:152 D.6780 ] [152]) [1 *_142+0 S8 A64])) 89 {*movdi_internal}
     (nil))
;;  succ:       114 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 114, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 113, next block 115, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       113 [100.0%]  (FALLTHRU)
;;              110 [9.0%] 
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 880 879 881 114 207 "" [1 uses])
(note 881 880 882 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 882 881 883 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (plus:DI (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
                    (const_int 60 [0x3c])) [2 _944->yy_buffer_status+0 S4 A32])
            (const_int 2 [0x2]))) lex.yy.c:1312 7 {*cmpsi_1}
     (nil))
(jump_insn 883 882 884 114 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1781)
            (pc))) lex.yy.c:1312 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 1781)
;;  succ:       115 [28.0%]  (FALLTHRU)
;;              125 [72.0%] 
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 115, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 114, next block 116, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       114 [28.0%]  (FALLTHRU)
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
(note 884 883 885 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 885 884 886 115 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1316 90 {*movsi_internal}
     (nil))
(insn 886 885 1905 115 (set (mem:SI (plus:DI (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
                (const_int 32 [0x20])) [2 _944->yy_n_chars+0 S4 A64])
        (const_int 0 [0])) lex.yy.c:1316 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
        (nil)))
(jump_insn 1905 886 1906 115 (set (pc)
        (label_ref 1052)) -1
     (nil)
 -> 1052)
;;  succ:       139 [100.0%] 
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

(barrier 1906 1905 964)
;; basic block 116, loop depth 0, count 0, freq 14, maybe hot
;;  prev block 115, next block 117, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       125 [95.5%] 
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 964 1906 899 116 217 "" [1 uses])
(note 899 964 900 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(debug_insn 900 899 901 116 (var_location:DI num_to_read (const_int 0 [0])) -1
     (nil))
(debug_insn 901 900 902 116 (var_location:DI D#14 (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1327 -1
     (nil))
(debug_insn 902 901 903 116 (var_location:DI D#13 (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1327 -1
     (nil))
(debug_insn 903 902 904 116 (var_location:DI D#12 (ashift:DI (debug_expr:DI D#13)
        (const_int 3 [0x3]))) lex.yy.c:1327 -1
     (nil))
(debug_insn 904 903 905 116 (var_location:DI D#11 (plus:DI (debug_expr:DI D#14)
        (debug_expr:DI D#12))) lex.yy.c:1327 -1
     (nil))
(debug_insn 905 904 906 116 (var_location:DI D#10 (mem/f:DI (debug_expr:DI D#11) [0 +0 S8 A64])) lex.yy.c:1327 -1
     (nil))
(debug_insn 906 905 907 116 (var_location:DI b (debug_expr:DI D#10)) lex.yy.c:1327 -1
     (nil))
(insn 907 906 908 116 (set (reg/f:DI 5 di [orig:232 D.6783 ] [232])
        (mem/f:DI (plus:DI (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
                (const_int 8 [0x8])) [1 _986->yy_ch_buf+0 S8 A64])) lex.yy.c:1330 89 {*movdi_internal}
     (nil))
(insn 908 907 1679 116 (parallel [
            (set (reg:DI 0 ax [orig:481 D.6788 ] [481])
                (minus:DI (reg:DI 0 ax [orig:481 D.6788 ] [481])
                    (reg/f:DI 5 di [orig:232 D.6783 ] [232])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1330 261 {*subdi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1679 908 910 116 (set (mem/c:DI (reg/f:DI 7 sp) [9 %sfp+-32 S8 A64])
        (reg:DI 0 ax [orig:481 D.6788 ] [481])) lex.yy.c:1330 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:481 D.6788 ] [481])
        (nil)))
(debug_insn 910 1679 1958 116 (var_location:SI yy_c_buf_p_offset (mem/c:SI (reg/f:DI 7 sp) [9 %sfp+-32 S4 A64])) lex.yy.c:1330 -1
     (nil))
(insn 1958 910 1959 116 (set (reg:SI 1 dx)
        (mem:SI (plus:DI (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
                (const_int 36 [0x24])) [2 _986->yy_is_our_buffer+0 S4 A32])) lex.yy.c:1332 -1
     (nil))
(insn 1959 1958 912 116 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx)
            (const_int 0 [0]))) lex.yy.c:1332 -1
     (nil))
(jump_insn 912 1959 913 116 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 945)
            (pc))) lex.yy.c:1332 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 945)
;;  succ:       117 [50.0%]  (FALLTHRU)
;;              122 [50.0%]  (LOOP_EXIT)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 117, loop depth 0, count 0, freq 7, maybe hot
;;  prev block 116, next block 118, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       116 [50.0%]  (FALLTHRU)
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 2 [cx] 17 [flags]
;; live  kill	
(note 913 912 914 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 914 913 915 117 (set (reg:DI 2 cx [orig:237 D.6781 ] [237])
        (mem:DI (plus:DI (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
                (const_int 24 [0x18])) [4 _986->yy_buf_size+0 S8 A64])) lex.yy.c:1334 89 {*movdi_internal}
     (nil))
(note 915 914 916 117 NOTE_INSN_DELETED)
(debug_insn 916 915 1680 117 (var_location:DI new_size (ashift:DI (reg:DI 2 cx [orig:237 D.6781 ] [237])
        (const_int 1 [0x1]))) lex.yy.c:1334 -1
     (nil))
(insn 1680 916 917 117 (set (reg/v:DI 0 ax [orig:238 new_size ] [238])
        (reg:DI 2 cx [orig:237 D.6781 ] [237])) lex.yy.c:1336 89 {*movdi_internal}
     (nil))
(insn 917 1680 918 117 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (ashift:DI (reg/v:DI 0 ax [orig:238 new_size ] [238])
                        (const_int 1 [0x1]))
                    (const_int 0 [0])))
            (set (reg/v:DI 0 ax [orig:238 new_size ] [238])
                (ashift:DI (reg/v:DI 0 ax [orig:238 new_size ] [238])
                    (const_int 1 [0x1])))
        ]) lex.yy.c:1336 521 {*ashldi3_cmp}
     (nil))
(jump_insn 918 917 919 117 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 925)
            (pc))) lex.yy.c:1336 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 925)
;;  succ:       118 [50.0%]  (FALLTHRU)
;;              119 [50.0%] 
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 118, loop depth 0, count 0, freq 3, maybe hot
;;  prev block 117, next block 119, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       117 [50.0%]  (FALLTHRU)
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	 17 [flags]
(note 919 918 1682 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 1682 919 920 118 (set (reg:DI 0 ax [orig:482 D.6781 ] [482])
        (reg:DI 2 cx [orig:237 D.6781 ] [237])) lex.yy.c:1337 89 {*movdi_internal}
     (nil))
(insn 920 1682 921 118 (parallel [
            (set (reg:DI 0 ax [orig:482 D.6781 ] [482])
                (lshiftrt:DI (reg:DI 0 ax [orig:482 D.6781 ] [482])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1337 546 {*lshrdi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 921 920 922 118 (parallel [
            (set (reg:DI 0 ax [orig:240 D.6781 ] [240])
                (plus:DI (reg:DI 0 ax [orig:482 D.6781 ] [482])
                    (reg:DI 2 cx [orig:237 D.6781 ] [237])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1337 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:237 D.6781 ] [237])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 922 921 1907 118 (set (mem:DI (plus:DI (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
                (const_int 24 [0x18])) [4 _986->yy_buf_size+0 S8 A64])
        (reg:DI 0 ax [orig:240 D.6781 ] [240])) lex.yy.c:1337 89 {*movdi_internal}
     (nil))
(jump_insn 1907 922 1908 118 (set (pc)
        (label_ref 928)) -1
     (nil)
 -> 928)
;;  succ:       120 [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1908 1907 925)
;; basic block 119, loop depth 0, count 0, freq 3, maybe hot
;;  prev block 118, next block 120, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       117 [50.0%] 
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 43 [r14]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(code_label 925 1908 926 119 213 "" [1 uses])
(note 926 925 927 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 927 926 928 119 (set (mem:DI (plus:DI (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
                (const_int 24 [0x18])) [4 _986->yy_buf_size+0 S8 A64])
        (reg/v:DI 0 ax [orig:238 new_size ] [238])) lex.yy.c:1339 89 {*movdi_internal}
     (nil))
;;  succ:       120 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 120, loop depth 0, count 0, freq 7, maybe hot
;;  prev block 119, next block 121, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       119 [100.0%]  (FALLTHRU)
;;              118 [100.0%] 
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 5 [di] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 4 [si] 17 [flags]
;; live  kill	
(code_label 928 927 929 120 214 "" [1 uses])
(note 929 928 930 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(debug_insn 930 929 931 120 (var_location:DI ptr (reg/f:DI 5 di [orig:232 D.6783 ] [232])) lex.yy.c:1343 -1
     (nil))
(debug_insn 931 930 1714 120 (var_location:DI size (plus:DI (reg:DI 0 ax [orig:240 D.6781 ] [240])
        (const_int 2 [0x2]))) lex.yy.c:1343 -1
     (nil))
(insn 1714 931 935 120 (set (reg:DI 4 si [orig:483 D.6781 ] [483])
        (plus:DI (reg:DI 0 ax [orig:240 D.6781 ] [240])
            (const_int 2 [0x2]))) lex.yy.c:2136 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:240 D.6781 ] [240])
        (nil)))
(call_insn 935 1714 937 120 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2136 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(debug_insn 937 935 938 120 (var_location:DI ptr (clobber (const_int 0 [0]))) lex.yy.c:1343 -1
     (nil))
(debug_insn 938 937 939 120 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1343 -1
     (nil))
(insn 939 938 940 120 (set (mem/f:DI (plus:DI (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
                (const_int 8 [0x8])) [1 _986->yy_ch_buf+0 S8 A64])
        (reg/f:DI 0 ax [orig:242 D.6793 ] [242])) lex.yy.c:1343 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
        (nil)))
(insn 940 939 941 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:242 D.6793 ] [242])
            (const_int 0 [0]))) lex.yy.c:1349 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 941 940 1909 120 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1611)
            (pc))) lex.yy.c:1349 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 1611)
;;  succ:       121 (FALLTHRU)
;;              124 [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 121, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 120, next block 122, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       120 (FALLTHRU)
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(note 1909 941 1910 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1910 1909 1911 121 (set (pc)
        (label_ref 948)) -1
     (nil)
 -> 948)
;;  succ:       123 [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 1911 1910 945)
;; basic block 122, loop depth 0, count 0, freq 7, maybe hot
;;  prev block 121, next block 123, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       116 [50.0%]  (LOOP_EXIT)
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 43 [r14]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	
;; live  in  	 7 [sp] 43 [r14]
;; live  gen 	
;; live  kill	
(code_label 945 1911 946 122 212 "" [1 uses])
(note 946 945 947 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 947 946 948 122 (set (mem/f:DI (plus:DI (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
                (const_int 8 [0x8])) [1 _986->yy_ch_buf+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:1347 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
        (nil)))
;;  succ:       123 [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

;; basic block 123, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 122, next block 124, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       122 [100.0%]  (FALLTHRU)
;;              121 [100.0%] 
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 948 947 949 123 215 "" [1 uses])
(note 949 948 950 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 950 949 951 123 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f88bbbf2bd0 *.LC22>)) lex.yy.c:1351 89 {*movdi_internal}
     (nil))
(call_insn 951 950 952 123 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1351 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 952 951 1611)
;; basic block 124, loop depth 0, count 0, freq 14, maybe hot
;;  prev block 123, next block 125, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       120 [100.0%] 
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 0 [ax] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 43 [r14]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 43 [r14]
;; live  kill	 17 [flags]
(code_label 1611 952 954 124 281 "" [1 uses])
(note 954 1611 955 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 955 954 956 124 (set (reg:DI 1 dx [orig:484 D.6790 ] [484])
        (sign_extend:DI (mem/c:SI (reg/f:DI 7 sp) [9 %sfp+-32 S4 A64]))) lex.yy.c:1353 142 {*extendsidi2_rex64}
     (nil))
(insn 956 955 957 124 (parallel [
            (set (reg/f:DI 0 ax [orig:244 D.6783 ] [244])
                (plus:DI (reg/f:DI 0 ax [orig:242 D.6793 ] [242])
                    (reg:DI 1 dx [orig:484 D.6790 ] [484])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1353 218 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:484 D.6790 ] [484])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 957 956 958 124 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 0 ax [orig:244 D.6783 ] [244])) lex.yy.c:1353 89 {*movdi_internal}
     (nil))
(insn 958 957 1781 124 (set (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
        (mem/f:DI (reg/f:DI 44 r15 [orig:152 D.6780 ] [152]) [1 *_142+0 S8 A64])) lex.yy.c:1355 89 {*movdi_internal}
     (nil))
;;  succ:       125 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 125, loop depth 0, count 0, freq 15, maybe hot
;;  prev block 124, next block 126, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       124 [100.0%]  (FALLTHRU)
;;              114 [72.0%] 
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
(code_label 1781 958 1779 125 290 "" [1 uses])
(note 1779 1781 959 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(note 959 1779 1684 125 NOTE_INSN_DELETED)
(insn 1684 959 960 125 (set (reg:DI 1 dx [orig:485 D.6781 ] [485])
        (reg/v:DI 6 bp [orig:224 number_to_move ] [224])) lex.yy.c:1356 89 {*movdi_internal}
     (nil))
(insn 960 1684 961 125 (set (reg:DI 1 dx [orig:485 D.6781 ] [485])
        (not:DI (reg:DI 1 dx [orig:485 D.6781 ] [485]))) lex.yy.c:1356 494 {*one_cmpldi2_1}
     (nil))
(note 961 960 963 125 NOTE_INSN_DELETED)
(debug_insn 963 961 965 125 (var_location:DI num_to_read (plus:DI (reg:DI 1 dx [orig:485 D.6781 ] [485])
        (mem:DI (plus:DI (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
                (const_int 24 [0x18])) [4 _361->yy_buf_size+0 S8 A64]))) -1
     (nil))
(insn 965 963 966 125 (parallel [
            (set (reg:CCZ 17 flags)
                (compare:CCZ (plus:DI (reg:DI 1 dx [orig:485 D.6781 ] [485])
                        (mem:DI (plus:DI (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
                                (const_int 24 [0x18])) [4  S8 A64]))
                    (const_int 0 [0])))
            (set (reg/v:DI 1 dx [orig:230 num_to_read ] [230])
                (plus:DI (reg:DI 1 dx [orig:485 D.6781 ] [485])
                    (mem:DI (plus:DI (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
                            (const_int 24 [0x18])) [4  S8 A64])))
        ]) lex.yy.c:1323 226 {*adddi_2}
     (nil))
(jump_insn 966 965 968 125 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 964)
            (pc))) lex.yy.c:1323 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9550 (nil)))
 -> 964)
;;  succ:       126 [4.5%]  (FALLTHRU,LOOP_EXIT)
;;              116 [95.5%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 126, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 125, next block 127, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       125 [4.5%]  (FALLTHRU,LOOP_EXIT)
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 1 [dx] 17 [flags]
;; live  kill	
(note 968 966 969 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 969 968 1688 126 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 1 dx [orig:230 num_to_read ] [230])
            (const_int 8192 [0x2000]))) 8 {*cmpdi_1}
     (nil))
(insn 1688 969 971 126 (set (reg:DI 0 ax [592])
        (const_int 8192 [0x2000])) 89 {*movdi_internal}
     (nil))
(insn 971 1688 1687 126 (set (reg/v:DI 1 dx [orig:309 num_to_read ] [309])
        (if_then_else:DI (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (reg/v:DI 1 dx [orig:309 num_to_read ] [309])
            (reg:DI 0 ax [592]))) 954 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (expr_list:REG_DEAD (reg:DI 0 ax [592])
            (expr_list:REG_EQUAL (if_then_else:DI (leu (reg:CC 17 flags)
                        (const_int 0 [0]))
                    (reg/v:DI 1 dx [orig:230 num_to_read ] [230])
                    (const_int 8192 [0x2000]))
                (nil)))))
(insn 1687 971 972 126 (set (mem/c:DI (reg/f:DI 7 sp) [9 %sfp+-32 S8 A64])
        (reg/v:DI 1 dx [orig:309 num_to_read ] [309])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 1 dx [orig:309 num_to_read ] [309])
        (nil)))
(debug_insn 972 1687 1956 126 (var_location:DI num_to_read (mem/c:DI (reg/f:DI 7 sp) [9 %sfp+-32 S8 A64])) -1
     (nil))
(insn 1956 972 1957 126 (set (reg:SI 0 ax)
        (mem:SI (plus:DI (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
                (const_int 40 [0x28])) [2 _961->yy_is_interactive+0 S4 A64])) lex.yy.c:1364 -1
     (nil))
(insn 1957 1956 974 126 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax)
            (const_int 0 [0]))) lex.yy.c:1364 -1
     (nil))
(jump_insn 974 1957 975 126 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1000)
            (pc))) lex.yy.c:1364 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 1000)
;;  succ:       127 [50.0%]  (FALLTHRU)
;;              133 [50.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; basic block 127, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 126, next block 128, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       126 [50.0%]  (FALLTHRU)
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 43 [r14]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 43 [r14]
;; live  kill	
(note 975 974 1955 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 1955 975 1256 127 (parallel [
            (set (reg/v:DI 43 r14 [orig:212 n ] [212])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 -1
     (nil))
;;  succ:       128 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; basic block 128, loop depth 0, count 0, freq 3, maybe hot
;;  prev block 127, next block 129, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       127 [100.0%]  (FALLTHRU)
;;              159 [88.0%]  (DFS_BACK)
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(code_label 1256 1955 976 128 232 "" [1 uses])
(note 976 1256 977 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(debug_insn 977 976 978 128 (var_location:DI n (reg/v:DI 43 r14 [orig:212 n ] [212])) -1
     (nil))
(debug_insn 978 977 979 128 (var_location:SI c (const_int 42 [0x2a])) -1
     (nil))
(insn 979 978 980 128 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1364 89 {*movdi_internal}
     (nil))
(call_insn 980 979 1355 128 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_IO_getc") [flags 0x41]  <function_decl 0x7f88bbf40510 _IO_getc>) [0 _IO_getc S1 A8])
            (const_int 0 [0]))) lex.yy.c:1364 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_IO_getc") [flags 0x41]  <function_decl 0x7f88bbf40510 _IO_getc>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(debug_insn 1355 980 982 128 (var_location:SI D#20 (reg:SI 0 ax)) -1
     (nil))
(debug_insn 982 1355 983 128 (var_location:SI c (debug_expr:SI D#20)) lex.yy.c:1364 -1
     (nil))
(insn 983 982 984 128 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 0 ax [orig:251 c ] [251])
            (const_int -1 [0xffffffffffffffff]))) lex.yy.c:1364 7 {*cmpsi_1}
     (nil))
(jump_insn 984 983 985 128 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1299)
            (pc))) lex.yy.c:1364 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2799 (nil)))
 -> 1299)
;;  succ:       129 [72.0%]  (FALLTHRU)
;;              165 [28.0%]  (LOOP_EXIT)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; basic block 129, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 128, next block 130, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       128 [72.0%]  (FALLTHRU)
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 17 [flags]
;; live  kill	
(note 985 984 986 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 986 985 987 129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 0 ax [orig:251 c ] [251])
            (const_int 10 [0xa]))) lex.yy.c:1364 7 {*cmpsi_1}
     (nil))
(jump_insn 987 986 1912 129 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1239)
            (pc))) lex.yy.c:1364 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7200 (nil)))
 -> 1239)
;;  succ:       159 [72.0%] 
;;              130 [28.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; basic block 130, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 129, next block 131, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       129 [28.0%]  (FALLTHRU)
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	
;; live  kill	
(note 1912 987 1914 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1914 1912 1915 130 (set (pc)
        (label_ref 1913)) -1
     (nil)
 -> 1913)
;;  succ:       164 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

(barrier 1915 1914 1273)
;; basic block 131, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 130, next block 132, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       165 [50.0%]  (LOOP_EXIT)
;;              163 [100.0%] 
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 1273 1915 991 131 234 "" [2 uses])
(note 991 1273 992 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 992 991 993 131 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f88bbbf2c60 *.LC23>)) lex.yy.c:1364 89 {*movdi_internal}
     (nil))
(call_insn 993 992 994 131 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1364 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 994 993 1260)
;; basic block 132, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 131, next block 133, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       164 [100.0%] 
;;              160 [100.0%] 
;;              166 [100.0%] 
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 1 [dx]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 1 [dx]
;; live  kill	
(code_label 1260 994 995 132 233 "" [3 uses])
(note 995 1260 996 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 996 995 997 132 (set (reg:SI 1 dx [orig:275 D.6777 ] [275])
        (reg:SI 43 r14 [orig:212 n ] [212])) lex.yy.c:1364 90 {*movsi_internal}
     (nil))
(insn 997 996 1916 132 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 43 r14 [orig:212 n ] [212])) lex.yy.c:1364 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 43 r14 [orig:212 n ] [212])
        (nil)))
(jump_insn 1916 997 1917 132 (set (pc)
        (label_ref 1046)) -1
     (nil)
 -> 1046)
;;  succ:       138 [100.0%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

(barrier 1917 1916 1000)
;; basic block 133, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 132, next block 134, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       126 [50.0%] 
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 44 [r15]
;; live  kill	
(code_label 1000 1917 1001 133 218 "" [1 uses])
(note 1001 1000 1002 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(call_insn/u 1002 1001 1003 133 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f88bbffbca8 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) lex.yy.c:1364 669 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x7f88bbffbca8 __errno_location>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(insn 1003 1002 1004 133 (set (reg/f:DI 44 r15 [orig:270 D.6794 ] [270])
        (reg:DI 0 ax)) lex.yy.c:1364 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 1004 1003 1043 133 (set (mem:SI (reg/f:DI 44 r15 [orig:270 D.6794 ] [270]) [2 *_402+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1364 90 {*movsi_internal}
     (nil))
;;  succ:       134 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 134, loop depth 0, count 0, freq 7, maybe hot
;;  prev block 133, next block 135, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       133 [100.0%]  (FALLTHRU)
;;              137 [100.0%] 
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags]
;; live  kill	 17 [flags]
(code_label 1043 1004 1005 134 225 "" [1 uses])
(note 1005 1043 1006 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1006 1005 1007 134 (var_location:DI __ptr (plus:DI (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
                (const_int 8 [0x8])) [0 _971->yy_ch_buf+0 S8 A64])
        (reg/v:DI 6 bp [orig:224 number_to_move ] [224]))) lex.yy.c:1364 -1
     (nil))
(debug_insn 1007 1006 1008 134 (var_location:DI __size (const_int 1 [0x1])) lex.yy.c:1364 -1
     (nil))
(debug_insn 1008 1007 1009 134 (var_location:DI __n (mem/c:DI (reg/f:DI 7 sp) [9 %sfp+-32 S8 A64])) lex.yy.c:1364 -1
     (nil))
(debug_insn 1009 1008 1010 134 (var_location:DI __stream (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1364 -1
     (nil))
(note 1010 1009 1689 134 NOTE_INSN_DELETED)
(insn 1689 1010 1011 134 (set (reg:DI 5 di [orig:488 D.6783 ] [488])
        (reg/v:DI 6 bp [orig:224 number_to_move ] [224])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 89 {*movdi_internal}
     (nil))
(insn 1011 1689 1012 134 (parallel [
            (set (reg:DI 5 di [orig:488 D.6783 ] [488])
                (plus:DI (reg:DI 5 di [orig:488 D.6783 ] [488])
                    (mem/f:DI (plus:DI (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
                            (const_int 8 [0x8])) [1 _971->yy_ch_buf+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1012 1011 1013 134 (set (reg:DI 2 cx)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 89 {*movdi_internal}
     (nil))
(insn 1013 1012 1014 134 (set (reg:DI 1 dx)
        (mem/c:DI (reg/f:DI 7 sp) [9 %sfp+-32 S8 A64])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 89 {*movdi_internal}
     (nil))
(insn 1014 1013 1016 134 (set (reg:DI 4 si)
        (const_int 1 [0x1])) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 89 {*movdi_internal}
     (nil))
(call_insn 1016 1014 1018 134 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*fread") [flags 0x41]  <function_decl 0x7f88bbfb8870 __fread_alias>) [0 __fread_alias S1 A8])
            (const_int 0 [0]))) /usr/include/x86_64-linux-gnu/bits/stdio2.h:295 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 2 cx)
                (expr_list:REG_DEAD (reg:DI 1 dx)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("*fread") [flags 0x41]  <function_decl 0x7f88bbfb8870 __fread_alias>)
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(debug_insn 1018 1016 1019 134 (var_location:DI __ptr (clobber (const_int 0 [0]))) lex.yy.c:1364 -1
     (nil))
(debug_insn 1019 1018 1020 134 (var_location:DI __size (clobber (const_int 0 [0]))) lex.yy.c:1364 -1
     (nil))
(debug_insn 1020 1019 1021 134 (var_location:DI __n (clobber (const_int 0 [0]))) lex.yy.c:1364 -1
     (nil))
(debug_insn 1021 1020 1022 134 (var_location:DI __stream (clobber (const_int 0 [0]))) lex.yy.c:1364 -1
     (nil))
(insn 1022 1021 1023 134 (set (reg:SI 1 dx [orig:275 D.6777 ] [275])
        (reg:SI 0 ax [orig:274 D.6781 ] [274])) lex.yy.c:1364 90 {*movsi_internal}
     (nil))
(insn 1023 1022 1024 134 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 0 ax [orig:274 D.6781 ] [274])) lex.yy.c:1364 90 {*movsi_internal}
     (nil))
(insn 1024 1023 1025 134 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:274 D.6781 ] [274])
            (const_int 0 [0]))) lex.yy.c:1364 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:274 D.6781 ] [274])
        (nil)))
(jump_insn 1025 1024 1026 134 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1263)
            (pc))) lex.yy.c:1364 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 1263)
;;  succ:       135 [29.0%]  (FALLTHRU)
;;              161 [71.0%]  (LOOP_EXIT)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 135, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 134, next block 136, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       134 [29.0%]  (FALLTHRU)
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(note 1026 1025 1027 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 1027 1026 1028 135 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1364 89 {*movdi_internal}
     (nil))
(call_insn 1028 1027 1030 135 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f88bbf956c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) lex.yy.c:1364 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f88bbf956c0 ferror>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1030 1028 1031 135 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:277 D.6777 ] [277])
            (const_int 0 [0]))) lex.yy.c:1364 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:277 D.6777 ] [277])
        (nil)))
(jump_insn 1031 1030 1032 135 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1271)
            (pc))) lex.yy.c:1364 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 1271)
;;  succ:       162 [50.0%] 
;;              136 [50.0%]  (FALLTHRU,LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 136, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 135, next block 137, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       135 [50.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 1 [dx]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx]
;; live  kill	
(note 1032 1031 1033 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 1033 1032 1918 136 (set (reg:SI 1 dx [orig:275 D.6777 ] [275])
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(jump_insn 1918 1033 1919 136 (set (pc)
        (label_ref 1263)) -1
     (nil)
 -> 1263)
;;  succ:       161 [100.0%] 
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

(barrier 1919 1918 1651)
;; basic block 137, loop depth 0, count 0, freq 7, maybe hot
;;  prev block 136, next block 138, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       162 [100.0%] 
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 1 [dx] 5 [di] 43 [r14]
;; live  kill	
(code_label 1651 1919 1036 137 285 "" [1 uses])
(note 1036 1651 1037 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 1037 1036 1038 137 (set (mem:SI (reg/f:DI 44 r15 [orig:270 D.6794 ] [270]) [2 *_402+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1364 90 {*movsi_internal}
     (nil))
(insn 1038 1037 1039 137 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1364 89 {*movdi_internal}
     (nil))
(call_insn 1039 1038 1041 137 (call (mem:QI (symbol_ref:DI ("clearerr") [flags 0x41]  <function_decl 0x7f88bbf95510 clearerr>) [0 clearerr S1 A8])
        (const_int 0 [0])) lex.yy.c:1364 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("clearerr") [flags 0x41]  <function_decl 0x7f88bbf95510 clearerr>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1041 1039 1660 137 (set (reg/f:DI 0 ax [orig:491 yy_buffer_stack ] [491])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (nil)))
(insn 1660 1041 1042 137 (set (reg:DI 1 dx [orig:490 yy_buffer_stack_top ] [490])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 1042 1660 1920 137 (set (reg/f:DI 43 r14 [orig:245 D.6782 ] [245])
        (mem/f:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:490 yy_buffer_stack_top ] [490])
                    (const_int 8 [0x8]))
                (reg/f:DI 0 ax [orig:491 yy_buffer_stack ] [491])) [1 *_969+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:490 yy_buffer_stack_top ] [490])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:491 yy_buffer_stack ] [491])
            (nil))))
(jump_insn 1920 1042 1921 137 (set (pc)
        (label_ref 1043)) -1
     (nil)
 -> 1043)
;;  succ:       134 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1921 1920 1046)
;; basic block 138, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 137, next block 139, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       132 [100.0%] 
;;              161 [100.0%] 
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 1 [dx] 7 [sp] 44 [r15]
;; lr  def 	 17 [flags] 39 [r10] 43 [r14]
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags] 39 [r10] 43 [r14]
;; live  kill	
(code_label 1046 1921 1047 138 222 "" [2 uses])
(note 1047 1046 1048 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 1048 1047 1049 138 (set (reg/f:DI 39 r10 [orig:280 D.6782 ] [280])
        (mem/f:DI (reg/f:DI 44 r15 [orig:347 D.6780 ] [347]) [1 *_1064+0 S8 A64])) lex.yy.c:1367 89 {*movdi_internal}
     (nil))
(insn 1049 1048 1954 138 (set (mem:SI (plus:DI (reg/f:DI 39 r10 [orig:280 D.6782 ] [280])
                (const_int 32 [0x20])) [2 _429->yy_n_chars+0 S4 A64])
        (reg:SI 1 dx [orig:275 D.6777 ] [275])) lex.yy.c:1367 90 {*movsi_internal}
     (nil))
(insn 1954 1049 1050 138 (parallel [
            (set (reg:DI 43 r14 [orig:308 ret_val ] [308])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1387 -1
     (nil))
(insn 1050 1954 1051 138 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:275 D.6777 ] [275])
            (const_int 0 [0]))) lex.yy.c:1370 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1051 1050 1052 138 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1078)
            (pc))) lex.yy.c:1370 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 1078)
;;  succ:       139 [50.0%]  (FALLTHRU)
;;              142 [50.0%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 139, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 138, next block 140, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       138 [50.0%]  (FALLTHRU)
;;              115 [100.0%] 
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 1052 1051 1053 139 210 "" [1 uses])
(note 1053 1052 1054 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 1054 1053 1055 139 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 6 bp [orig:224 number_to_move ] [224])
            (const_int 0 [0]))) lex.yy.c:1372 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 1055 1054 1056 139 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1068)
            (pc))) lex.yy.c:1372 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 1068)
;;  succ:       140 [29.0%]  (FALLTHRU)
;;              141 [71.0%] 
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]

;; basic block 140, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 139, next block 141, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       139 [29.0%]  (FALLTHRU)
;; bb 140 artificial_defs: { }
;; bb 140 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 5 [di] 39 [r10] 43 [r14] 44 [r15]
;; live  kill	
(note 1056 1055 1057 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1057 1056 1058 140 (var_location:SI ret_val (const_int 1 [0x1])) lex.yy.c:1374 -1
     (nil))
(insn 1058 1057 1059 140 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1375 89 {*movdi_internal}
     (nil))
(call_insn 1059 1058 1060 140 (call (mem:QI (symbol_ref:DI ("_Z9yyrestartP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c1b0 yyrestart>) [0 yyrestart S1 A8])
        (const_int 0 [0])) lex.yy.c:1375 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z9yyrestartP8_IO_FILE") [flags 0x3]  <function_decl 0x7f88bc07c1b0 yyrestart>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1060 1059 1062 140 (set (reg:SI 1 dx [orig:275 D.6777 ] [275])
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(note 1062 1060 1063 140 NOTE_INSN_DELETED)
(insn 1063 1062 1659 140 (set (reg/f:DI 0 ax [orig:494 yy_buffer_stack ] [494])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (nil)))
(insn 1659 1063 1064 140 (set (reg:DI 2 cx [orig:493 yy_buffer_stack_top ] [493])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 1064 1659 1065 140 (set (reg/f:DI 44 r15 [orig:347 D.6780 ] [347])
        (plus:DI (mult:DI (reg:DI 2 cx [orig:493 yy_buffer_stack_top ] [493])
                (const_int 8 [0x8]))
            (reg/f:DI 0 ax [orig:494 yy_buffer_stack ] [494]))) 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:493 yy_buffer_stack_top ] [493])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:494 yy_buffer_stack ] [494])
            (nil))))
(insn 1065 1064 30 140 (set (reg/f:DI 39 r10 [orig:280 D.6782 ] [280])
        (mem/f:DI (reg/f:DI 44 r15 [orig:347 D.6780 ] [347]) [1 *_954+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 30 1065 1922 140 (set (reg/v:SI 43 r14 [orig:308 ret_val ] [308])
        (const_int 1 [0x1])) lex.yy.c:1374 90 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(jump_insn 1922 30 1923 140 (set (pc)
        (label_ref 1078)) -1
     (nil)
 -> 1078)
;;  succ:       142 [100.0%] 
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1923 1922 1068)
;; basic block 141, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 140, next block 142, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       139 [71.0%] 
;; bb 141 artificial_defs: { }
;; bb 141 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 2 [cx] 4 [si] 7 [sp]
;; lr  def 	 1 [dx] 39 [r10] 43 [r14] 44 [r15]
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 1 [dx] 39 [r10] 43 [r14] 44 [r15]
;; live  kill	
(code_label 1068 1923 1069 141 227 "" [1 uses])
(note 1069 1068 1070 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1070 1069 1072 141 (var_location:SI ret_val (const_int 2 [0x2])) lex.yy.c:1380 -1
     (nil))
(note 1072 1070 1074 141 NOTE_INSN_DELETED)
(insn 1074 1072 1075 141 (set (reg/f:DI 44 r15 [orig:347 D.6780 ] [347])
        (plus:DI (mult:DI (reg:DI 4 si [orig:540 yy_buffer_stack_top ] [540])
                (const_int 8 [0x8]))
            (reg/f:DI 2 cx [orig:541 yy_buffer_stack ] [541]))) lex.yy.c:1381 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:540 yy_buffer_stack_top ] [540])
        (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:541 yy_buffer_stack ] [541])
            (nil))))
(insn 1075 1074 1076 141 (set (reg/f:DI 39 r10 [orig:280 D.6782 ] [280])
        (mem/f:DI (reg/f:DI 44 r15 [orig:347 D.6780 ] [347]) [1 *_436+0 S8 A64])) lex.yy.c:1381 89 {*movdi_internal}
     (nil))
(insn 1076 1075 1077 141 (set (mem:SI (plus:DI (reg/f:DI 39 r10 [orig:280 D.6782 ] [280])
                (const_int 60 [0x3c])) [2 _437->yy_buffer_status+0 S4 A32])
        (const_int 2 [0x2])) lex.yy.c:1382 90 {*movsi_internal}
     (nil))
(insn 1077 1076 31 141 (set (reg:SI 1 dx [orig:275 D.6777 ] [275])
        (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) 90 {*movsi_internal}
     (nil))
(insn 31 1077 1078 141 (set (reg/v:SI 43 r14 [orig:308 ret_val ] [308])
        (const_int 2 [0x2])) lex.yy.c:1380 90 {*movsi_internal}
     (nil))
;;  succ:       142 [100.0%]  (FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 142, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 141, next block 143, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       138 [50.0%] 
;;              141 [100.0%]  (FALLTHRU)
;;              140 [100.0%] 
;; bb 142 artificial_defs: { }
;; bb 142 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 39 [r10]
;; lr  def 	 2 [cx] 6 [bp] 17 [flags]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 2 [cx] 6 [bp] 17 [flags]
;; live  kill	
(code_label 1078 31 1079 142 226 "" [2 uses])
(note 1079 1078 1080 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1080 1079 1713 142 (var_location:SI ret_val (reg/v:SI 43 r14 [orig:308 ret_val ] [308])) -1
     (nil))
(insn 1713 1080 1083 142 (set (reg:SI 2 cx [orig:287 D.6795 ] [287])
        (plus:SI (reg:SI 1 dx [orig:275 D.6777 ] [275])
            (reg:SI 6 bp [orig:224 number_to_move ] [224]))) lex.yy.c:1389 213 {*leasi}
     (expr_list:REG_DEAD (reg:SI 6 bp [orig:224 number_to_move ] [224])
        (nil)))
(insn 1083 1713 1084 142 (set (reg:DI 6 bp [orig:289 D.6781 ] [289])
        (sign_extend:DI (reg:SI 2 cx [orig:287 D.6795 ] [287]))) lex.yy.c:1389 142 {*extendsidi2_rex64}
     (nil))
(insn 1084 1083 1085 142 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 6 bp [orig:289 D.6781 ] [289])
            (mem:DI (plus:DI (reg/f:DI 39 r10 [orig:280 D.6782 ] [280])
                    (const_int 24 [0x18])) [4 _957->yy_buf_size+0 S8 A64]))) lex.yy.c:1389 8 {*cmpdi_1}
     (nil))
(jump_insn 1085 1084 1086 142 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 1109)
            (pc))) lex.yy.c:1389 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 1109)
;;  succ:       143 [29.0%]  (FALLTHRU)
;;              145 [71.0%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 143, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 142, next block 144, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       142 [29.0%]  (FALLTHRU)
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 7 [sp] 39 [r10] 44 [r15]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 2 [cx] 4 [si] 5 [di] 17 [flags] 39 [r10]
;; live  kill	 17 [flags]
(note 1086 1085 1087 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1087 1086 1088 143 (var_location:SI new_size (plus:SI (ashiftrt:SI (reg:SI 1 dx [orig:275 D.6777 ] [275])
            (const_int 1 [0x1]))
        (reg:SI 2 cx [orig:287 D.6795 ] [287]))) lex.yy.c:1391 -1
     (nil))
(debug_insn 1088 1087 1089 143 (var_location:DI ptr (mem/f/j:DI (plus:DI (reg/f:DI 39 r10 [orig:280 D.6782 ] [280])
            (const_int 8 [0x8])) [0 _957->yy_ch_buf+0 S8 A64])) lex.yy.c:1392 -1
     (nil))
(debug_insn 1089 1088 1691 143 (var_location:DI size (sign_extend:DI (plus:SI (ashiftrt:SI (reg:SI 1 dx [orig:275 D.6777 ] [275])
                (const_int 1 [0x1]))
            (reg:SI 2 cx [orig:287 D.6795 ] [287])))) lex.yy.c:1392 -1
     (nil))
(insn 1691 1089 1090 143 (set (reg:SI 4 si [orig:498 D.6777 ] [498])
        (reg:SI 1 dx [orig:275 D.6777 ] [275])) lex.yy.c:2136 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:275 D.6777 ] [275])
        (nil)))
(insn 1090 1691 1091 143 (parallel [
            (set (reg:SI 4 si [orig:498 D.6777 ] [498])
                (ashiftrt:SI (reg:SI 4 si [orig:498 D.6777 ] [498])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2136 545 {*ashrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1091 1090 1707 143 (parallel [
            (set (reg:SI 4 si [orig:499 D.6795 ] [499])
                (plus:SI (reg:SI 4 si [orig:498 D.6777 ] [498])
                    (reg:SI 2 cx [orig:287 D.6795 ] [287])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2136 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1707 1091 1092 143 (set (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 12 [0xc])) [9 %sfp+-20 S4 A32])
        (reg:SI 2 cx [orig:287 D.6795 ] [287])) lex.yy.c:2136 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:287 D.6795 ] [287])
        (nil)))
(insn 1092 1707 1093 143 (set (reg:DI 4 si [orig:500 D.6781 ] [500])
        (sign_extend:DI (reg:SI 4 si [orig:499 D.6795 ] [499]))) lex.yy.c:2136 142 {*extendsidi2_rex64}
     (nil))
(insn 1093 1092 1705 143 (set (reg/f:DI 5 di [orig:501 _957->yy_ch_buf ] [501])
        (mem/f:DI (plus:DI (reg/f:DI 39 r10 [orig:280 D.6782 ] [280])
                (const_int 8 [0x8])) [1 _957->yy_ch_buf+0 S8 A64])) lex.yy.c:2136 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (plus:DI (reg/f:DI 39 r10 [orig:280 D.6782 ] [280])
                (const_int 8 [0x8])) [1 _957->yy_ch_buf+0 S8 A64])
        (nil)))
(insn 1705 1093 1096 143 (set (mem/c:DI (reg/f:DI 7 sp) [9 %sfp+-32 S8 A64])
        (reg/f:DI 39 r10 [orig:280 D.6782 ] [280])) lex.yy.c:2136 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 39 r10 [orig:280 D.6782 ] [280])
        (nil)))
(call_insn 1096 1705 1098 143 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2136 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(debug_insn 1098 1096 1099 143 (var_location:DI ptr (clobber (const_int 0 [0]))) lex.yy.c:1392 -1
     (nil))
(debug_insn 1099 1098 1706 143 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1392 -1
     (nil))
(insn 1706 1099 1100 143 (set (reg/f:DI 39 r10 [orig:280 D.6782 ] [280])
        (mem/c:DI (reg/f:DI 7 sp) [9 %sfp+-32 S8 A64])) lex.yy.c:1392 89 {*movdi_internal}
     (nil))
(insn 1100 1706 1101 143 (set (mem/f:DI (plus:DI (reg/f:DI 39 r10 [orig:280 D.6782 ] [280])
                (const_int 8 [0x8])) [1 _957->yy_ch_buf+0 S8 A64])
        (reg/f:DI 0 ax [orig:297 D.6793 ] [297])) lex.yy.c:1392 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 39 r10 [orig:280 D.6782 ] [280])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:297 D.6793 ] [297])
            (nil))))
(insn 1101 1100 1102 143 (set (reg/f:DI 0 ax [orig:502 *_955 ] [502])
        (mem/f:DI (reg/f:DI 44 r15 [orig:347 D.6780 ] [347]) [1 *_955+0 S8 A64])) lex.yy.c:1393 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 44 r15 [orig:347 D.6780 ] [347]) [1 *_955+0 S8 A64])
        (nil)))
(insn 1102 1101 1103 143 (set (reg/f:DI 0 ax [orig:299 D.6783 ] [299])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:502 *_955 ] [502])
                (const_int 8 [0x8])) [1 _457->yy_ch_buf+0 S8 A64])) lex.yy.c:1393 89 {*movdi_internal}
     (nil))
(insn 1103 1102 1708 143 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:299 D.6783 ] [299])
            (const_int 0 [0]))) lex.yy.c:1393 4 {*cmpdi_ccno_1}
     (nil))
(insn 1708 1103 1104 143 (set (reg:SI 2 cx [orig:287 D.6795 ] [287])
        (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                (const_int 12 [0xc])) [9 %sfp+-20 S4 A32])) lex.yy.c:1393 90 {*movsi_internal}
     (nil))
(jump_insn 1104 1708 1105 143 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1112)
            (pc))) lex.yy.c:1393 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 1112)
;;  succ:       144 [0.0%]  (FALLTHRU,LOOP_EXIT)
;;              146 [100.0%] 
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 144, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 143, next block 145, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       143 [0.0%]  (FALLTHRU,LOOP_EXIT)
;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(note 1105 1104 1106 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 1106 1105 1107 144 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f88bbbf2cf0 *.LC24>)) lex.yy.c:1394 89 {*movdi_internal}
     (nil))
(call_insn 1107 1106 1108 144 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1394 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 1108 1107 1109)
;; basic block 145, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 144, next block 146, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       142 [71.0%] 
;; bb 145 artificial_defs: { }
;; bb 145 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 39 [r10]
;; lr  def 	 0 [ax]
;; live  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 39 [r10] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 1109 1108 1110 145 228 "" [1 uses])
(note 1110 1109 1111 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 1111 1110 1112 145 (set (reg/f:DI 0 ax [orig:299 D.6783 ] [299])
        (mem/f:DI (plus:DI (reg/f:DI 39 r10 [orig:280 D.6782 ] [280])
                (const_int 8 [0x8])) [1 _957->yy_ch_buf+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 39 r10 [orig:280 D.6782 ] [280])
        (nil)))
;;  succ:       146 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 146, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 145, next block 147, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       145 [100.0%]  (FALLTHRU)
;;              143 [100.0%] 
;; bb 146 artificial_defs: { }
;; bb 146 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 2 [cx] 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	
(code_label 1112 1111 1113 146 229 "" [1 uses])
(note 1113 1112 1114 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 1114 1113 1115 146 (set (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])
        (reg:SI 2 cx [orig:287 D.6795 ] [287])) lex.yy.c:1397 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:287 D.6795 ] [287])
        (nil)))
(insn 1115 1114 1116 146 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:299 D.6783 ] [299])
                (reg:DI 6 bp [orig:289 D.6781 ] [289])) [0 *_461+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1398 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:299 D.6783 ] [299])
        (nil)))
(insn 1116 1115 1117 146 (set (reg/f:DI 0 ax [orig:503 *_955 ] [503])
        (mem/f:DI (reg/f:DI 44 r15 [orig:347 D.6780 ] [347]) [1 *_955+0 S8 A64])) lex.yy.c:1399 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 44 r15 [orig:347 D.6780 ] [347]) [1 *_955+0 S8 A64])
        (nil)))
(insn 1117 1116 1118 146 (set (reg/f:DI 0 ax [orig:504 _462->yy_ch_buf ] [504])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:503 *_955 ] [503])
                (const_int 8 [0x8])) [1 _462->yy_ch_buf+0 S8 A64])) lex.yy.c:1399 89 {*movdi_internal}
     (nil))
(insn 1118 1117 1119 146 (set (mem:QI (plus:DI (plus:DI (reg/f:DI 0 ax [orig:504 _462->yy_ch_buf ] [504])
                    (reg:DI 6 bp [orig:289 D.6781 ] [289]))
                (const_int 1 [0x1])) [0 *_465+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1399 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:504 _462->yy_ch_buf ] [504])
        (nil)))
(insn 1119 1118 1120 146 (set (reg/f:DI 0 ax [orig:505 *_955 ] [505])
        (mem/f:DI (reg/f:DI 44 r15 [orig:347 D.6780 ] [347]) [1 *_955+0 S8 A64])) lex.yy.c:1401 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 44 r15 [orig:347 D.6780 ] [347]) [1 *_955+0 S8 A64])
        (nil)))
(insn 1120 1119 1121 146 (set (reg/f:DI 0 ax [orig:306 D.6783 ] [306])
        (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:505 *_955 ] [505])
                (const_int 8 [0x8])) [1 _466->yy_ch_buf+0 S8 A64])) lex.yy.c:1401 89 {*movdi_internal}
     (nil))
(insn 1121 1120 1122 146 (set (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])
        (reg/f:DI 0 ax [orig:306 D.6783 ] [306])) lex.yy.c:1401 89 {*movdi_internal}
     (nil))
(debug_insn 1122 1121 1123 146 (var_location:SI new_size (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1123 1122 1124 146 (var_location:DI n (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1124 1123 1125 146 (var_location:SI c (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1125 1124 1126 146 (var_location:DI new_size (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1126 1125 1127 146 (var_location:SI yy_c_buf_p_offset (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1127 1126 1128 146 (var_location:DI b (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1128 1127 1129 146 (var_location:DI num_to_read (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1129 1128 1130 146 (var_location:SI ret_val (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1130 1129 1131 146 (var_location:DI i (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1131 1130 1132 146 (var_location:DI number_to_move (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1132 1131 1133 146 (var_location:DI source (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1133 1132 1134 146 (var_location:DI dest (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(insn 1134 1133 1135 146 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 43 r14 [orig:308 ret_val ] [308])
            (const_int 1 [0x1]))) lex.yy.c:1205 7 {*cmpsi_1}
     (nil))
(jump_insn 1135 1134 1351 146 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1147)
            (pc))) lex.yy.c:1205 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 10000 (nil)))
 -> 1147)
;;  succ:       150 [100.0%] 
;;              147 (FALLTHRU,LOOP_EXIT)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 147, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 146, next block 148, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       146 (FALLTHRU,LOOP_EXIT)
;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
;; live  in  	 0 [ax] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(note 1351 1135 1136 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 1136 1351 1137 147 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 43 r14 [orig:308 ret_val ] [308])
            (const_int 2 [0x2]))) lex.yy.c:1205 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/v:SI 43 r14 [orig:308 ret_val ] [308])
        (nil)))
(jump_insn 1137 1136 1141 147 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1627)
            (pc))) lex.yy.c:1205 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 7100 (nil)))
 -> 1627)
;;  succ:       148 [29.0%]  (FALLTHRU)
;;              151 [71.0%]  (LOOP_EXIT)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; live  out 	 0 [ax] 6 [bp] 7 [sp] 42 [r13] 44 [r15]

;; basic block 148, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 147, next block 149, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       147 [29.0%]  (FALLTHRU)
;; bb 148 artificial_defs: { }
;; bb 148 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 44 [r15]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags]
;; live  in  	 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; live  gen 	 0 [ax] 3 [bx]
;; live  kill	 17 [flags]
(note 1141 1137 1142 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 1142 1141 1143 148 (set (reg/f:DI 0 ax [orig:506 *_955 ] [506])
        (mem/f:DI (reg/f:DI 44 r15 [orig:347 D.6780 ] [347]) [1 *_955+0 S8 A64])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 44 r15 [orig:347 D.6780 ] [347])
        (nil)))
(note 1143 1142 1144 148 NOTE_INSN_DELETED)
(note 1144 1143 1693 148 NOTE_INSN_DELETED)
(insn 1693 1144 33 148 (set (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])
        (reg:DI 6 bp [orig:289 D.6781 ] [289])) lex.yy.c:1205 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 6 bp [orig:289 D.6781 ] [289])
        (nil)))
(insn 33 1693 1924 148 (parallel [
            (set (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])
                (plus:DI (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])
                    (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:506 *_955 ] [506])
                            (const_int 8 [0x8])) [1 _934->yy_ch_buf+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1205 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:506 *_955 ] [506])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(jump_insn 1924 33 1925 148 (set (pc)
        (label_ref 1184)) -1
     (nil)
 -> 1184)
;;  succ:       152 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp] 42 [r13]
;; live  out 	 3 [bx] 7 [sp] 42 [r13]

(barrier 1925 1924 1344)
;; basic block 149, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 148, next block 150, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       108 [16.1%] 
;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 5 [di] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 1344 1925 1343 149 242 "" [1 uses])
(note 1343 1344 32 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 32 1343 1147 149 (set (reg/f:DI 0 ax [orig:306 D.6783 ] [306])
        (reg/v/f:DI 5 di [orig:213 source ] [213])) lex.yy.c:1277 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:213 source ] [213])
        (nil)))
;;  succ:       150 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]

;; basic block 150, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 149, next block 151, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       149 [100.0%]  (FALLTHRU)
;;              146 [100.0%] 
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx]
;; live  kill	 17 [flags]
(code_label 1147 32 1148 150 205 "" [1 uses])
(note 1148 1147 1149 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1149 1148 1150 150 (var_location:SI new_size (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1150 1149 1151 150 (var_location:DI n (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1151 1150 1152 150 (var_location:SI c (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1152 1151 1153 150 (var_location:DI new_size (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1153 1152 1154 150 (var_location:SI yy_c_buf_p_offset (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1154 1153 1155 150 (var_location:DI b (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1155 1154 1156 150 (var_location:DI num_to_read (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1156 1155 1157 150 (var_location:SI ret_val (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1157 1156 1158 150 (var_location:DI i (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1158 1157 1159 150 (var_location:DI number_to_move (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1159 1158 1160 150 (var_location:DI source (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1160 1159 1161 150 (var_location:DI dest (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(insn 1161 1160 1162 150 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/f:DI 0 ax [orig:306 D.6783 ] [306])) lex.yy.c:1222 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:306 D.6783 ] [306])
        (nil)))
(note 1162 1161 1695 150 NOTE_INSN_DELETED)
(insn 1695 1162 1163 150 (set (reg:SI 0 ax [596])
        (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])) lex.yy.c:1224 90 {*movsi_internal}
     (nil))
(insn 1163 1695 1696 150 (parallel [
            (set (reg:SI 0 ax [orig:508 D.6777 ] [508])
                (plus:SI (reg:SI 0 ax [596])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1224 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUAL (plus:SI (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
                (const_int -1 [0xffffffffffffffff]))
            (nil))))
(insn 1696 1163 1164 150 (set (reg:SI 1 dx [511])
        (reg:SI 0 ax [orig:508 D.6777 ] [508])) lex.yy.c:1224 90 {*movsi_internal}
     (nil))
(insn 1164 1696 1165 150 (parallel [
            (set (reg:SI 1 dx [511])
                (lshiftrt:SI (reg:SI 1 dx [511])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1224 544 {*lshrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1165 1164 1166 150 (parallel [
            (set (reg:SI 1 dx [512])
                (plus:SI (reg:SI 1 dx [511])
                    (reg:SI 0 ax [orig:508 D.6777 ] [508])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1224 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:508 D.6777 ] [508])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1166 1165 1167 150 (parallel [
            (set (reg:SI 1 dx [orig:513 D.6777 ] [513])
                (ashiftrt:SI (reg:SI 1 dx [512])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1224 545 {*ashrsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 1167 1166 1168 150 (parallel [
            (set (reg/v:SI 1 dx [orig:90 yy_act ] [90])
                (plus:SI (reg:SI 1 dx [orig:513 D.6777 ] [513])
                    (const_int 47 [0x2f])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1224 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 1168 1167 1926 150 (var_location:SI yy_act (reg/v:SI 1 dx [orig:90 yy_act ] [90])) lex.yy.c:1224 -1
     (nil))
(jump_insn 1926 1168 1927 150 (set (pc)
        (label_ref 347)) lex.yy.c:1225 -1
     (nil)
 -> 347)
;;  succ:       40 [100.0%] 
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]

(barrier 1927 1926 1627)
;; basic block 151, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 150, next block 152, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       147 [71.0%]  (LOOP_EXIT)
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp] 42 [r13]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 3 [bx] 41 [r12]
;; live  kill	 17 [flags]
(code_label 1627 1927 1172 151 283 "" [1 uses])
(note 1172 1627 1698 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(note 1698 1172 1710 151 NOTE_INSN_DELETED)
(note 1710 1698 1173 151 NOTE_INSN_DELETED)
(insn 1173 1710 1174 151 (set (reg:DI 3 bx [orig:514 D.6790 ] [514])
        (sign_extend:DI (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])) [9 %sfp+-24 S4 A32]))) lex.yy.c:1238 142 {*extendsidi2_rex64}
     (nil))
(insn 1174 1173 1175 151 (parallel [
            (set (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])
                (plus:DI (reg:DI 3 bx [orig:514 D.6790 ] [514])
                    (reg/f:DI 0 ax [orig:306 D.6783 ] [306])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1238 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:306 D.6783 ] [306])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1175 1174 1176 151 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])) lex.yy.c:1238 89 {*movdi_internal}
     (nil))
(call_insn 1176 1175 1178 151 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>) [0 yy_get_previous_state S1 A8])
            (const_int 0 [0]))) lex.yy.c:1240 669 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(debug_insn 1178 1176 1179 151 (var_location:SI yy_current_state (reg/v:SI 0 ax [orig:87 yy_current_state ] [87])) lex.yy.c:1240 -1
     (nil))
(debug_insn 1179 1178 1180 151 (var_location:DI yy_cp (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])) lex.yy.c:1242 -1
     (nil))
(insn 1180 1179 1181 151 (set (reg/v/f:DI 41 r12 [orig:89 yy_cp ] [89])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1243 89 {*movdi_internal}
     (nil))
(debug_insn 1181 1180 1928 151 (var_location:DI yy_bp (reg/v/f:DI 41 r12 [orig:89 yy_cp ] [89])) lex.yy.c:1243 -1
     (nil))
(jump_insn 1928 1181 1929 151 (set (pc)
        (label_ref 822)) lex.yy.c:1244 -1
     (nil)
 -> 822)
;;  succ:       18 [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12] 42 [r13]

(barrier 1929 1928 1184)
;; basic block 152, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 151, next block 153, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       109 [100.0%] 
;;              148 [100.0%] 
;; bb 152 artificial_defs: { }
;; bb 152 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp] 42 [r13]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 7 [sp] 42 [r13]
;; live  gen 	 0 [ax] 1 [dx] 41 [r12]
;; live  kill	
(code_label 1184 1929 1185 152 206 "" [2 uses])
(note 1185 1184 1186 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1186 1185 1187 152 (var_location:SI new_size (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1187 1186 1188 152 (var_location:DI n (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1188 1187 1189 152 (var_location:SI c (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1189 1188 1190 152 (var_location:DI new_size (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1190 1189 1191 152 (var_location:SI yy_c_buf_p_offset (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1191 1190 1192 152 (var_location:DI b (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1192 1191 1193 152 (var_location:DI num_to_read (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1193 1192 1194 152 (var_location:SI ret_val (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1194 1193 1195 152 (var_location:DI i (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1195 1194 1196 152 (var_location:DI number_to_move (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1196 1195 1197 152 (var_location:DI source (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1197 1196 1198 152 (var_location:DI dest (clobber (const_int 0 [0]))) lex.yy.c:1205 -1
     (nil))
(debug_insn 1198 1197 1199 152 (var_location:DI D#9 (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1248 -1
     (nil))
(debug_insn 1199 1198 1200 152 (var_location:DI D#8 (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1248 -1
     (nil))
(debug_insn 1200 1199 1201 152 (var_location:DI D#7 (ashift:DI (debug_expr:DI D#8)
        (const_int 3 [0x3]))) lex.yy.c:1248 -1
     (nil))
(debug_insn 1201 1200 1202 152 (var_location:DI D#6 (plus:DI (debug_expr:DI D#9)
        (debug_expr:DI D#7))) lex.yy.c:1248 -1
     (nil))
(debug_insn 1202 1201 1203 152 (var_location:DI D#5 (mem/f:DI (debug_expr:DI D#6) [0 +0 S8 A64])) lex.yy.c:1248 -1
     (nil))
(debug_insn 1203 1202 1204 152 (var_location:DI D#4 (mem/f/j:DI (plus:DI (debug_expr:DI D#5)
            (const_int 8 [0x8])) [0 D#5->yy_ch_buf+0 S8 A64])) lex.yy.c:1248 -1
     (nil))
(debug_insn 1204 1203 1205 152 (var_location:SI D#3 (mem/c:SI (symbol_ref:DI ("_ZL10yy_n_chars") [flags 0x2]  <var_decl 0x7f88bc080360 yy_n_chars>) [2 yy_n_chars+0 S4 A32])) lex.yy.c:1248 -1
     (nil))
(debug_insn 1205 1204 1206 152 (var_location:DI D#2 (sign_extend:DI (debug_expr:SI D#3))) lex.yy.c:1248 -1
     (nil))
(insn 1206 1205 1207 152 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (reg/v/f:DI 3 bx [orig:88 yy_cp ] [88])) lex.yy.c:1248 89 {*movdi_internal}
     (nil))
(call_insn 1207 1206 1209 152 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>) [0 yy_get_previous_state S1 A8])
            (const_int 0 [0]))) lex.yy.c:1250 669 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL21yy_get_previous_statev") [flags 0x3]  <function_decl 0x7f88bc07c000 yy_get_previous_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(debug_insn 1209 1207 1210 152 (var_location:SI yy_current_state (reg/v:SI 0 ax [orig:160 yy_current_state ] [160])) lex.yy.c:1250 -1
     (nil))
(debug_insn 1210 1209 1211 152 (var_location:DI yy_cp (plus:DI (debug_expr:DI D#4)
        (debug_expr:DI D#2))) lex.yy.c:1252 -1
     (nil))
(insn 1211 1210 1212 152 (set (reg/v/f:DI 41 r12 [orig:89 yy_cp ] [89])
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:1253 89 {*movdi_internal}
     (nil))
(debug_insn 1212 1211 1214 152 (var_location:DI yy_bp (reg/v/f:DI 41 r12 [orig:89 yy_cp ] [89])) lex.yy.c:1253 -1
     (nil))
(insn 1214 1212 1215 152 (set (reg:DI 0 ax [orig:516 yy_current_state ] [516])
        (sign_extend:DI (reg/v:SI 0 ax [orig:160 yy_current_state ] [160]))) 142 {*extendsidi2_rex64}
     (nil))
(insn 1215 1214 1930 152 (set (reg:SI 1 dx)
        (sign_extend:SI (mem/u:HI (plus:DI (mult:DI (reg:DI 0 ax [orig:516 yy_current_state ] [516])
                        (const_int 2 [0x2]))
                    (symbol_ref:DI ("_ZL9yy_accept") [flags 0x2]  <var_decl 0x7f88bc080990 yy_accept>)) [3 yy_accept S2 A16]))) 146 {extendhisi2}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:516 yy_current_state ] [516])
        (nil)))
(jump_insn 1930 1215 1931 152 (set (pc)
        (label_ref 278)) lex.yy.c:1254 -1
     (nil)
 -> 278)
;;  succ:       32 [100.0%] 
;; lr  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]
;; live  out 	 1 [dx] 3 [bx] 7 [sp] 41 [r12] 42 [r13]

(barrier 1931 1930 1218)
;; basic block 153, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 152, next block 154, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       40 [2.2%]  (LOOP_EXIT)
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 1218 1931 1219 153 140 "" [1 uses])
(note 1219 1218 1220 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 1220 1219 1221 153 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f88bbbf2d80 *.LC25>)) lex.yy.c:1261 89 {*movdi_internal}
     (nil))
(call_insn 1221 1220 1222 153 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1261 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 1222 1221 1223)
;; basic block 154, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 153, next block 155, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 1223 1222 1224 154 156 "" [1 uses])
(note 1224 1223 42 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 42 1224 1932 154 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 276 [0x114])) mycc.l:75 90 {*movsi_internal}
     (nil))
(jump_insn 1932 42 1933 154 (set (pc)
        (label_ref 1225)) -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1933 1932 1330)
;; basic block 155, loop depth 0, count 0, freq 2, maybe hot
;;  prev block 154, next block 156, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       41 [2.3%]  (LOOP_EXIT)
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 1330 1933 1329 155 238 "" [1 uses])
(note 1329 1330 43 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 43 1329 1934 155 (set (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (const_int 277 [0x115])) mycc.l:76 90 {*movsi_internal}
     (nil))
(jump_insn 1934 43 1935 155 (set (pc)
        (label_ref 1225)) -1
     (nil)
 -> 1225)
;;  succ:       157 [100.0%] 
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

(barrier 1935 1934 1338)
;; basic block 156, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 155, next block 157, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       50 [2.0%]  (LOOP_EXIT)
;;              52 [100.0%] 
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 3 [bx]
;; live  in  	 7 [sp]
;; live  gen 	 3 [bx]
;; live  kill	
(code_label 1338 1935 1337 156 240 "" [2 uses])
(note 1337 1338 1953 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 1953 1337 1225 156 (parallel [
            (set (reg:DI 3 bx [orig:92 D.6777 ] [92])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) mycc.l:62 -1
     (nil))
;;  succ:       157 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 7 [sp]
;; live  out 	 3 [bx] 7 [sp]

;; basic block 157, loop depth 0, count 0, freq 61, maybe hot
;;  prev block 156, next block 158, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       55 [100.0%] 
;;              89 [100.0%] 
;;              154 [100.0%] 
;;              42 [100.0%] 
;;              67 [21.6%] 
;;              58 [100.0%] 
;;              59 [100.0%] 
;;              65 [100.0%] 
;;              91 [100.0%] 
;;              90 [100.0%] 
;;              156 [100.0%]  (FALLTHRU)
;;              66 [100.0%] 
;;              68 [100.0%] 
;;              69 [100.0%] 
;;              70 [100.0%] 
;;              71 [100.0%] 
;;              72 [100.0%] 
;;              73 [100.0%] 
;;              74 [100.0%] 
;;              75 [100.0%] 
;;              76 [100.0%] 
;;              77 [100.0%] 
;;              78 [100.0%] 
;;              79 [100.0%] 
;;              80 [100.0%] 
;;              81 [100.0%] 
;;              82 [100.0%] 
;;              83 [100.0%] 
;;              84 [100.0%] 
;;              85 [100.0%] 
;;              86 [100.0%] 
;;              87 [100.0%] 
;;              88 [100.0%] 
;;              155 [100.0%] 
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 7 [sp]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
;; live  in  	 3 [bx] 7 [sp]
;; live  gen 	 0 [ax] 17 [flags]
;; live  kill	 5 [di]
(code_label 1225 1953 1226 157 157 "" [33 uses])
(note 1226 1225 1319 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 1319 1226 1320 157 (set (reg/i:SI 0 ax)
        (reg:SI 3 bx [orig:92 D.6777 ] [92])) lex.yy.c:1265 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 3 bx [orig:92 D.6777 ] [92])
        (nil)))
(insn 1320 1319 1321 157 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                                (const_int 24 [0x18])) [1 D.6797+0 S8 A64])
                        (const_int 40 [0x28])
                    ] UNSPEC_SP_TLS_TEST))
            (clobber (reg:DI 5 di [577]))
        ]) lex.yy.c:1265 990 {stack_tls_protect_test_di}
     (expr_list:REG_UNUSED (reg:DI 5 di [577])
        (nil)))
(jump_insn 1321 1320 1936 157 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1324)
            (pc))) lex.yy.c:1265 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 1324)
;;  succ:       168 [100.0%] 
;;              158 [0.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 158, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 157, next block 159, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       157 [0.0%]  (FALLTHRU)
;; bb 158 artificial_defs: { }
;; bb 158 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(note 1936 1321 1938 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1938 1936 1939 158 (set (pc)
        (label_ref 1937)) -1
     (nil)
 -> 1937)
;;  succ:       167 [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 1939 1938 1239)
;; basic block 159, loop depth 0, count 0, freq 3, maybe hot
;;  prev block 158, next block 160, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       129 [72.0%] 
;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 43 [r14] 44 [r15]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 1 [dx] 2 [cx] 4 [si] 5 [di] 17 [flags] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(code_label 1239 1939 1240 159 220 "" [1 uses])
(note 1240 1239 1242 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1242 1240 1243 159 (var_location:SI c (debug_expr:SI D#20)) -1
     (nil))
(insn 1243 1242 1244 159 (set (reg:DI 4 si [orig:540 yy_buffer_stack_top ] [540])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1364 89 {*movdi_internal}
     (nil))
(note 1244 1243 1245 159 NOTE_INSN_DELETED)
(insn 1245 1244 1246 159 (set (reg/f:DI 2 cx [orig:541 yy_buffer_stack ] [541])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1364 89 {*movdi_internal}
     (nil))
(insn 1246 1245 1247 159 (set (reg/f:DI 44 r15 [orig:347 D.6780 ] [347])
        (plus:DI (mult:DI (reg:DI 4 si [orig:540 yy_buffer_stack_top ] [540])
                (const_int 8 [0x8]))
            (reg/f:DI 2 cx [orig:541 yy_buffer_stack ] [541]))) lex.yy.c:1364 214 {*leadi}
     (nil))
(insn 1247 1246 1248 159 (set (reg/f:DI 1 dx [orig:521 *_379 ] [521])
        (mem/f:DI (reg/f:DI 44 r15 [orig:347 D.6780 ] [347]) [1 *_379+0 S8 A64])) lex.yy.c:1364 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 44 r15 [orig:347 D.6780 ] [347]) [1 *_379+0 S8 A64])
        (nil)))
(note 1248 1247 1699 159 NOTE_INSN_DELETED)
(insn 1699 1248 1249 159 (set (reg:DI 5 di [523])
        (reg/v:DI 43 r14 [orig:212 n ] [212])) lex.yy.c:1364 89 {*movdi_internal}
     (nil))
(insn 1249 1699 1700 159 (parallel [
            (set (reg:DI 5 di [523])
                (plus:DI (reg:DI 5 di [523])
                    (mem/f:DI (plus:DI (reg/f:DI 1 dx [orig:521 *_379 ] [521])
                            (const_int 8 [0x8])) [1 _380->yy_ch_buf+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:521 *_379 ] [521])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1700 1249 1250 159 (set (reg:DI 1 dx [523])
        (reg:DI 5 di [523])) lex.yy.c:1364 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [523])
        (nil)))
(note 1250 1700 1251 159 NOTE_INSN_DELETED)
(insn 1251 1250 1252 159 (set (mem:QI (plus:DI (reg:DI 1 dx [523])
                (reg/v:DI 6 bp [orig:224 number_to_move ] [224])) [0 *_383+0 S1 A8])
        (reg:QI 0 ax [orig:251 c ] [251])) lex.yy.c:1364 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [523])
        (expr_list:REG_DEAD (reg:QI 0 ax [orig:251 c ] [251])
            (nil))))
(insn 1252 1251 1254 159 (parallel [
            (set (reg/v:DI 43 r14 [orig:212 n ] [212])
                (plus:DI (reg/v:DI 43 r14 [orig:212 n ] [212])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 1254 1252 1255 159 (var_location:DI n (reg/v:DI 43 r14 [orig:212 n ] [212])) -1
     (nil))
(debug_insn 1255 1254 1701 159 (var_location:SI c (debug_expr:SI D#20)) -1
     (nil))
(note 1701 1255 1709 159 NOTE_INSN_DELETED)
(note 1709 1701 1257 159 NOTE_INSN_DELETED)
(insn 1257 1709 1258 159 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 43 r14 [orig:212 n ] [212])
            (mem/c:DI (reg/f:DI 7 sp) [9 %sfp+-32 S8 A64]))) lex.yy.c:1364 8 {*cmpdi_1}
     (nil))
(jump_insn 1258 1257 1940 159 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1256)
            (pc))) lex.yy.c:1364 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 8800 (nil)))
 -> 1256)
;;  succ:       128 [88.0%]  (DFS_BACK)
;;              160 [12.0%]  (FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 160, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 159, next block 161, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       159 [12.0%]  (FALLTHRU)
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  gen 	
;; live  kill	
(note 1940 1258 1941 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1941 1940 1942 160 (set (pc)
        (label_ref 1260)) -1
     (nil)
 -> 1260)
;;  succ:       132 [100.0%] 
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1942 1941 1263)
;; basic block 161, loop depth 0, count 0, freq 6, maybe hot
;;  prev block 160, next block 162, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       134 [71.0%]  (LOOP_EXIT)
;;              136 [100.0%] 
;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  use 	 7 [sp]
;; lr  def 	 2 [cx] 4 [si] 44 [r15]
;; live  in  	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; live  gen 	 2 [cx] 4 [si] 44 [r15]
;; live  kill	
(code_label 1263 1942 1264 161 223 "" [2 uses])
(note 1264 1263 1265 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 1265 1264 1266 161 (set (reg:DI 4 si [orig:540 yy_buffer_stack_top ] [540])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(note 1266 1265 1267 161 NOTE_INSN_DELETED)
(insn 1267 1266 1268 161 (set (reg/f:DI 2 cx [orig:541 yy_buffer_stack ] [541])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 1268 1267 1943 161 (set (reg/f:DI 44 r15 [orig:347 D.6780 ] [347])
        (plus:DI (mult:DI (reg:DI 4 si [orig:540 yy_buffer_stack_top ] [540])
                (const_int 8 [0x8]))
            (reg/f:DI 2 cx [orig:541 yy_buffer_stack ] [541]))) 214 {*leadi}
     (nil))
(jump_insn 1943 1268 1944 161 (set (pc)
        (label_ref 1046)) -1
     (nil)
 -> 1046)
;;  succ:       138 [100.0%] 
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

(barrier 1944 1943 1271)
;; basic block 162, loop depth 0, count 0, freq 7, maybe hot
;;  prev block 161, next block 163, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       135 [50.0%] 
;; bb 162 artificial_defs: { }
;; bb 162 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; lr  use 	 7 [sp] 44 [r15]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  gen 	 17 [flags]
;; live  kill	
(code_label 1271 1944 1272 162 224 "" [1 uses])
(note 1272 1271 1274 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 1274 1272 1275 162 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/f:DI 44 r15 [orig:270 D.6794 ] [270]) [2 *_402+0 S4 A32])
            (const_int 4 [0x4]))) lex.yy.c:1364 7 {*cmpsi_1}
     (nil))
(jump_insn 1275 1274 1945 162 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1651)
            (pc))) lex.yy.c:1364 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 1651)
;;  succ:       163 [0.0%]  (FALLTHRU)
;;              137 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 44 [r15]

;; basic block 163, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 162, next block 164, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       162 [0.0%]  (FALLTHRU)
;; bb 163 artificial_defs: { }
;; bb 163 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(note 1945 1275 1946 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1946 1945 1947 163 (set (pc)
        (label_ref 1273)) -1
     (nil)
 -> 1273)
;;  succ:       131 [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 1947 1946 1913)
;; basic block 164, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 163, next block 165, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       130 [100.0%] 
;; bb 164 artificial_defs: { }
;; bb 164 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 2 [cx] 4 [si] 5 [di] 17 [flags] 43 [r14] 44 [r15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 2 [cx] 4 [si] 5 [di] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(code_label 1913 1947 1281 164 294 "" [1 uses])
(note 1281 1913 1284 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1284 1281 1285 164 (var_location:SI c (const_int 10 [0xa])) -1
     (nil))
(insn 1285 1284 1286 164 (set (reg:DI 4 si [orig:540 yy_buffer_stack_top ] [540])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:1364 89 {*movdi_internal}
     (nil))
(note 1286 1285 1287 164 NOTE_INSN_DELETED)
(insn 1287 1286 1288 164 (set (reg/f:DI 2 cx [orig:541 yy_buffer_stack ] [541])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:1364 89 {*movdi_internal}
     (nil))
(insn 1288 1287 1289 164 (set (reg/f:DI 44 r15 [orig:347 D.6780 ] [347])
        (plus:DI (mult:DI (reg:DI 4 si [orig:540 yy_buffer_stack_top ] [540])
                (const_int 8 [0x8]))
            (reg/f:DI 2 cx [orig:541 yy_buffer_stack ] [541]))) lex.yy.c:1364 214 {*leadi}
     (nil))
(note 1289 1288 1290 164 NOTE_INSN_DELETED)
(debug_insn 1290 1289 1291 164 (var_location:DI n (plus:DI (reg/v:DI 43 r14 [orig:212 n ] [212])
        (const_int 1 [0x1]))) lex.yy.c:1364 -1
     (nil))
(insn 1291 1290 1292 164 (set (reg/f:DI 0 ax [orig:531 *_390 ] [531])
        (mem/f:DI (reg/f:DI 44 r15 [orig:347 D.6780 ] [347]) [1 *_390+0 S8 A64])) lex.yy.c:1364 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/f:DI (reg/f:DI 44 r15 [orig:347 D.6780 ] [347]) [1 *_390+0 S8 A64])
        (nil)))
(note 1292 1291 1702 164 NOTE_INSN_DELETED)
(insn 1702 1292 1293 164 (set (reg:DI 5 di [533])
        (reg/v:DI 43 r14 [orig:212 n ] [212])) lex.yy.c:1364 89 {*movdi_internal}
     (nil))
(insn 1293 1702 1703 164 (parallel [
            (set (reg:DI 5 di [533])
                (plus:DI (reg:DI 5 di [533])
                    (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:531 *_390 ] [531])
                            (const_int 8 [0x8])) [1 _391->yy_ch_buf+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 218 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:531 *_390 ] [531])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 1703 1293 1294 164 (set (reg:DI 0 ax [533])
        (reg:DI 5 di [533])) lex.yy.c:1364 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [533])
        (nil)))
(note 1294 1703 1295 164 NOTE_INSN_DELETED)
(insn 1295 1294 1296 164 (set (mem:QI (plus:DI (reg:DI 0 ax [533])
                (reg/v:DI 6 bp [orig:224 number_to_move ] [224])) [0 *_395+0 S1 A8])
        (const_int 10 [0xa])) lex.yy.c:1364 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [533])
        (nil)))
(debug_insn 1296 1295 1952 164 (var_location:DI n (plus:DI (reg/v:DI 43 r14 [orig:212 n ] [212])
        (const_int 1 [0x1]))) -1
     (nil))
(insn 1952 1296 1948 164 (parallel [
            (set (reg/v:DI 43 r14 [orig:212 n ] [212])
                (plus:DI (reg/v:DI 43 r14 [orig:212 n ] [212])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1364 -1
     (nil))
(jump_insn 1948 1952 1949 164 (set (pc)
        (label_ref 1260)) -1
     (nil)
 -> 1260)
;;  succ:       132 [100.0%] 
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1949 1948 1299)
;; basic block 165, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 164, next block 166, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       128 [28.0%]  (LOOP_EXIT)
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 0 [ax] 5 [di] 17 [flags]
;; live  kill	
(code_label 1299 1949 1300 165 219 "" [1 uses])
(note 1300 1299 1303 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(debug_insn 1303 1300 1304 165 (var_location:SI c (const_int -1 [0xffffffffffffffff])) -1
     (nil))
(debug_insn 1304 1303 1305 165 (var_location:DI n (reg/v:DI 43 r14 [orig:212 n ] [212])) -1
     (nil))
(insn 1305 1304 1306 165 (set (reg:DI 5 di)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1364 89 {*movdi_internal}
     (nil))
(call_insn 1306 1305 1308 165 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f88bbf956c0 ferror>) [0 ferror S1 A8])
            (const_int 0 [0]))) lex.yy.c:1364 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("ferror") [flags 0x41]  <function_decl 0x7f88bbf956c0 ferror>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1308 1306 1309 165 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:268 D.6777 ] [268])
            (const_int 0 [0]))) lex.yy.c:1364 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:268 D.6777 ] [268])
        (nil)))
(jump_insn 1309 1308 1310 165 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1273)
            (pc))) lex.yy.c:1364 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 5000 (nil)))
 -> 1273)
;;  succ:       131 [50.0%]  (LOOP_EXIT)
;;              166 [50.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]

;; basic block 166, loop depth 0, count 0, freq 1, maybe hot
;;  prev block 165, next block 167, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       165 [50.0%]  (FALLTHRU)
;; bb 166 artificial_defs: { }
;; bb 166 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 2 [cx] 4 [si] 44 [r15]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; live  gen 	 2 [cx] 4 [si] 44 [r15]
;; live  kill	
(note 1310 1309 1311 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 1311 1310 1312 166 (set (reg:DI 4 si [orig:540 yy_buffer_stack_top ] [540])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(note 1312 1311 1313 166 NOTE_INSN_DELETED)
(insn 1313 1312 1314 166 (set (reg/f:DI 2 cx [orig:541 yy_buffer_stack ] [541])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) 89 {*movdi_internal}
     (nil))
(insn 1314 1313 1950 166 (set (reg/f:DI 44 r15 [orig:347 D.6780 ] [347])
        (plus:DI (mult:DI (reg:DI 4 si [orig:540 yy_buffer_stack_top ] [540])
                (const_int 8 [0x8]))
            (reg/f:DI 2 cx [orig:541 yy_buffer_stack ] [541]))) 214 {*leadi}
     (nil))
(jump_insn 1950 1314 1951 166 (set (pc)
        (label_ref 1260)) -1
     (nil)
 -> 1260)
;;  succ:       132 [100.0%] 
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1951 1950 1937)
;; basic block 167, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 166, next block 168, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       158 [100.0%] 
;; bb 167 artificial_defs: { }
;; bb 167 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(code_label 1937 1951 1353 167 295 "" [1 uses])
(note 1353 1937 1322 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(call_insn 1322 1353 1323 167 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f88bbdacaf8 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) lex.yy.c:1265 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f88bbdacaf8 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 1323 1322 1324)
;; basic block 168, loop depth 0, count 0, freq 63, maybe hot
;;  prev block 167, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       157 [100.0%] 
;; bb 168 artificial_defs: { }
;; bb 168 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  kill	 17 [flags]
(code_label 1324 1323 1354 168 237 "" [1 uses])
(note 1354 1324 1325 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn 1325 1354 1756 168 (use (reg/i:SI 0 ax)) lex.yy.c:1265 -1
     (nil))
(note 1756 1325 1757 168 NOTE_INSN_EPILOGUE_BEG)
(insn/f 1757 1756 1758 168 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 40 [0x28])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) lex.yy.c:1265 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 40 [0x28])))
            (nil))))
(insn/f 1758 1757 1759 168 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1265 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 1759 1758 1760 168 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1265 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 1760 1759 1761 168 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1265 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 1761 1760 1762 168 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1265 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 1762 1761 1763 168 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1265 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 1763 1762 1764 168 (set (reg:DI 44 r15)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1265 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn 1764 1763 1765 168 (simple_return) lex.yy.c:1265 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 1765 1764 1664)
(note 1664 1765 0 NOTE_INSN_DELETED)

;; Function yy_buffer_state* yy_scan_buffer(char*, yy_size_t) (_Z14yy_scan_bufferPcm, funcdef_no=101, decl_uid=4272, cgraph_uid=101, symbol_order=128)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 11 (    1)


yy_buffer_state* yy_scan_buffer(char*, yy_size_t)

Dataflow summary:
def_info->table_size = 246, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;;  regs ever live 	 0[ax] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12]
;;  ref usage 	r0={7d,4u} r1={4d} r2={4d} r3={3d,15u} r4={4d,4u} r5={7d,6u} r6={3d,4u} r7={7d,19u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={7d,4u} r18={3d} r19={3d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r41={3d,4u} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} 
;;    total ref usage 317{257d,60u,0e} in 44{41 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]

( 0 )->[2]->( 8 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]

( 2 )->[3]->( 9 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 7 [sp] 17 [flags] 41 [r12]
;; live  kill	
;; lr  out 	 4 [si] 5 [di] 7 [sp] 41 [r12]
;; live  out 	 4 [si] 5 [di] 7 [sp] 41 [r12]

( 3 )->[4]->( 9 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp] 41 [r12]
;; lr  use 	 4 [si] 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
;; lr  out 	 5 [di] 7 [sp] 41 [r12]
;; live  out 	 5 [di] 7 [sp] 41 [r12]

( 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp] 41 [r12]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]

( 5 )->[6]->( )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]

( 5 )->[7]->( 10 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 2 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

( 4 3 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 9 7 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

( 10 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 12 to worklist
  Adding insn 16 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
  Adding insn 78 to worklist
  Adding insn 19 to worklist
  Adding insn 29 to worklist
  Adding insn 23 to worklist
  Adding insn 32 to worklist
  Adding insn 99 to worklist
  Adding insn 47 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 95 to worklist
  Adding insn 88 to worklist
  Adding insn 93 to worklist
  Adding insn 55 to worklist
Finished finding needed instructions:
processing block 8 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
  Adding insn 7 to worklist
processing block 10 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
  Adding insn 92 to worklist
  Adding insn 91 to worklist
  Adding insn 90 to worklist
processing block 9 lr out =  0 [ax] 7 [sp]
  Adding insn 8 to worklist
processing block 6 lr out =  7 [sp]
  Adding insn 31 to worklist
processing block 7 lr out =  0 [ax] 7 [sp]
  Adding insn 6 to worklist
  Adding insn 46 to worklist
processing block 5 lr out =  3 [bx] 6 [bp] 7 [sp] 41 [r12]
  Adding insn 28 to worklist
  Adding insn 24 to worklist
  Adding insn 22 to worklist
  Adding insn 75 to worklist
processing block 4 lr out =  5 [di] 7 [sp] 41 [r12]
  Adding insn 18 to worklist
processing block 3 lr out =  4 [si] 5 [di] 7 [sp] 41 [r12]
  Adding insn 15 to worklist
  Adding insn 77 to worklist
processing block 2 lr out =  3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
  Adding insn 11 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 11 (    1)
Splitting with gen_peephole2_5748
scanning new insn with uid = 101.
deleting insn with uid = 8.
verify found no changes in insn with uid = 101.
Splitting with gen_peephole2_5748
scanning new insn with uid = 102.
deleting insn with uid = 7.
verify found no changes in insn with uid = 102.
starting the processing of deferred insns
ending the processing of deferred insns


yy_buffer_state* yy_scan_buffer(char*, yy_size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;;  regs ever live 	 0[ax] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12]
;;  ref usage 	r0={7d,4u} r1={4d} r2={4d} r3={3d,15u} r4={4d,4u} r5={7d,6u} r6={3d,4u} r7={7d,19u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={9d,4u} r18={3d} r19={3d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r41={3d,4u} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} 
;;    total ref usage 319{259d,60u,0e} in 44{41 regular + 3 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 4 [si] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
(note 9 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 9 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 4 12 2 (set (reg:CC 17 flags)
        (compare:CC (reg/v:DI 4 si [orig:98 size ] [98])
            (const_int 1 [0x1]))) lex.yy.c:1860 8 {*cmpdi_1}
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 60)
            (pc))) lex.yy.c:1860 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (int_list:REG_BR_PROB 395 (nil)))
 -> 60)
;;  succ:       8 [4.0%] 
;;              3 [96.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]

;; basic block 3, loop depth 0, count 0, freq 9605, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       2 [96.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 7 [sp] 17 [flags] 41 [r12]
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 7 [sp] 17 [flags] 41 [r12]
;; live  kill	
(note 13 12 78 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn/f 78 13 79 3 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) lex.yy.c:1857 -1
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn/f 79 78 80 3 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) lex.yy.c:1857 -1
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 80 79 81 3 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) lex.yy.c:1857 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(note 81 80 77 3 NOTE_INSN_PROLOGUE_END)
(insn 77 81 15 3 (set (reg:DI 41 r12 [orig:88 D.6819 ] [88])
        (plus:DI (reg/v:DI 4 si [orig:98 size ] [98])
            (const_int -2 [0xfffffffffffffffe]))) lex.yy.c:1861 214 {*leadi}
     (nil))
(insn 15 77 16 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (plus:DI (reg/v/f:DI 5 di [orig:97 base ] [97])
                        (reg/v:DI 4 si [orig:98 size ] [98]))
                    (const_int -2 [0xfffffffffffffffe])) [0 *_6+0 S1 A8])
            (const_int 0 [0]))) lex.yy.c:1860 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 68)
            (pc))) lex.yy.c:1860 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1000 (nil)))
 -> 68)
;;  succ:       9 [10.0%] 
;;              4 [90.0%]  (FALLTHRU)
;; lr  out 	 4 [si] 5 [di] 7 [sp] 41 [r12]
;; live  out 	 4 [si] 5 [di] 7 [sp] 41 [r12]

;; basic block 4, loop depth 0, count 0, freq 8644, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       3 [90.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp] 41 [r12]
;; lr  use 	 4 [si] 5 [di] 7 [sp]
;; lr  def 	 17 [flags]
;; live  in  	 4 [si] 5 [di] 7 [sp] 41 [r12]
;; live  gen 	 17 [flags]
;; live  kill	
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:QI (plus:DI (plus:DI (reg/v/f:DI 5 di [orig:97 base ] [97])
                        (reg/v:DI 4 si [orig:98 size ] [98]))
                    (const_int -1 [0xffffffffffffffff])) [0 *_10+0 S1 A8])
            (const_int 0 [0]))) lex.yy.c:1861 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg/v:DI 4 si [orig:98 size ] [98])
        (nil)))
(jump_insn 19 18 20 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 68)
            (pc))) lex.yy.c:1861 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 2139 (nil)))
 -> 68)
;;  succ:       9 [21.4%] 
;;              5 [78.6%]  (FALLTHRU)
;; lr  out 	 5 [di] 7 [sp] 41 [r12]
;; live  out 	 5 [di] 7 [sp] 41 [r12]

;; basic block 5, loop depth 0, count 0, freq 6795, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       4 [78.6%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp] 41 [r12]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 17 [flags]
;; live  kill	
(note 20 19 75 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 75 20 21 5 (set (reg/v/f:DI 6 bp [orig:97 base ] [97])
        (reg/v/f:DI 5 di [orig:97 base ] [97])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:97 base ] [97])
        (nil)))
(debug_insn 21 75 22 5 (var_location:DI size (const_int 64 [0x40])) -1
     (nil))
(insn 22 21 23 5 (set (reg:DI 5 di)
        (const_int 64 [0x40])) lex.yy.c:2123 89 {*movdi_internal}
     (nil))
(call_insn 23 22 24 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 24 23 26 5 (set (reg/f:DI 3 bx [99])
        (reg:DI 0 ax)) lex.yy.c:2123 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (expr_list:REG_NOALIAS (reg/f:DI 3 bx [99])
            (nil))))
(debug_insn 26 24 27 5 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1866 -1
     (nil))
(debug_insn 27 26 28 5 (var_location:DI b (clobber (const_int 0 [0]))) lex.yy.c:1866 -1
     (nil))
(insn 28 27 29 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 3 bx [99])
            (const_int 0 [0]))) lex.yy.c:1867 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 29 28 30 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 34)
            (pc))) lex.yy.c:1867 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 34)
;;  succ:       6 [0.0%]  (FALLTHRU)
;;              7 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; basic block 6, loop depth 0, count 0, freq 3
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       5 [0.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f88bbca4bd0 *.LC27>)) lex.yy.c:1868 89 {*movdi_internal}
     (nil))
(call_insn 32 31 33 6 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1868 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 33 32 34)
;; basic block 7, loop depth 0, count 0, freq 6793, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 5 [di]
;; live  kill	
(code_label 34 33 35 7 319 "" [1 uses])
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 7 (set (mem:DI (plus:DI (reg/f:DI 3 bx [99])
                (const_int 24 [0x18])) [4 MEM[(struct yy_buffer_state *)_26].yy_buf_size+0 S8 A64])
        (reg:DI 41 r12 [orig:88 D.6819 ] [88])) lex.yy.c:1870 89 {*movdi_internal}
     (nil))
(insn 37 36 38 7 (set (mem/f:DI (plus:DI (reg/f:DI 3 bx [99])
                (const_int 8 [0x8])) [1 MEM[(struct yy_buffer_state *)_26].yy_ch_buf+0 S8 A64])
        (reg/v/f:DI 6 bp [orig:97 base ] [97])) lex.yy.c:1871 89 {*movdi_internal}
     (nil))
(insn 38 37 39 7 (set (mem/f:DI (plus:DI (reg/f:DI 3 bx [99])
                (const_int 16 [0x10])) [1 MEM[(struct yy_buffer_state *)_26].yy_buf_pos+0 S8 A64])
        (reg/v/f:DI 6 bp [orig:97 base ] [97])) lex.yy.c:1871 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:97 base ] [97])
        (nil)))
(insn 39 38 40 7 (set (mem:SI (plus:DI (reg/f:DI 3 bx [99])
                (const_int 36 [0x24])) [2 MEM[(struct yy_buffer_state *)_26].yy_is_our_buffer+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1872 90 {*movsi_internal}
     (nil))
(insn 40 39 41 7 (set (mem/f:DI (reg/f:DI 3 bx [99]) [1 MEM[(struct yy_buffer_state *)_26].yy_input_file+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:1873 89 {*movdi_internal}
     (nil))
(insn 41 40 42 7 (set (mem:SI (plus:DI (reg/f:DI 3 bx [99])
                (const_int 32 [0x20])) [2 MEM[(struct yy_buffer_state *)_26].yy_n_chars+0 S4 A64])
        (reg:SI 41 r12 [orig:88 D.6819 ] [88])) lex.yy.c:1874 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 41 r12 [orig:88 D.6819 ] [88])
        (nil)))
(insn 42 41 43 7 (set (mem:SI (plus:DI (reg/f:DI 3 bx [99])
                (const_int 40 [0x28])) [2 MEM[(struct yy_buffer_state *)_26].yy_is_interactive+0 S4 A64])
        (const_int 0 [0])) lex.yy.c:1875 90 {*movsi_internal}
     (nil))
(insn 43 42 44 7 (set (mem:SI (plus:DI (reg/f:DI 3 bx [99])
                (const_int 44 [0x2c])) [2 MEM[(struct yy_buffer_state *)_26].yy_at_bol+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:1876 90 {*movsi_internal}
     (nil))
(insn 44 43 45 7 (set (mem:SI (plus:DI (reg/f:DI 3 bx [99])
                (const_int 56 [0x38])) [2 MEM[(struct yy_buffer_state *)_26].yy_fill_buffer+0 S4 A64])
        (const_int 0 [0])) lex.yy.c:1877 90 {*movsi_internal}
     (nil))
(insn 45 44 46 7 (set (mem:SI (plus:DI (reg/f:DI 3 bx [99])
                (const_int 60 [0x3c])) [2 MEM[(struct yy_buffer_state *)_26].yy_buffer_status+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:1878 90 {*movsi_internal}
     (nil))
(insn 46 45 47 7 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [99])) lex.yy.c:1880 89 {*movdi_internal}
     (nil))
(call_insn 47 46 6 7 (call (mem:QI (symbol_ref:DI ("_Z19yy_switch_to_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c288 yy_switch_to_buffer>) [0 yy_switch_to_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:1880 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z19yy_switch_to_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c288 yy_switch_to_buffer>)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 6 47 99 7 (set (reg/f:DI 0 ax [orig:87 D.6818 ] [87])
        (reg/f:DI 3 bx [99])) lex.yy.c:1882 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [99])
        (nil)))
(jump_insn 99 6 100 7 (set (pc)
        (label_ref 48)) lex.yy.c:1882 -1
     (nil)
 -> 48)
;;  succ:       10 [100.0%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 100 99 60)
;; basic block 8, loop depth 0, count 0, freq 395, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [4.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 60 100 59 8 320 "" [1 uses])
(note 59 60 102 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 102 59 88 8 (parallel [
            (set (reg/f:DI 0 ax [orig:87 D.6818 ] [87])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1864 -1
     (nil))
(insn 88 102 95 8 (use (reg/i:DI 0 ax)) lex.yy.c:1883 -1
     (nil))
(jump_insn 95 88 86 8 (simple_return) lex.yy.c:1883 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

(barrier 86 95 68)
;; basic block 9, loop depth 0, count 0, freq 2810, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [21.4%] 
;;              3 [10.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(code_label 68 86 67 9 322 "" [2 uses])
(note 67 68 101 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 101 67 48 9 (parallel [
            (set (reg/f:DI 0 ax [orig:87 D.6818 ] [87])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1864 -1
     (nil))
;;  succ:       10 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 10, loop depth 0, count 0, freq 9602, maybe hot
;;  prev block 9, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       9 [100.0%]  (FALLTHRU)
;;              7 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  kill	
(code_label 48 101 49 10 318 "" [1 uses])
(note 49 48 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 55 49 89 10 (use (reg/i:DI 0 ax)) lex.yy.c:1883 -1
     (nil))
(note 89 55 90 10 NOTE_INSN_EPILOGUE_BEG)
(insn/f 90 89 91 10 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1883 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 3 bx)
            (nil))))
(insn/f 91 90 92 10 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1883 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 6 bp)
            (nil))))
(insn/f 92 91 93 10 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1883 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (expr_list:REG_CFA_RESTORE (reg:DI 41 r12)
            (nil))))
(jump_insn 93 92 94 10 (simple_return) lex.yy.c:1883 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

(barrier 94 93 76)
(note 76 94 0 NOTE_INSN_DELETED)

;; Function yy_buffer_state* yy_scan_bytes(const char*, yy_size_t) (_Z13yy_scan_bytesPKcm, funcdef_no=103, decl_uid=4277, cgraph_uid=103, symbol_order=130)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 12 count 12 (  1.1)


yy_buffer_state* yy_scan_bytes(const char*, yy_size_t)

Dataflow summary:
def_info->table_size = 320, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12]
;;  ref usage 	r0={5d,10u} r1={7d,6u,1e} r2={6d,1u} r3={3d,6u} r4={6d,3u} r5={9d,5u} r6={3d,3u,1e} r7={7d,20u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={9d,4u} r18={4d} r19={4d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r41={3d,6u} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} 
;;    total ref usage 398{332d,64u,2e} in 45{41 regular + 4 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }d-1(41){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;; live  kill	
;; lr  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]

( 0 )->[2]->( 6 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

( 2 )->[3]->( 4 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

( 3 8 )->[4]->( 5 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

( 4 )->[5]->( 9 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	

( 2 )->[6]->( )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 3 7 )->[7]->( 8 7 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 1 [dx] 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

( 7 )->[8]->( 4 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 41 [r12]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	
;; live  gen 	
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12]
;; live  out 	

( 5 )->[9]->( )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 4 )->[10]->( 1 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  kill	
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

( 10 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(41){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 12 to worklist
  Adding insn 88 to worklist
  Adding insn 87 to worklist
  Adding insn 86 to worklist
  Adding insn 22 to worklist
  Adding insn 32 to worklist
  Adding insn 28 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 100 to worklist
  Adding insn 39 to worklist
  Adding insn 52 to worklist
  Adding insn 46 to worklist
  Adding insn 103 to worklist
  Adding insn 60 to worklist
  Adding insn 96 to worklist
  Adding insn 70 to worklist
  Adding insn 64 to worklist
Finished finding needed instructions:
processing block 6 lr out =  7 [sp]
  Adding insn 38 to worklist
processing block 9 lr out =  7 [sp]
  Adding insn 59 to worklist
processing block 5 lr out =  7 [sp]
processing block 10 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
  Adding insn 95 to worklist
  Adding insn 94 to worklist
  Adding insn 93 to worklist
processing block 4 lr out =  0 [ax] 7 [sp]
  Adding insn 31 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
processing block 8 lr out =  0 [ax] 3 [bx] 7 [sp] 41 [r12]
processing block 7 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
  Adding insn 51 to worklist
  Adding insn 47 to worklist
  Adding insn 45 to worklist
processing block 3 lr out =  0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
  Adding insn 21 to worklist
  Adding insn 5 to worklist
processing block 2 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
  Adding insn 17 to worklist
  Adding insn 11 to worklist
  Adding insn 85 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 12 count 12 (  1.1)
Splitting with gen_peephole2_5748
scanning new insn with uid = 105.
deleting insn with uid = 5.
verify found no changes in insn with uid = 105.
starting the processing of deferred insns
ending the processing of deferred insns


yy_buffer_state* yy_scan_bytes(const char*, yy_size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 41[r12]
;;  ref usage 	r0={5d,10u} r1={7d,6u,1e} r2={6d,1u} r3={3d,6u} r4={6d,3u} r5={9d,5u} r6={3d,3u,1e} r7={7d,20u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={10d,4u} r18={4d} r19={4d} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r41={3d,6u} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} 
;;    total ref usage 399{333d,64u,2e} in 45{41 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp] 17 [flags] 41 [r12]
;; live  kill	
(note 6 1 86 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 86 6 87 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) lex.yy.c:1907 -1
     (expr_list:REG_DEAD (reg:DI 41 r12)
        (nil)))
(insn/f 87 86 88 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) lex.yy.c:1907 -1
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 88 87 89 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) lex.yy.c:1907 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(note 89 88 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 89 3 2 (set (reg/v/f:DI 6 bp [orig:96 yybytes ] [96])
        (reg:DI 5 di [ yybytes ])) lex.yy.c:1907 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ yybytes ])
        (nil)))
(insn 3 2 4 2 (set (reg/v:DI 3 bx [orig:97 _yybytes_len ] [97])
        (reg:DI 4 si [ _yybytes_len ])) lex.yy.c:1907 89 {*movdi_internal}
     (nil))
(note 4 3 85 2 NOTE_INSN_FUNCTION_BEG)
(insn 85 4 9 2 (set (reg/v:DI 41 r12 [orig:87 n ] [87])
        (plus:DI (reg:DI 4 si [orig:97 _yybytes_len ] [97])
            (const_int 2 [0x2]))) lex.yy.c:1914 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:97 _yybytes_len ] [97])
        (nil)))
(debug_insn 9 85 10 2 (var_location:DI n (reg/v:DI 41 r12 [orig:87 n ] [87])) lex.yy.c:1914 -1
     (nil))
(debug_insn 10 9 11 2 (var_location:DI size (reg/v:DI 41 r12 [orig:87 n ] [87])) lex.yy.c:1914 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/v:DI 41 r12 [orig:87 n ] [87])) lex.yy.c:2123 89 {*movdi_internal}
     (nil))
(call_insn 12 11 15 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(debug_insn 15 12 16 2 (var_location:DI size (clobber (const_int 0 [0]))) lex.yy.c:1915 -1
     (nil))
(debug_insn 16 15 17 2 (var_location:DI buf (clobber (const_int 0 [0]))) lex.yy.c:1915 -1
     (nil))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 0 ax [orig:94 D.6837 ] [94])
            (const_int 0 [0]))) lex.yy.c:1916 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 36)
            (pc))) lex.yy.c:1916 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 4 (nil)))
 -> 36)
;;  succ:       6 [0.0%] 
;;              3 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; basic block 3, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [100.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 3 [bx] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 1 [dx] 17 [flags]
;; live  kill	
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 20 19 105 3 (var_location:DI i (const_int 0 [0])) -1
     (nil))
(insn 105 20 21 3 (parallel [
            (set (reg/v:DI 1 dx [orig:89 i ] [89])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1919 -1
     (nil))
(insn 21 105 22 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 3 bx [orig:97 _yybytes_len ] [97])
            (const_int 0 [0]))) lex.yy.c:1919 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 22 21 50 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 75)
            (pc))) lex.yy.c:1919 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 75)
;;  succ:       4 [9.0%]  (FALLTHRU)
;;              7 [91.0%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; basic block 4, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [9.0%]  (FALLTHRU)
;;              8 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 3 [bx] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 41 [r12]
;; live  gen 	 0 [ax] 4 [si] 5 [di] 17 [flags]
;; live  kill	
(code_label 50 22 23 4 330 "" [1 uses])
(note 23 50 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (mem:QI (plus:DI (plus:DI (reg/f:DI 0 ax [orig:94 D.6837 ] [94])
                    (reg/v:DI 3 bx [orig:97 _yybytes_len ] [97]))
                (const_int 1 [0x1])) [0 *_16+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1922 93 {*movqi_internal}
     (nil))
(insn 25 24 26 4 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:94 D.6837 ] [94])
                (reg/v:DI 3 bx [orig:97 _yybytes_len ] [97])) [0 *_14+0 S1 A8])
        (const_int 0 [0])) lex.yy.c:1922 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/v:DI 3 bx [orig:97 _yybytes_len ] [97])
        (nil)))
(insn 26 25 27 4 (set (reg:DI 4 si)
        (reg/v:DI 41 r12 [orig:87 n ] [87])) lex.yy.c:1924 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v:DI 41 r12 [orig:87 n ] [87])
        (nil)))
(insn 27 26 28 4 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:94 D.6837 ] [94])) lex.yy.c:1924 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:94 D.6837 ] [94])
        (nil)))
(call_insn 28 27 30 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z14yy_scan_bufferPcm") [flags 0x3]  <function_decl 0x7f88bc07ca20 yy_scan_buffer>) [0 yy_scan_buffer S1 A8])
            (const_int 0 [0]))) lex.yy.c:1924 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z14yy_scan_bufferPcm") [flags 0x3]  <function_decl 0x7f88bc07ca20 yy_scan_buffer>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(debug_insn 30 28 31 4 (var_location:DI b (reg/v/f:DI 0 ax [orig:93 b ] [93])) lex.yy.c:1924 -1
     (nil))
(insn 31 30 32 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 0 ax [orig:93 b ] [93])
            (const_int 0 [0]))) lex.yy.c:1925 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 32 31 98 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 77)
            (pc))) lex.yy.c:1925 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9996 (nil)))
 -> 77)
;;  succ:       5 [0.0%]  (FALLTHRU)
;;              10 [100.0%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       4 [0.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
(note 98 32 100 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(jump_insn 100 98 101 5 (set (pc)
        (label_ref 99)) -1
     (nil)
 -> 99)
;;  succ:       9 [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 101 100 36)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       2 [0.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 36 101 37 6 326 "" [1 uses])
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f88bbcc7a20 *.LC29>)) lex.yy.c:1917 89 {*movdi_internal}
     (nil))
(call_insn 39 38 40 6 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1917 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 40 39 75)
;; basic block 7, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [91.0%] 
;;              7 [91.0%]  (DFS_BACK)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  use 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags]
;; live  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  gen 	 1 [dx] 2 [cx] 17 [flags]
;; live  kill	 17 [flags]
(code_label 75 40 74 7 332 "" [2 uses])
(note 74 75 44 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(debug_insn 44 74 45 7 (var_location:DI i (reg/v:DI 1 dx [orig:89 i ] [89])) -1
     (nil))
(insn 45 44 46 7 (set (reg:QI 2 cx [orig:99 MEM[base: yybytes_9(D), index: i_27, offset: 0B] ] [99])
        (mem:QI (plus:DI (reg/v/f:DI 6 bp [orig:96 yybytes ] [96])
                (reg/v:DI 1 dx [orig:89 i ] [89])) [0 MEM[base: yybytes_9(D), index: i_27, offset: 0B]+0 S1 A8])) lex.yy.c:1920 93 {*movqi_internal}
     (expr_list:REG_EQUIV (mem:QI (plus:DI (reg/v/f:DI 6 bp [orig:96 yybytes ] [96])
                (reg/v:DI 1 dx [orig:89 i ] [89])) [0 MEM[base: yybytes_9(D), index: i_27, offset: 0B]+0 S1 A8])
        (nil)))
(insn 46 45 47 7 (set (mem:QI (plus:DI (reg/f:DI 0 ax [orig:94 D.6837 ] [94])
                (reg/v:DI 1 dx [orig:89 i ] [89])) [0 MEM[base: _24, index: i_27, offset: 0B]+0 S1 A8])
        (reg:QI 2 cx [orig:99 MEM[base: yybytes_9(D), index: i_27, offset: 0B] ] [99])) lex.yy.c:1920 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 2 cx [orig:99 MEM[base: yybytes_9(D), index: i_27, offset: 0B] ] [99])
        (nil)))
(insn 47 46 49 7 (parallel [
            (set (reg/v:DI 1 dx [orig:89 i ] [89])
                (plus:DI (reg/v:DI 1 dx [orig:89 i ] [89])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:1919 218 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(debug_insn 49 47 51 7 (var_location:DI i (reg/v:DI 1 dx [orig:89 i ] [89])) -1
     (nil))
(insn 51 49 52 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:DI 3 bx [orig:97 _yybytes_len ] [97])
            (reg/v:DI 1 dx [orig:89 i ] [89]))) lex.yy.c:1919 8 {*cmpdi_1}
     (nil))
(jump_insn 52 51 102 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 75)
            (pc))) lex.yy.c:1919 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 9100 (nil)))
 -> 75)
;;  succ:       8 [9.0%]  (FALLTHRU)
;;              7 [91.0%]  (DFS_BACK)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

;; basic block 8, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 7, next block 9, flags: (NEW, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       7 [9.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 7 [sp] 41 [r12]
;; lr  use 	 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 7 [sp] 41 [r12]
;; live  gen 	
;; live  kill	
(note 102 52 103 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 103 102 104 8 (set (pc)
        (label_ref 50)) -1
     (nil)
 -> 50)
;;  succ:       4 [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 7 [sp] 41 [r12]

(barrier 104 103 99)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       5 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 7 [sp]
;; live  gen 	 5 [di]
;; live  kill	
(code_label 99 104 58 9 335 "" [1 uses])
(note 58 99 59 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f88bbcc7ab0 *.LC30>)) lex.yy.c:1926 89 {*movdi_internal}
     (nil))
(call_insn 60 59 61 9 (call (mem:QI (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>) [0 yy_fatal_error S1 A8])
        (const_int 0 [0])) lex.yy.c:1926 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_ZL14yy_fatal_errorPKc") [flags 0x3]  <function_decl 0x7f88bc0861b0 yy_fatal_error>)
            (expr_list:REG_ARGS_SIZE (const_int 0 [0])
                (expr_list:REG_NORETURN (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 61 60 77)
;; basic block 10, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 9, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       4 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  in  	 0 [ax] 7 [sp]
;; live  gen 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  kill	
(code_label 77 61 63 10 333 "" [1 uses])
(note 63 77 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 70 10 (set (mem:SI (plus:DI (reg/v/f:DI 0 ax [orig:93 b ] [93])
                (const_int 36 [0x24])) [2 b_20->yy_is_our_buffer+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:1931 90 {*movsi_internal}
     (nil))
(insn 70 64 92 10 (use (reg/i:DI 0 ax)) lex.yy.c:1934 -1
     (nil))
(note 92 70 93 10 NOTE_INSN_EPILOGUE_BEG)
(insn/f 93 92 94 10 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1934 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 94 93 95 10 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1934 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 95 94 96 10 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1934 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn 96 95 97 10 (simple_return) lex.yy.c:1934 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r12]

(barrier 97 96 84)
(note 84 97 0 NOTE_INSN_DELETED)

;; Function yy_buffer_state* yy_scan_string(const char*) (_Z14yy_scan_stringPKc, funcdef_no=102, decl_uid=4274, cgraph_uid=102, symbol_order=129)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns


yy_buffer_state* yy_scan_string(const char*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 3 [bx] 7 [sp]
;;  regs ever live 	 0[ax] 3[bx] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={3d,2u} r1={3d} r2={3d} r3={3d,4u} r4={4d,1u} r5={5d,3u} r7={3d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={2d} r18={2d} r19={2d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} 
;;    total ref usage 184{168d,16u,0e} in 8{6 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 7 [sp]
;; lr  use 	 3 [bx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 4 [si] 5 [di] 7 [sp]
;; live  kill	
(note 4 1 21 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 21 4 22 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) lex.yy.c:1894 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(note 22 21 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 22 3 2 (set (reg/v/f:DI 3 bx [orig:90 yystr ] [90])
        (reg:DI 5 di [ yystr ])) lex.yy.c:1894 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ yystr ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:90 yystr ] [90])) lex.yy.c:1896 89 {*movdi_internal}
     (nil))
(call_insn/i 7 6 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7f88bc2f60d8 strlen>) [0 __builtin_strlen S1 A8])
            (const_int 0 [0]))) lex.yy.c:1896 669 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("strlen") [flags 0x41]  <function_decl 0x7f88bc2f60d8 strlen>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 7 12 2 (set (reg:DI 4 si)
        (reg:DI 0 ax [92])) lex.yy.c:1896 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax [92])
        (nil)))
(insn 12 11 26 2 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:90 yystr ] [90])) lex.yy.c:1896 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:90 yystr ] [90])
        (nil)))
(note 26 12 25 2 NOTE_INSN_EPILOGUE_BEG)
(insn/f 25 26 13 2 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:1897 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(call_insn/j 13 25 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_Z13yy_scan_bytesPKcm") [flags 0x3]  <function_decl 0x7f88bc07cbd0 yy_scan_bytes>) [0 yy_scan_bytes S1 A8])
            (const_int 0 [0]))) lex.yy.c:1896 671 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z13yy_scan_bytesPKcm") [flags 0x3]  <function_decl 0x7f88bc07cbd0 yy_scan_bytes>)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 3 [bx] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 7 [sp]

(barrier 14 13 20)
(note 20 14 0 NOTE_INSN_DELETED)

;; Function int yyget_lineno() (_Z12yyget_linenov, funcdef_no=105, decl_uid=5475, cgraph_uid=105, symbol_order=132)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns


int yyget_lineno()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 21{17d,4u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(note 3 1 14 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 14 3 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 14 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 2 11 2 (set (reg/i:SI 0 ax)
        (mem/c:SI (symbol_ref:DI ("yylineno") [flags 0x2]  <var_decl 0x7f88bc0807e0 yylineno>) [2 yylineno+0 S4 A32])) lex.yy.c:1972 90 {*movsi_internal}
     (nil))
(insn 11 10 16 2 (use (reg/i:SI 0 ax)) lex.yy.c:1972 -1
     (nil))
(jump_insn 16 11 15 2 (simple_return) lex.yy.c:1972 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 15 16 13)
(note 13 15 0 NOTE_INSN_DELETED)

;; Function FILE* yyget_in() (_Z8yyget_inv, funcdef_no=106, decl_uid=5467, cgraph_uid=106, symbol_order=133)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns


FILE* yyget_in()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 21{17d,4u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(note 3 1 14 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 14 3 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 14 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 2 11 2 (set (reg/i:DI 0 ax)
        (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])) lex.yy.c:1980 89 {*movdi_internal}
     (nil))
(insn 11 10 16 2 (use (reg/i:DI 0 ax)) lex.yy.c:1980 -1
     (nil))
(jump_insn 16 11 15 2 (simple_return) lex.yy.c:1980 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 15 16 13)
(note 13 15 0 NOTE_INSN_DELETED)

;; Function FILE* yyget_out() (_Z9yyget_outv, funcdef_no=107, decl_uid=5470, cgraph_uid=107, symbol_order=134)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns


FILE* yyget_out()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 21{17d,4u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(note 3 1 14 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 14 3 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 14 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 2 11 2 (set (reg/i:DI 0 ax)
        (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])) lex.yy.c:1988 89 {*movdi_internal}
     (nil))
(insn 11 10 16 2 (use (reg/i:DI 0 ax)) lex.yy.c:1988 -1
     (nil))
(jump_insn 16 11 15 2 (simple_return) lex.yy.c:1988 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 15 16 13)
(note 13 15 0 NOTE_INSN_DELETED)

;; Function yy_size_t yyget_leng() (_Z10yyget_lengv, funcdef_no=108, decl_uid=5473, cgraph_uid=108, symbol_order=135)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns


yy_size_t yyget_leng()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 21{17d,4u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(note 3 1 14 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 14 3 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 14 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 2 11 2 (set (reg/i:DI 0 ax)
        (mem/c:DI (symbol_ref:DI ("yyleng") [flags 0x2]  <var_decl 0x7f88bc02e510 yyleng>) [4 yyleng+0 S8 A64])) lex.yy.c:1996 89 {*movdi_internal}
     (nil))
(insn 11 10 16 2 (use (reg/i:DI 0 ax)) lex.yy.c:1996 -1
     (nil))
(jump_insn 16 11 15 2 (simple_return) lex.yy.c:1996 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 15 16 13)
(note 13 15 0 NOTE_INSN_DELETED)

;; Function char* yyget_text() (_Z10yyget_textv, funcdef_no=109, decl_uid=5474, cgraph_uid=109, symbol_order=136)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns


char* yyget_text()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 21{17d,4u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(note 3 1 14 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 14 3 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 14 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 2 11 2 (set (reg/i:DI 0 ax)
        (mem/f/c:DI (symbol_ref:DI ("yytext") [flags 0x2]  <var_decl 0x7f88bc080900 yytext>) [1 yytext+0 S8 A64])) lex.yy.c:2005 89 {*movdi_internal}
     (nil))
(insn 11 10 16 2 (use (reg/i:DI 0 ax)) lex.yy.c:2005 -1
     (nil))
(jump_insn 16 11 15 2 (simple_return) lex.yy.c:2005 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 15 16 13)
(note 13 15 0 NOTE_INSN_DELETED)

;; Function void yyset_lineno(int) (_Z12yyset_linenoi, funcdef_no=110, decl_uid=5477, cgraph_uid=110, symbol_order=137)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns


void yyset_lineno(int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 19{16d,3u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	
;; live  kill	
(note 4 1 10 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 10 4 3 2 NOTE_INSN_PROLOGUE_END)
(note 3 10 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 12 2 (set (mem/c:SI (symbol_ref:DI ("yylineno") [flags 0x2]  <var_decl 0x7f88bc0807e0 yylineno>) [2 yylineno+0 S4 A32])
        (reg/v:SI 5 di [orig:87 _line_number ] [87])) lex.yy.c:2014 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 5 di [orig:87 _line_number ] [87])
        (nil)))
(jump_insn 12 6 11 2 (simple_return) lex.yy.c:2014 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 11 12 9)
(note 9 11 0 NOTE_INSN_DELETED)

;; Function void yyset_in(FILE*) (_Z8yyset_inP8_IO_FILE, funcdef_no=111, decl_uid=5469, cgraph_uid=111, symbol_order=138)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns


void yyset_in(FILE*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 19{16d,3u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	
;; live  kill	
(note 4 1 10 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 10 4 3 2 NOTE_INSN_PROLOGUE_END)
(note 3 10 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 12 2 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (reg/v/f:DI 5 di [orig:87 _in_str ] [87])) lex.yy.c:2025 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:87 _in_str ] [87])
        (nil)))
(jump_insn 12 6 11 2 (simple_return) lex.yy.c:2025 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 11 12 9)
(note 9 11 0 NOTE_INSN_DELETED)

;; Function void yyset_out(FILE*) (_Z9yyset_outP8_IO_FILE, funcdef_no=112, decl_uid=5472, cgraph_uid=112, symbol_order=139)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns


void yyset_out(FILE*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 19{16d,3u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	
;; live  kill	
(note 4 1 10 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 10 4 3 2 NOTE_INSN_PROLOGUE_END)
(note 3 10 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 12 2 (set (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])
        (reg/v/f:DI 5 di [orig:87 _out_str ] [87])) lex.yy.c:2030 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 5 di [orig:87 _out_str ] [87])
        (nil)))
(jump_insn 12 6 11 2 (simple_return) lex.yy.c:2030 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 11 12 9)
(note 9 11 0 NOTE_INSN_DELETED)

;; Function int yyget_debug() (_Z11yyget_debugv, funcdef_no=113, decl_uid=5461, cgraph_uid=113, symbol_order=140)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns


int yyget_debug()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 21{17d,4u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(note 3 1 14 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 14 3 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 14 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 2 11 2 (set (reg/i:SI 0 ax)
        (mem/c:SI (symbol_ref:DI ("yy_flex_debug") [flags 0x2]  <var_decl 0x7f88bc080ab0 yy_flex_debug>) [2 yy_flex_debug+0 S4 A32])) lex.yy.c:2036 90 {*movsi_internal}
     (nil))
(insn 11 10 16 2 (use (reg/i:SI 0 ax)) lex.yy.c:2036 -1
     (nil))
(jump_insn 16 11 15 2 (simple_return) lex.yy.c:2036 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 15 16 13)
(note 13 15 0 NOTE_INSN_DELETED)

;; Function void yyset_debug(int) (_Z11yyset_debugi, funcdef_no=114, decl_uid=5463, cgraph_uid=114, symbol_order=141)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns


void yyset_debug(int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 19{16d,3u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	
;; live  kill	
(note 4 1 10 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 10 4 3 2 NOTE_INSN_PROLOGUE_END)
(note 3 10 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 12 2 (set (mem/c:SI (symbol_ref:DI ("yy_flex_debug") [flags 0x2]  <var_decl 0x7f88bc080ab0 yy_flex_debug>) [2 yy_flex_debug+0 S4 A32])
        (reg/v:SI 5 di [orig:87 _bdebug ] [87])) lex.yy.c:2040 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 5 di [orig:87 _bdebug ] [87])
        (nil)))
(jump_insn 12 6 11 2 (simple_return) lex.yy.c:2040 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 11 12 9)
(note 9 11 0 NOTE_INSN_DELETED)

;; Function int yylex_destroy() (_Z13yylex_destroyv, funcdef_no=116, decl_uid=5460, cgraph_uid=116, symbol_order=143)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 6 (    1)


int yylex_destroy()

Dataflow summary:
def_info->table_size = 388, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;;  regs ever live 	 0[ax] 3[bx] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={6d,3u} r1={4d} r2={4d} r3={3d,4u} r4={4d} r5={6d,3u} r6={3d,6u} r7={7d,16u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={7d,2u} r18={3d} r19={3d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} 
;;    total ref usage 286{252d,34u,0e} in 34{31 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(28){ }d-1(37){ }d-1(38){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 6 [bp] 7 [sp]

( 0 )->[2]->( 5 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 6 [bp] 7 [sp]
;; live  out 	 6 [bp] 7 [sp]

( 2 4 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

( 3 )->[4]->( 3 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 6 [bp] 7 [sp]
;; live  out 	 6 [bp] 7 [sp]

( 2 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 7 to worklist
  Adding insn 97 to worklist
  Adding insn 96 to worklist
  Adding insn 24 to worklist
  Adding insn 114 to worklist
  Adding insn 57 to worklist
  Adding insn 56 to worklist
  Adding insn 55 to worklist
  Adding insn 106 to worklist
  Adding insn 62 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 29 to worklist
Finished finding needed instructions:
processing block 5 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp]
  Adding insn 105 to worklist
  Adding insn 104 to worklist
  Adding insn 103 to worklist
  Adding insn 61 to worklist
  Adding insn 28 to worklist
processing block 4 lr out =  6 [bp] 7 [sp]
processing block 3 lr out =  3 [bx] 5 [di] 6 [bp] 7 [sp]
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 90 to worklist
processing block 2 lr out =  6 [bp] 7 [sp]
  Adding insn 6 to worklist
  Adding insn 5 to worklist
  Adding insn 98 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 8 (  1.3)
Splitting with gen_peephole2_5748
scanning new insn with uid = 116.
deleting insn with uid = 61.
verify found no changes in insn with uid = 116.
starting the processing of deferred insns
ending the processing of deferred insns


int yylex_destroy()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;;  regs ever live 	 0[ax] 3[bx] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={6d,3u} r1={4d} r2={4d} r3={3d,4u} r4={4d} r5={6d,3u} r6={3d,6u} r7={7d,16u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={8d,2u} r18={3d} r19={3d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} 
;;    total ref usage 287{253d,34u,0e} in 34{31 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 880, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 6 [bp] 7 [sp] 17 [flags]
;; live  in  	 3 [bx] 6 [bp] 7 [sp]
;; live  gen 	 6 [bp] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
(note 3 1 96 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 96 3 97 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) lex.yy.c:2076 -1
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f 97 96 98 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) lex.yy.c:2076 -1
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f 98 97 99 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) lex.yy.c:2076 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (nil))))
(note 99 98 2 2 NOTE_INSN_PROLOGUE_END)
(note 2 99 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:DI 6 bp [orig:91 D.6873 ] [91])
        (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])) lex.yy.c:2079 89 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 6 bp [orig:91 D.6873 ] [91])
            (const_int 0 [0]))) lex.yy.c:2079 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 7 6 49 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) lex.yy.c:2079 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 450 (nil)))
 -> 25)
;;  succ:       5 [4.5%] 
;;              3 [95.5%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp]
;; live  out 	 6 [bp] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 9550, maybe hot
;; Invalid sum of incoming frequencies 9960, should be 9550
;;  prev block 2, next block 4, flags: (REACHABLE, HOT_PARTITION, RTL)
;;  pred:       2 [95.5%]  (FALLTHRU)
;;              4 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 5 [di] 17 [flags]
;; live  in  	 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 17 [flags]
;; live  kill	
(code_label 49 7 18 3 353 "" [1 uses])
(note 18 49 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(note 20 18 90 3 NOTE_INSN_DELETED)
(insn 90 20 21 3 (set (reg:DI 0 ax [orig:100 yy_buffer_stack_top ] [100])
        (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])) lex.yy.c:2079 89 {*movdi_internal}
     (expr_list:REG_EQUIV (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (nil)))
(insn 21 90 22 3 (set (reg/f:DI 3 bx [orig:89 D.6873 ] [89])
        (plus:DI (mult:DI (reg:DI 0 ax [orig:100 yy_buffer_stack_top ] [100])
                (const_int 8 [0x8]))
            (reg/f:DI 6 bp [orig:91 D.6873 ] [91]))) lex.yy.c:2079 214 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:100 yy_buffer_stack_top ] [100])
        (nil)))
(insn 22 21 23 3 (set (reg/f:DI 5 di [orig:90 D.6874 ] [90])
        (mem/f:DI (reg/f:DI 3 bx [orig:89 D.6873 ] [89]) [1  S8 A64])) lex.yy.c:2079 89 {*movdi_internal}
     (nil))
(insn 23 22 24 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 5 di [orig:90 D.6874 ] [90])
            (const_int 0 [0]))) lex.yy.c:2079 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 24 23 53 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) lex.yy.c:2079 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 450 (nil)))
 -> 25)
;;  succ:       5 [4.5%] 
;;              4 [95.5%]  (FALLTHRU)
;; lr  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  out 	 3 [bx] 5 [di] 6 [bp] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 9120, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       3 [95.5%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; lr  use 	 3 [bx] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  gen 	
;; live  kill	
(note 53 24 55 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(call_insn 55 53 56 4 (call (mem:QI (symbol_ref:DI ("_Z16yy_delete_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c438 yy_delete_buffer>) [0 yy_delete_buffer S1 A8])
        (const_int 0 [0])) lex.yy.c:2080 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z16yy_delete_bufferP15yy_buffer_state") [flags 0x3]  <function_decl 0x7f88bc07c438 yy_delete_buffer>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 56 55 57 4 (set (mem/f:DI (reg/f:DI 3 bx [orig:92 D.6873 ] [92]) [1  S8 A64])
        (const_int 0 [0])) lex.yy.c:2081 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:92 D.6873 ] [92])
        (nil)))
(call_insn 57 56 114 4 (call (mem:QI (symbol_ref:DI ("_Z18yypop_buffer_statev") [flags 0x3]  <function_decl 0x7f88bc07c6c0 yypop_buffer_state>) [0 yypop_buffer_state S1 A8])
        (const_int 0 [0])) lex.yy.c:2082 660 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("_Z18yypop_buffer_statev") [flags 0x3]  <function_decl 0x7f88bc07c6c0 yypop_buffer_state>)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (nil))
(jump_insn 114 57 115 4 (set (pc)
        (label_ref 49)) -1
     (nil)
 -> 49)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp]
;; live  out 	 6 [bp] 7 [sp]

(barrier 115 114 25)
;; basic block 5, loop depth 0, count 0, freq 880, maybe hot
;; Invalid sum of incoming frequencies 470, should be 880
;;  prev block 4, next block 1, flags: (REACHABLE, HOT_PARTITION, RTL, MODIFIED)
;;  pred:       2 [4.5%] 
;;              3 [4.5%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 6 [bp] 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 5 [di] 6 [bp] 7 [sp]
;; live  kill	 17 [flags]
(code_label 25 115 26 5 350 "" [2 uses])
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 27 26 28 5 (var_location:DI ptr (reg/f:DI 6 bp [orig:91 D.6873 ] [91])) lex.yy.c:2086 -1
     (nil))
(insn 28 27 29 5 (set (reg:DI 5 di)
        (reg/f:DI 6 bp [orig:91 D.6873 ] [91])) lex.yy.c:2141 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [orig:91 D.6873 ] [91])
        (nil)))
(call_insn 29 28 30 5 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) lex.yy.c:2141 660 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(debug_insn 30 29 31 5 (var_location:DI ptr (clobber (const_int 0 [0]))) lex.yy.c:2086 -1
     (nil))
(insn 31 30 32 5 (set (mem/f/c:DI (symbol_ref:DI ("_ZL15yy_buffer_stack") [flags 0x2]  <var_decl 0x7f88bc080240 yy_buffer_stack>) [1 yy_buffer_stack+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2087 89 {*movdi_internal}
     (nil))
(insn 32 31 33 5 (set (mem/c:SI (symbol_ref:DI ("yylineno") [flags 0x2]  <var_decl 0x7f88bc0807e0 yylineno>) [2 yylineno+0 S4 A32])
        (const_int 1 [0x1])) lex.yy.c:2050 90 {*movsi_internal}
     (nil))
(insn 33 32 34 5 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_top") [flags 0x2]  <var_decl 0x7f88bc080120 yy_buffer_stack_top>) [4 yy_buffer_stack_top+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2053 89 {*movdi_internal}
     (nil))
(insn 34 33 35 5 (set (mem/c:DI (symbol_ref:DI ("_ZL19yy_buffer_stack_max") [flags 0x2]  <var_decl 0x7f88bc0801b0 yy_buffer_stack_max>) [4 yy_buffer_stack_max+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2054 89 {*movdi_internal}
     (nil))
(insn 35 34 36 5 (set (mem/f/c:DI (symbol_ref:DI ("_ZL10yy_c_buf_p") [flags 0x2]  <var_decl 0x7f88bc080480 yy_c_buf_p>) [1 yy_c_buf_p+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2055 89 {*movdi_internal}
     (nil))
(insn 36 35 37 5 (set (mem/c:SI (symbol_ref:DI ("_ZL7yy_init") [flags 0x2]  <var_decl 0x7f88bc080510 yy_init>) [2 yy_init+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:2056 90 {*movsi_internal}
     (nil))
(insn 37 36 38 5 (set (mem/c:SI (symbol_ref:DI ("_ZL8yy_start") [flags 0x2]  <var_decl 0x7f88bc0805a0 yy_start>) [2 yy_start+0 S4 A32])
        (const_int 0 [0])) lex.yy.c:2057 90 {*movsi_internal}
     (nil))
(insn 38 37 39 5 (set (mem/f/c:DI (symbol_ref:DI ("yyin") [flags 0x2]  <var_decl 0x7f88bc02e5a0 yyin>) [1 yyin+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2064 89 {*movdi_internal}
     (nil))
(insn 39 38 116 5 (set (mem/f/c:DI (symbol_ref:DI ("yyout") [flags 0x2]  <var_decl 0x7f88bc080000 yyout>) [1 yyout+0 S8 A64])
        (const_int 0 [0])) lex.yy.c:2065 89 {*movdi_internal}
     (nil))
(insn 116 39 62 5 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) lex.yy.c:2094 -1
     (nil))
(insn 62 116 102 5 (use (reg/i:SI 0 ax)) lex.yy.c:2094 -1
     (nil))
(note 102 62 103 5 NOTE_INSN_EPILOGUE_BEG)
(insn/f 103 102 104 5 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) lex.yy.c:2094 -1
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (nil))))
(insn/f 104 103 105 5 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:2094 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 105 104 106 5 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) lex.yy.c:2094 -1
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn 106 105 107 5 (simple_return) lex.yy.c:2094 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [100.0%] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp]

(barrier 107 106 92)
(note 92 107 0 NOTE_INSN_DELETED)

;; Function void* yyalloc(yy_size_t) (_Z7yyallocm, funcdef_no=117, decl_uid=4279, cgraph_uid=117, symbol_order=144)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns


void* yyalloc(yy_size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 5[di] 7[sp]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={2d} r5={2d,1u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 93{88d,5u,0e} in 1{0 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(note 4 1 15 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 15 4 3 2 NOTE_INSN_PROLOGUE_END)
(note 3 15 7 2 NOTE_INSN_FUNCTION_BEG)
(call_insn/j 7 3 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2123 671 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f88bc32aa20 malloc>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 8 7 14)
(note 14 8 0 NOTE_INSN_DELETED)

;; Function void* yyrealloc(void*, yy_size_t) (_Z9yyreallocPvm, funcdef_no=118, decl_uid=4282, cgraph_uid=118, symbol_order=145)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns


void* yyrealloc(void*, yy_size_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 4[si] 5[di] 7[sp]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r4={2d,1u} r5={2d,1u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 94{88d,6u,0e} in 1{0 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 4 [si] 5 [di] 7 [sp]
;; live  gen 	 0 [ax]
;; live  kill	
(note 5 1 17 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 17 5 4 2 NOTE_INSN_PROLOGUE_END)
(note 4 17 9 2 NOTE_INSN_FUNCTION_BEG)
(call_insn/j 9 4 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>) [0 __builtin_realloc S1 A8])
            (const_int 0 [0]))) lex.yy.c:2136 671 {*sibcall_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_CALL_DECL (symbol_ref:DI ("realloc") [flags 0x41]  <function_decl 0x7f88bc32c870 realloc>)
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 0 [ax] 7 [sp]
;; live  out 	 0 [ax] 7 [sp]

(barrier 10 9 16)
(note 16 10 0 NOTE_INSN_DELETED)

;; Function void yyfree(void*) (_Z6yyfreePv, funcdef_no=119, decl_uid=4284, cgraph_uid=119, symbol_order=146)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
starting the processing of deferred insns
ending the processing of deferred insns


void yyfree(void*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={2d,1u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 92{88d,4u,0e} in 1{0 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (RTL)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;; live  in  	 5 [di] 7 [sp]
;; live  gen 	
;; live  kill	
(note 4 1 12 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 12 4 3 2 NOTE_INSN_PROLOGUE_END)
(note 3 12 7 2 NOTE_INSN_FUNCTION_BEG)
(call_insn/j 7 3 8 2 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) lex.yy.c:2141 662 {*sibcall}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_CALL_DECL (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f88bc3201b0 free>)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (ABNORMAL,SIBCALL)
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

(barrier 8 7 11)
(note 11 8 0 NOTE_INSN_DELETED)
