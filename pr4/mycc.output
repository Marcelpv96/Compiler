Nonterminals useless in grammar

   K
   P


Terminals unused in grammar

   PA
   NA
   TA
   DA
   MA
   AA
   XA
   OA
   LA
   RA
   '|'
   '^'
   '&'
   LS
   RS
   '~'
   '.'
   AR


Rules useless in grammar

   71 K: %empty

   72 P: %empty


Rules useless in parser due to conflicts

   10 Margs: %empty


Estat 23 conflictes: 4 canvi/reducció
Estat 137 conflictes: 1 canvi/reducció


Grammar

    0 $accept: prog $end

    1 prog: Mprog exts

    2 Mprog: %empty

    3 exts: exts func
    4     | exts decl
    5     | %empty

    6 func: type ptr ID '(' args ')' block
    7     | MAIN '(' ')' Mmain block
    8     | type ptr ID '(' Margs args ')' block

    9 Mmain: %empty

   10 Margs: %empty

   11 block: '{' decls stmts '}'

   12 decls: decls decl
   13      | %empty

   14 decl: list ';'

   15 type: VOID
   16     | INT
   17     | FLOAT
   18     | CHAR

   19 args: args ',' type ptr ID
   20     | type ptr ID

   21 list: list ',' ptr ID
   22     | type ptr ID

   23 ptr: %empty
   24    | '*'

   25 stmts: stmts stmt
   26      | %empty

   27 stmt: ';'
   28     | expr ';'
   29     | IF '(' expr ')' M stmt
   30     | IF '(' expr ')' M stmt ELSE N L stmt
   31     | WHILE '(' L expr ')' M stmt N
   32     | DO L stmt WHILE '(' expr ')' M N ';'
   33     | FOR '(' expr ';' L expr M N ';' L expr N ')' L stmt N
   34     | RETURN expr ';'
   35     | BREAK ';'
   36     | '{' stmts '}'
   37     | error ';'

   38 exprs: exprs ',' expr
   39      | expr

   40 expr: ID '=' expr
   41     | expr OR expr
   42     | expr AN expr
   43     | expr EQ expr
   44     | expr NE expr
   45     | expr '<' expr
   46     | expr '>' expr
   47     | expr LE expr
   48     | expr GE expr
   49     | expr '+' expr
   50     | expr '-' expr
   51     | expr '*' expr
   52     | expr '/' expr
   53     | expr '%' expr
   54     | '!' expr
   55     | '(' expr ')'
   56     | '$' INT8
   57     | PP ID
   58     | NN ID
   59     | ID PP
   60     | ID NN
   61     | ID
   62     | INT8
   63     | INT16
   64     | INT32
   65     | FLT
   66     | STR
   67     | ID '(' exprs ')'

   68 L: %empty

   69 M: %empty

   70 N: %empty


Terminals, with rules where they appear

$end (0) 0
'!' (33) 54
'$' (36) 56
'%' (37) 53
'&' (38)
'(' (40) 6 7 8 29 30 31 32 33 55 67
')' (41) 6 7 8 29 30 31 32 33 55 67
'*' (42) 24 51
'+' (43) 49
',' (44) 19 21 38
'-' (45) 50
'.' (46)
'/' (47) 52
';' (59) 14 27 28 32 33 34 35 37
'<' (60) 45
'=' (61) 40
'>' (62) 46
'^' (94)
'{' (123) 11 36
'|' (124)
'}' (125) 11 36
'~' (126)
error (256) 37
ID (258) 6 8 19 20 21 22 40 57 58 59 60 61 67
INT8 (259) 56 62
INT16 (260) 63
INT32 (261) 64
FLT (262) 65
STR (263) 66
BREAK (264) 35
CHAR (265) 18
DO (266) 32
ELSE (267) 30
FLOAT (268) 17
FOR (269) 33
IF (270) 29 30
INT (271) 16
MAIN (272) 7
RETURN (273) 34
VOID (274) 15
WHILE (275) 31 32
PA (276)
NA (277)
TA (278)
DA (279)
MA (280)
AA (281)
XA (282)
OA (283)
LA (284)
RA (285)
OR (286) 41
AN (287) 42
EQ (288) 43
NE (289) 44
LE (290) 47
GE (291) 48
LS (292)
RS (293)
PP (294) 57 59
NN (295) 58 60
AR (296)


Nonterminals, with rules where they appear

$accept (63)
    on left: 0
prog (64)
    on left: 1, on right: 0
Mprog (65)
    on left: 2, on right: 1
exts (66)
    on left: 3 4 5, on right: 1 3 4
func (67)
    on left: 6 7 8, on right: 3
Mmain (68)
    on left: 9, on right: 7
Margs (69)
    on left: 10, on right: 8
block (70)
    on left: 11, on right: 6 7 8
decls (71)
    on left: 12 13, on right: 11 12
decl (72)
    on left: 14, on right: 4 12
type (73)
    on left: 15 16 17 18, on right: 6 8 19 20 22
args (74)
    on left: 19 20, on right: 6 8 19
list (75)
    on left: 21 22, on right: 14 21
ptr (76)
    on left: 23 24, on right: 6 8 19 20 21 22
stmts (77)
    on left: 25 26, on right: 11 25 36
stmt (78)
    on left: 27 28 29 30 31 32 33 34 35 36 37, on right: 25 29 30 31
    32 33
exprs (79)
    on left: 38 39, on right: 38 67
expr (80)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57
    58 59 60 61 62 63 64 65 66 67, on right: 28 29 30 31 32 33 34 38
    39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
L (81)
    on left: 68, on right: 30 31 32 33
M (82)
    on left: 69, on right: 29 30 31 32 33
N (83)
    on left: 70, on right: 30 31 32 33


State 0

    0 $accept: . prog $end

    $default  reduce using rule 2 (Mprog)

    prog   go to state 1
    Mprog  go to state 2


State 1

    0 $accept: prog . $end

    $end  shift, and go to state 3


State 2

    1 prog: Mprog . exts

    $default  reduce using rule 5 (exts)

    exts  go to state 4


State 3

    0 $accept: prog $end .

    $default  accept


State 4

    1 prog: Mprog exts .
    3 exts: exts . func
    4     | exts . decl

    CHAR   shift, and go to state 5
    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    MAIN   shift, and go to state 8
    VOID   shift, and go to state 9

    $default  reduce using rule 1 (prog)

    func  go to state 10
    decl  go to state 11
    type  go to state 12
    list  go to state 13


State 5

   18 type: CHAR .

    $default  reduce using rule 18 (type)


State 6

   17 type: FLOAT .

    $default  reduce using rule 17 (type)


State 7

   16 type: INT .

    $default  reduce using rule 16 (type)


State 8

    7 func: MAIN . '(' ')' Mmain block

    '('  shift, and go to state 14


State 9

   15 type: VOID .

    $default  reduce using rule 15 (type)


State 10

    3 exts: exts func .

    $default  reduce using rule 3 (exts)


State 11

    4 exts: exts decl .

    $default  reduce using rule 4 (exts)


State 12

    6 func: type . ptr ID '(' args ')' block
    8     | type . ptr ID '(' Margs args ')' block
   22 list: type . ptr ID

    '*'  shift, and go to state 15

    $default  reduce using rule 23 (ptr)

    ptr  go to state 16


State 13

   14 decl: list . ';'
   21 list: list . ',' ptr ID

    ';'  shift, and go to state 17
    ','  shift, and go to state 18


State 14

    7 func: MAIN '(' . ')' Mmain block

    ')'  shift, and go to state 19


State 15

   24 ptr: '*' .

    $default  reduce using rule 24 (ptr)


State 16

    6 func: type ptr . ID '(' args ')' block
    8     | type ptr . ID '(' Margs args ')' block
   22 list: type ptr . ID

    ID  shift, and go to state 20


State 17

   14 decl: list ';' .

    $default  reduce using rule 14 (decl)


State 18

   21 list: list ',' . ptr ID

    '*'  shift, and go to state 15

    $default  reduce using rule 23 (ptr)

    ptr  go to state 21


State 19

    7 func: MAIN '(' ')' . Mmain block

    $default  reduce using rule 9 (Mmain)

    Mmain  go to state 22


State 20

    6 func: type ptr ID . '(' args ')' block
    8     | type ptr ID . '(' Margs args ')' block
   22 list: type ptr ID .

    '('  shift, and go to state 23

    $default  reduce using rule 22 (list)


State 21

   21 list: list ',' ptr . ID

    ID  shift, and go to state 24


State 22

    7 func: MAIN '(' ')' Mmain . block

    '{'  shift, and go to state 25

    block  go to state 26


State 23

    6 func: type ptr ID '(' . args ')' block
    8     | type ptr ID '(' . Margs args ')' block

    CHAR   shift, and go to state 5
    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    VOID   shift, and go to state 9

    CHAR   [reduce using rule 10 (Margs)]
    FLOAT  [reduce using rule 10 (Margs)]
    INT    [reduce using rule 10 (Margs)]
    VOID   [reduce using rule 10 (Margs)]

    Margs  go to state 27
    type   go to state 28
    args   go to state 29


State 24

   21 list: list ',' ptr ID .

    $default  reduce using rule 21 (list)


State 25

   11 block: '{' . decls stmts '}'

    $default  reduce using rule 13 (decls)

    decls  go to state 30


State 26

    7 func: MAIN '(' ')' Mmain block .

    $default  reduce using rule 7 (func)


State 27

    8 func: type ptr ID '(' Margs . args ')' block

    CHAR   shift, and go to state 5
    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    VOID   shift, and go to state 9

    type  go to state 28
    args  go to state 31


State 28

   20 args: type . ptr ID

    '*'  shift, and go to state 15

    $default  reduce using rule 23 (ptr)

    ptr  go to state 32


State 29

    6 func: type ptr ID '(' args . ')' block
   19 args: args . ',' type ptr ID

    ')'  shift, and go to state 33
    ','  shift, and go to state 34


State 30

   11 block: '{' decls . stmts '}'
   12 decls: decls . decl

    CHAR   shift, and go to state 5
    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    VOID   shift, and go to state 9

    $default  reduce using rule 26 (stmts)

    decl   go to state 35
    type   go to state 36
    list   go to state 13
    stmts  go to state 37


State 31

    8 func: type ptr ID '(' Margs args . ')' block
   19 args: args . ',' type ptr ID

    ')'  shift, and go to state 38
    ','  shift, and go to state 34


State 32

   20 args: type ptr . ID

    ID  shift, and go to state 39


State 33

    6 func: type ptr ID '(' args ')' . block

    '{'  shift, and go to state 25

    block  go to state 40


State 34

   19 args: args ',' . type ptr ID

    CHAR   shift, and go to state 5
    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    VOID   shift, and go to state 9

    type  go to state 41


State 35

   12 decls: decls decl .

    $default  reduce using rule 12 (decls)


State 36

   22 list: type . ptr ID

    '*'  shift, and go to state 15

    $default  reduce using rule 23 (ptr)

    ptr  go to state 42


State 37

   11 block: '{' decls stmts . '}'
   25 stmts: stmts . stmt

    error   shift, and go to state 43
    ID      shift, and go to state 44
    INT8    shift, and go to state 45
    INT16   shift, and go to state 46
    INT32   shift, and go to state 47
    FLT     shift, and go to state 48
    STR     shift, and go to state 49
    BREAK   shift, and go to state 50
    DO      shift, and go to state 51
    FOR     shift, and go to state 52
    IF      shift, and go to state 53
    RETURN  shift, and go to state 54
    WHILE   shift, and go to state 55
    '!'     shift, and go to state 56
    PP      shift, and go to state 57
    NN      shift, and go to state 58
    '('     shift, and go to state 59
    '{'     shift, and go to state 60
    '}'     shift, and go to state 61
    ';'     shift, and go to state 62
    '$'     shift, and go to state 63

    stmt  go to state 64
    expr  go to state 65


State 38

    8 func: type ptr ID '(' Margs args ')' . block

    '{'  shift, and go to state 25

    block  go to state 66


State 39

   20 args: type ptr ID .

    $default  reduce using rule 20 (args)


State 40

    6 func: type ptr ID '(' args ')' block .

    $default  reduce using rule 6 (func)


State 41

   19 args: args ',' type . ptr ID

    '*'  shift, and go to state 15

    $default  reduce using rule 23 (ptr)

    ptr  go to state 67


State 42

   22 list: type ptr . ID

    ID  shift, and go to state 68


State 43

   37 stmt: error . ';'

    ';'  shift, and go to state 69


State 44

   40 expr: ID . '=' expr
   59     | ID . PP
   60     | ID . NN
   61     | ID .
   67     | ID . '(' exprs ')'

    '='  shift, and go to state 70
    PP   shift, and go to state 71
    NN   shift, and go to state 72
    '('  shift, and go to state 73

    $default  reduce using rule 61 (expr)


State 45

   62 expr: INT8 .

    $default  reduce using rule 62 (expr)


State 46

   63 expr: INT16 .

    $default  reduce using rule 63 (expr)


State 47

   64 expr: INT32 .

    $default  reduce using rule 64 (expr)


State 48

   65 expr: FLT .

    $default  reduce using rule 65 (expr)


State 49

   66 expr: STR .

    $default  reduce using rule 66 (expr)


State 50

   35 stmt: BREAK . ';'

    ';'  shift, and go to state 74


State 51

   32 stmt: DO . L stmt WHILE '(' expr ')' M N ';'

    $default  reduce using rule 68 (L)

    L  go to state 75


State 52

   33 stmt: FOR . '(' expr ';' L expr M N ';' L expr N ')' L stmt N

    '('  shift, and go to state 76


State 53

   29 stmt: IF . '(' expr ')' M stmt
   30     | IF . '(' expr ')' M stmt ELSE N L stmt

    '('  shift, and go to state 77


State 54

   34 stmt: RETURN . expr ';'

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 78


State 55

   31 stmt: WHILE . '(' L expr ')' M stmt N

    '('  shift, and go to state 79


State 56

   54 expr: '!' . expr

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 80


State 57

   57 expr: PP . ID

    ID  shift, and go to state 81


State 58

   58 expr: NN . ID

    ID  shift, and go to state 82


State 59

   55 expr: '(' . expr ')'

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 83


State 60

   36 stmt: '{' . stmts '}'

    $default  reduce using rule 26 (stmts)

    stmts  go to state 84


State 61

   11 block: '{' decls stmts '}' .

    $default  reduce using rule 11 (block)


State 62

   27 stmt: ';' .

    $default  reduce using rule 27 (stmt)


State 63

   56 expr: '$' . INT8

    INT8  shift, and go to state 85


State 64

   25 stmts: stmts stmt .

    $default  reduce using rule 25 (stmts)


State 65

   28 stmt: expr . ';'
   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr

    OR   shift, and go to state 86
    AN   shift, and go to state 87
    EQ   shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    '<'  shift, and go to state 91
    GE   shift, and go to state 92
    '>'  shift, and go to state 93
    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98
    ';'  shift, and go to state 99


State 66

    8 func: type ptr ID '(' Margs args ')' block .

    $default  reduce using rule 8 (func)


State 67

   19 args: args ',' type ptr . ID

    ID  shift, and go to state 100


State 68

   22 list: type ptr ID .

    $default  reduce using rule 22 (list)


State 69

   37 stmt: error ';' .

    $default  reduce using rule 37 (stmt)


State 70

   40 expr: ID '=' . expr

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 101


State 71

   59 expr: ID PP .

    $default  reduce using rule 59 (expr)


State 72

   60 expr: ID NN .

    $default  reduce using rule 60 (expr)


State 73

   67 expr: ID '(' . exprs ')'

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    exprs  go to state 102
    expr   go to state 103


State 74

   35 stmt: BREAK ';' .

    $default  reduce using rule 35 (stmt)


State 75

   32 stmt: DO L . stmt WHILE '(' expr ')' M N ';'

    error   shift, and go to state 43
    ID      shift, and go to state 44
    INT8    shift, and go to state 45
    INT16   shift, and go to state 46
    INT32   shift, and go to state 47
    FLT     shift, and go to state 48
    STR     shift, and go to state 49
    BREAK   shift, and go to state 50
    DO      shift, and go to state 51
    FOR     shift, and go to state 52
    IF      shift, and go to state 53
    RETURN  shift, and go to state 54
    WHILE   shift, and go to state 55
    '!'     shift, and go to state 56
    PP      shift, and go to state 57
    NN      shift, and go to state 58
    '('     shift, and go to state 59
    '{'     shift, and go to state 60
    ';'     shift, and go to state 62
    '$'     shift, and go to state 63

    stmt  go to state 104
    expr  go to state 65


State 76

   33 stmt: FOR '(' . expr ';' L expr M N ';' L expr N ')' L stmt N

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 105


State 77

   29 stmt: IF '(' . expr ')' M stmt
   30     | IF '(' . expr ')' M stmt ELSE N L stmt

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 106


State 78

   34 stmt: RETURN expr . ';'
   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr

    OR   shift, and go to state 86
    AN   shift, and go to state 87
    EQ   shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    '<'  shift, and go to state 91
    GE   shift, and go to state 92
    '>'  shift, and go to state 93
    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98
    ';'  shift, and go to state 107


State 79

   31 stmt: WHILE '(' . L expr ')' M stmt N

    $default  reduce using rule 68 (L)

    L  go to state 108


State 80

   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr
   54     | '!' expr .

    $default  reduce using rule 54 (expr)


State 81

   57 expr: PP ID .

    $default  reduce using rule 57 (expr)


State 82

   58 expr: NN ID .

    $default  reduce using rule 58 (expr)


State 83

   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr
   55     | '(' expr . ')'

    OR   shift, and go to state 86
    AN   shift, and go to state 87
    EQ   shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    '<'  shift, and go to state 91
    GE   shift, and go to state 92
    '>'  shift, and go to state 93
    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98
    ')'  shift, and go to state 109


State 84

   25 stmts: stmts . stmt
   36 stmt: '{' stmts . '}'

    error   shift, and go to state 43
    ID      shift, and go to state 44
    INT8    shift, and go to state 45
    INT16   shift, and go to state 46
    INT32   shift, and go to state 47
    FLT     shift, and go to state 48
    STR     shift, and go to state 49
    BREAK   shift, and go to state 50
    DO      shift, and go to state 51
    FOR     shift, and go to state 52
    IF      shift, and go to state 53
    RETURN  shift, and go to state 54
    WHILE   shift, and go to state 55
    '!'     shift, and go to state 56
    PP      shift, and go to state 57
    NN      shift, and go to state 58
    '('     shift, and go to state 59
    '{'     shift, and go to state 60
    '}'     shift, and go to state 110
    ';'     shift, and go to state 62
    '$'     shift, and go to state 63

    stmt  go to state 64
    expr  go to state 65


State 85

   56 expr: '$' INT8 .

    $default  reduce using rule 56 (expr)


State 86

   41 expr: expr OR . expr

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 111


State 87

   42 expr: expr AN . expr

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 112


State 88

   43 expr: expr EQ . expr

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 113


State 89

   44 expr: expr NE . expr

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 114


State 90

   47 expr: expr LE . expr

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 115


State 91

   45 expr: expr '<' . expr

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 116


State 92

   48 expr: expr GE . expr

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 117


State 93

   46 expr: expr '>' . expr

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 118


State 94

   49 expr: expr '+' . expr

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 119


State 95

   50 expr: expr '-' . expr

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 120


State 96

   51 expr: expr '*' . expr

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 121


State 97

   52 expr: expr '/' . expr

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 122


State 98

   53 expr: expr '%' . expr

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 123


State 99

   28 stmt: expr ';' .

    $default  reduce using rule 28 (stmt)


State 100

   19 args: args ',' type ptr ID .

    $default  reduce using rule 19 (args)


State 101

   40 expr: ID '=' expr .
   41     | expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr

    OR   shift, and go to state 86
    AN   shift, and go to state 87
    EQ   shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    '<'  shift, and go to state 91
    GE   shift, and go to state 92
    '>'  shift, and go to state 93
    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98

    $default  reduce using rule 40 (expr)


State 102

   38 exprs: exprs . ',' expr
   67 expr: ID '(' exprs . ')'

    ')'  shift, and go to state 124
    ','  shift, and go to state 125


State 103

   39 exprs: expr .
   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr

    OR   shift, and go to state 86
    AN   shift, and go to state 87
    EQ   shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    '<'  shift, and go to state 91
    GE   shift, and go to state 92
    '>'  shift, and go to state 93
    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98

    $default  reduce using rule 39 (exprs)


State 104

   32 stmt: DO L stmt . WHILE '(' expr ')' M N ';'

    WHILE  shift, and go to state 126


State 105

   33 stmt: FOR '(' expr . ';' L expr M N ';' L expr N ')' L stmt N
   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr

    OR   shift, and go to state 86
    AN   shift, and go to state 87
    EQ   shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    '<'  shift, and go to state 91
    GE   shift, and go to state 92
    '>'  shift, and go to state 93
    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98
    ';'  shift, and go to state 127


State 106

   29 stmt: IF '(' expr . ')' M stmt
   30     | IF '(' expr . ')' M stmt ELSE N L stmt
   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr

    OR   shift, and go to state 86
    AN   shift, and go to state 87
    EQ   shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    '<'  shift, and go to state 91
    GE   shift, and go to state 92
    '>'  shift, and go to state 93
    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98
    ')'  shift, and go to state 128


State 107

   34 stmt: RETURN expr ';' .

    $default  reduce using rule 34 (stmt)


State 108

   31 stmt: WHILE '(' L . expr ')' M stmt N

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 129


State 109

   55 expr: '(' expr ')' .

    $default  reduce using rule 55 (expr)


State 110

   36 stmt: '{' stmts '}' .

    $default  reduce using rule 36 (stmt)


State 111

   41 expr: expr . OR expr
   41     | expr OR expr .
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr

    AN   shift, and go to state 87
    EQ   shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    '<'  shift, and go to state 91
    GE   shift, and go to state 92
    '>'  shift, and go to state 93
    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98

    $default  reduce using rule 41 (expr)


State 112

   41 expr: expr . OR expr
   42     | expr . AN expr
   42     | expr AN expr .
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr

    EQ   shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    '<'  shift, and go to state 91
    GE   shift, and go to state 92
    '>'  shift, and go to state 93
    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98

    $default  reduce using rule 42 (expr)


State 113

   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   43     | expr EQ expr .
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98

    $default  reduce using rule 43 (expr)


State 114

   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   44     | expr NE expr .
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98

    $default  reduce using rule 44 (expr)


State 115

   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   47     | expr LE expr .
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98

    $default  reduce using rule 47 (expr)


State 116

   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   45     | expr '<' expr .
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98

    $default  reduce using rule 45 (expr)


State 117

   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   48     | expr GE expr .
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98

    $default  reduce using rule 48 (expr)


State 118

   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   46     | expr '>' expr .
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98

    $default  reduce using rule 46 (expr)


State 119

   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   49     | expr '+' expr .
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr

    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98

    $default  reduce using rule 49 (expr)


State 120

   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   50     | expr '-' expr .
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr

    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98

    $default  reduce using rule 50 (expr)


State 121

   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   51     | expr '*' expr .
   52     | expr . '/' expr
   53     | expr . '%' expr

    $default  reduce using rule 51 (expr)


State 122

   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   52     | expr '/' expr .
   53     | expr . '%' expr

    $default  reduce using rule 52 (expr)


State 123

   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr
   53     | expr '%' expr .

    $default  reduce using rule 53 (expr)


State 124

   67 expr: ID '(' exprs ')' .

    $default  reduce using rule 67 (expr)


State 125

   38 exprs: exprs ',' . expr

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 130


State 126

   32 stmt: DO L stmt WHILE . '(' expr ')' M N ';'

    '('  shift, and go to state 131


State 127

   33 stmt: FOR '(' expr ';' . L expr M N ';' L expr N ')' L stmt N

    $default  reduce using rule 68 (L)

    L  go to state 132


State 128

   29 stmt: IF '(' expr ')' . M stmt
   30     | IF '(' expr ')' . M stmt ELSE N L stmt

    $default  reduce using rule 69 (M)

    M  go to state 133


State 129

   31 stmt: WHILE '(' L expr . ')' M stmt N
   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr

    OR   shift, and go to state 86
    AN   shift, and go to state 87
    EQ   shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    '<'  shift, and go to state 91
    GE   shift, and go to state 92
    '>'  shift, and go to state 93
    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98
    ')'  shift, and go to state 134


State 130

   38 exprs: exprs ',' expr .
   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr

    OR   shift, and go to state 86
    AN   shift, and go to state 87
    EQ   shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    '<'  shift, and go to state 91
    GE   shift, and go to state 92
    '>'  shift, and go to state 93
    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98

    $default  reduce using rule 38 (exprs)


State 131

   32 stmt: DO L stmt WHILE '(' . expr ')' M N ';'

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 135


State 132

   33 stmt: FOR '(' expr ';' L . expr M N ';' L expr N ')' L stmt N

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 136


State 133

   29 stmt: IF '(' expr ')' M . stmt
   30     | IF '(' expr ')' M . stmt ELSE N L stmt

    error   shift, and go to state 43
    ID      shift, and go to state 44
    INT8    shift, and go to state 45
    INT16   shift, and go to state 46
    INT32   shift, and go to state 47
    FLT     shift, and go to state 48
    STR     shift, and go to state 49
    BREAK   shift, and go to state 50
    DO      shift, and go to state 51
    FOR     shift, and go to state 52
    IF      shift, and go to state 53
    RETURN  shift, and go to state 54
    WHILE   shift, and go to state 55
    '!'     shift, and go to state 56
    PP      shift, and go to state 57
    NN      shift, and go to state 58
    '('     shift, and go to state 59
    '{'     shift, and go to state 60
    ';'     shift, and go to state 62
    '$'     shift, and go to state 63

    stmt  go to state 137
    expr  go to state 65


State 134

   31 stmt: WHILE '(' L expr ')' . M stmt N

    $default  reduce using rule 69 (M)

    M  go to state 138


State 135

   32 stmt: DO L stmt WHILE '(' expr . ')' M N ';'
   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr

    OR   shift, and go to state 86
    AN   shift, and go to state 87
    EQ   shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    '<'  shift, and go to state 91
    GE   shift, and go to state 92
    '>'  shift, and go to state 93
    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98
    ')'  shift, and go to state 139


State 136

   33 stmt: FOR '(' expr ';' L expr . M N ';' L expr N ')' L stmt N
   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr

    OR   shift, and go to state 86
    AN   shift, and go to state 87
    EQ   shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    '<'  shift, and go to state 91
    GE   shift, and go to state 92
    '>'  shift, and go to state 93
    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98

    $default  reduce using rule 69 (M)

    M  go to state 140


State 137

   29 stmt: IF '(' expr ')' M stmt .
   30     | IF '(' expr ')' M stmt . ELSE N L stmt

    ELSE  shift, and go to state 141

    ELSE      [reduce using rule 29 (stmt)]
    $default  reduce using rule 29 (stmt)


State 138

   31 stmt: WHILE '(' L expr ')' M . stmt N

    error   shift, and go to state 43
    ID      shift, and go to state 44
    INT8    shift, and go to state 45
    INT16   shift, and go to state 46
    INT32   shift, and go to state 47
    FLT     shift, and go to state 48
    STR     shift, and go to state 49
    BREAK   shift, and go to state 50
    DO      shift, and go to state 51
    FOR     shift, and go to state 52
    IF      shift, and go to state 53
    RETURN  shift, and go to state 54
    WHILE   shift, and go to state 55
    '!'     shift, and go to state 56
    PP      shift, and go to state 57
    NN      shift, and go to state 58
    '('     shift, and go to state 59
    '{'     shift, and go to state 60
    ';'     shift, and go to state 62
    '$'     shift, and go to state 63

    stmt  go to state 142
    expr  go to state 65


State 139

   32 stmt: DO L stmt WHILE '(' expr ')' . M N ';'

    $default  reduce using rule 69 (M)

    M  go to state 143


State 140

   33 stmt: FOR '(' expr ';' L expr M . N ';' L expr N ')' L stmt N

    $default  reduce using rule 70 (N)

    N  go to state 144


State 141

   30 stmt: IF '(' expr ')' M stmt ELSE . N L stmt

    $default  reduce using rule 70 (N)

    N  go to state 145


State 142

   31 stmt: WHILE '(' L expr ')' M stmt . N

    $default  reduce using rule 70 (N)

    N  go to state 146


State 143

   32 stmt: DO L stmt WHILE '(' expr ')' M . N ';'

    $default  reduce using rule 70 (N)

    N  go to state 147


State 144

   33 stmt: FOR '(' expr ';' L expr M N . ';' L expr N ')' L stmt N

    ';'  shift, and go to state 148


State 145

   30 stmt: IF '(' expr ')' M stmt ELSE N . L stmt

    $default  reduce using rule 68 (L)

    L  go to state 149


State 146

   31 stmt: WHILE '(' L expr ')' M stmt N .

    $default  reduce using rule 31 (stmt)


State 147

   32 stmt: DO L stmt WHILE '(' expr ')' M N . ';'

    ';'  shift, and go to state 150


State 148

   33 stmt: FOR '(' expr ';' L expr M N ';' . L expr N ')' L stmt N

    $default  reduce using rule 68 (L)

    L  go to state 151


State 149

   30 stmt: IF '(' expr ')' M stmt ELSE N L . stmt

    error   shift, and go to state 43
    ID      shift, and go to state 44
    INT8    shift, and go to state 45
    INT16   shift, and go to state 46
    INT32   shift, and go to state 47
    FLT     shift, and go to state 48
    STR     shift, and go to state 49
    BREAK   shift, and go to state 50
    DO      shift, and go to state 51
    FOR     shift, and go to state 52
    IF      shift, and go to state 53
    RETURN  shift, and go to state 54
    WHILE   shift, and go to state 55
    '!'     shift, and go to state 56
    PP      shift, and go to state 57
    NN      shift, and go to state 58
    '('     shift, and go to state 59
    '{'     shift, and go to state 60
    ';'     shift, and go to state 62
    '$'     shift, and go to state 63

    stmt  go to state 152
    expr  go to state 65


State 150

   32 stmt: DO L stmt WHILE '(' expr ')' M N ';' .

    $default  reduce using rule 32 (stmt)


State 151

   33 stmt: FOR '(' expr ';' L expr M N ';' L . expr N ')' L stmt N

    ID     shift, and go to state 44
    INT8   shift, and go to state 45
    INT16  shift, and go to state 46
    INT32  shift, and go to state 47
    FLT    shift, and go to state 48
    STR    shift, and go to state 49
    '!'    shift, and go to state 56
    PP     shift, and go to state 57
    NN     shift, and go to state 58
    '('    shift, and go to state 59
    '$'    shift, and go to state 63

    expr  go to state 153


State 152

   30 stmt: IF '(' expr ')' M stmt ELSE N L stmt .

    $default  reduce using rule 30 (stmt)


State 153

   33 stmt: FOR '(' expr ';' L expr M N ';' L expr . N ')' L stmt N
   41 expr: expr . OR expr
   42     | expr . AN expr
   43     | expr . EQ expr
   44     | expr . NE expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . LE expr
   48     | expr . GE expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '%' expr

    OR   shift, and go to state 86
    AN   shift, and go to state 87
    EQ   shift, and go to state 88
    NE   shift, and go to state 89
    LE   shift, and go to state 90
    '<'  shift, and go to state 91
    GE   shift, and go to state 92
    '>'  shift, and go to state 93
    '+'  shift, and go to state 94
    '-'  shift, and go to state 95
    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98

    $default  reduce using rule 70 (N)

    N  go to state 154


State 154

   33 stmt: FOR '(' expr ';' L expr M N ';' L expr N . ')' L stmt N

    ')'  shift, and go to state 155


State 155

   33 stmt: FOR '(' expr ';' L expr M N ';' L expr N ')' . L stmt N

    $default  reduce using rule 68 (L)

    L  go to state 156


State 156

   33 stmt: FOR '(' expr ';' L expr M N ';' L expr N ')' L . stmt N

    error   shift, and go to state 43
    ID      shift, and go to state 44
    INT8    shift, and go to state 45
    INT16   shift, and go to state 46
    INT32   shift, and go to state 47
    FLT     shift, and go to state 48
    STR     shift, and go to state 49
    BREAK   shift, and go to state 50
    DO      shift, and go to state 51
    FOR     shift, and go to state 52
    IF      shift, and go to state 53
    RETURN  shift, and go to state 54
    WHILE   shift, and go to state 55
    '!'     shift, and go to state 56
    PP      shift, and go to state 57
    NN      shift, and go to state 58
    '('     shift, and go to state 59
    '{'     shift, and go to state 60
    ';'     shift, and go to state 62
    '$'     shift, and go to state 63

    stmt  go to state 157
    expr  go to state 65


State 157

   33 stmt: FOR '(' expr ';' L expr M N ';' L expr N ')' L stmt . N

    $default  reduce using rule 70 (N)

    N  go to state 158


State 158

   33 stmt: FOR '(' expr ';' L expr M N ';' L expr N ')' L stmt N .

    $default  reduce using rule 33 (stmt)
