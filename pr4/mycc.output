Useless nonterminals

   K
   P


Terminals which are not used

   RA
   LA
   OA
   XA
   AA
   MA
   DA
   TA
   NA
   PA
   '|'
   '^'
   '&'
   RS
   LS
   '~'
   '.'
   AR


Useless rules

   72 K: /* empty */

   73 P: /* empty */


Rules never reduced

   62 expr: ID


State 13 conflicts: 1 shift/reduce
State 45 conflicts: 16 reduce/reduce
State 134 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: Mprog exts

    2 Mprog: /* empty */

    3 exts: exts func
    4     | exts decl
    5     | /* empty */

    6 func: MAIN '(' ')' Mmain block
    7     | ftype Margs args ')' block

    8 Mmain: /* empty */

    9 ftype: type ID '('

   10 Margs: /* empty */

   11 block: '{' decls stmts '}'

   12 decls: decls decl
   13      | /* empty */

   14 decl: list ';'

   15 type: VOID
   16     | INT
   17     | FLOAT
   18     | CHAR

   19 args: args ',' type ptr ID
   20     | type ptr ID

   21 list: list ',' ptr ID
   22     | type ptr ID

   23 ptr: /* empty */
   24    | '*'

   25 stmts: stmts stmt
   26      | /* empty */

   27 stmt: ';'
   28     | expr ';'
   29     | IF '(' expr ')' M stmt
   30     | IF '(' expr ')' M stmt ELSE N L stmt
   31     | WHILE '(' L expr ')' M stmt N
   32     | DO L stmt WHILE '(' expr ')' M N ';'
   33     | FOR '(' expr ';' L expr M N ';' L expr N ')' L stmt N
   34     | RETURN expr ';'
   35     | BREAK ';'
   36     | '{' stmts '}'
   37     | error ';'

   38 exprs: exprs ',' expr
   39      | expr

   40 expr: ID '=' expr
   41     | ID
   42     | expr OR expr
   43     | expr AN expr
   44     | expr EQ expr
   45     | expr NE expr
   46     | expr '<' expr
   47     | expr '>' expr
   48     | expr LE expr
   49     | expr GE expr
   50     | expr '+' expr
   51     | expr '-' expr
   52     | expr '*' expr
   53     | expr '/' expr
   54     | expr '%' expr
   55     | '!' expr
   56     | '(' expr ')'
   57     | '$' INT8
   58     | PP ID
   59     | NN ID
   60     | ID PP
   61     | ID NN
   62     | ID
   63     | INT8
   64     | INT16
   65     | INT32
   66     | FLT
   67     | STR
   68     | ID '(' exprs ')'

   69 L: /* empty */

   70 M: /* empty */

   71 N: /* empty */


Terminals, with rules where they appear

$end (0) 0
'!' (33) 55
'$' (36) 57
'%' (37) 54
'&' (38)
'(' (40) 6 9 29 30 31 32 33 56 68
')' (41) 6 7 29 30 31 32 33 56 68
'*' (42) 24 52
'+' (43) 50
',' (44) 19 21 38
'-' (45) 51
'.' (46)
'/' (47) 53
';' (59) 14 27 28 32 33 34 35 37
'<' (60) 46
'=' (61) 40
'>' (62) 47
'^' (94)
'{' (123) 11 36
'|' (124)
'}' (125) 11 36
'~' (126)
error (256) 37
ID (258) 9 19 20 21 22 40 41 58 59 60 61 62 68
INT8 (259) 57 63
INT16 (260) 64
INT32 (261) 65
FLT (262) 66
STR (263) 67
BREAK (264) 35
CHAR (265) 18
DO (266) 32
ELSE (267) 30
FLOAT (268) 17
FOR (269) 33
IF (270) 29 30
INT (271) 16
MAIN (272) 6
RETURN (273) 34
VOID (274) 15
WHILE (275) 31 32
RA (276)
LA (277)
OA (278)
XA (279)
AA (280)
MA (281)
DA (282)
TA (283)
NA (284)
PA (285)
OR (286) 42
AN (287) 43
GE (288) 49
LE (289) 48
NE (290) 45
EQ (291) 44
RS (292)
LS (293)
NN (294) 59 61
PP (295) 58 60
AR (296)


Nonterminals, with rules where they appear

$accept (63)
    on left: 0
prog (64)
    on left: 1, on right: 0
Mprog (65)
    on left: 2, on right: 1
exts (66)
    on left: 3 4 5, on right: 1 3 4
func (67)
    on left: 6 7, on right: 3
Mmain (68)
    on left: 8, on right: 6
ftype (69)
    on left: 9, on right: 7
Margs (70)
    on left: 10, on right: 7
block (71)
    on left: 11, on right: 6 7
decls (72)
    on left: 12 13, on right: 11 12
decl (73)
    on left: 14, on right: 4 12
type (74)
    on left: 15 16 17 18, on right: 9 19 20 22
args (75)
    on left: 19 20, on right: 7 19
list (76)
    on left: 21 22, on right: 14 21
ptr (77)
    on left: 23 24, on right: 19 20 21 22
stmts (78)
    on left: 25 26, on right: 11 25 36
stmt (79)
    on left: 27 28 29 30 31 32 33 34 35 36 37, on right: 25 29 30 31
    32 33
exprs (80)
    on left: 38 39, on right: 38 68
expr (81)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57
    58 59 60 61 62 63 64 65 66 67 68, on right: 28 29 30 31 32 33 34
    38 39 40 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
L (82)
    on left: 69, on right: 30 31 32 33
M (83)
    on left: 70, on right: 29 30 31 32 33
N (84)
    on left: 71, on right: 30 31 32 33


state 0

    0 $accept: . prog $end

    $default  reduce using rule 2 (Mprog)

    prog   go to state 1
    Mprog  go to state 2


state 1

    0 $accept: prog . $end

    $end  shift, and go to state 3


state 2

    1 prog: Mprog . exts

    $default  reduce using rule 5 (exts)

    exts  go to state 4


state 3

    0 $accept: prog $end .

    $default  accept


state 4

    1 prog: Mprog exts .
    3 exts: exts . func
    4     | exts . decl

    CHAR   shift, and go to state 5
    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    MAIN   shift, and go to state 8
    VOID   shift, and go to state 9

    $default  reduce using rule 1 (prog)

    func   go to state 10
    ftype  go to state 11
    decl   go to state 12
    type   go to state 13
    list   go to state 14


state 5

   18 type: CHAR .

    $default  reduce using rule 18 (type)


state 6

   17 type: FLOAT .

    $default  reduce using rule 17 (type)


state 7

   16 type: INT .

    $default  reduce using rule 16 (type)


state 8

    6 func: MAIN . '(' ')' Mmain block

    '('  shift, and go to state 15


state 9

   15 type: VOID .

    $default  reduce using rule 15 (type)


state 10

    3 exts: exts func .

    $default  reduce using rule 3 (exts)


state 11

    7 func: ftype . Margs args ')' block

    $default  reduce using rule 10 (Margs)

    Margs  go to state 16


state 12

    4 exts: exts decl .

    $default  reduce using rule 4 (exts)


state 13

    9 ftype: type . ID '('
   22 list: type . ptr ID

    ID   shift, and go to state 17
    '*'  shift, and go to state 18

    ID  [reduce using rule 23 (ptr)]

    ptr  go to state 19


state 14

   14 decl: list . ';'
   21 list: list . ',' ptr ID

    ';'  shift, and go to state 20
    ','  shift, and go to state 21


state 15

    6 func: MAIN '(' . ')' Mmain block

    ')'  shift, and go to state 22


state 16

    7 func: ftype Margs . args ')' block

    CHAR   shift, and go to state 5
    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    VOID   shift, and go to state 9

    type  go to state 23
    args  go to state 24


state 17

    9 ftype: type ID . '('

    '('  shift, and go to state 25


state 18

   24 ptr: '*' .

    $default  reduce using rule 24 (ptr)


state 19

   22 list: type ptr . ID

    ID  shift, and go to state 26


state 20

   14 decl: list ';' .

    $default  reduce using rule 14 (decl)


state 21

   21 list: list ',' . ptr ID

    '*'  shift, and go to state 18

    $default  reduce using rule 23 (ptr)

    ptr  go to state 27


state 22

    6 func: MAIN '(' ')' . Mmain block

    $default  reduce using rule 8 (Mmain)

    Mmain  go to state 28


state 23

   20 args: type . ptr ID

    '*'  shift, and go to state 18

    $default  reduce using rule 23 (ptr)

    ptr  go to state 29


state 24

    7 func: ftype Margs args . ')' block
   19 args: args . ',' type ptr ID

    ')'  shift, and go to state 30
    ','  shift, and go to state 31


state 25

    9 ftype: type ID '(' .

    $default  reduce using rule 9 (ftype)


state 26

   22 list: type ptr ID .

    $default  reduce using rule 22 (list)


state 27

   21 list: list ',' ptr . ID

    ID  shift, and go to state 32


state 28

    6 func: MAIN '(' ')' Mmain . block

    '{'  shift, and go to state 33

    block  go to state 34


state 29

   20 args: type ptr . ID

    ID  shift, and go to state 35


state 30

    7 func: ftype Margs args ')' . block

    '{'  shift, and go to state 33

    block  go to state 36


state 31

   19 args: args ',' . type ptr ID

    CHAR   shift, and go to state 5
    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    VOID   shift, and go to state 9

    type  go to state 37


state 32

   21 list: list ',' ptr ID .

    $default  reduce using rule 21 (list)


state 33

   11 block: '{' . decls stmts '}'

    $default  reduce using rule 13 (decls)

    decls  go to state 38


state 34

    6 func: MAIN '(' ')' Mmain block .

    $default  reduce using rule 6 (func)


state 35

   20 args: type ptr ID .

    $default  reduce using rule 20 (args)


state 36

    7 func: ftype Margs args ')' block .

    $default  reduce using rule 7 (func)


state 37

   19 args: args ',' type . ptr ID

    '*'  shift, and go to state 18

    $default  reduce using rule 23 (ptr)

    ptr  go to state 39


state 38

   11 block: '{' decls . stmts '}'
   12 decls: decls . decl

    CHAR   shift, and go to state 5
    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    VOID   shift, and go to state 9

    $default  reduce using rule 26 (stmts)

    decl   go to state 40
    type   go to state 41
    list   go to state 14
    stmts  go to state 42


state 39

   19 args: args ',' type ptr . ID

    ID  shift, and go to state 43


state 40

   12 decls: decls decl .

    $default  reduce using rule 12 (decls)


state 41

   22 list: type . ptr ID

    '*'  shift, and go to state 18

    $default  reduce using rule 23 (ptr)

    ptr  go to state 19


state 42

   11 block: '{' decls stmts . '}'
   25 stmts: stmts . stmt

    error   shift, and go to state 44
    ID      shift, and go to state 45
    INT8    shift, and go to state 46
    INT16   shift, and go to state 47
    INT32   shift, and go to state 48
    FLT     shift, and go to state 49
    STR     shift, and go to state 50
    BREAK   shift, and go to state 51
    DO      shift, and go to state 52
    FOR     shift, and go to state 53
    IF      shift, and go to state 54
    RETURN  shift, and go to state 55
    WHILE   shift, and go to state 56
    '!'     shift, and go to state 57
    NN      shift, and go to state 58
    PP      shift, and go to state 59
    '('     shift, and go to state 60
    '{'     shift, and go to state 61
    '}'     shift, and go to state 62
    ';'     shift, and go to state 63
    '$'     shift, and go to state 64

    stmt  go to state 65
    expr  go to state 66


state 43

   19 args: args ',' type ptr ID .

    $default  reduce using rule 19 (args)


state 44

   37 stmt: error . ';'

    ';'  shift, and go to state 67


state 45

   40 expr: ID . '=' expr
   41     | ID .
   60     | ID . PP
   61     | ID . NN
   62     | ID .
   68     | ID . '(' exprs ')'

    '='  shift, and go to state 68
    NN   shift, and go to state 69
    PP   shift, and go to state 70
    '('  shift, and go to state 71

    OR        reduce using rule 41 (expr)
    OR        [reduce using rule 62 (expr)]
    AN        reduce using rule 41 (expr)
    AN        [reduce using rule 62 (expr)]
    '<'       reduce using rule 41 (expr)
    '<'       [reduce using rule 62 (expr)]
    '>'       reduce using rule 41 (expr)
    '>'       [reduce using rule 62 (expr)]
    GE        reduce using rule 41 (expr)
    GE        [reduce using rule 62 (expr)]
    LE        reduce using rule 41 (expr)
    LE        [reduce using rule 62 (expr)]
    NE        reduce using rule 41 (expr)
    NE        [reduce using rule 62 (expr)]
    EQ        reduce using rule 41 (expr)
    EQ        [reduce using rule 62 (expr)]
    '+'       reduce using rule 41 (expr)
    '+'       [reduce using rule 62 (expr)]
    '-'       reduce using rule 41 (expr)
    '-'       [reduce using rule 62 (expr)]
    '*'       reduce using rule 41 (expr)
    '*'       [reduce using rule 62 (expr)]
    '/'       reduce using rule 41 (expr)
    '/'       [reduce using rule 62 (expr)]
    '%'       reduce using rule 41 (expr)
    '%'       [reduce using rule 62 (expr)]
    ')'       reduce using rule 41 (expr)
    ')'       [reduce using rule 62 (expr)]
    ';'       reduce using rule 41 (expr)
    ';'       [reduce using rule 62 (expr)]
    ','       reduce using rule 41 (expr)
    ','       [reduce using rule 62 (expr)]
    $default  reduce using rule 41 (expr)


state 46

   63 expr: INT8 .

    $default  reduce using rule 63 (expr)


state 47

   64 expr: INT16 .

    $default  reduce using rule 64 (expr)


state 48

   65 expr: INT32 .

    $default  reduce using rule 65 (expr)


state 49

   66 expr: FLT .

    $default  reduce using rule 66 (expr)


state 50

   67 expr: STR .

    $default  reduce using rule 67 (expr)


state 51

   35 stmt: BREAK . ';'

    ';'  shift, and go to state 72


state 52

   32 stmt: DO . L stmt WHILE '(' expr ')' M N ';'

    $default  reduce using rule 69 (L)

    L  go to state 73


state 53

   33 stmt: FOR . '(' expr ';' L expr M N ';' L expr N ')' L stmt N

    '('  shift, and go to state 74


state 54

   29 stmt: IF . '(' expr ')' M stmt
   30     | IF . '(' expr ')' M stmt ELSE N L stmt

    '('  shift, and go to state 75


state 55

   34 stmt: RETURN . expr ';'

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 76


state 56

   31 stmt: WHILE . '(' L expr ')' M stmt N

    '('  shift, and go to state 77


state 57

   55 expr: '!' . expr

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 78


state 58

   59 expr: NN . ID

    ID  shift, and go to state 79


state 59

   58 expr: PP . ID

    ID  shift, and go to state 80


state 60

   56 expr: '(' . expr ')'

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 81


state 61

   36 stmt: '{' . stmts '}'

    $default  reduce using rule 26 (stmts)

    stmts  go to state 82


state 62

   11 block: '{' decls stmts '}' .

    $default  reduce using rule 11 (block)


state 63

   27 stmt: ';' .

    $default  reduce using rule 27 (stmt)


state 64

   57 expr: '$' . INT8

    INT8  shift, and go to state 83


state 65

   25 stmts: stmts stmt .

    $default  reduce using rule 25 (stmts)


state 66

   28 stmt: expr . ';'
   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr

    OR   shift, and go to state 84
    AN   shift, and go to state 85
    '<'  shift, and go to state 86
    '>'  shift, and go to state 87
    GE   shift, and go to state 88
    LE   shift, and go to state 89
    NE   shift, and go to state 90
    EQ   shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    ';'  shift, and go to state 97


state 67

   37 stmt: error ';' .

    $default  reduce using rule 37 (stmt)


state 68

   40 expr: ID '=' . expr

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 98


state 69

   61 expr: ID NN .

    $default  reduce using rule 61 (expr)


state 70

   60 expr: ID PP .

    $default  reduce using rule 60 (expr)


state 71

   68 expr: ID '(' . exprs ')'

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    exprs  go to state 99
    expr   go to state 100


state 72

   35 stmt: BREAK ';' .

    $default  reduce using rule 35 (stmt)


state 73

   32 stmt: DO L . stmt WHILE '(' expr ')' M N ';'

    error   shift, and go to state 44
    ID      shift, and go to state 45
    INT8    shift, and go to state 46
    INT16   shift, and go to state 47
    INT32   shift, and go to state 48
    FLT     shift, and go to state 49
    STR     shift, and go to state 50
    BREAK   shift, and go to state 51
    DO      shift, and go to state 52
    FOR     shift, and go to state 53
    IF      shift, and go to state 54
    RETURN  shift, and go to state 55
    WHILE   shift, and go to state 56
    '!'     shift, and go to state 57
    NN      shift, and go to state 58
    PP      shift, and go to state 59
    '('     shift, and go to state 60
    '{'     shift, and go to state 61
    ';'     shift, and go to state 63
    '$'     shift, and go to state 64

    stmt  go to state 101
    expr  go to state 66


state 74

   33 stmt: FOR '(' . expr ';' L expr M N ';' L expr N ')' L stmt N

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 102


state 75

   29 stmt: IF '(' . expr ')' M stmt
   30     | IF '(' . expr ')' M stmt ELSE N L stmt

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 103


state 76

   34 stmt: RETURN expr . ';'
   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr

    OR   shift, and go to state 84
    AN   shift, and go to state 85
    '<'  shift, and go to state 86
    '>'  shift, and go to state 87
    GE   shift, and go to state 88
    LE   shift, and go to state 89
    NE   shift, and go to state 90
    EQ   shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    ';'  shift, and go to state 104


state 77

   31 stmt: WHILE '(' . L expr ')' M stmt N

    $default  reduce using rule 69 (L)

    L  go to state 105


state 78

   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   55     | '!' expr .

    $default  reduce using rule 55 (expr)


state 79

   59 expr: NN ID .

    $default  reduce using rule 59 (expr)


state 80

   58 expr: PP ID .

    $default  reduce using rule 58 (expr)


state 81

   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   56     | '(' expr . ')'

    OR   shift, and go to state 84
    AN   shift, and go to state 85
    '<'  shift, and go to state 86
    '>'  shift, and go to state 87
    GE   shift, and go to state 88
    LE   shift, and go to state 89
    NE   shift, and go to state 90
    EQ   shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    ')'  shift, and go to state 106


state 82

   25 stmts: stmts . stmt
   36 stmt: '{' stmts . '}'

    error   shift, and go to state 44
    ID      shift, and go to state 45
    INT8    shift, and go to state 46
    INT16   shift, and go to state 47
    INT32   shift, and go to state 48
    FLT     shift, and go to state 49
    STR     shift, and go to state 50
    BREAK   shift, and go to state 51
    DO      shift, and go to state 52
    FOR     shift, and go to state 53
    IF      shift, and go to state 54
    RETURN  shift, and go to state 55
    WHILE   shift, and go to state 56
    '!'     shift, and go to state 57
    NN      shift, and go to state 58
    PP      shift, and go to state 59
    '('     shift, and go to state 60
    '{'     shift, and go to state 61
    '}'     shift, and go to state 107
    ';'     shift, and go to state 63
    '$'     shift, and go to state 64

    stmt  go to state 65
    expr  go to state 66


state 83

   57 expr: '$' INT8 .

    $default  reduce using rule 57 (expr)


state 84

   42 expr: expr OR . expr

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 108


state 85

   43 expr: expr AN . expr

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 109


state 86

   46 expr: expr '<' . expr

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 110


state 87

   47 expr: expr '>' . expr

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 111


state 88

   49 expr: expr GE . expr

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 112


state 89

   48 expr: expr LE . expr

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 113


state 90

   45 expr: expr NE . expr

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 114


state 91

   44 expr: expr EQ . expr

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 115


state 92

   50 expr: expr '+' . expr

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 116


state 93

   51 expr: expr '-' . expr

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 117


state 94

   52 expr: expr '*' . expr

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 118


state 95

   53 expr: expr '/' . expr

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 119


state 96

   54 expr: expr '%' . expr

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 120


state 97

   28 stmt: expr ';' .

    $default  reduce using rule 28 (stmt)


state 98

   40 expr: ID '=' expr .
   42     | expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr

    OR   shift, and go to state 84
    AN   shift, and go to state 85
    '<'  shift, and go to state 86
    '>'  shift, and go to state 87
    GE   shift, and go to state 88
    LE   shift, and go to state 89
    NE   shift, and go to state 90
    EQ   shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 40 (expr)


state 99

   38 exprs: exprs . ',' expr
   68 expr: ID '(' exprs . ')'

    ')'  shift, and go to state 121
    ','  shift, and go to state 122


state 100

   39 exprs: expr .
   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr

    OR   shift, and go to state 84
    AN   shift, and go to state 85
    '<'  shift, and go to state 86
    '>'  shift, and go to state 87
    GE   shift, and go to state 88
    LE   shift, and go to state 89
    NE   shift, and go to state 90
    EQ   shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 39 (exprs)


state 101

   32 stmt: DO L stmt . WHILE '(' expr ')' M N ';'

    WHILE  shift, and go to state 123


state 102

   33 stmt: FOR '(' expr . ';' L expr M N ';' L expr N ')' L stmt N
   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr

    OR   shift, and go to state 84
    AN   shift, and go to state 85
    '<'  shift, and go to state 86
    '>'  shift, and go to state 87
    GE   shift, and go to state 88
    LE   shift, and go to state 89
    NE   shift, and go to state 90
    EQ   shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    ';'  shift, and go to state 124


state 103

   29 stmt: IF '(' expr . ')' M stmt
   30     | IF '(' expr . ')' M stmt ELSE N L stmt
   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr

    OR   shift, and go to state 84
    AN   shift, and go to state 85
    '<'  shift, and go to state 86
    '>'  shift, and go to state 87
    GE   shift, and go to state 88
    LE   shift, and go to state 89
    NE   shift, and go to state 90
    EQ   shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    ')'  shift, and go to state 125


state 104

   34 stmt: RETURN expr ';' .

    $default  reduce using rule 34 (stmt)


state 105

   31 stmt: WHILE '(' L . expr ')' M stmt N

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 126


state 106

   56 expr: '(' expr ')' .

    $default  reduce using rule 56 (expr)


state 107

   36 stmt: '{' stmts '}' .

    $default  reduce using rule 36 (stmt)


state 108

   42 expr: expr . OR expr
   42     | expr OR expr .
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr

    AN   shift, and go to state 85
    '<'  shift, and go to state 86
    '>'  shift, and go to state 87
    GE   shift, and go to state 88
    LE   shift, and go to state 89
    NE   shift, and go to state 90
    EQ   shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 42 (expr)


state 109

   42 expr: expr . OR expr
   43     | expr . AN expr
   43     | expr AN expr .
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr

    '<'  shift, and go to state 86
    '>'  shift, and go to state 87
    GE   shift, and go to state 88
    LE   shift, and go to state 89
    NE   shift, and go to state 90
    EQ   shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 43 (expr)


state 110

   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   46     | expr '<' expr .
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 46 (expr)


state 111

   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   47     | expr '>' expr .
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 47 (expr)


state 112

   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   49     | expr GE expr .
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 49 (expr)


state 113

   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   48     | expr LE expr .
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 48 (expr)


state 114

   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   45     | expr NE expr .
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 45 (expr)


state 115

   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   44     | expr EQ expr .
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 44 (expr)


state 116

   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   50     | expr '+' expr .
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr

    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 50 (expr)


state 117

   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   51     | expr '-' expr .
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr

    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 51 (expr)


state 118

   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   52     | expr '*' expr .
   53     | expr . '/' expr
   54     | expr . '%' expr

    $default  reduce using rule 52 (expr)


state 119

   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   53     | expr '/' expr .
   54     | expr . '%' expr

    $default  reduce using rule 53 (expr)


state 120

   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr
   54     | expr '%' expr .

    $default  reduce using rule 54 (expr)


state 121

   68 expr: ID '(' exprs ')' .

    $default  reduce using rule 68 (expr)


state 122

   38 exprs: exprs ',' . expr

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 127


state 123

   32 stmt: DO L stmt WHILE . '(' expr ')' M N ';'

    '('  shift, and go to state 128


state 124

   33 stmt: FOR '(' expr ';' . L expr M N ';' L expr N ')' L stmt N

    $default  reduce using rule 69 (L)

    L  go to state 129


state 125

   29 stmt: IF '(' expr ')' . M stmt
   30     | IF '(' expr ')' . M stmt ELSE N L stmt

    $default  reduce using rule 70 (M)

    M  go to state 130


state 126

   31 stmt: WHILE '(' L expr . ')' M stmt N
   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr

    OR   shift, and go to state 84
    AN   shift, and go to state 85
    '<'  shift, and go to state 86
    '>'  shift, and go to state 87
    GE   shift, and go to state 88
    LE   shift, and go to state 89
    NE   shift, and go to state 90
    EQ   shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    ')'  shift, and go to state 131


state 127

   38 exprs: exprs ',' expr .
   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr

    OR   shift, and go to state 84
    AN   shift, and go to state 85
    '<'  shift, and go to state 86
    '>'  shift, and go to state 87
    GE   shift, and go to state 88
    LE   shift, and go to state 89
    NE   shift, and go to state 90
    EQ   shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 38 (exprs)


state 128

   32 stmt: DO L stmt WHILE '(' . expr ')' M N ';'

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 132


state 129

   33 stmt: FOR '(' expr ';' L . expr M N ';' L expr N ')' L stmt N

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 133


state 130

   29 stmt: IF '(' expr ')' M . stmt
   30     | IF '(' expr ')' M . stmt ELSE N L stmt

    error   shift, and go to state 44
    ID      shift, and go to state 45
    INT8    shift, and go to state 46
    INT16   shift, and go to state 47
    INT32   shift, and go to state 48
    FLT     shift, and go to state 49
    STR     shift, and go to state 50
    BREAK   shift, and go to state 51
    DO      shift, and go to state 52
    FOR     shift, and go to state 53
    IF      shift, and go to state 54
    RETURN  shift, and go to state 55
    WHILE   shift, and go to state 56
    '!'     shift, and go to state 57
    NN      shift, and go to state 58
    PP      shift, and go to state 59
    '('     shift, and go to state 60
    '{'     shift, and go to state 61
    ';'     shift, and go to state 63
    '$'     shift, and go to state 64

    stmt  go to state 134
    expr  go to state 66


state 131

   31 stmt: WHILE '(' L expr ')' . M stmt N

    $default  reduce using rule 70 (M)

    M  go to state 135


state 132

   32 stmt: DO L stmt WHILE '(' expr . ')' M N ';'
   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr

    OR   shift, and go to state 84
    AN   shift, and go to state 85
    '<'  shift, and go to state 86
    '>'  shift, and go to state 87
    GE   shift, and go to state 88
    LE   shift, and go to state 89
    NE   shift, and go to state 90
    EQ   shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96
    ')'  shift, and go to state 136


state 133

   33 stmt: FOR '(' expr ';' L expr . M N ';' L expr N ')' L stmt N
   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr

    OR   shift, and go to state 84
    AN   shift, and go to state 85
    '<'  shift, and go to state 86
    '>'  shift, and go to state 87
    GE   shift, and go to state 88
    LE   shift, and go to state 89
    NE   shift, and go to state 90
    EQ   shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 70 (M)

    M  go to state 137


state 134

   29 stmt: IF '(' expr ')' M stmt .
   30     | IF '(' expr ')' M stmt . ELSE N L stmt

    ELSE  shift, and go to state 138

    ELSE      [reduce using rule 29 (stmt)]
    $default  reduce using rule 29 (stmt)


state 135

   31 stmt: WHILE '(' L expr ')' M . stmt N

    error   shift, and go to state 44
    ID      shift, and go to state 45
    INT8    shift, and go to state 46
    INT16   shift, and go to state 47
    INT32   shift, and go to state 48
    FLT     shift, and go to state 49
    STR     shift, and go to state 50
    BREAK   shift, and go to state 51
    DO      shift, and go to state 52
    FOR     shift, and go to state 53
    IF      shift, and go to state 54
    RETURN  shift, and go to state 55
    WHILE   shift, and go to state 56
    '!'     shift, and go to state 57
    NN      shift, and go to state 58
    PP      shift, and go to state 59
    '('     shift, and go to state 60
    '{'     shift, and go to state 61
    ';'     shift, and go to state 63
    '$'     shift, and go to state 64

    stmt  go to state 139
    expr  go to state 66


state 136

   32 stmt: DO L stmt WHILE '(' expr ')' . M N ';'

    $default  reduce using rule 70 (M)

    M  go to state 140


state 137

   33 stmt: FOR '(' expr ';' L expr M . N ';' L expr N ')' L stmt N

    $default  reduce using rule 71 (N)

    N  go to state 141


state 138

   30 stmt: IF '(' expr ')' M stmt ELSE . N L stmt

    $default  reduce using rule 71 (N)

    N  go to state 142


state 139

   31 stmt: WHILE '(' L expr ')' M stmt . N

    $default  reduce using rule 71 (N)

    N  go to state 143


state 140

   32 stmt: DO L stmt WHILE '(' expr ')' M . N ';'

    $default  reduce using rule 71 (N)

    N  go to state 144


state 141

   33 stmt: FOR '(' expr ';' L expr M N . ';' L expr N ')' L stmt N

    ';'  shift, and go to state 145


state 142

   30 stmt: IF '(' expr ')' M stmt ELSE N . L stmt

    $default  reduce using rule 69 (L)

    L  go to state 146


state 143

   31 stmt: WHILE '(' L expr ')' M stmt N .

    $default  reduce using rule 31 (stmt)


state 144

   32 stmt: DO L stmt WHILE '(' expr ')' M N . ';'

    ';'  shift, and go to state 147


state 145

   33 stmt: FOR '(' expr ';' L expr M N ';' . L expr N ')' L stmt N

    $default  reduce using rule 69 (L)

    L  go to state 148


state 146

   30 stmt: IF '(' expr ')' M stmt ELSE N L . stmt

    error   shift, and go to state 44
    ID      shift, and go to state 45
    INT8    shift, and go to state 46
    INT16   shift, and go to state 47
    INT32   shift, and go to state 48
    FLT     shift, and go to state 49
    STR     shift, and go to state 50
    BREAK   shift, and go to state 51
    DO      shift, and go to state 52
    FOR     shift, and go to state 53
    IF      shift, and go to state 54
    RETURN  shift, and go to state 55
    WHILE   shift, and go to state 56
    '!'     shift, and go to state 57
    NN      shift, and go to state 58
    PP      shift, and go to state 59
    '('     shift, and go to state 60
    '{'     shift, and go to state 61
    ';'     shift, and go to state 63
    '$'     shift, and go to state 64

    stmt  go to state 149
    expr  go to state 66


state 147

   32 stmt: DO L stmt WHILE '(' expr ')' M N ';' .

    $default  reduce using rule 32 (stmt)


state 148

   33 stmt: FOR '(' expr ';' L expr M N ';' L . expr N ')' L stmt N

    ID     shift, and go to state 45
    INT8   shift, and go to state 46
    INT16  shift, and go to state 47
    INT32  shift, and go to state 48
    FLT    shift, and go to state 49
    STR    shift, and go to state 50
    '!'    shift, and go to state 57
    NN     shift, and go to state 58
    PP     shift, and go to state 59
    '('    shift, and go to state 60
    '$'    shift, and go to state 64

    expr  go to state 150


state 149

   30 stmt: IF '(' expr ')' M stmt ELSE N L stmt .

    $default  reduce using rule 30 (stmt)


state 150

   33 stmt: FOR '(' expr ';' L expr M N ';' L expr . N ')' L stmt N
   42 expr: expr . OR expr
   43     | expr . AN expr
   44     | expr . EQ expr
   45     | expr . NE expr
   46     | expr . '<' expr
   47     | expr . '>' expr
   48     | expr . LE expr
   49     | expr . GE expr
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | expr . '/' expr
   54     | expr . '%' expr

    OR   shift, and go to state 84
    AN   shift, and go to state 85
    '<'  shift, and go to state 86
    '>'  shift, and go to state 87
    GE   shift, and go to state 88
    LE   shift, and go to state 89
    NE   shift, and go to state 90
    EQ   shift, and go to state 91
    '+'  shift, and go to state 92
    '-'  shift, and go to state 93
    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 71 (N)

    N  go to state 151


state 151

   33 stmt: FOR '(' expr ';' L expr M N ';' L expr N . ')' L stmt N

    ')'  shift, and go to state 152


state 152

   33 stmt: FOR '(' expr ';' L expr M N ';' L expr N ')' . L stmt N

    $default  reduce using rule 69 (L)

    L  go to state 153


state 153

   33 stmt: FOR '(' expr ';' L expr M N ';' L expr N ')' L . stmt N

    error   shift, and go to state 44
    ID      shift, and go to state 45
    INT8    shift, and go to state 46
    INT16   shift, and go to state 47
    INT32   shift, and go to state 48
    FLT     shift, and go to state 49
    STR     shift, and go to state 50
    BREAK   shift, and go to state 51
    DO      shift, and go to state 52
    FOR     shift, and go to state 53
    IF      shift, and go to state 54
    RETURN  shift, and go to state 55
    WHILE   shift, and go to state 56
    '!'     shift, and go to state 57
    NN      shift, and go to state 58
    PP      shift, and go to state 59
    '('     shift, and go to state 60
    '{'     shift, and go to state 61
    ';'     shift, and go to state 63
    '$'     shift, and go to state 64

    stmt  go to state 154
    expr  go to state 66


state 154

   33 stmt: FOR '(' expr ';' L expr M N ';' L expr N ')' L stmt . N

    $default  reduce using rule 71 (N)

    N  go to state 155


state 155

   33 stmt: FOR '(' expr ';' L expr M N ';' L expr N ')' L stmt N .

    $default  reduce using rule 33 (stmt)
