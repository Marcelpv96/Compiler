Nonterminals useless in grammar

   K
   P


Terminals unused in grammar

   PA
   NA
   TA
   DA
   MA
   AA
   XA
   OA
   LA
   RA
   '|'
   '^'
   '&'
   LS
   RS
   '~'
   '.'
   AR


Rules useless in grammar

   70 K: %empty

   71 P: %empty


State 134 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: Mprog exts

    2 Mprog: %empty

    3 exts: exts func
    4     | exts decl
    5     | %empty

    6 func: MAIN '(' ')' Mmain block
    7     | type ptr ID '(' Margs args ')' block

    8 Mmain: %empty

    9 Margs: %empty

   10 block: '{' decls stmts '}'

   11 decls: decls decl
   12      | %empty

   13 decl: list ';'

   14 type: VOID
   15     | INT
   16     | FLOAT
   17     | CHAR

   18 args: args ',' type ptr ID
   19     | type ptr ID

   20 list: list ',' ptr ID
   21     | type ptr ID

   22 ptr: %empty
   23    | '*'

   24 stmts: stmts stmt
   25      | %empty

   26 stmt: ';'
   27     | expr ';'
   28     | IF '(' expr ')' M stmt
   29     | IF '(' expr ')' M stmt ELSE N L stmt
   30     | WHILE '(' L expr ')' M stmt N
   31     | DO L stmt WHILE '(' expr ')' M N ';'
   32     | FOR '(' expr ';' L expr M N ';' L expr N ')' L stmt N
   33     | RETURN expr ';'
   34     | BREAK ';'
   35     | '{' stmts '}'
   36     | error ';'

   37 exprs: exprs ',' expr
   38      | expr

   39 expr: ID '=' expr
   40     | expr OR expr
   41     | expr AN expr
   42     | expr EQ expr
   43     | expr NE expr
   44     | expr '<' expr
   45     | expr '>' expr
   46     | expr LE expr
   47     | expr GE expr
   48     | expr '+' expr
   49     | expr '-' expr
   50     | expr '*' expr
   51     | expr '/' expr
   52     | expr '%' expr
   53     | '!' expr
   54     | '(' expr ')'
   55     | '$' INT8
   56     | PP ID
   57     | NN ID
   58     | ID PP
   59     | ID NN
   60     | ID
   61     | INT8
   62     | INT16
   63     | INT32
   64     | FLT
   65     | STR
   66     | ID '(' exprs ')'

   67 L: %empty

   68 M: %empty

   69 N: %empty


Terminals, with rules where they appear

$end (0) 0
'!' (33) 53
'$' (36) 55
'%' (37) 52
'&' (38)
'(' (40) 6 7 28 29 30 31 32 54 66
')' (41) 6 7 28 29 30 31 32 54 66
'*' (42) 23 50
'+' (43) 48
',' (44) 18 20 37
'-' (45) 49
'.' (46)
'/' (47) 51
';' (59) 13 26 27 31 32 33 34 36
'<' (60) 44
'=' (61) 39
'>' (62) 45
'^' (94)
'{' (123) 10 35
'|' (124)
'}' (125) 10 35
'~' (126)
error (256) 36
ID (258) 7 18 19 20 21 39 56 57 58 59 60 66
INT8 (259) 55 61
INT16 (260) 62
INT32 (261) 63
FLT (262) 64
STR (263) 65
BREAK (264) 34
CHAR (265) 17
DO (266) 31
ELSE (267) 29
FLOAT (268) 16
FOR (269) 32
IF (270) 28 29
INT (271) 15
MAIN (272) 6
RETURN (273) 33
VOID (274) 14
WHILE (275) 30 31
PA (276)
NA (277)
TA (278)
DA (279)
MA (280)
AA (281)
XA (282)
OA (283)
LA (284)
RA (285)
OR (286) 40
AN (287) 41
EQ (288) 42
NE (289) 43
LE (290) 46
GE (291) 47
LS (292)
RS (293)
PP (294) 56 58
NN (295) 57 59
AR (296)


Nonterminals, with rules where they appear

$accept (63)
    on left: 0
prog (64)
    on left: 1, on right: 0
Mprog (65)
    on left: 2, on right: 1
exts (66)
    on left: 3 4 5, on right: 1 3 4
func (67)
    on left: 6 7, on right: 3
Mmain (68)
    on left: 8, on right: 6
Margs (69)
    on left: 9, on right: 7
block (70)
    on left: 10, on right: 6 7
decls (71)
    on left: 11 12, on right: 10 11
decl (72)
    on left: 13, on right: 4 11
type (73)
    on left: 14 15 16 17, on right: 7 18 19 21
args (74)
    on left: 18 19, on right: 7 18
list (75)
    on left: 20 21, on right: 13 20
ptr (76)
    on left: 22 23, on right: 7 18 19 20 21
stmts (77)
    on left: 24 25, on right: 10 24 35
stmt (78)
    on left: 26 27 28 29 30 31 32 33 34 35 36, on right: 24 28 29 30
    31 32
exprs (79)
    on left: 37 38, on right: 37 66
expr (80)
    on left: 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
    57 58 59 60 61 62 63 64 65 66, on right: 27 28 29 30 31 32 33 37
    38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
L (81)
    on left: 67, on right: 29 30 31 32
M (82)
    on left: 68, on right: 28 29 30 31 32
N (83)
    on left: 69, on right: 29 30 31 32


State 0

    0 $accept: . prog $end

    $default  reduce using rule 2 (Mprog)

    prog   go to state 1
    Mprog  go to state 2


State 1

    0 $accept: prog . $end

    $end  shift, and go to state 3


State 2

    1 prog: Mprog . exts

    $default  reduce using rule 5 (exts)

    exts  go to state 4


State 3

    0 $accept: prog $end .

    $default  accept


State 4

    1 prog: Mprog exts .
    3 exts: exts . func
    4     | exts . decl

    CHAR   shift, and go to state 5
    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    MAIN   shift, and go to state 8
    VOID   shift, and go to state 9

    $default  reduce using rule 1 (prog)

    func  go to state 10
    decl  go to state 11
    type  go to state 12
    list  go to state 13


State 5

   17 type: CHAR .

    $default  reduce using rule 17 (type)


State 6

   16 type: FLOAT .

    $default  reduce using rule 16 (type)


State 7

   15 type: INT .

    $default  reduce using rule 15 (type)


State 8

    6 func: MAIN . '(' ')' Mmain block

    '('  shift, and go to state 14


State 9

   14 type: VOID .

    $default  reduce using rule 14 (type)


State 10

    3 exts: exts func .

    $default  reduce using rule 3 (exts)


State 11

    4 exts: exts decl .

    $default  reduce using rule 4 (exts)


State 12

    7 func: type . ptr ID '(' Margs args ')' block
   21 list: type . ptr ID

    '*'  shift, and go to state 15

    $default  reduce using rule 22 (ptr)

    ptr  go to state 16


State 13

   13 decl: list . ';'
   20 list: list . ',' ptr ID

    ';'  shift, and go to state 17
    ','  shift, and go to state 18


State 14

    6 func: MAIN '(' . ')' Mmain block

    ')'  shift, and go to state 19


State 15

   23 ptr: '*' .

    $default  reduce using rule 23 (ptr)


State 16

    7 func: type ptr . ID '(' Margs args ')' block
   21 list: type ptr . ID

    ID  shift, and go to state 20


State 17

   13 decl: list ';' .

    $default  reduce using rule 13 (decl)


State 18

   20 list: list ',' . ptr ID

    '*'  shift, and go to state 15

    $default  reduce using rule 22 (ptr)

    ptr  go to state 21


State 19

    6 func: MAIN '(' ')' . Mmain block

    $default  reduce using rule 8 (Mmain)

    Mmain  go to state 22


State 20

    7 func: type ptr ID . '(' Margs args ')' block
   21 list: type ptr ID .

    '('  shift, and go to state 23

    $default  reduce using rule 21 (list)


State 21

   20 list: list ',' ptr . ID

    ID  shift, and go to state 24


State 22

    6 func: MAIN '(' ')' Mmain . block

    '{'  shift, and go to state 25

    block  go to state 26


State 23

    7 func: type ptr ID '(' . Margs args ')' block

    $default  reduce using rule 9 (Margs)

    Margs  go to state 27


State 24

   20 list: list ',' ptr ID .

    $default  reduce using rule 20 (list)


State 25

   10 block: '{' . decls stmts '}'

    $default  reduce using rule 12 (decls)

    decls  go to state 28


State 26

    6 func: MAIN '(' ')' Mmain block .

    $default  reduce using rule 6 (func)


State 27

    7 func: type ptr ID '(' Margs . args ')' block

    CHAR   shift, and go to state 5
    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    VOID   shift, and go to state 9

    type  go to state 29
    args  go to state 30


State 28

   10 block: '{' decls . stmts '}'
   11 decls: decls . decl

    CHAR   shift, and go to state 5
    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    VOID   shift, and go to state 9

    $default  reduce using rule 25 (stmts)

    decl   go to state 31
    type   go to state 32
    list   go to state 13
    stmts  go to state 33


State 29

   19 args: type . ptr ID

    '*'  shift, and go to state 15

    $default  reduce using rule 22 (ptr)

    ptr  go to state 34


State 30

    7 func: type ptr ID '(' Margs args . ')' block
   18 args: args . ',' type ptr ID

    ')'  shift, and go to state 35
    ','  shift, and go to state 36


State 31

   11 decls: decls decl .

    $default  reduce using rule 11 (decls)


State 32

   21 list: type . ptr ID

    '*'  shift, and go to state 15

    $default  reduce using rule 22 (ptr)

    ptr  go to state 37


State 33

   10 block: '{' decls stmts . '}'
   24 stmts: stmts . stmt

    error   shift, and go to state 38
    ID      shift, and go to state 39
    INT8    shift, and go to state 40
    INT16   shift, and go to state 41
    INT32   shift, and go to state 42
    FLT     shift, and go to state 43
    STR     shift, and go to state 44
    BREAK   shift, and go to state 45
    DO      shift, and go to state 46
    FOR     shift, and go to state 47
    IF      shift, and go to state 48
    RETURN  shift, and go to state 49
    WHILE   shift, and go to state 50
    '!'     shift, and go to state 51
    PP      shift, and go to state 52
    NN      shift, and go to state 53
    '('     shift, and go to state 54
    '{'     shift, and go to state 55
    '}'     shift, and go to state 56
    ';'     shift, and go to state 57
    '$'     shift, and go to state 58

    stmt  go to state 59
    expr  go to state 60


State 34

   19 args: type ptr . ID

    ID  shift, and go to state 61


State 35

    7 func: type ptr ID '(' Margs args ')' . block

    '{'  shift, and go to state 25

    block  go to state 62


State 36

   18 args: args ',' . type ptr ID

    CHAR   shift, and go to state 5
    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    VOID   shift, and go to state 9

    type  go to state 63


State 37

   21 list: type ptr . ID

    ID  shift, and go to state 64


State 38

   36 stmt: error . ';'

    ';'  shift, and go to state 65


State 39

   39 expr: ID . '=' expr
   58     | ID . PP
   59     | ID . NN
   60     | ID .
   66     | ID . '(' exprs ')'

    '='  shift, and go to state 66
    PP   shift, and go to state 67
    NN   shift, and go to state 68
    '('  shift, and go to state 69

    $default  reduce using rule 60 (expr)


State 40

   61 expr: INT8 .

    $default  reduce using rule 61 (expr)


State 41

   62 expr: INT16 .

    $default  reduce using rule 62 (expr)


State 42

   63 expr: INT32 .

    $default  reduce using rule 63 (expr)


State 43

   64 expr: FLT .

    $default  reduce using rule 64 (expr)


State 44

   65 expr: STR .

    $default  reduce using rule 65 (expr)


State 45

   34 stmt: BREAK . ';'

    ';'  shift, and go to state 70


State 46

   31 stmt: DO . L stmt WHILE '(' expr ')' M N ';'

    $default  reduce using rule 67 (L)

    L  go to state 71


State 47

   32 stmt: FOR . '(' expr ';' L expr M N ';' L expr N ')' L stmt N

    '('  shift, and go to state 72


State 48

   28 stmt: IF . '(' expr ')' M stmt
   29     | IF . '(' expr ')' M stmt ELSE N L stmt

    '('  shift, and go to state 73


State 49

   33 stmt: RETURN . expr ';'

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 74


State 50

   30 stmt: WHILE . '(' L expr ')' M stmt N

    '('  shift, and go to state 75


State 51

   53 expr: '!' . expr

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 76


State 52

   56 expr: PP . ID

    ID  shift, and go to state 77


State 53

   57 expr: NN . ID

    ID  shift, and go to state 78


State 54

   54 expr: '(' . expr ')'

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 79


State 55

   35 stmt: '{' . stmts '}'

    $default  reduce using rule 25 (stmts)

    stmts  go to state 80


State 56

   10 block: '{' decls stmts '}' .

    $default  reduce using rule 10 (block)


State 57

   26 stmt: ';' .

    $default  reduce using rule 26 (stmt)


State 58

   55 expr: '$' . INT8

    INT8  shift, and go to state 81


State 59

   24 stmts: stmts stmt .

    $default  reduce using rule 24 (stmts)


State 60

   27 stmt: expr . ';'
   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr

    OR   shift, and go to state 82
    AN   shift, and go to state 83
    EQ   shift, and go to state 84
    NE   shift, and go to state 85
    LE   shift, and go to state 86
    '<'  shift, and go to state 87
    GE   shift, and go to state 88
    '>'  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94
    ';'  shift, and go to state 95


State 61

   19 args: type ptr ID .

    $default  reduce using rule 19 (args)


State 62

    7 func: type ptr ID '(' Margs args ')' block .

    $default  reduce using rule 7 (func)


State 63

   18 args: args ',' type . ptr ID

    '*'  shift, and go to state 15

    $default  reduce using rule 22 (ptr)

    ptr  go to state 96


State 64

   21 list: type ptr ID .

    $default  reduce using rule 21 (list)


State 65

   36 stmt: error ';' .

    $default  reduce using rule 36 (stmt)


State 66

   39 expr: ID '=' . expr

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 97


State 67

   58 expr: ID PP .

    $default  reduce using rule 58 (expr)


State 68

   59 expr: ID NN .

    $default  reduce using rule 59 (expr)


State 69

   66 expr: ID '(' . exprs ')'

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    exprs  go to state 98
    expr   go to state 99


State 70

   34 stmt: BREAK ';' .

    $default  reduce using rule 34 (stmt)


State 71

   31 stmt: DO L . stmt WHILE '(' expr ')' M N ';'

    error   shift, and go to state 38
    ID      shift, and go to state 39
    INT8    shift, and go to state 40
    INT16   shift, and go to state 41
    INT32   shift, and go to state 42
    FLT     shift, and go to state 43
    STR     shift, and go to state 44
    BREAK   shift, and go to state 45
    DO      shift, and go to state 46
    FOR     shift, and go to state 47
    IF      shift, and go to state 48
    RETURN  shift, and go to state 49
    WHILE   shift, and go to state 50
    '!'     shift, and go to state 51
    PP      shift, and go to state 52
    NN      shift, and go to state 53
    '('     shift, and go to state 54
    '{'     shift, and go to state 55
    ';'     shift, and go to state 57
    '$'     shift, and go to state 58

    stmt  go to state 100
    expr  go to state 60


State 72

   32 stmt: FOR '(' . expr ';' L expr M N ';' L expr N ')' L stmt N

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 101


State 73

   28 stmt: IF '(' . expr ')' M stmt
   29     | IF '(' . expr ')' M stmt ELSE N L stmt

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 102


State 74

   33 stmt: RETURN expr . ';'
   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr

    OR   shift, and go to state 82
    AN   shift, and go to state 83
    EQ   shift, and go to state 84
    NE   shift, and go to state 85
    LE   shift, and go to state 86
    '<'  shift, and go to state 87
    GE   shift, and go to state 88
    '>'  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94
    ';'  shift, and go to state 103


State 75

   30 stmt: WHILE '(' . L expr ')' M stmt N

    $default  reduce using rule 67 (L)

    L  go to state 104


State 76

   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   53     | '!' expr .

    $default  reduce using rule 53 (expr)


State 77

   56 expr: PP ID .

    $default  reduce using rule 56 (expr)


State 78

   57 expr: NN ID .

    $default  reduce using rule 57 (expr)


State 79

   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   54     | '(' expr . ')'

    OR   shift, and go to state 82
    AN   shift, and go to state 83
    EQ   shift, and go to state 84
    NE   shift, and go to state 85
    LE   shift, and go to state 86
    '<'  shift, and go to state 87
    GE   shift, and go to state 88
    '>'  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94
    ')'  shift, and go to state 105


State 80

   24 stmts: stmts . stmt
   35 stmt: '{' stmts . '}'

    error   shift, and go to state 38
    ID      shift, and go to state 39
    INT8    shift, and go to state 40
    INT16   shift, and go to state 41
    INT32   shift, and go to state 42
    FLT     shift, and go to state 43
    STR     shift, and go to state 44
    BREAK   shift, and go to state 45
    DO      shift, and go to state 46
    FOR     shift, and go to state 47
    IF      shift, and go to state 48
    RETURN  shift, and go to state 49
    WHILE   shift, and go to state 50
    '!'     shift, and go to state 51
    PP      shift, and go to state 52
    NN      shift, and go to state 53
    '('     shift, and go to state 54
    '{'     shift, and go to state 55
    '}'     shift, and go to state 106
    ';'     shift, and go to state 57
    '$'     shift, and go to state 58

    stmt  go to state 59
    expr  go to state 60


State 81

   55 expr: '$' INT8 .

    $default  reduce using rule 55 (expr)


State 82

   40 expr: expr OR . expr

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 107


State 83

   41 expr: expr AN . expr

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 108


State 84

   42 expr: expr EQ . expr

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 109


State 85

   43 expr: expr NE . expr

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 110


State 86

   46 expr: expr LE . expr

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 111


State 87

   44 expr: expr '<' . expr

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 112


State 88

   47 expr: expr GE . expr

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 113


State 89

   45 expr: expr '>' . expr

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 114


State 90

   48 expr: expr '+' . expr

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 115


State 91

   49 expr: expr '-' . expr

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 116


State 92

   50 expr: expr '*' . expr

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 117


State 93

   51 expr: expr '/' . expr

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 118


State 94

   52 expr: expr '%' . expr

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 119


State 95

   27 stmt: expr ';' .

    $default  reduce using rule 27 (stmt)


State 96

   18 args: args ',' type ptr . ID

    ID  shift, and go to state 120


State 97

   39 expr: ID '=' expr .
   40     | expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr

    OR   shift, and go to state 82
    AN   shift, and go to state 83
    EQ   shift, and go to state 84
    NE   shift, and go to state 85
    LE   shift, and go to state 86
    '<'  shift, and go to state 87
    GE   shift, and go to state 88
    '>'  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94

    $default  reduce using rule 39 (expr)


State 98

   37 exprs: exprs . ',' expr
   66 expr: ID '(' exprs . ')'

    ')'  shift, and go to state 121
    ','  shift, and go to state 122


State 99

   38 exprs: expr .
   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr

    OR   shift, and go to state 82
    AN   shift, and go to state 83
    EQ   shift, and go to state 84
    NE   shift, and go to state 85
    LE   shift, and go to state 86
    '<'  shift, and go to state 87
    GE   shift, and go to state 88
    '>'  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94

    $default  reduce using rule 38 (exprs)


State 100

   31 stmt: DO L stmt . WHILE '(' expr ')' M N ';'

    WHILE  shift, and go to state 123


State 101

   32 stmt: FOR '(' expr . ';' L expr M N ';' L expr N ')' L stmt N
   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr

    OR   shift, and go to state 82
    AN   shift, and go to state 83
    EQ   shift, and go to state 84
    NE   shift, and go to state 85
    LE   shift, and go to state 86
    '<'  shift, and go to state 87
    GE   shift, and go to state 88
    '>'  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94
    ';'  shift, and go to state 124


State 102

   28 stmt: IF '(' expr . ')' M stmt
   29     | IF '(' expr . ')' M stmt ELSE N L stmt
   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr

    OR   shift, and go to state 82
    AN   shift, and go to state 83
    EQ   shift, and go to state 84
    NE   shift, and go to state 85
    LE   shift, and go to state 86
    '<'  shift, and go to state 87
    GE   shift, and go to state 88
    '>'  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94
    ')'  shift, and go to state 125


State 103

   33 stmt: RETURN expr ';' .

    $default  reduce using rule 33 (stmt)


State 104

   30 stmt: WHILE '(' L . expr ')' M stmt N

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 126


State 105

   54 expr: '(' expr ')' .

    $default  reduce using rule 54 (expr)


State 106

   35 stmt: '{' stmts '}' .

    $default  reduce using rule 35 (stmt)


State 107

   40 expr: expr . OR expr
   40     | expr OR expr .
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr

    AN   shift, and go to state 83
    EQ   shift, and go to state 84
    NE   shift, and go to state 85
    LE   shift, and go to state 86
    '<'  shift, and go to state 87
    GE   shift, and go to state 88
    '>'  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94

    $default  reduce using rule 40 (expr)


State 108

   40 expr: expr . OR expr
   41     | expr . AN expr
   41     | expr AN expr .
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr

    EQ   shift, and go to state 84
    NE   shift, and go to state 85
    LE   shift, and go to state 86
    '<'  shift, and go to state 87
    GE   shift, and go to state 88
    '>'  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94

    $default  reduce using rule 41 (expr)


State 109

   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   42     | expr EQ expr .
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr

    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94

    $default  reduce using rule 42 (expr)


State 110

   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   43     | expr NE expr .
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr

    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94

    $default  reduce using rule 43 (expr)


State 111

   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   46     | expr LE expr .
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr

    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94

    $default  reduce using rule 46 (expr)


State 112

   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   44     | expr '<' expr .
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr

    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94

    $default  reduce using rule 44 (expr)


State 113

   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   47     | expr GE expr .
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr

    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94

    $default  reduce using rule 47 (expr)


State 114

   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   45     | expr '>' expr .
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr

    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94

    $default  reduce using rule 45 (expr)


State 115

   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   48     | expr '+' expr .
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr

    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94

    $default  reduce using rule 48 (expr)


State 116

   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   49     | expr '-' expr .
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr

    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94

    $default  reduce using rule 49 (expr)


State 117

   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   50     | expr '*' expr .
   51     | expr . '/' expr
   52     | expr . '%' expr

    $default  reduce using rule 50 (expr)


State 118

   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   51     | expr '/' expr .
   52     | expr . '%' expr

    $default  reduce using rule 51 (expr)


State 119

   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr
   52     | expr '%' expr .

    $default  reduce using rule 52 (expr)


State 120

   18 args: args ',' type ptr ID .

    $default  reduce using rule 18 (args)


State 121

   66 expr: ID '(' exprs ')' .

    $default  reduce using rule 66 (expr)


State 122

   37 exprs: exprs ',' . expr

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 127


State 123

   31 stmt: DO L stmt WHILE . '(' expr ')' M N ';'

    '('  shift, and go to state 128


State 124

   32 stmt: FOR '(' expr ';' . L expr M N ';' L expr N ')' L stmt N

    $default  reduce using rule 67 (L)

    L  go to state 129


State 125

   28 stmt: IF '(' expr ')' . M stmt
   29     | IF '(' expr ')' . M stmt ELSE N L stmt

    $default  reduce using rule 68 (M)

    M  go to state 130


State 126

   30 stmt: WHILE '(' L expr . ')' M stmt N
   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr

    OR   shift, and go to state 82
    AN   shift, and go to state 83
    EQ   shift, and go to state 84
    NE   shift, and go to state 85
    LE   shift, and go to state 86
    '<'  shift, and go to state 87
    GE   shift, and go to state 88
    '>'  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94
    ')'  shift, and go to state 131


State 127

   37 exprs: exprs ',' expr .
   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr

    OR   shift, and go to state 82
    AN   shift, and go to state 83
    EQ   shift, and go to state 84
    NE   shift, and go to state 85
    LE   shift, and go to state 86
    '<'  shift, and go to state 87
    GE   shift, and go to state 88
    '>'  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94

    $default  reduce using rule 37 (exprs)


State 128

   31 stmt: DO L stmt WHILE '(' . expr ')' M N ';'

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 132


State 129

   32 stmt: FOR '(' expr ';' L . expr M N ';' L expr N ')' L stmt N

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 133


State 130

   28 stmt: IF '(' expr ')' M . stmt
   29     | IF '(' expr ')' M . stmt ELSE N L stmt

    error   shift, and go to state 38
    ID      shift, and go to state 39
    INT8    shift, and go to state 40
    INT16   shift, and go to state 41
    INT32   shift, and go to state 42
    FLT     shift, and go to state 43
    STR     shift, and go to state 44
    BREAK   shift, and go to state 45
    DO      shift, and go to state 46
    FOR     shift, and go to state 47
    IF      shift, and go to state 48
    RETURN  shift, and go to state 49
    WHILE   shift, and go to state 50
    '!'     shift, and go to state 51
    PP      shift, and go to state 52
    NN      shift, and go to state 53
    '('     shift, and go to state 54
    '{'     shift, and go to state 55
    ';'     shift, and go to state 57
    '$'     shift, and go to state 58

    stmt  go to state 134
    expr  go to state 60


State 131

   30 stmt: WHILE '(' L expr ')' . M stmt N

    $default  reduce using rule 68 (M)

    M  go to state 135


State 132

   31 stmt: DO L stmt WHILE '(' expr . ')' M N ';'
   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr

    OR   shift, and go to state 82
    AN   shift, and go to state 83
    EQ   shift, and go to state 84
    NE   shift, and go to state 85
    LE   shift, and go to state 86
    '<'  shift, and go to state 87
    GE   shift, and go to state 88
    '>'  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94
    ')'  shift, and go to state 136


State 133

   32 stmt: FOR '(' expr ';' L expr . M N ';' L expr N ')' L stmt N
   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr

    OR   shift, and go to state 82
    AN   shift, and go to state 83
    EQ   shift, and go to state 84
    NE   shift, and go to state 85
    LE   shift, and go to state 86
    '<'  shift, and go to state 87
    GE   shift, and go to state 88
    '>'  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94

    $default  reduce using rule 68 (M)

    M  go to state 137


State 134

   28 stmt: IF '(' expr ')' M stmt .
   29     | IF '(' expr ')' M stmt . ELSE N L stmt

    ELSE  shift, and go to state 138

    ELSE      [reduce using rule 28 (stmt)]
    $default  reduce using rule 28 (stmt)


State 135

   30 stmt: WHILE '(' L expr ')' M . stmt N

    error   shift, and go to state 38
    ID      shift, and go to state 39
    INT8    shift, and go to state 40
    INT16   shift, and go to state 41
    INT32   shift, and go to state 42
    FLT     shift, and go to state 43
    STR     shift, and go to state 44
    BREAK   shift, and go to state 45
    DO      shift, and go to state 46
    FOR     shift, and go to state 47
    IF      shift, and go to state 48
    RETURN  shift, and go to state 49
    WHILE   shift, and go to state 50
    '!'     shift, and go to state 51
    PP      shift, and go to state 52
    NN      shift, and go to state 53
    '('     shift, and go to state 54
    '{'     shift, and go to state 55
    ';'     shift, and go to state 57
    '$'     shift, and go to state 58

    stmt  go to state 139
    expr  go to state 60


State 136

   31 stmt: DO L stmt WHILE '(' expr ')' . M N ';'

    $default  reduce using rule 68 (M)

    M  go to state 140


State 137

   32 stmt: FOR '(' expr ';' L expr M . N ';' L expr N ')' L stmt N

    $default  reduce using rule 69 (N)

    N  go to state 141


State 138

   29 stmt: IF '(' expr ')' M stmt ELSE . N L stmt

    $default  reduce using rule 69 (N)

    N  go to state 142


State 139

   30 stmt: WHILE '(' L expr ')' M stmt . N

    $default  reduce using rule 69 (N)

    N  go to state 143


State 140

   31 stmt: DO L stmt WHILE '(' expr ')' M . N ';'

    $default  reduce using rule 69 (N)

    N  go to state 144


State 141

   32 stmt: FOR '(' expr ';' L expr M N . ';' L expr N ')' L stmt N

    ';'  shift, and go to state 145


State 142

   29 stmt: IF '(' expr ')' M stmt ELSE N . L stmt

    $default  reduce using rule 67 (L)

    L  go to state 146


State 143

   30 stmt: WHILE '(' L expr ')' M stmt N .

    $default  reduce using rule 30 (stmt)


State 144

   31 stmt: DO L stmt WHILE '(' expr ')' M N . ';'

    ';'  shift, and go to state 147


State 145

   32 stmt: FOR '(' expr ';' L expr M N ';' . L expr N ')' L stmt N

    $default  reduce using rule 67 (L)

    L  go to state 148


State 146

   29 stmt: IF '(' expr ')' M stmt ELSE N L . stmt

    error   shift, and go to state 38
    ID      shift, and go to state 39
    INT8    shift, and go to state 40
    INT16   shift, and go to state 41
    INT32   shift, and go to state 42
    FLT     shift, and go to state 43
    STR     shift, and go to state 44
    BREAK   shift, and go to state 45
    DO      shift, and go to state 46
    FOR     shift, and go to state 47
    IF      shift, and go to state 48
    RETURN  shift, and go to state 49
    WHILE   shift, and go to state 50
    '!'     shift, and go to state 51
    PP      shift, and go to state 52
    NN      shift, and go to state 53
    '('     shift, and go to state 54
    '{'     shift, and go to state 55
    ';'     shift, and go to state 57
    '$'     shift, and go to state 58

    stmt  go to state 149
    expr  go to state 60


State 147

   31 stmt: DO L stmt WHILE '(' expr ')' M N ';' .

    $default  reduce using rule 31 (stmt)


State 148

   32 stmt: FOR '(' expr ';' L expr M N ';' L . expr N ')' L stmt N

    ID     shift, and go to state 39
    INT8   shift, and go to state 40
    INT16  shift, and go to state 41
    INT32  shift, and go to state 42
    FLT    shift, and go to state 43
    STR    shift, and go to state 44
    '!'    shift, and go to state 51
    PP     shift, and go to state 52
    NN     shift, and go to state 53
    '('    shift, and go to state 54
    '$'    shift, and go to state 58

    expr  go to state 150


State 149

   29 stmt: IF '(' expr ')' M stmt ELSE N L stmt .

    $default  reduce using rule 29 (stmt)


State 150

   32 stmt: FOR '(' expr ';' L expr M N ';' L expr . N ')' L stmt N
   40 expr: expr . OR expr
   41     | expr . AN expr
   42     | expr . EQ expr
   43     | expr . NE expr
   44     | expr . '<' expr
   45     | expr . '>' expr
   46     | expr . LE expr
   47     | expr . GE expr
   48     | expr . '+' expr
   49     | expr . '-' expr
   50     | expr . '*' expr
   51     | expr . '/' expr
   52     | expr . '%' expr

    OR   shift, and go to state 82
    AN   shift, and go to state 83
    EQ   shift, and go to state 84
    NE   shift, and go to state 85
    LE   shift, and go to state 86
    '<'  shift, and go to state 87
    GE   shift, and go to state 88
    '>'  shift, and go to state 89
    '+'  shift, and go to state 90
    '-'  shift, and go to state 91
    '*'  shift, and go to state 92
    '/'  shift, and go to state 93
    '%'  shift, and go to state 94

    $default  reduce using rule 69 (N)

    N  go to state 151


State 151

   32 stmt: FOR '(' expr ';' L expr M N ';' L expr N . ')' L stmt N

    ')'  shift, and go to state 152


State 152

   32 stmt: FOR '(' expr ';' L expr M N ';' L expr N ')' . L stmt N

    $default  reduce using rule 67 (L)

    L  go to state 153


State 153

   32 stmt: FOR '(' expr ';' L expr M N ';' L expr N ')' L . stmt N

    error   shift, and go to state 38
    ID      shift, and go to state 39
    INT8    shift, and go to state 40
    INT16   shift, and go to state 41
    INT32   shift, and go to state 42
    FLT     shift, and go to state 43
    STR     shift, and go to state 44
    BREAK   shift, and go to state 45
    DO      shift, and go to state 46
    FOR     shift, and go to state 47
    IF      shift, and go to state 48
    RETURN  shift, and go to state 49
    WHILE   shift, and go to state 50
    '!'     shift, and go to state 51
    PP      shift, and go to state 52
    NN      shift, and go to state 53
    '('     shift, and go to state 54
    '{'     shift, and go to state 55
    ';'     shift, and go to state 57
    '$'     shift, and go to state 58

    stmt  go to state 154
    expr  go to state 60


State 154

   32 stmt: FOR '(' expr ';' L expr M N ';' L expr N ')' L stmt . N

    $default  reduce using rule 69 (N)

    N  go to state 155


State 155

   32 stmt: FOR '(' expr ';' L expr M N ';' L expr N ')' L stmt N .

    $default  reduce using rule 32 (stmt)
